{"version":3,"sources":["webpack:///./node_modules/@theia/filesystem/src/browser/filesystem-preferences.ts","webpack:///./node_modules/@theia/filesystem/src/browser/filesystem-watcher.ts","webpack:///./node_modules/@theia/filesystem/src/common/filesystem-utils.ts","webpack:///./node_modules/@theia/filesystem/src/common/filesystem-watcher-protocol.ts","webpack:///./node_modules/@theia/filesystem/src/common/index.ts","webpack:///./node_modules/@theia/filesystem/node_modules/@theia/core/src/browser/frontend-application-config-provider.ts","webpack:///./node_modules/@theia/filesystem/node_modules/@theia/core/src/browser/preferences/index.ts","webpack:///./node_modules/@theia/filesystem/node_modules/@theia/core/src/browser/preferences/preference-configurations.ts","webpack:///./node_modules/@theia/filesystem/node_modules/@theia/core/src/browser/preferences/preference-contribution.ts","webpack:///./node_modules/@theia/filesystem/node_modules/@theia/core/src/browser/preferences/preference-provider.ts","webpack:///./node_modules/@theia/filesystem/node_modules/@theia/core/src/browser/preferences/preference-proxy.ts","webpack:///./node_modules/@theia/filesystem/node_modules/@theia/core/src/browser/preferences/preference-scope.ts","webpack:///./node_modules/@theia/filesystem/node_modules/@theia/core/src/browser/preferences/preference-service.ts","webpack:///./node_modules/@theia/filesystem/node_modules/@theia/core/src/common/preferences/preference-schema.ts","webpack:///./node_modules/@theia/filesystem/node_modules/@theia/core/src/common/preferences/preference-scope.ts","webpack:///./node_modules/@theia/filesystem/node_modules/@theia/core/src/common/promise-util.ts"],"names":[],"mappings":"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","file":"2.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport {\n    createPreferenceProxy,\n    PreferenceProxy,\n    PreferenceService,\n    PreferenceSchema,\n    PreferenceContribution\n} from '@theia/core/lib/browser/preferences';\n\nexport const filesystemPreferenceSchema: PreferenceSchema = {\n    'type': 'object',\n    'properties': {\n        'files.watcherExclude': {\n            'description': 'List of paths to exclude from the filesystem watcher',\n            'additionalProperties': {\n                'type': 'boolean'\n            },\n            'default': {\n                '**/.git/objects/**': true,\n                '**/.git/subtree-cache/**': true,\n                '**/node_modules/**': true\n            },\n            'scope': 'resource'\n        },\n        'files.exclude': {\n            'type': 'object',\n            'default': { '**/.git': true, '**/.svn': true, '**/.hg': true, '**/CVS': true, '**/.DS_Store': true },\n            'description': 'Configure glob patterns for excluding files and folders.',\n            'scope': 'resource'\n        },\n        'files.enableTrash': {\n            'type': 'boolean',\n            'default': true,\n            'description': 'Moves files/folders to the OS trash (recycle bin on Windows) when deleting. Disabling this will delete files/folders permanently.'\n        },\n        'files.associations': {\n            'type': 'object',\n            'description': 'Configure file associations to languages (e.g. \\\"*.extension\\\": \\\"html\\\"). \\\nThese have precedence over the default associations of the languages installed.'\n        }\n    }\n};\n\nexport interface FileSystemConfiguration {\n    'files.watcherExclude': { [globPattern: string]: boolean };\n    'files.exclude': { [key: string]: boolean };\n    'files.enableTrash': boolean;\n    'files.associations': { [filepattern: string]: string };\n}\n\nexport const FileSystemPreferences = Symbol('FileSystemPreferences');\nexport type FileSystemPreferences = PreferenceProxy<FileSystemConfiguration>;\n\nexport function createFileSystemPreferences(preferences: PreferenceService): FileSystemPreferences {\n    return createPreferenceProxy(preferences, filesystemPreferenceSchema);\n}\n\nexport function bindFileSystemPreferences(bind: interfaces.Bind): void {\n    bind(FileSystemPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        return createFileSystemPreferences(preferences);\n    }).inSingletonScope();\n\n    bind(PreferenceContribution).toConstantValue({ schema: filesystemPreferenceSchema });\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { Emitter, WaitUntilEvent } from '@theia/core/lib/common/event';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileSystem, FileShouldOverwrite } from '../common/filesystem';\nimport { DidFilesChangedParams, FileChangeType, FileSystemWatcherServer, WatchOptions } from '../common/filesystem-watcher-protocol';\nimport { FileSystemPreferences } from './filesystem-preferences';\n\nexport {\n    FileChangeType\n};\n\nexport interface FileChange {\n    uri: URI;\n    type: FileChangeType;\n}\nexport namespace FileChange {\n    export function isUpdated(change: FileChange, uri: URI): boolean {\n        return change.type === FileChangeType.UPDATED && uri.toString() === change.uri.toString();\n    }\n    export function isAdded(change: FileChange, uri: URI): boolean {\n        return change.type === FileChangeType.ADDED && uri.toString() === change.uri.toString();\n    }\n    export function isDeleted(change: FileChange, uri: URI): boolean {\n        return change.type === FileChangeType.DELETED && change.uri.isEqualOrParent(uri);\n    }\n    export function isAffected(change: FileChange, uri: URI): boolean {\n        return isDeleted(change, uri) || uri.toString() === change.uri.toString();\n    }\n    export function isChanged(change: FileChange, uri: URI): boolean {\n        return !isDeleted(change, uri) && uri.toString() === change.uri.toString();\n    }\n}\n\nexport type FileChangeEvent = FileChange[];\nexport namespace FileChangeEvent {\n    export function isUpdated(event: FileChangeEvent, uri: URI): boolean {\n        return event.some(change => FileChange.isUpdated(change, uri));\n    }\n    export function isAdded(event: FileChangeEvent, uri: URI): boolean {\n        return event.some(change => FileChange.isAdded(change, uri));\n    }\n    export function isDeleted(event: FileChangeEvent, uri: URI): boolean {\n        return event.some(change => FileChange.isDeleted(change, uri));\n    }\n    export function isAffected(event: FileChangeEvent, uri: URI): boolean {\n        return event.some(change => FileChange.isAffected(change, uri));\n    }\n    export function isChanged(event: FileChangeEvent, uri: URI): boolean {\n        return !isDeleted(event, uri) && event.some(change => FileChange.isChanged(change, uri));\n    }\n}\n\nexport interface FileMoveEvent extends WaitUntilEvent {\n    sourceUri: URI\n    targetUri: URI\n}\nexport namespace FileMoveEvent {\n    export function isRename({ sourceUri, targetUri }: FileMoveEvent): boolean {\n        return sourceUri.parent.toString() === targetUri.parent.toString();\n    }\n}\n\nexport interface FileEvent extends WaitUntilEvent {\n    uri: URI\n}\n\nexport class FileOperationEmitter<E extends WaitUntilEvent> implements Disposable {\n\n    protected readonly onWillEmitter = new Emitter<E>();\n    readonly onWill = this.onWillEmitter.event;\n\n    protected readonly onDidFailEmitter = new Emitter<E>();\n    readonly onDidFail = this.onDidFailEmitter.event;\n\n    protected readonly onDidEmitter = new Emitter<E>();\n    readonly onDid = this.onDidEmitter.event;\n\n    protected readonly toDispose = new DisposableCollection(\n        this.onWillEmitter,\n        this.onDidFailEmitter,\n        this.onDidEmitter\n    );\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    async fireWill(event: Pick<E, Exclude<keyof E, 'waitUntil'>>): Promise<void> {\n        await WaitUntilEvent.fire(this.onWillEmitter, event);\n    }\n\n    async fireDid(failed: boolean, event: Pick<E, Exclude<keyof E, 'waitUntil'>>): Promise<void> {\n        const onDidEmitter = failed ? this.onDidFailEmitter : this.onDidEmitter;\n        await WaitUntilEvent.fire(onDidEmitter, event);\n    }\n\n}\n\n/**\n * React to file system events, including calls originating from the\n * application or event coming from the system's filesystem directly\n * (actual file watching).\n *\n * `on(will|did)(create|rename|delete)` events solely come from application\n * usage, not from actual filesystem.\n */\n@injectable()\nexport class FileSystemWatcher implements Disposable {\n\n    protected readonly toDispose = new DisposableCollection();\n    protected readonly toRestartAll = new DisposableCollection();\n\n    protected readonly onFileChangedEmitter = new Emitter<FileChangeEvent>();\n    readonly onFilesChanged = this.onFileChangedEmitter.event;\n\n    protected readonly fileCreateEmitter = new FileOperationEmitter<FileEvent>();\n    readonly onWillCreate = this.fileCreateEmitter.onWill;\n    readonly onDidFailCreate = this.fileCreateEmitter.onDidFail;\n    readonly onDidCreate = this.fileCreateEmitter.onDid;\n\n    protected readonly fileDeleteEmitter = new FileOperationEmitter<FileEvent>();\n    readonly onWillDelete = this.fileDeleteEmitter.onWill;\n    readonly onDidFailDelete = this.fileDeleteEmitter.onDidFail;\n    readonly onDidDelete = this.fileDeleteEmitter.onDid;\n\n    protected readonly fileMoveEmitter = new FileOperationEmitter<FileMoveEvent>();\n    readonly onWillMove = this.fileMoveEmitter.onWill;\n    readonly onDidFailMove = this.fileMoveEmitter.onDidFail;\n    readonly onDidMove = this.fileMoveEmitter.onDid;\n\n    @inject(FileSystemWatcherServer)\n    protected readonly server: FileSystemWatcherServer;\n\n    @inject(FileSystemPreferences)\n    protected readonly preferences: FileSystemPreferences;\n\n    @inject(FileSystem)\n    protected readonly filesystem: FileSystem;\n\n    // This is injected so we can avoid including UI stuff and make this class\n    // unit-testable.\n    @inject(FileShouldOverwrite)\n    protected readonly shouldOverwrite: FileShouldOverwrite;\n\n    @postConstruct()\n    protected init(): void {\n        this.toDispose.push(this.onFileChangedEmitter);\n        this.toDispose.push(this.fileDeleteEmitter);\n        this.toDispose.push(this.fileMoveEmitter);\n\n        this.toDispose.push(this.server);\n        this.server.setClient({\n            onDidFilesChanged: e => this.onDidFilesChanged(e)\n        });\n\n        this.toDispose.push(this.preferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'files.watcherExclude') {\n                this.toRestartAll.dispose();\n            }\n        }));\n\n        this.filesystem.setClient({\n            /* eslint-disable no-void */\n            shouldOverwrite: this.shouldOverwrite.bind(this),\n            willCreate: async uri => void await this.fileCreateEmitter.fireWill({ uri: new URI(uri) }),\n            didCreate: async (uri, failed) => void await this.fileCreateEmitter.fireDid(failed, { uri: new URI(uri) }),\n            willDelete: async uri => void await this.fileDeleteEmitter.fireWill({ uri: new URI(uri) }),\n            didDelete: async (uri, failed) => void await this.fileDeleteEmitter.fireDid(failed, { uri: new URI(uri) }),\n            willMove: async (sourceUri, targetUri) => void await this.fileMoveEmitter.fireWill({ sourceUri: new URI(sourceUri), targetUri: new URI(targetUri) }),\n            didMove: async (sourceUri, targetUri, failed) => void await this.fileMoveEmitter.fireDid(failed, { sourceUri: new URI(sourceUri), targetUri: new URI(targetUri) }),\n            /* eslint-enable no-void */\n        });\n    }\n\n    /**\n     * Stop watching.\n     */\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    protected onDidFilesChanged(event: DidFilesChangedParams): void {\n        const changes = event.changes.map(change => <FileChange>{\n            uri: new URI(change.uri),\n            type: change.type\n        });\n        this.onFileChangedEmitter.fire(changes);\n    }\n\n    /**\n     * Start file watching under the given uri.\n     *\n     * Resolve when watching is started.\n     * Return a disposable to stop file watching under the given uri.\n     */\n    watchFileChanges(uri: URI): Promise<Disposable> {\n        return this.createWatchOptions(uri.toString())\n            .then(options =>\n                this.server.watchFileChanges(uri.toString(), options)\n            )\n            .then(watcher => {\n                const toDispose = new DisposableCollection();\n                const toStop = Disposable.create(() =>\n                    this.server.unwatchFileChanges(watcher)\n                );\n                const toRestart = toDispose.push(toStop);\n                this.toRestartAll.push(Disposable.create(() => {\n                    toRestart.dispose();\n                    toStop.dispose();\n                    this.watchFileChanges(uri).then(disposable =>\n                        toDispose.push(disposable)\n                    );\n                }));\n                return toDispose;\n            });\n    }\n\n    protected createWatchOptions(uri: string): Promise<WatchOptions> {\n        return this.getIgnored(uri).then(ignored => ({\n            // always ignore temporary upload files\n            ignored: ignored.concat('**/theia_upload_*')\n        }));\n    }\n\n    protected async getIgnored(uri: string): Promise<string[]> {\n        const patterns = this.preferences.get('files.watcherExclude', undefined, uri);\n        return Object.keys(patterns).filter(pattern => patterns[pattern]);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { FileStat } from './filesystem';\nimport URI from '@theia/core/lib/common/uri';\nimport { Path } from '@theia/core/lib/common';\n\nexport namespace FileSystemUtils {\n\n    /**\n     * Tildify path, replacing `home` with `~` if user's `home` is present at the beginning of the path.\n     * This is a non-operation for Windows.\n     *\n     * @param resourcePath\n     * @param home\n     */\n    export function tildifyPath(resourcePath: string, home: string): string {\n        const path = new Path(resourcePath);\n        const isWindows = path.root && Path.isDrive(path.root.base);\n\n        if (!isWindows && home && resourcePath.indexOf(`${home}/`) === 0) {\n            return resourcePath.replace(`${home}/`, '~/');\n        }\n\n        return resourcePath;\n    }\n\n    /**\n     * Generate unique URI for a given parent which does not collide\n     *\n     * @param parentUri the `URI` of the parent\n     * @param parent the `FileStat` of the parent\n     * @param name the resource name\n     * @param ext the resource extension\n     */\n    export function generateUniqueResourceURI(parentUri: URI, parent: FileStat, name: string, ext: string = ''): URI {\n        const children = !parent.children ? [] : parent.children!.map(child => new URI(child.uri));\n\n        let index = 1;\n        let base = name + ext;\n        while (children.some(child => child.path.base === base)) {\n            index = index + 1;\n            base = name + '_' + index + ext;\n        }\n        return parentUri.resolve(base);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { JsonRpcServer, JsonRpcProxy } from '@theia/core';\n\nexport const fileSystemWatcherPath = '/services/fs-watcher';\n\nexport const FileSystemWatcherServer = Symbol('FileSystemWatcherServer');\nexport interface FileSystemWatcherServer extends JsonRpcServer<FileSystemWatcherClient> {\n    /**\n     * Start file watching for the given param.\n     * Resolve when watching is started.\n     * Return a watcher id.\n     */\n    watchFileChanges(uri: string, options?: WatchOptions): Promise<number>;\n\n    /**\n     * Stop file watching for the given id.\n     * Resolve when watching is stopped.\n     */\n    unwatchFileChanges(watcher: number): Promise<void>;\n}\n\nexport interface FileSystemWatcherClient {\n    /**\n     * Notify when files under watched uris are changed.\n     */\n    onDidFilesChanged(event: DidFilesChangedParams): void;\n}\n\nexport interface WatchOptions {\n    ignored: string[];\n}\n\nexport interface DidFilesChangedParams {\n    changes: FileChange[];\n}\n\nexport interface FileChange {\n    uri: string;\n    type: FileChangeType;\n}\n\nexport enum FileChangeType {\n    UPDATED = 0,\n    ADDED = 1,\n    DELETED = 2\n}\n\nexport const FileSystemWatcherServerProxy = Symbol('FileSystemWatcherServerProxy');\nexport type FileSystemWatcherServerProxy = JsonRpcProxy<FileSystemWatcherServer>;\n\n@injectable()\nexport class ReconnectingFileSystemWatcherServer implements FileSystemWatcherServer {\n\n    protected watcherSequence = 1;\n    protected readonly watchParams = new Map<number, {\n        uri: string;\n        options?: WatchOptions\n    }>();\n    protected readonly localToRemoteWatcher = new Map<number, number>();\n\n    constructor(\n        @inject(FileSystemWatcherServerProxy) protected readonly proxy: FileSystemWatcherServerProxy\n    ) {\n        const onInitialized = this.proxy.onDidOpenConnection(() => {\n            // skip reconnection on the first connection\n            onInitialized.dispose();\n            this.proxy.onDidOpenConnection(() => this.reconnect());\n        });\n    }\n\n    protected reconnect(): void {\n        for (const [watcher, { uri, options }] of this.watchParams.entries()) {\n            this.doWatchFileChanges(watcher, uri, options);\n        }\n    }\n\n    dispose(): void {\n        this.proxy.dispose();\n    }\n\n    watchFileChanges(uri: string, options?: WatchOptions): Promise<number> {\n        const watcher = this.watcherSequence++;\n        this.watchParams.set(watcher, { uri, options });\n        return this.doWatchFileChanges(watcher, uri, options);\n    }\n\n    protected doWatchFileChanges(watcher: number, uri: string, options?: WatchOptions): Promise<number> {\n        return this.proxy.watchFileChanges(uri, options).then(remote => {\n            this.localToRemoteWatcher.set(watcher, remote);\n            return watcher;\n        });\n    }\n\n    unwatchFileChanges(watcher: number): Promise<void> {\n        this.watchParams.delete(watcher);\n        const remote = this.localToRemoteWatcher.get(watcher);\n        if (remote) {\n            this.localToRemoteWatcher.delete(watcher);\n            return this.proxy.unwatchFileChanges(remote);\n        }\n        return Promise.resolve();\n    }\n\n    setClient(client: FileSystemWatcherClient | undefined): void {\n        this.proxy.setClient(client);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './filesystem';\nexport * from './filesystem-utils';\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { FrontendApplicationConfig } from '@theia/application-package/lib/application-props';\n\nexport class FrontendApplicationConfigProvider {\n\n    private static KEY = Symbol('FrontendApplicationConfigProvider');\n\n    static get(): FrontendApplicationConfig {\n        const config = FrontendApplicationConfigProvider.doGet();\n        if (config === undefined) {\n            throw new Error('The configuration is not set. Did you call FrontendApplicationConfigProvider#set?');\n        }\n        return config;\n    }\n\n    static set(config: FrontendApplicationConfig): void {\n        if (FrontendApplicationConfigProvider.doGet() !== undefined) {\n            throw new Error('The configuration is already set.');\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const globalObject = window as any;\n        const key = FrontendApplicationConfigProvider.KEY;\n        globalObject[key] = config;\n    }\n\n    private static doGet(): FrontendApplicationConfig | undefined {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const globalObject = window as any;\n        const key = FrontendApplicationConfigProvider.KEY;\n        return globalObject[key];\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './preference-service';\nexport * from './preference-proxy';\nexport * from './preference-contribution';\nexport * from './preference-provider';\nexport * from './preference-scope';\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, named, interfaces } from 'inversify';\nimport URI from '../../common/uri';\nimport { ContributionProvider, bindContributionProvider } from '../../common/contribution-provider';\n\nexport const PreferenceConfiguration = Symbol('PreferenceConfiguration');\nexport interface PreferenceConfiguration {\n    name: string;\n}\n\nexport function bindPreferenceConfigurations(bind: interfaces.Bind): void {\n    bindContributionProvider(bind, PreferenceConfiguration);\n    bind(PreferenceConfigurations).toSelf().inSingletonScope();\n}\n\n@injectable()\nexport class PreferenceConfigurations {\n\n    @inject(ContributionProvider) @named(PreferenceConfiguration)\n    protected readonly provider: ContributionProvider<PreferenceConfiguration>;\n\n    /* prefer Theia over VS Code by default */\n    getPaths(): string[] {\n        return ['.theia', '.vscode'];\n    }\n\n    getConfigName(): string {\n        return 'settings';\n    }\n\n    protected sectionNames: string[] | undefined;\n    getSectionNames(): string[] {\n        if (!this.sectionNames) {\n            this.sectionNames = this.provider.getContributions().map(p => p.name);\n        }\n        return this.sectionNames;\n    }\n\n    isSectionName(name: string): boolean {\n        return this.getSectionNames().indexOf(name) !== -1;\n    }\n\n    isSectionUri(configUri: URI | undefined): boolean {\n        return !!configUri && this.isSectionName(this.getName(configUri));\n    }\n\n    isConfigUri(configUri: URI | undefined): boolean {\n        return !!configUri && this.getName(configUri) === this.getConfigName();\n    }\n\n    getName(configUri: URI): string {\n        return configUri.path.name;\n    }\n\n    getPath(configUri: URI): string {\n        return configUri.parent.path.base;\n    }\n\n    createUri(folder: URI, configPath: string = this.getPaths()[0], configName: string = this.getConfigName()): URI {\n        return folder.resolve(configPath).resolve(configName + '.json');\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as Ajv from 'ajv';\nimport { inject, injectable, interfaces, named, postConstruct } from 'inversify';\nimport { ContributionProvider, bindContributionProvider, escapeRegExpCharacters, Emitter, Event, Disposable } from '../../common';\nimport { PreferenceScope } from './preference-scope';\nimport { PreferenceProvider, PreferenceProviderDataChange } from './preference-provider';\nimport {\n    PreferenceSchema, PreferenceSchemaProperties, PreferenceDataSchema, PreferenceItem, PreferenceSchemaProperty, PreferenceDataProperty, JsonType\n} from '../../common/preferences/preference-schema';\nimport { FrontendApplicationConfigProvider } from '../frontend-application-config-provider';\nimport { FrontendApplicationConfig } from '@theia/application-package/lib/application-props';\nimport { bindPreferenceConfigurations, PreferenceConfigurations } from './preference-configurations';\nexport { PreferenceSchema, PreferenceSchemaProperties, PreferenceDataSchema, PreferenceItem, PreferenceSchemaProperty, PreferenceDataProperty, JsonType };\nimport { Mutable } from '../../common/types';\n\n/* eslint-disable guard-for-in, @typescript-eslint/no-explicit-any */\n\nexport const PreferenceContribution = Symbol('PreferenceContribution');\nexport interface PreferenceContribution {\n    readonly schema: PreferenceSchema;\n}\n\nexport function bindPreferenceSchemaProvider(bind: interfaces.Bind): void {\n    bindPreferenceConfigurations(bind);\n    bind(PreferenceSchemaProvider).toSelf().inSingletonScope();\n    bindContributionProvider(bind, PreferenceContribution);\n}\n\nexport interface OverridePreferenceName {\n    preferenceName: string\n    overrideIdentifier: string\n}\nexport namespace OverridePreferenceName {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    export function is(arg: any): arg is OverridePreferenceName {\n        return !!arg && typeof arg === 'object' && 'preferenceName' in arg && 'overrideIdentifier' in arg;\n    }\n}\n\nconst OVERRIDE_PROPERTY = '\\\\[(.*)\\\\]$';\nexport const OVERRIDE_PROPERTY_PATTERN = new RegExp(OVERRIDE_PROPERTY);\n\nconst OVERRIDE_PATTERN_WITH_SUBSTITUTION = '\\\\[(${0})\\\\]$';\n\nexport interface FrontendApplicationPreferenceConfig extends FrontendApplicationConfig {\n    preferences: {\n        [preferenceName: string]: any\n    }\n}\nexport namespace FrontendApplicationPreferenceConfig {\n    export function is(config: FrontendApplicationConfig): config is FrontendApplicationPreferenceConfig {\n        return 'preferences' in config && typeof config['preferences'] === 'object';\n    }\n}\n\n@injectable()\nexport class PreferenceSchemaProvider extends PreferenceProvider {\n\n    protected readonly preferences: { [name: string]: any } = {};\n    protected readonly combinedSchema: PreferenceDataSchema = { properties: {}, patternProperties: {} };\n\n    @inject(ContributionProvider) @named(PreferenceContribution)\n    protected readonly preferenceContributions: ContributionProvider<PreferenceContribution>;\n\n    @inject(PreferenceConfigurations)\n    protected readonly configurations: PreferenceConfigurations;\n\n    protected readonly onDidPreferenceSchemaChangedEmitter = new Emitter<void>();\n    readonly onDidPreferenceSchemaChanged: Event<void> = this.onDidPreferenceSchemaChangedEmitter.event;\n    protected fireDidPreferenceSchemaChanged(): void {\n        this.onDidPreferenceSchemaChangedEmitter.fire(undefined);\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.preferenceContributions.getContributions().forEach(contrib => {\n            this.doSetSchema(contrib.schema);\n        });\n        this.combinedSchema.additionalProperties = false;\n        this._ready.resolve();\n    }\n\n    protected readonly overrideIdentifiers = new Set<string>();\n    registerOverrideIdentifier(overrideIdentifier: string): void {\n        if (this.overrideIdentifiers.has(overrideIdentifier)) {\n            return;\n        }\n        this.overrideIdentifiers.add(overrideIdentifier);\n        this.updateOverridePatternPropertiesKey();\n    }\n\n    protected readonly overridePatternProperties: Required<Pick<PreferenceDataProperty, 'properties' | 'additionalProperties'>> & PreferenceDataProperty = {\n        type: 'object',\n        description: 'Configure editor settings to be overridden for a language.',\n        errorMessage: 'Unknown Identifier. Use language identifiers',\n        properties: {},\n        additionalProperties: false\n    };\n    protected overridePatternPropertiesKey: string | undefined;\n    protected updateOverridePatternPropertiesKey(): void {\n        const oldKey = this.overridePatternPropertiesKey;\n        const newKey = this.computeOverridePatternPropertiesKey();\n        if (oldKey === newKey) {\n            return;\n        }\n        if (oldKey) {\n            delete this.combinedSchema.patternProperties[oldKey];\n        }\n        this.overridePatternPropertiesKey = newKey;\n        if (newKey) {\n            this.combinedSchema.patternProperties[newKey] = this.overridePatternProperties;\n        }\n        this.fireDidPreferenceSchemaChanged();\n    }\n    protected computeOverridePatternPropertiesKey(): string | undefined {\n        let param: string = '';\n        for (const overrideIdentifier of this.overrideIdentifiers.keys()) {\n            if (param.length) {\n                param += '|';\n            }\n            param += new RegExp(escapeRegExpCharacters(overrideIdentifier)).source;\n        }\n        return param.length ? OVERRIDE_PATTERN_WITH_SUBSTITUTION.replace('${0}', param) : undefined;\n    }\n\n    protected doUnsetSchema(changes: PreferenceProviderDataChange[]): PreferenceProviderDataChange[] {\n        const inverseChanges: PreferenceProviderDataChange[] = [];\n        for (const change of changes) {\n            const preferenceName = change.preferenceName;\n            const overridden = this.overriddenPreferenceName(preferenceName);\n            if (overridden) {\n                delete this.overridePatternProperties.properties[`[${overridden.overrideIdentifier}]`];\n                delete this.combinedSchema.properties[`[${overridden.overrideIdentifier}]`];\n            } else {\n                delete this.combinedSchema.properties[preferenceName];\n            }\n            const newValue = change.oldValue;\n            const oldValue = change.newValue;\n            const { scope, domain } = change;\n            const inverseChange: Mutable<PreferenceProviderDataChange> = { preferenceName, oldValue, scope, domain };\n            if (typeof newValue === undefined) {\n                delete this.preferences[preferenceName];\n            } else {\n                inverseChange.newValue = newValue;\n                this.preferences[preferenceName] = newValue;\n            }\n            inverseChanges.push(inverseChange);\n        }\n        return inverseChanges;\n    }\n\n    protected doSetSchema(schema: PreferenceSchema): PreferenceProviderDataChange[] {\n        const ajv = new Ajv();\n        const valid = ajv.validateSchema(schema);\n        if (!valid) {\n            const errors = !!ajv.errors ? ajv.errorsText(ajv.errors) : 'unknown validation error';\n            console.warn('A contributed preference schema has validation issues : ' + errors);\n        }\n        const scope = PreferenceScope.Default;\n        const domain = this.getDomain();\n        const changes: PreferenceProviderDataChange[] = [];\n        const defaultScope = PreferenceSchema.getDefaultScope(schema);\n        const overridable = schema.overridable || false;\n        for (const preferenceName of Object.keys(schema.properties)) {\n            if (this.combinedSchema.properties[preferenceName]) {\n                console.error('Preference name collision detected in the schema for property: ' + preferenceName);\n            } else {\n                const schemaProps = PreferenceDataProperty.fromPreferenceSchemaProperty(schema.properties[preferenceName], defaultScope);\n                if (typeof schemaProps.overridable !== 'boolean' && overridable) {\n                    schemaProps.overridable = true;\n                }\n                if (schemaProps.overridable) {\n                    this.overridePatternProperties.properties[preferenceName] = schemaProps;\n                }\n                this.combinedSchema.properties[preferenceName] = schemaProps;\n\n                const value = schemaProps.defaultValue = this.getDefaultValue(schemaProps, preferenceName);\n                if (this.testOverrideValue(preferenceName, value)) {\n                    for (const overriddenPreferenceName in value) {\n                        const overrideValue = value[overriddenPreferenceName];\n                        const overridePreferenceName = `${preferenceName}.${overriddenPreferenceName}`;\n                        changes.push(this.doSetPreferenceValue(overridePreferenceName, overrideValue, { scope, domain }));\n                    }\n                } else {\n                    changes.push(this.doSetPreferenceValue(preferenceName, value, { scope, domain }));\n                }\n            }\n        }\n        return changes;\n    }\n\n    protected doSetPreferenceValue(preferenceName: string, newValue: any, { scope, domain }: {\n        scope: PreferenceScope,\n        domain?: string[]\n    }): PreferenceProviderDataChange {\n        const oldValue = this.preferences[preferenceName];\n        this.preferences[preferenceName] = newValue;\n        return { preferenceName, oldValue, newValue, scope, domain };\n    }\n\n    /** @deprecated since 0.6.0 pass preferenceName as the second arg */\n    protected getDefaultValue(property: PreferenceItem): any;\n    protected getDefaultValue(property: PreferenceItem, preferenceName: string): any;\n    protected getDefaultValue(property: PreferenceItem, preferenceName?: string): any {\n        const config = FrontendApplicationConfigProvider.get();\n        if (preferenceName && FrontendApplicationPreferenceConfig.is(config) && preferenceName in config.preferences) {\n            return config.preferences[preferenceName];\n        }\n        if (property.defaultValue !== undefined) {\n            return property.defaultValue;\n        }\n        if (property.default !== undefined) {\n            return property.default;\n        }\n        const type = Array.isArray(property.type) ? property.type[0] : property.type;\n        switch (type) {\n            case 'boolean':\n                return false;\n            case 'integer':\n            case 'number':\n                return 0;\n            case 'string':\n                return '';\n            case 'array':\n                return [];\n            case 'object':\n                return {};\n        }\n        // eslint-disable-next-line no-null/no-null\n        return null;\n    }\n\n    getCombinedSchema(): PreferenceDataSchema {\n        return this.combinedSchema;\n    }\n\n    setSchema(schema: PreferenceSchema): Disposable {\n        const changes = this.doSetSchema(schema);\n        if (!changes.length) {\n            return Disposable.NULL;\n        }\n        this.fireDidPreferenceSchemaChanged();\n        this.emitPreferencesChangedEvent(changes);\n        return Disposable.create(() => {\n            const inverseChanges = this.doUnsetSchema(changes);\n            if (!inverseChanges.length) {\n                return;\n            }\n            this.fireDidPreferenceSchemaChanged();\n            this.emitPreferencesChangedEvent(inverseChanges);\n        });\n    }\n\n    getPreferences(): { [name: string]: any } {\n        return this.preferences;\n    }\n\n    async setPreference(): Promise<boolean> {\n        return false;\n    }\n\n    isValidInScope(preferenceName: string, scope: PreferenceScope): boolean {\n        let property;\n        const overridden = this.overriddenPreferenceName(preferenceName);\n        if (overridden) {\n            // try from overridden schema\n            property = this.overridePatternProperties[`[${overridden.overrideIdentifier}]`];\n            property = property && property[overridden.preferenceName];\n            if (!property) {\n                // try from overridden identifier\n                property = this.overridePatternProperties[overridden.preferenceName];\n            }\n            if (!property) {\n                // try from overridden value\n                property = this.combinedSchema.properties[overridden.preferenceName];\n            }\n        } else {\n            property = this.combinedSchema.properties[preferenceName];\n        }\n        return property && property.scope! >= scope;\n    }\n\n    *getPreferenceNames(): IterableIterator<string> {\n        for (const preferenceName in this.combinedSchema.properties) {\n            yield preferenceName;\n            for (const overridePreferenceName of this.getOverridePreferenceNames(preferenceName)) {\n                yield overridePreferenceName;\n            }\n        }\n    }\n\n    *getOverridePreferenceNames(preferenceName: string): IterableIterator<string> {\n        const preference = this.combinedSchema.properties[preferenceName];\n        if (preference && preference.overridable) {\n            for (const overrideIdentifier of this.overrideIdentifiers) {\n                yield this.overridePreferenceName({ preferenceName, overrideIdentifier });\n            }\n        }\n    }\n\n    overridePreferenceName({ preferenceName, overrideIdentifier }: OverridePreferenceName): string {\n        return `[${overrideIdentifier}].${preferenceName}`;\n    }\n    overriddenPreferenceName(name: string): OverridePreferenceName | undefined {\n        const index = name.indexOf('.');\n        if (index === -1) {\n            return undefined;\n        }\n        const matches = name.substr(0, index).match(OVERRIDE_PROPERTY_PATTERN);\n        const overrideIdentifier = matches && matches[1];\n        if (!overrideIdentifier || !this.overrideIdentifiers.has(overrideIdentifier)) {\n            return undefined;\n        }\n        const preferenceName = name.substr(index + 1);\n        return { preferenceName, overrideIdentifier };\n    }\n\n    testOverrideValue(name: string, value: any): value is PreferenceSchemaProperties {\n        return PreferenceSchemaProperties.is(value) && OVERRIDE_PROPERTY_PATTERN.test(name);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport debounce = require('p-debounce');\nimport { injectable } from 'inversify';\nimport { JSONExt, JSONValue } from '@phosphor/coreutils/lib/json';\nimport URI from '../../common/uri';\nimport { Disposable, DisposableCollection, Emitter, Event } from '../../common';\nimport { Deferred } from '../../common/promise-util';\nimport { PreferenceScope } from './preference-scope';\n\nexport interface PreferenceProviderDataChange {\n    readonly preferenceName: string;\n    readonly newValue?: any;\n    readonly oldValue?: any;\n    readonly scope: PreferenceScope;\n    readonly domain?: string[];\n}\n\nexport namespace PreferenceProviderDataChange {\n    export function affects(change: PreferenceProviderDataChange, resourceUri?: string): boolean {\n        const resourcePath = resourceUri && new URI(resourceUri).path;\n        const domain = change.domain;\n        return !resourcePath || !domain || domain.some(uri => new URI(uri).path.relativity(resourcePath) >= 0);\n    }\n}\n\nexport interface PreferenceProviderDataChanges {\n    [preferenceName: string]: PreferenceProviderDataChange;\n}\n\nexport interface PreferenceResolveResult<T> {\n    configUri?: URI\n    value?: T\n}\n\n@injectable()\nexport abstract class PreferenceProvider implements Disposable {\n\n    protected readonly onDidPreferencesChangedEmitter = new Emitter<PreferenceProviderDataChanges>();\n    readonly onDidPreferencesChanged: Event<PreferenceProviderDataChanges> = this.onDidPreferencesChangedEmitter.event;\n\n    protected readonly toDispose = new DisposableCollection();\n\n    protected readonly _ready = new Deferred<void>();\n\n    constructor() {\n        this.toDispose.push(this.onDidPreferencesChangedEmitter);\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    protected deferredChanges: PreferenceProviderDataChanges | undefined;\n    protected _pendingChanges: Promise<boolean> = Promise.resolve(false);\n    get pendingChanges(): Promise<boolean> {\n        return this._pendingChanges;\n    }\n\n    /**\n     * Informs the listeners that one or more preferences of this provider are changed.\n     * The listeners are able to find what was changed from the emitted event.\n     */\n    protected emitPreferencesChangedEvent(changes: PreferenceProviderDataChanges | PreferenceProviderDataChange[]): Promise<boolean> {\n        if (Array.isArray(changes)) {\n            for (const change of changes) {\n                this.mergePreferenceProviderDataChange(change);\n            }\n        } else {\n            for (const preferenceName of Object.keys(changes)) {\n                this.mergePreferenceProviderDataChange(changes[preferenceName]);\n            }\n        }\n        return this._pendingChanges = this.fireDidPreferencesChanged();\n    }\n\n    protected mergePreferenceProviderDataChange(change: PreferenceProviderDataChange): void {\n        if (!this.deferredChanges) {\n            this.deferredChanges = {};\n        }\n        const current = this.deferredChanges[change.preferenceName];\n        const { newValue, scope, domain } = change;\n        if (!current) {\n            // new\n            this.deferredChanges[change.preferenceName] = change;\n        } else if (current.oldValue === newValue) {\n            // delete\n            delete this.deferredChanges[change.preferenceName];\n        } else {\n            // update\n            Object.assign(current, { newValue, scope, domain });\n        }\n    }\n\n    protected fireDidPreferencesChanged = debounce(() => {\n        const changes = this.deferredChanges;\n        this.deferredChanges = undefined;\n        if (changes && Object.keys(changes).length) {\n            this.onDidPreferencesChangedEmitter.fire(changes);\n            return true;\n        }\n        return false;\n    }, 0);\n\n    get<T>(preferenceName: string, resourceUri?: string): T | undefined {\n        return this.resolve<T>(preferenceName, resourceUri).value;\n    }\n\n    resolve<T>(preferenceName: string, resourceUri?: string): PreferenceResolveResult<T> {\n        const value = this.getPreferences(resourceUri)[preferenceName];\n        if (value !== undefined) {\n            return {\n                value,\n                configUri: this.getConfigUri(resourceUri)\n            };\n        }\n        return {};\n    }\n\n    abstract getPreferences(resourceUri?: string): { [p: string]: any };\n\n    /**\n     * Resolves only if all changes were delivered.\n     * If changes were made then implementation must either\n     * await on `this.emitPreferencesChangedEvent(...)` or\n     * `this.pendingChanges` if chnages are fired indirectly.\n     */\n    abstract setPreference(key: string, value: any, resourceUri?: string): Promise<boolean>;\n\n    /**\n     * Resolved when the preference provider is ready to provide preferences\n     * It should be resolved by subclasses.\n     */\n    get ready(): Promise<void> {\n        return this._ready.promise;\n    }\n\n    /**\n     * undefined if all belongs\n     */\n    getDomain(): string[] | undefined {\n        return undefined;\n    }\n\n    /**\n     * undefined if cannot be provided for the given resource uri\n     */\n    getConfigUri(resourceUri?: string): URI | undefined {\n        return undefined;\n    }\n\n    static merge(source: JSONValue | undefined, target: JSONValue): JSONValue {\n        if (source === undefined || !JSONExt.isObject(source)) {\n            return JSONExt.deepCopy(target);\n        }\n        if (JSONExt.isPrimitive(target)) {\n            return {};\n        }\n        for (const key of Object.keys(target)) {\n            const value = (target as any)[key];\n            if (key in source) {\n                if (JSONExt.isObject(source[key]) && JSONExt.isObject(value)) {\n                    this.merge(source[key], value);\n                    continue;\n                }\n            }\n            source[key] = JSONExt.deepCopy(value);\n        }\n        return source;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Disposable, Event } from '../../common';\nimport { PreferenceService } from './preference-service';\nimport { PreferenceSchema, OverridePreferenceName } from './preference-contribution';\nimport { PreferenceScope } from './preference-scope';\n\nexport interface PreferenceChangeEvent<T> {\n    readonly preferenceName: keyof T;\n    readonly newValue?: T[keyof T];\n    readonly oldValue?: T[keyof T];\n    affects(resourceUri?: string, overrideIdentifier?: string): boolean;\n}\n\nexport interface PreferenceEventEmitter<T> {\n    readonly onPreferenceChanged: Event<PreferenceChangeEvent<T>>;\n    readonly ready: Promise<void>;\n}\n\nexport interface PreferenceRetrieval<T> {\n    get<K extends keyof T>(preferenceName: K | {\n        preferenceName: K,\n        overrideIdentifier?: string\n    }, defaultValue?: T[K], resourceUri?: string): T[K];\n}\n\nexport type PreferenceProxy<T> = Readonly<T> & Disposable & PreferenceEventEmitter<T> & PreferenceRetrieval<T>;\nexport interface PreferenceProxyOptions {\n    prefix?: string;\n    resourceUri?: string;\n    overrideIdentifier?: string;\n    style?: 'flat' | 'deep' | 'both';\n}\n\nexport function createPreferenceProxy<T>(preferences: PreferenceService, schema: PreferenceSchema, options?: PreferenceProxyOptions): PreferenceProxy<T> {\n    const opts = options || {};\n    const prefix = opts.prefix || '';\n    const style = opts.style || 'flat';\n    const isDeep = style === 'deep' || style === 'both';\n    const isFlat = style === 'both' || style === 'flat';\n    const onPreferenceChanged = (listener: (e: PreferenceChangeEvent<T>) => any, thisArgs?: any, disposables?: Disposable[]) => preferences.onPreferencesChanged(changes => {\n        for (const key of Object.keys(changes)) {\n            const e = changes[key];\n            const overridden = preferences.overriddenPreferenceName(e.preferenceName);\n            const preferenceName: any = overridden ? overridden.preferenceName : e.preferenceName;\n            if (preferenceName.startsWith(prefix) && (!overridden || !opts.overrideIdentifier || overridden.overrideIdentifier === opts.overrideIdentifier)) {\n                if (schema.properties[preferenceName]) {\n                    const { newValue, oldValue } = e;\n                    listener({\n                        newValue, oldValue, preferenceName,\n                        affects: (resourceUri, overrideIdentifier) => {\n                            if (overrideIdentifier !== undefined) {\n                                if (overridden && overridden.overrideIdentifier !== overrideIdentifier) {\n                                    return false;\n                                }\n                            }\n                            return e.affects(resourceUri);\n                        }\n                    });\n                }\n            }\n        }\n    }, thisArgs, disposables);\n\n    const unsupportedOperation = (_: any, __: string) => {\n        throw new Error('Unsupported operation');\n    };\n\n    const getValue: PreferenceRetrieval<any>['get'] = (arg, defaultValue, resourceUri) => {\n        const preferenceName = OverridePreferenceName.is(arg) ?\n            preferences.overridePreferenceName(arg) :\n            <string>arg;\n        return preferences.get(preferenceName, defaultValue, resourceUri || opts.resourceUri);\n    };\n\n    const ownKeys: () => string[] = () => {\n        const properties = [];\n        for (const p of Object.keys(schema.properties)) {\n            if (p.startsWith(prefix)) {\n                const idx = p.indexOf('.', prefix.length);\n                if (idx !== -1 && isDeep) {\n                    const pre = p.substr(prefix.length, idx - prefix.length);\n                    if (properties.indexOf(pre) === -1) {\n                        properties.push(pre);\n                    }\n                }\n                const prop = p.substr(prefix.length);\n                if (isFlat || prop.indexOf('.') === -1) {\n                    properties.push(prop);\n                }\n            }\n        }\n        return properties;\n    };\n\n    const set: (target: any, prop: string, value: any, receiver: any) => boolean = (_, property: string | symbol | number, value: any) => {\n        if (typeof property !== 'string') {\n            throw new Error(`unexpected property: ${String(property)}`);\n        }\n        if (style === 'deep' && property.indexOf('.') !== -1) {\n            return false;\n        }\n        const fullProperty = prefix ? prefix + property : property;\n        if (schema.properties[fullProperty]) {\n            preferences.set(fullProperty, value, PreferenceScope.Default);\n            return true;\n        }\n        const newPrefix = fullProperty + '.';\n        for (const p of Object.keys(schema.properties)) {\n            if (p.startsWith(newPrefix)) {\n                const subProxy: { [k: string]: any } = createPreferenceProxy(preferences, schema, {\n                    prefix: newPrefix,\n                    resourceUri: opts.resourceUri,\n                    overrideIdentifier: opts.overrideIdentifier,\n                    style\n                });\n                for (const k of Object.keys(value)) {\n                    subProxy[k] = value[k];\n                }\n            }\n        }\n        return false;\n    };\n\n    const get: (target: any, prop: string) => any = (_, property: string | symbol | number) => {\n        if (typeof property !== 'string') {\n            throw new Error(`unexpected property: ${String(property)}`);\n        }\n        const fullProperty = prefix ? prefix + property : property;\n        if (isFlat || property.indexOf('.') === -1) {\n            if (schema.properties[fullProperty]) {\n                let value;\n                if (opts.overrideIdentifier) {\n                    value = preferences.get(preferences.overridePreferenceName({\n                        overrideIdentifier: opts.overrideIdentifier,\n                        preferenceName: fullProperty\n                    }), undefined, opts.resourceUri);\n                }\n                if (value === undefined) {\n                    value = preferences.get(fullProperty, undefined, opts.resourceUri);\n                }\n                return value;\n            }\n        }\n        if (property === 'onPreferenceChanged') {\n            return onPreferenceChanged;\n        }\n        if (property === 'dispose') {\n            return () => { /* do nothing */ };\n        }\n        if (property === 'ready') {\n            return preferences.ready;\n        }\n        if (property === 'get') {\n            return getValue;\n        }\n        if (property === 'toJSON') {\n            return toJSON();\n        }\n        if (isDeep) {\n            const newPrefix = fullProperty + '.';\n            for (const p of Object.keys(schema.properties)) {\n                if (p.startsWith(newPrefix)) {\n                    return createPreferenceProxy(preferences, schema, { prefix: newPrefix, resourceUri: opts.resourceUri, overrideIdentifier: opts.overrideIdentifier, style });\n                }\n            }\n\n            let value;\n            let parentSegment = fullProperty;\n            const segments = [];\n            do {\n                const index = parentSegment.lastIndexOf('.');\n                segments.push(parentSegment.substring(index + 1));\n                parentSegment = parentSegment.substring(0, index);\n                if (parentSegment in schema.properties) {\n                    value = get(_, parentSegment);\n                }\n            } while (parentSegment && value === undefined);\n\n            let segment;\n            while (typeof value === 'object' && (segment = segments.pop())) {\n                value = value[segment];\n            }\n            return segments.length ? undefined : value;\n        }\n        return undefined;\n    };\n\n    const toJSON = () => {\n        const result: any = {};\n        for (const k of ownKeys()) {\n            result[k] = get(undefined, k);\n        }\n        return result;\n    };\n\n    return new Proxy({}, {\n        get,\n        ownKeys,\n        getOwnPropertyDescriptor: (_, property: string) => {\n            if (ownKeys().indexOf(property) !== -1) {\n                return {\n                    enumerable: true,\n                    configurable: true\n                };\n            }\n            return {};\n        },\n        set,\n        deleteProperty: unsupportedOperation,\n        defineProperty: unsupportedOperation\n    });\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { PreferenceScope } from '../../common/preferences/preference-scope';\nexport { PreferenceScope };\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { Event, Emitter, DisposableCollection, Disposable, deepFreeze } from '../../common';\nimport { Deferred } from '../../common/promise-util';\nimport { PreferenceProvider, PreferenceProviderDataChange, PreferenceProviderDataChanges, PreferenceResolveResult } from './preference-provider';\nimport { PreferenceSchemaProvider, OverridePreferenceName } from './preference-contribution';\nimport URI from '../../common/uri';\nimport { PreferenceScope } from './preference-scope';\nimport { PreferenceConfigurations } from './preference-configurations';\n\nexport { PreferenceScope };\n\nexport interface PreferenceChange {\n    readonly preferenceName: string;\n    readonly newValue?: any;\n    readonly oldValue?: any;\n    readonly scope: PreferenceScope;\n    affects(resourceUri?: string): boolean;\n}\n\nexport class PreferenceChangeImpl implements PreferenceChange {\n    constructor(\n        private change: PreferenceProviderDataChange\n    ) { }\n\n    get preferenceName(): string {\n        return this.change.preferenceName;\n    }\n    get newValue(): string {\n        return this.change.newValue;\n    }\n    get oldValue(): string {\n        return this.change.oldValue;\n    }\n    get scope(): PreferenceScope {\n        return this.change.scope;\n    }\n\n    // TODO add tests\n    affects(resourceUri?: string): boolean {\n        const resourcePath = resourceUri && new URI(resourceUri).path;\n        const domain = this.change.domain;\n        return !resourcePath || !domain || domain.some(uri => new URI(uri).path.relativity(resourcePath) >= 0);\n    }\n}\n\nexport interface PreferenceChanges {\n    [preferenceName: string]: PreferenceChange\n}\n\nexport const PreferenceService = Symbol('PreferenceService');\nexport interface PreferenceService extends Disposable {\n    readonly ready: Promise<void>;\n    get<T>(preferenceName: string): T | undefined;\n    get<T>(preferenceName: string, defaultValue: T): T;\n    get<T>(preferenceName: string, defaultValue: T, resourceUri?: string): T;\n    get<T>(preferenceName: string, defaultValue?: T, resourceUri?: string): T | undefined;\n    set(preferenceName: string, value: any, scope?: PreferenceScope, resourceUri?: string): Promise<void>;\n    onPreferenceChanged: Event<PreferenceChange>;\n    onPreferencesChanged: Event<PreferenceChanges>;\n\n    inspect<T>(preferenceName: string, resourceUri?: string): {\n        preferenceName: string,\n        defaultValue: T | undefined,\n        globalValue: T | undefined, // User Preference\n        workspaceValue: T | undefined, // Workspace Preference\n        workspaceFolderValue: T | undefined // Folder Preference\n    } | undefined;\n\n    overridePreferenceName(options: OverridePreferenceName): string;\n    overriddenPreferenceName(preferenceName: string): OverridePreferenceName | undefined;\n\n    resolve<T>(preferenceName: string, defaultValue?: T, resourceUri?: string): PreferenceResolveResult<T>;\n}\n\n/**\n * We cannot load providers directly in the case if they depend on `PreferenceService` somehow.\n * It allows to load them lazilly after DI is configured.\n */\nexport const PreferenceProviderProvider = Symbol('PreferenceProviderProvider');\nexport type PreferenceProviderProvider = (scope: PreferenceScope, uri?: URI) => PreferenceProvider;\n\n@injectable()\nexport class PreferenceServiceImpl implements PreferenceService {\n\n    protected readonly onPreferenceChangedEmitter = new Emitter<PreferenceChange>();\n    readonly onPreferenceChanged = this.onPreferenceChangedEmitter.event;\n\n    protected readonly onPreferencesChangedEmitter = new Emitter<PreferenceChanges>();\n    readonly onPreferencesChanged = this.onPreferencesChangedEmitter.event;\n\n    protected readonly toDispose = new DisposableCollection(this.onPreferenceChangedEmitter, this.onPreferencesChangedEmitter);\n\n    @inject(PreferenceSchemaProvider)\n    protected readonly schema: PreferenceSchemaProvider;\n\n    @inject(PreferenceProviderProvider)\n    protected readonly providerProvider: PreferenceProviderProvider;\n\n    @inject(PreferenceConfigurations)\n    protected readonly configurations: PreferenceConfigurations;\n\n    protected readonly preferenceProviders = new Map<PreferenceScope, PreferenceProvider>();\n\n    protected async initializeProviders(): Promise<void> {\n        try {\n            for (const scope of PreferenceScope.getScopes()) {\n                const provider = this.providerProvider(scope);\n                this.preferenceProviders.set(scope, provider);\n                this.toDispose.push(provider.onDidPreferencesChanged(changes =>\n                    this.reconcilePreferences(changes)\n                ));\n                await provider.ready;\n            }\n            this._ready.resolve();\n        } catch (e) {\n            this._ready.reject(e);\n        }\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.toDispose.push(Disposable.create(() => this._ready.reject(new Error('preference service is disposed'))));\n        this.initializeProviders();\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    protected readonly _ready = new Deferred<void>();\n    get ready(): Promise<void> {\n        return this._ready.promise;\n    }\n\n    protected reconcilePreferences(changes: PreferenceProviderDataChanges): void {\n        const changesToEmit: PreferenceChanges = {};\n        const acceptChange = (change: PreferenceProviderDataChange) =>\n            this.getAffectedPreferenceNames(change, preferenceName =>\n                changesToEmit[preferenceName] = new PreferenceChangeImpl({ ...change, preferenceName })\n            );\n\n        for (const preferenceName of Object.keys(changes)) {\n            let change = changes[preferenceName];\n            if (change.newValue === undefined) {\n                const overridden = this.overriddenPreferenceName(change.preferenceName);\n                if (overridden) {\n                    change = {\n                        ...change, newValue: this.doGet(overridden.preferenceName)\n                    };\n                }\n            }\n            if (this.schema.isValidInScope(preferenceName, PreferenceScope.Folder)) {\n                acceptChange(change);\n                continue;\n            }\n            for (const scope of PreferenceScope.getReversedScopes()) {\n                if (this.schema.isValidInScope(preferenceName, scope)) {\n                    const provider = this.getProvider(scope);\n                    if (provider) {\n                        const value = provider.get(preferenceName);\n                        if (scope > change.scope && value !== undefined) {\n                            // preference defined in a more specific scope\n                            break;\n                        } else if (scope === change.scope && change.newValue !== undefined) {\n                            // preference is changed into something other than `undefined`\n                            acceptChange(change);\n                        } else if (scope < change.scope && change.newValue === undefined && value !== undefined) {\n                            // preference is changed to `undefined`, use the value from a more general scope\n                            change = {\n                                ...change,\n                                newValue: value,\n                                scope\n                            };\n                            acceptChange(change);\n                        }\n                    }\n                } else if (change.newValue === undefined && change.scope === PreferenceScope.Default) {\n                    // preference is removed\n                    acceptChange(change);\n                    break;\n                }\n            }\n        }\n\n        // emit the changes\n        const changedPreferenceNames = Object.keys(changesToEmit);\n        if (changedPreferenceNames.length > 0) {\n            this.onPreferencesChangedEmitter.fire(changesToEmit);\n        }\n        changedPreferenceNames.forEach(preferenceName => this.onPreferenceChangedEmitter.fire(changesToEmit[preferenceName]));\n    }\n    protected getAffectedPreferenceNames(change: PreferenceProviderDataChange, accept: (affectedPreferenceName: string) => void): void {\n        accept(change.preferenceName);\n        for (const overridePreferenceName of this.schema.getOverridePreferenceNames(change.preferenceName)) {\n            if (!this.doHas(overridePreferenceName)) {\n                accept(overridePreferenceName);\n            }\n        }\n    }\n\n    protected getProvider(scope: PreferenceScope): PreferenceProvider | undefined {\n        return this.preferenceProviders.get(scope);\n    }\n\n    has(preferenceName: string, resourceUri?: string): boolean {\n        return this.get(preferenceName, undefined, resourceUri) !== undefined;\n    }\n\n    get<T>(preferenceName: string): T | undefined;\n    get<T>(preferenceName: string, defaultValue: T): T;\n    get<T>(preferenceName: string, defaultValue: T, resourceUri: string): T;\n    get<T>(preferenceName: string, defaultValue?: T, resourceUri?: string): T | undefined;\n    get<T>(preferenceName: string, defaultValue?: T, resourceUri?: string): T | undefined {\n        return this.resolve<T>(preferenceName, defaultValue, resourceUri).value;\n    }\n\n    resolve<T>(preferenceName: string, defaultValue?: T, resourceUri?: string): {\n        configUri?: URI,\n        value?: T\n    } {\n        const { value, configUri } = this.doResolve(preferenceName, defaultValue, resourceUri);\n        if (value === undefined) {\n            const overridden = this.overriddenPreferenceName(preferenceName);\n            if (overridden) {\n                return this.doResolve(overridden.preferenceName, defaultValue, resourceUri);\n            }\n        }\n        return { value, configUri };\n    }\n\n    async set(preferenceName: string, value: any, scope: PreferenceScope | undefined, resourceUri?: string): Promise<void> {\n        const resolvedScope = scope !== undefined ? scope : (!resourceUri ? PreferenceScope.Workspace : PreferenceScope.Folder);\n        if (resolvedScope === PreferenceScope.User && this.configurations.isSectionName(preferenceName.split('.', 1)[0])) {\n            throw new Error(`Unable to write to User Settings because ${preferenceName} does not support for global scope.`);\n        }\n        if (resolvedScope === PreferenceScope.Folder && !resourceUri) {\n            throw new Error('Unable to write to Folder Settings because no resource is provided.');\n        }\n        const provider = this.getProvider(resolvedScope);\n        if (provider && await provider.setPreference(preferenceName, value, resourceUri)) {\n            return;\n        }\n        throw new Error(`Unable to write to ${PreferenceScope.getScopeNames(resolvedScope)[0]} Settings.`);\n    }\n\n    getBoolean(preferenceName: string): boolean | undefined;\n    getBoolean(preferenceName: string, defaultValue: boolean): boolean;\n    getBoolean(preferenceName: string, defaultValue: boolean, resourceUri: string): boolean;\n    getBoolean(preferenceName: string, defaultValue?: boolean, resourceUri?: string): boolean | undefined {\n        const value = resourceUri ? this.get(preferenceName, defaultValue, resourceUri) : this.get(preferenceName, defaultValue);\n        // eslint-disable-next-line no-null/no-null\n        return value !== null && value !== undefined ? !!value : defaultValue;\n    }\n\n    getString(preferenceName: string): string | undefined;\n    getString(preferenceName: string, defaultValue: string): string;\n    getString(preferenceName: string, defaultValue: string, resourceUri: string): string;\n    getString(preferenceName: string, defaultValue?: string, resourceUri?: string): string | undefined {\n        const value = resourceUri ? this.get(preferenceName, defaultValue, resourceUri) : this.get(preferenceName, defaultValue);\n        // eslint-disable-next-line no-null/no-null\n        if (value === null || value === undefined) {\n            return defaultValue;\n        }\n        return value.toString();\n    }\n\n    getNumber(preferenceName: string): number | undefined;\n    getNumber(preferenceName: string, defaultValue: number): number;\n    getNumber(preferenceName: string, defaultValue: number, resourceUri: string): number;\n    getNumber(preferenceName: string, defaultValue?: number, resourceUri?: string): number | undefined {\n        const value = resourceUri ? this.get(preferenceName, defaultValue, resourceUri) : this.get(preferenceName, defaultValue);\n        // eslint-disable-next-line no-null/no-null\n        if (value === null || value === undefined) {\n            return defaultValue;\n        }\n        if (typeof value === 'number') {\n            return value;\n        }\n        return Number(value);\n    }\n\n    inspect<T>(preferenceName: string, resourceUri?: string): {\n        preferenceName: string,\n        defaultValue: T | undefined,\n        globalValue: T | undefined, // User Preference\n        workspaceValue: T | undefined, // Workspace Preference\n        workspaceFolderValue: T | undefined // Folder Preference\n    } | undefined {\n        const defaultValue = this.inspectInScope<T>(preferenceName, PreferenceScope.Default, resourceUri);\n        const globalValue = this.inspectInScope<T>(preferenceName, PreferenceScope.User, resourceUri);\n        const workspaceValue = this.inspectInScope<T>(preferenceName, PreferenceScope.Workspace, resourceUri);\n        const workspaceFolderValue = this.inspectInScope<T>(preferenceName, PreferenceScope.Folder, resourceUri);\n\n        return { preferenceName, defaultValue, globalValue, workspaceValue, workspaceFolderValue };\n    }\n    protected inspectInScope<T>(preferenceName: string, scope: PreferenceScope, resourceUri?: string): T | undefined {\n        const value = this.doInspectInScope<T>(preferenceName, scope, resourceUri);\n        if (value === undefined) {\n            const overridden = this.overriddenPreferenceName(preferenceName);\n            if (overridden) {\n                return this.doInspectInScope(overridden.preferenceName, scope, resourceUri);\n            }\n        }\n        return value;\n    }\n\n    overridePreferenceName(options: OverridePreferenceName): string {\n        return this.schema.overridePreferenceName(options);\n    }\n    overriddenPreferenceName(preferenceName: string): OverridePreferenceName | undefined {\n        return this.schema.overriddenPreferenceName(preferenceName);\n    }\n\n    protected doHas(preferenceName: string, resourceUri?: string): boolean {\n        return this.doGet(preferenceName, undefined, resourceUri) !== undefined;\n    }\n    protected doInspectInScope<T>(preferenceName: string, scope: PreferenceScope, resourceUri?: string): T | undefined {\n        const provider = this.getProvider(scope);\n        return provider && provider.get<T>(preferenceName, resourceUri);\n    }\n    protected doGet<T>(preferenceName: string, defaultValue?: T, resourceUri?: string): T | undefined {\n        return this.doResolve(preferenceName, defaultValue, resourceUri).value;\n    }\n    protected doResolve<T>(preferenceName: string, defaultValue?: T, resourceUri?: string): PreferenceResolveResult<T> {\n        const result: PreferenceResolveResult<T> = {};\n        for (const scope of PreferenceScope.getScopes()) {\n            if (this.schema.isValidInScope(preferenceName, scope)) {\n                const provider = this.getProvider(scope);\n                if (provider) {\n                    const { configUri, value } = provider.resolve<T>(preferenceName, resourceUri);\n                    if (value !== undefined) {\n                        result.configUri = configUri;\n                        result.value = PreferenceProvider.merge(result.value as any, value as any) as any;\n                    }\n                }\n            }\n        }\n        return {\n            configUri: result.configUri,\n            value: result.value !== undefined ? deepFreeze(result.value) : defaultValue\n        };\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { PreferenceScope } from './preference-scope';\n\nexport interface PreferenceSchema {\n    [name: string]: any,\n    scope?: 'application' | 'window' | 'resource' | PreferenceScope,\n    overridable?: boolean;\n    properties: PreferenceSchemaProperties\n}\nexport namespace PreferenceSchema {\n    export function is(obj: Object | undefined): obj is PreferenceSchema {\n        return !!obj && ('properties' in obj) && PreferenceSchemaProperties.is((<any>obj)['properties']);\n    }\n    export function getDefaultScope(schema: PreferenceSchema): PreferenceScope {\n        let defaultScope: PreferenceScope = PreferenceScope.Workspace;\n        if (!PreferenceScope.is(schema.scope)) {\n            defaultScope = PreferenceScope.fromString(<string>schema.scope) || PreferenceScope.Workspace;\n        } else {\n            defaultScope = schema.scope;\n        }\n        return defaultScope;\n    }\n}\n\nexport interface PreferenceSchemaProperties {\n    [name: string]: PreferenceSchemaProperty\n}\nexport namespace PreferenceSchemaProperties {\n    export function is(obj: Object | undefined): obj is PreferenceSchemaProperties {\n        return !!obj && typeof obj === 'object';\n    }\n}\n\nexport interface PreferenceDataSchema {\n    [name: string]: any,\n    scope?: PreferenceScope,\n    properties: {\n        [name: string]: PreferenceDataProperty\n    }\n    patternProperties: {\n        [name: string]: PreferenceDataProperty\n    };\n}\n\nexport interface PreferenceItem {\n    type?: JsonType | JsonType[];\n    minimum?: number;\n    /**\n     * content assist (UI) default value\n     */\n    default?: any;\n    /**\n     * preference default value, if `undefined` then `default`\n     */\n    defaultValue?: any;\n    enum?: string[];\n    items?: PreferenceItem;\n    properties?: { [name: string]: PreferenceItem };\n    additionalProperties?: object | boolean;\n    [name: string]: any;\n    overridable?: boolean;\n}\n\nexport interface PreferenceSchemaProperty extends PreferenceItem {\n    description?: string;\n    markdownDescription?: string;\n    scope?: 'application' | 'window' | 'resource' | PreferenceScope;\n}\n\nexport interface PreferenceDataProperty extends PreferenceItem {\n    description?: string;\n    markdownDescription?: string;\n    scope?: PreferenceScope;\n}\nexport namespace PreferenceDataProperty {\n    export function fromPreferenceSchemaProperty(schemaProps: PreferenceSchemaProperty, defaultScope: PreferenceScope = PreferenceScope.Workspace): PreferenceDataProperty {\n        if (!schemaProps.scope) {\n            schemaProps.scope = defaultScope;\n        } else if (typeof schemaProps.scope === 'string') {\n            return Object.assign(schemaProps, { scope: PreferenceScope.fromString(schemaProps.scope) || defaultScope });\n        }\n        return <PreferenceDataProperty>schemaProps;\n    }\n}\n\nexport type JsonType = 'string' | 'array' | 'number' | 'integer' | 'object' | 'boolean' | 'null';\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport enum PreferenceScope {\n    Default,\n    User,\n    Workspace,\n    Folder\n}\n\nexport namespace PreferenceScope {\n    export function is(scope: any): scope is PreferenceScope {\n        return typeof scope === 'number' && getScopes().findIndex(s => s === scope) >= 0;\n    }\n\n    export function getScopes(): PreferenceScope[] {\n        return Object.keys(PreferenceScope)\n            .filter(k => typeof PreferenceScope[k as any] === 'string')\n            .map(v => <PreferenceScope>Number(v));\n    }\n\n    export function getReversedScopes(): PreferenceScope[] {\n        return getScopes().reverse();\n    }\n\n    export function getScopeNames(scope?: PreferenceScope): string[] {\n        const names: string[] = [];\n        const allNames = Object.keys(PreferenceScope)\n            .filter(k => typeof PreferenceScope[k as any] === 'number');\n        if (scope) {\n            for (const name of allNames) {\n                if ((<any>PreferenceScope)[name] <= scope) {\n                    names.push(name);\n                }\n            }\n        }\n        return names;\n    }\n\n    export function fromString(strScope: string): PreferenceScope | undefined {\n        switch (strScope) {\n            case 'application':\n                return PreferenceScope.User;\n            case 'window':\n                return PreferenceScope.Folder;\n            case 'resource':\n                return PreferenceScope.Folder;\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { CancellationToken, cancelled } from './cancellation';\n\n/**\n * Simple implementation of the deferred pattern.\n * An object that exposes a promise and functions to resolve and reject it.\n */\nexport class Deferred<T> {\n    resolve: (value?: T) => void;\n    reject: (err?: any) => void; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n    promise = new Promise<T>((resolve, reject) => {\n        this.resolve = resolve;\n        this.reject = reject;\n    });\n}\n\n/**\n * @returns resolves after a specified number of milliseconds\n * @throws cancelled if a given token is cancelled before a specified number of milliseconds\n */\nexport function timeout(ms: number, token = CancellationToken.None): Promise<void> {\n    const deferred = new Deferred<void>();\n    const handle = setTimeout(() => deferred.resolve(), ms);\n    token.onCancellationRequested(() => {\n        clearTimeout(handle);\n        deferred.reject(cancelled());\n    });\n    return deferred.promise;\n}\n"],"sourceRoot":""}
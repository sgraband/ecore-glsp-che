{"version":3,"sources":["webpack:///../node_modules/@theia/callhierarchy/src/browser/callhierarchy-context.ts","webpack:///../node_modules/@theia/callhierarchy/src/browser/callhierarchy-service-impl.ts","webpack:///../node_modules/@theia/callhierarchy/src/browser/index.ts","webpack:///../node_modules/@theia/callhierarchy/src/browser/utils.ts","webpack:///../node_modules/@theia/typescript/src/browser/typescript-callhierarchy-service.ts","webpack:///../node_modules/@theia/typescript/src/browser/typescript-client-contribution.ts","webpack:///../node_modules/@theia/typescript/src/browser/typescript-frontend-contribution.ts","webpack:///../node_modules/@theia/typescript/src/browser/typescript-frontend-module.ts","webpack:///../node_modules/@theia/typescript/src/browser/typescript-keybinding-contexts.ts","webpack:///../node_modules/@theia/typescript/src/browser/typescript-preferences.ts","webpack:///../node_modules/@theia/typescript/src/common/index.ts","webpack:///../node_modules/@theia/typescript/src/common/typescript-version-service.ts","webpack:///../src/commands.ts"],"names":[],"mappings":"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","file":"30.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ILanguageClient } from '@theia/languages/lib/browser';\nimport {\n    ReferencesRequest, DocumentSymbolRequest, DefinitionRequest, TextDocumentPositionParams,\n    TextDocumentIdentifier, SymbolInformation, Location, Position, DocumentSymbol, ReferenceParams, LocationLink, DocumentUri\n} from 'monaco-languageclient/lib/services';\nimport * as utils from './utils';\nimport { ILogger, Disposable } from '@theia/core';\nimport { MonacoTextModelService } from '@theia/monaco/lib/browser/monaco-text-model-service';\nimport URI from '@theia/core/lib/common/uri';\n\nexport class CallHierarchyContext implements Disposable {\n\n    protected readonly symbolCache = new Map<string, DocumentSymbol[] | SymbolInformation[]>();\n    protected readonly disposables: Disposable[] = [];\n\n    constructor(protected readonly languageClient: ILanguageClient,\n        protected readonly textModelService: MonacoTextModelService,\n        protected readonly logger: ILogger) { }\n\n    async getAllSymbols(uri: string): Promise<DocumentSymbol[] | SymbolInformation[]> {\n        const cachedSymbols = this.symbolCache.get(uri);\n        if (cachedSymbols) {\n            return cachedSymbols;\n        }\n        const result = await this.languageClient.sendRequest(DocumentSymbolRequest.type, {\n            textDocument: TextDocumentIdentifier.create(uri)\n        });\n        const symbols = (result || []) as DocumentSymbol[] | SymbolInformation[];\n        this.symbolCache.set(uri, symbols);\n        return symbols;\n    }\n\n    // tslint:disable-next-line:typedef\n    async getEditorModelReference(uri: string) {\n        const model = await this.textModelService.createModelReference(new URI(uri));\n        this.disposables.push(model);\n        return model;\n    }\n\n    async getDefinitionLocation(uri: DocumentUri, position: Position): Promise<Location | undefined> {\n\n        // Definition can be null\n        // eslint-disable-next-line no-null/no-null\n        let locations: Location | Location[] | LocationLink[] | null = null;\n        try {\n            locations = await this.languageClient.sendRequest(DefinitionRequest.type, <TextDocumentPositionParams>{\n                position: position,\n                textDocument: { uri }\n            });\n        } catch (error) {\n            this.logger.error(`Error from definitions request: ${uri}#${position.line}/${position.character}`, error);\n        }\n        if (!locations) {\n            return undefined;\n        }\n        const targetLocation = Array.isArray(locations) ? locations[0] : locations;\n        return LocationLink.is(targetLocation) ? {\n            uri: targetLocation.targetUri,\n            range: targetLocation.targetSelectionRange\n        } : targetLocation;\n    }\n\n    async getCallerReferences(definition: Location): Promise<Location[]> {\n        try {\n            const references = await this.languageClient.sendRequest(ReferencesRequest.type, <ReferenceParams>{\n                context: {\n                    includeDeclaration: false // TODO find out, why definitions are still contained\n                },\n                position: {\n                    line: definition.range.start.line,\n                    character: definition.range.start.character\n                },\n                textDocument: {\n                    uri: definition.uri\n                }\n            });\n            const uniqueReferences = utils.filterUnique(references);\n            const filteredReferences = utils.filterSame(uniqueReferences, definition);\n            return filteredReferences;\n        } catch (error) {\n            this.logger.error('Error from references request', error);\n            return [];\n        }\n    }\n\n    dispose(): void {\n        this.disposables.forEach(element => {\n            element.dispose();\n        });\n        this.symbolCache.clear();\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { LanguageSelector } from '@theia/languages/lib/common/language-selector';\nimport { LanguageClientProvider } from '@theia/languages/lib/browser/language-client-provider';\nimport {\n    SymbolInformation, Location, Position, Range, SymbolKind, DocumentSymbol, DocumentUri\n} from 'monaco-languageclient/lib/services';\nimport * as utils from './utils';\nimport { Definition, Caller } from './callhierarchy';\nimport { CallHierarchyService } from './callhierarchy-service';\nimport { ILogger } from '@theia/core';\nimport { MonacoTextModelService } from '@theia/monaco/lib/browser/monaco-text-model-service';\nimport { CallHierarchyContext } from './callhierarchy-context';\n\nexport type ExtendedDocumentSymbol = DocumentSymbol & Location & { containerName: string };\n\n@injectable()\nexport abstract class AbstractDefaultCallHierarchyService implements CallHierarchyService {\n    @inject(LanguageClientProvider) readonly languageClientProvider: LanguageClientProvider;\n    @inject(ILogger) readonly logger: ILogger;\n    @inject(MonacoTextModelService) readonly textModelService: MonacoTextModelService;\n\n    abstract get languageId(): string;\n\n    get selector(): LanguageSelector {\n        return this.languageId;\n    }\n\n    /**\n     * Returns root definition of caller hierarchy.\n     */\n    public async getRootDefinition(uri: DocumentUri, position: Position): Promise<Definition | undefined> {\n        return this.withContext(async services => {\n            const definitionLocation = await services.getDefinitionLocation(uri, position);\n            if (!definitionLocation) {\n                return undefined;\n            }\n            const definitionSymbol = await this.getEnclosingRootSymbol(definitionLocation, services);\n            if (!definitionSymbol) {\n                return undefined;\n            }\n            return this.toDefinition(definitionSymbol, services);\n        });\n    }\n\n    /**\n     * Returns next level of caller definitions.\n     */\n    public async getCallers(definition: Definition): Promise<Caller[] | undefined> {\n        return this.withContext(async services => {\n            const callerReferences = await services.getCallerReferences(definition.location);\n            const callers = this.createCallers(callerReferences, services);\n            return callers;\n        });\n    }\n\n    protected async withContext<T>(lambda: (context: CallHierarchyContext) => Promise<T>): Promise<T | undefined> {\n        try {\n            const context = await this.createContext();\n            if (context) {\n                const result = await lambda.call(this, context);\n                context.dispose();\n                return result;\n            }\n        } catch (error) {\n            this.logger.error('Error getting language client', error);\n        }\n        return undefined;\n    }\n\n    protected async createContext(): Promise<CallHierarchyContext | undefined> {\n        const languageClient = await this.languageClientProvider.getLanguageClient(this.languageId);\n        if (!languageClient) {\n            this.logger.error('No language client with ID ' + this.languageId);\n            return undefined;\n        } else {\n            return new CallHierarchyContext(languageClient, this.textModelService, this.logger);\n        }\n    }\n\n    /**\n     * Creates callers for given references and method symbols.\n     */\n    protected async createCallers(callerReferences: Location[], context: CallHierarchyContext): Promise<Caller[]> {\n        const result: Caller[] = [];\n        const caller2references = new Map<ExtendedDocumentSymbol | SymbolInformation, Location[]>();\n        for (const reference of callerReferences) {\n            const callerSymbol = await this.getEnclosingCallerSymbol(reference, context);\n            if (callerSymbol) {\n                const references = caller2references.get(callerSymbol);\n                if (references) {\n                    references.push(reference);\n                } else {\n                    caller2references.set(callerSymbol, [reference]);\n                }\n            }\n        }\n        for (const callerSymbol of caller2references.keys()) {\n            const locations = caller2references.get(callerSymbol);\n            if (locations) {\n                const definition = await this.toDefinition(callerSymbol, context);\n                if (definition) {\n                    const caller = this.toCaller(definition, locations);\n                    result.push(caller);\n                }\n            }\n        }\n        return result;\n    }\n\n    protected toCaller(def: Definition, references: Location[]): Caller {\n        return <Caller>{ callerDefinition: def, references: references.map(ref => ref.range) };\n    }\n\n    protected async toDefinition(symbol: ExtendedDocumentSymbol | SymbolInformation, context: CallHierarchyContext): Promise<Definition | undefined> {\n        const location = await this.getSymbolNameLocation(symbol, context);\n        if (!location) {\n            return undefined;\n        }\n        const symbolName = symbol.name;\n        const symbolKind = symbol.kind;\n        const containerName = symbol.containerName;\n        const selectionRange = location.range;\n        return { location, selectionRange, symbolName, symbolKind, containerName };\n    }\n    /**\n     * Override this to configure the callables of your language.\n     */\n    protected isCallable(symbol: DocumentSymbol | SymbolInformation): boolean {\n        switch (symbol.kind) {\n            case SymbolKind.Constant:\n            case SymbolKind.Constructor:\n            case SymbolKind.Field:\n            case SymbolKind.Function:\n            case SymbolKind.Method:\n            case SymbolKind.Property:\n            case SymbolKind.Variable:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    /**\n     * Finds the symbol that encloses the definition range of the root element\n     *\n     * As symbols can be nested, we are looking for the one with the smallest region.\n     * As we only check regions that contain the definition, that is the one with the\n     * latest start position.\n     */\n    protected async getEnclosingRootSymbol(definition: Location, context: CallHierarchyContext): Promise<ExtendedDocumentSymbol | SymbolInformation | undefined> {\n        const allSymbols = await context.getAllSymbols(definition.uri);\n        if (allSymbols.length === 0) {\n            return undefined;\n        }\n        if (DocumentSymbol.is(allSymbols[0])) {\n            const symbols = (allSymbols as DocumentSymbol[]);\n            const containsDefinition = (symbol: DocumentSymbol) => utils.containsRange(symbol.range, definition.range);\n            for (const symbol of symbols) {\n                let containerName = definition.uri.split('/').pop();\n                let candidate = containsDefinition(symbol) ? symbol : undefined;\n                outer: while (candidate) {\n                    const children = candidate.children || [];\n                    for (const child of children) {\n                        if (containsDefinition(child)) {\n                            containerName = candidate.name;\n                            candidate = child;\n                            continue outer;\n                        }\n                    }\n                    break;\n                }\n                if (candidate) {\n                    return <ExtendedDocumentSymbol>{ uri: definition.uri, containerName, ...candidate };\n                }\n            }\n            return undefined;\n        } else {\n            const symbols = (allSymbols as SymbolInformation[]).filter(s => this.isCallable(s));\n            let bestMatch: SymbolInformation | undefined = undefined;\n            let bestRange: Range | undefined = undefined;\n            for (const candidate of symbols) {\n                const candidateRange = candidate.location.range;\n                if (utils.containsRange(candidateRange, definition.range)) {\n                    if (!bestMatch || utils.startsAfter(candidateRange, bestRange!)) {\n                        bestMatch = candidate;\n                        bestRange = candidateRange;\n                    }\n                }\n            }\n            return bestMatch;\n        }\n    }\n\n    /**\n     * Finds the symbol that encloses the reference range of a caller\n     */\n    protected async getEnclosingCallerSymbol(reference: Location, context: CallHierarchyContext): Promise<ExtendedDocumentSymbol | SymbolInformation | undefined> {\n        return this.getEnclosingRootSymbol(reference, context);\n    }\n\n    /**\n     * Finds the location of its name within a symbol's location.\n     */\n    protected async getSymbolNameLocation(symbol: ExtendedDocumentSymbol | SymbolInformation, context: CallHierarchyContext): Promise<Location | undefined> {\n        const symbolLocation: Location = DocumentSymbol.is(symbol) ? symbol : symbol.location;\n        const model = await context.getEditorModelReference(symbolLocation.uri);\n        let position = new monaco.Position(\n            symbolLocation.range.start.line + 1,\n            symbolLocation.range.start.character + 1\n        );\n        const endPosition = new monaco.Position(\n            symbolLocation.range.end.line + 1,\n            symbolLocation.range.end.character + 1\n        );\n        do {\n            const word = model.object.textEditorModel.getWordAtPosition(position);\n            if (word && word.word === symbol.name) {\n                const range = Range.create(\n                    Position.create(position.lineNumber - 1, position.column - 1),\n                    Position.create(position.lineNumber - 1, position.column - 1 + symbol.name.length));\n                return Location.create(symbolLocation.uri, range);\n            }\n            const delta = (word) ? word.word.length + 1 : 1;\n            position = model.object.textEditorModel.modifyPosition(position, delta);\n        } while (position.isBefore(endPosition));\n        return undefined;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './callhierarchy';\nexport * from './callhierarchy-contribution';\nexport * from './callhierarchy-frontend-module';\nexport * from './callhierarchy-service';\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Location, Range, Position } from 'vscode-languageserver-types';\n\n/**\n * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n */\nexport function containsRange(range: Range, otherRange: Range): boolean {\n    if (otherRange.start.line < range.start.line || otherRange.end.line < range.start.line) {\n        return false;\n    }\n    if (otherRange.start.line > range.end.line || otherRange.end.line > range.end.line) {\n        return false;\n    }\n    if (otherRange.start.line === range.start.line && otherRange.start.character < range.start.character) {\n        return false;\n    }\n    if (otherRange.end.line === range.end.line && otherRange.end.character > range.end.character) {\n        return false;\n    }\n    return true;\n}\n\nexport function containsPosition(range: Range, position: Position): boolean {\n    return comparePosition(range.start, position) >= 0 && comparePosition(range.end, position) <= 0;\n}\n\nfunction sameStart(a: Range, b: Range): boolean {\n    const pos1 = a.start;\n    const pos2 = b.start;\n    return pos1.line === pos2.line\n        && pos1.character === pos2.character;\n}\n\nexport function filterSame(locations: Location[], definition: Location): Location[] {\n    return locations.filter(candidate => candidate.uri !== definition.uri\n        || !sameStart(candidate.range, definition.range)\n    );\n}\n\nexport function comparePosition(left: Position, right: Position): number {\n    const diff = right.line - left.line;\n    if (diff !== 0) {\n        return diff;\n    }\n    return right.character - left.character;\n}\n\nexport function filterUnique(locations: Location[] | null): Location[] {\n    if (!locations) {\n        return [];\n    }\n    const result: Location[] = [];\n    const set = new Set<string>();\n    for (const location of locations) {\n        const json = JSON.stringify(location);\n        if (!set.has(json)) {\n            set.add(json);\n            result.push(location);\n        }\n    }\n    return result;\n}\n\nexport function startsAfter(a: Range, b: Range): boolean {\n    if (a.start.line > b.start.line) {\n        return true;\n    }\n    if (a.start.line === b.start.line) {\n        if (a.start.character > b.start.character) {\n            return true;\n        }\n        if (a.start.character === b.start.character) {\n            if (a.end.line > b.end.line) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nexport function isSame(a: Location, b: Location): boolean {\n    return a.uri === b.uri\n        && a.range.start.line === b.range.start.line\n        && a.range.end.line === b.range.end.line\n        && a.range.start.character === b.range.start.character\n        && a.range.end.character === b.range.end.character;\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { AbstractDefaultCallHierarchyService, ExtendedDocumentSymbol } from '@theia/callhierarchy/lib/browser/callhierarchy-service-impl';\nimport { CallHierarchyContext } from '@theia/callhierarchy/lib/browser/callhierarchy-context';\nimport { TYPESCRIPT_LANGUAGE_ID } from '../common';\nimport { SymbolInformation, Range, Location, DocumentSymbol } from 'vscode-languageserver-types';\nimport * as utils from '@theia/callhierarchy/lib/browser/utils';\n\n@injectable()\nexport class TypeScriptCallHierarchyService extends AbstractDefaultCallHierarchyService {\n\n    readonly languageId: string = TYPESCRIPT_LANGUAGE_ID;\n\n    /**\n     * Finds the symbol that encloses the definition range of a caller.\n     *\n     * In the case of typescript, a method's definition and all its override definitions\n     * are returned as a reference as well. As these are not calls they have to be filtered.\n     * We also just want ot see the top-most caller symbol.\n     */\n    async getEnclosingCallerSymbol(reference: Location, context: CallHierarchyContext): Promise<ExtendedDocumentSymbol | SymbolInformation | undefined> {\n        const allSymbols = await context.getAllSymbols(reference.uri);\n        if (allSymbols.length === 0) {\n            return undefined;\n        }\n        if (DocumentSymbol.is(allSymbols[0])) {\n            return this.getEnclosingRootSymbol(reference, context);\n        }\n        const symbols = (allSymbols as SymbolInformation[]).filter(s => this.isCallable(s));\n        let bestMatch: SymbolInformation | undefined = undefined;\n        let bestRange: Range | undefined = undefined;\n        for (const candidate of symbols) {\n            const candidateRange = candidate.location.range;\n            if (utils.containsRange(candidateRange, reference.range)) {\n                // as opposed to default, find the topmost (earliest) symbol\n                if (!bestMatch || utils.startsAfter(bestRange!, candidateRange)) {\n                    bestMatch = candidate;\n                    bestRange = candidateRange;\n                }\n            }\n        }\n        if (bestMatch) {\n            // filter references that are in fact definitions\n            const nameLocation = await this.getSymbolNameLocation(bestMatch, context);\n            if (!nameLocation || utils.isSame(nameLocation, reference)) {\n                return undefined;\n            }\n        }\n        return bestMatch;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { PreferenceService, PreferenceScope } from '@theia/core/lib/browser/preferences';\nimport { BaseLanguageClientContribution, Workspace, Languages, LanguageClientFactory, ILanguageClient, State } from '@theia/languages/lib/browser';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { WorkspaceVariableContribution } from '@theia/workspace/lib/browser/workspace-variable-contribution';\nimport { TypeScriptInitializationOptions, TypeScriptInitializeResult } from 'typescript-language-server/lib/ts-protocol';\nimport {\n    TYPESCRIPT_LANGUAGE_ID, TYPESCRIPT_LANGUAGE_NAME, TYPESCRIPT_REACT_LANGUAGE_ID, JAVASCRIPT_LANGUAGE_ID, JAVASCRIPT_REACT_LANGUAGE_ID, TypescriptStartParams\n} from '../common';\nimport { TypescriptPreferences } from './typescript-preferences';\nimport { TypescriptVersion, TypescriptVersionService, TypescriptVersionOptions } from '../common/typescript-version-service';\n\n@injectable()\nexport class TypeScriptClientContribution extends BaseLanguageClientContribution {\n\n    readonly id = TYPESCRIPT_LANGUAGE_ID;\n    readonly name = TYPESCRIPT_LANGUAGE_NAME;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    @inject(WorkspaceVariableContribution)\n    protected readonly workspaceVariables: WorkspaceVariableContribution;\n\n    @inject(TypescriptPreferences)\n    protected readonly preferences: TypescriptPreferences;\n\n    @inject(PreferenceService)\n    protected readonly preferenceService: PreferenceService;\n\n    @inject(TypescriptVersionService)\n    protected readonly versionService: TypescriptVersionService;\n\n    protected readonly onDidChangeVersionEmitter = new Emitter<TypescriptVersion | undefined>();\n    readonly onDidChangeVersion: Event<TypescriptVersion | undefined> = this.onDidChangeVersionEmitter.event;\n\n    constructor(\n        @inject(Workspace) protected readonly workspace: Workspace,\n        @inject(Languages) protected readonly languages: Languages,\n        @inject(LanguageClientFactory) protected readonly languageClientFactory: LanguageClientFactory\n    ) {\n        super(workspace, languages, languageClientFactory);\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.preferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'typescript.server.log') {\n                this.restart();\n            }\n        });\n        this.onDidChangeVersion(() => this.restart());\n    }\n\n    protected _version: TypescriptVersion | undefined;\n    get version(): TypescriptVersion | undefined {\n        return this._version;\n    }\n    async setVersion(raw: TypescriptVersion | undefined): Promise<void> {\n        const version = await this.validateVersion(raw);\n        if (TypescriptVersion.equals(this._version, version)) {\n            return;\n        }\n        this._version = version;\n        if (version && version.qualifier === 'Workspace') {\n            const tsdkPath = this.workspaceVariables.getWorkspaceRelativePath(new URI(version.uri));\n            if (tsdkPath) {\n                this.preferenceService.set('typescript.tsdk', tsdkPath, PreferenceScope.Workspace);\n            }\n        }\n        this.onDidChangeVersionEmitter.fire(this._version);\n    }\n\n    protected async getStartParameters(): Promise<TypescriptStartParams> {\n        await this.restored.promise;\n        const { version } = this;\n        await this.setVersion(version);\n        return { version };\n    }\n\n    protected get documentSelector(): string[] {\n        return [\n            TYPESCRIPT_LANGUAGE_ID,\n            TYPESCRIPT_REACT_LANGUAGE_ID,\n            JAVASCRIPT_LANGUAGE_ID,\n            JAVASCRIPT_REACT_LANGUAGE_ID\n        ];\n    }\n\n    protected get workspaceContains(): string[] {\n        // FIXME requires https://github.com/eclipse-theia/theia/issues/2359\n        // return [\n        //     \"**/tsconfig.json\",\n        //     \"**/jsconfig.json\",\n        //     \"**/tsconfig.*.json\",\n        //     \"**/jsconfig.*.json\"\n        // ];\n        return [\n            'tsconfig.json',\n            'jsconfig.json'\n        ];\n    }\n\n    protected get initializationOptions(): Partial<TypeScriptInitializationOptions> {\n        const options: Partial<TypeScriptInitializationOptions> = {};\n        const logVerbosity = this.preferences['typescript.server.log'];\n        if (logVerbosity !== 'off') {\n            options.logVerbosity = logVerbosity;\n        }\n        return options;\n    }\n\n    protected _logFileUri: URI | undefined;\n    get logFileUri(): URI | undefined {\n        return this._logFileUri;\n    }\n    protected onReady(languageClient: ILanguageClient): void {\n        if (languageClient.initializeResult) {\n            const initializeResult = languageClient.initializeResult as TypeScriptInitializeResult;\n            this._logFileUri = initializeResult.logFileUri !== undefined ? new URI(initializeResult.logFileUri) : undefined;\n        }\n        languageClient.onDidChangeState(({ newState }) => {\n            if (newState === State.Stopped) {\n                this._logFileUri = undefined;\n            }\n        });\n        super.onReady(languageClient);\n    }\n\n    protected async validateVersion(candidate: TypescriptVersion | undefined): Promise<TypescriptVersion | undefined> {\n        const versions = await this.getVersions();\n        if (candidate && versions.some(version => TypescriptVersion.equals(candidate, version))) {\n            return candidate;\n        }\n        return versions.find(version => version.qualifier === 'Workspace') || versions[0];\n    }\n    async getVersions(): Promise<TypescriptVersion[]> {\n        await Promise.all([this.preferences.ready, this.workspace.ready]);\n        return this.versionService.getVersions(this.versionOptions);\n    }\n    protected get versionOptions(): TypescriptVersionOptions {\n        return {\n            workspaceFolders: this.workspaceService.tryGetRoots().map(({ uri }) => uri),\n            localTsdk: this.preferences['typescript.tsdk']\n        };\n    }\n\n    store(): TypescriptContributionData {\n        return {\n            version: this._version\n        };\n    }\n\n    protected readonly restored = new Deferred();\n    async restore(data: TypescriptContributionData | undefined): Promise<void> {\n        try {\n            if (!this._version) {\n                await this.setVersion(data && data.version);\n            }\n        } finally {\n            this.restored.resolve();\n        }\n    }\n\n}\nexport interface TypescriptContributionData {\n    version?: TypescriptVersion\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport * as tsp from 'typescript/lib/protocol';\nimport { Commands } from 'typescript-language-server/lib/commands';\nimport {\n    QuickPickService, KeybindingRegistry, KeybindingContribution, QuickPickItem, StorageService, LabelProvider, FrontendApplicationContribution, StatusBar, StatusBarAlignment\n} from '@theia/core/lib/browser';\nimport { ExecuteCommandRequest } from '@theia/languages/lib/browser';\nimport { FileSystemWatcher, FileMoveEvent } from '@theia/filesystem/lib/browser';\nimport { EditorManager, EditorWidget, EDITOR_CONTEXT_MENU, TextEditor } from '@theia/editor/lib/browser';\nimport { CommandContribution, CommandRegistry, Command, MenuModelRegistry, MenuContribution, DisposableCollection } from '@theia/core/lib/common';\nimport { MonacoEditor } from '@theia/monaco/lib/browser/monaco-editor';\nimport { TYPESCRIPT_LANGUAGE_ID, TS_JS_LANGUAGES } from '../common';\nimport { TypeScriptClientContribution, TypescriptContributionData } from './typescript-client-contribution';\nimport { TypeScriptKeybindingContexts } from './typescript-keybinding-contexts';\nimport { TypescriptVersion } from '../common/typescript-version-service';\nimport URI from '@theia/core/lib/common/uri';\n\nexport namespace TypeScriptCommands {\n    export const applyCompletionCodeAction: Command = {\n        id: Commands.APPLY_COMPLETION_CODE_ACTION\n    };\n    // TODO: get rid of me when https://github.com/TypeFox/monaco-languageclient/issues/104 is resolved\n    export const organizeImports: Command = {\n        category: 'TypeScript',\n        label: 'Organize Imports',\n        id: 'typescript.edit.organizeImports'\n    };\n    export const openServerLog: Command = {\n        category: 'TypeScript',\n        label: 'Open Server Log',\n        id: 'typescript.server.openLog'\n    };\n    export const selectVersion: Command = {\n        category: 'TypeScript',\n        label: 'Select Version',\n        id: 'typescript.selectVersion'\n    };\n}\n\n@injectable()\nexport class TypeScriptFrontendContribution implements FrontendApplicationContribution, CommandContribution, MenuContribution, KeybindingContribution {\n\n    @inject(StatusBar)\n    protected readonly statusBar: StatusBar;\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(QuickPickService)\n    protected readonly quickPickService: QuickPickService;\n\n    @inject(TypeScriptClientContribution)\n    protected readonly clientContribution: TypeScriptClientContribution;\n\n    @inject(FileSystemWatcher)\n    protected readonly fileSystemWatcher: FileSystemWatcher;\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(StorageService)\n    protected readonly storage: StorageService;\n\n    @postConstruct()\n    protected init(): void {\n        this.fileSystemWatcher.onDidMove(event => this.renameFile(event));\n    }\n\n    onStart(): void {\n        this.restore();\n        this.updateStatusBar();\n        this.editorManager.onCurrentEditorChanged(() => this.updateStatusBar());\n        this.clientContribution.onDidChangeVersion(() => this.updateStatusBar());\n    }\n\n    onStop(): void {\n        this.store();\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(TypeScriptCommands.applyCompletionCodeAction, {\n            execute: async (file: string, codeActions: tsp.CodeAction[]) => {\n                const codeAction = await this.pickCodeAction(codeActions);\n                return codeAction && this.applyCodeAction(codeAction);\n            }\n        });\n        commands.registerCommand(TypeScriptCommands.organizeImports, {\n            execute: () => this.organizeImports(),\n            isEnabled: () => !!this.currentEditor,\n            isVisible: () => !!this.currentEditor\n        });\n        commands.registerCommand(TypeScriptCommands.openServerLog, {\n            execute: () => this.openServerLog(),\n            isEnabled: () => !!this.clientContribution.logFileUri,\n            isVisible: () => !!this.clientContribution.logFileUri\n        });\n        commands.registerCommand(TypeScriptCommands.selectVersion, {\n            execute: () => this.selectVersion()\n        });\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction([...EDITOR_CONTEXT_MENU, '1_modification'], {\n            commandId: TypeScriptCommands.organizeImports.id,\n            label: 'Organize Imports'\n        });\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        keybindings.registerKeybinding({\n            command: TypeScriptCommands.organizeImports.id,\n            context: TypeScriptKeybindingContexts.typescriptEditorTextFocus,\n            keybinding: 'shift+alt+o'\n        });\n    }\n\n    openServerLog(): void {\n        const logFileUri = this.clientContribution.logFileUri;\n        if (logFileUri) {\n            this.editorManager.open(logFileUri);\n        }\n    }\n\n    organizeImports(): void {\n        const editor = MonacoEditor.get(this.currentEditor);\n        if (editor) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const action = editor.getControl().getAction('editor.action.organizeImports') as any;\n            // workaround isSupported check\n            action._run();\n        }\n    }\n\n    get currentEditor(): EditorWidget | undefined {\n        const { currentEditor } = this.editorManager;\n        if (currentEditor && currentEditor.editor.document.languageId === TYPESCRIPT_LANGUAGE_ID) {\n            return currentEditor;\n        }\n        return undefined;\n    }\n\n    protected pickCodeAction(codeActions: tsp.CodeAction[]): Promise<tsp.CodeAction | undefined> {\n        return this.quickPickService.show<tsp.CodeAction>(codeActions.map(value => ({\n            label: value.description,\n            value\n        }), {\n            placeholder: 'Select code action to apply'\n        }));\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async applyCodeAction(codeAction: tsp.CodeAction): Promise<any> {\n        const client = await this.clientContribution.languageClient;\n        return client.sendRequest(ExecuteCommandRequest.type, {\n            command: Commands.APPLY_CODE_ACTION,\n            arguments: [codeAction]\n        });\n    }\n\n    protected async renameFile({ sourceUri, targetUri }: FileMoveEvent): Promise<void> {\n        const client = await this.clientContribution.languageClient;\n        return client.sendRequest(ExecuteCommandRequest.type, {\n            command: Commands.APPLY_RENAME_FILE,\n            arguments: [{\n                sourceUri: sourceUri.toString(),\n                targetUri: targetUri.toString()\n            }]\n        });\n    }\n\n    protected async selectVersion(): Promise<void> {\n        const items: QuickPickItem<TypescriptVersion>[] = [];\n        const currentVersion = this.clientContribution.version;\n        let currentItem: QuickPickItem<TypescriptVersion> | undefined;\n        for (const version of await this.clientContribution.getVersions()) {\n            const item: QuickPickItem<TypescriptVersion> = {\n                label: `Use ${version.qualifier} Version`,\n                description: version.version,\n                detail: this.labelProvider.getLongName(new URI(version.uri)),\n                value: version\n            };\n            if (!currentItem && TypescriptVersion.equals(version, currentVersion)) {\n                currentItem = item;\n            }\n            items.push(item);\n        }\n        if (!currentItem) {\n            currentItem = items[0];\n        }\n        if (currentItem) {\n            currentItem.label = '• ' + currentItem.label;\n        }\n        const selectedVersion = await this.quickPickService.show(items, {\n            placeholder: 'Select the TypeScript version used for JavaScript and TypeScript language features'\n        });\n        if (selectedVersion) {\n            this.clientContribution.setVersion(selectedVersion);\n        }\n    }\n\n    protected storageKey = 'typescript.contribution';\n    protected async restore(): Promise<void> {\n        const data = await this.storage.getData<TypescriptContributionData>(this.storageKey);\n        await this.clientContribution.restore(data);\n    }\n    protected async store(): Promise<void> {\n        const data = this.clientContribution.store();\n        await this.storage.setData(this.storageKey, data);\n    }\n\n    protected readonly toDisposeOnCurrentEditorChanged = new DisposableCollection();\n    protected updateStatusBar(): void {\n        this.toDisposeOnCurrentEditorChanged.dispose();\n\n        const widget = this.editorManager.currentEditor;\n        const editor = widget && widget.editor;\n        this.updateVersionStatus(editor);\n        if (editor) {\n            this.toDisposeOnCurrentEditorChanged.push(\n                editor.onLanguageChanged(() => this.updateVersionStatus(editor))\n            );\n        }\n    }\n    protected updateVersionStatus(editor: TextEditor | undefined): void {\n        const version = this.clientContribution.version;\n        const languageId = editor && editor.document.languageId;\n        if (!languageId || !TS_JS_LANGUAGES.has(languageId) || !version) {\n            this.statusBar.removeElement('editor-ts-version');\n            return;\n        }\n        this.statusBar.setElement('editor-ts-version', {\n            text: version.version,\n            alignment: StatusBarAlignment.RIGHT,\n            priority: 0.9,\n            command: TypeScriptCommands.selectVersion.id\n        });\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox, Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from 'inversify';\nimport { CommandContribution, MenuContribution } from '@theia/core/lib/common';\nimport { KeybindingContext, KeybindingContribution, WebSocketConnectionProvider, FrontendApplicationContribution } from '@theia/core/lib/browser';\nimport { LanguageClientContribution } from '@theia/languages/lib/browser';\nimport { CallHierarchyService } from '@theia/callhierarchy/lib/browser';\nimport { TypeScriptClientContribution } from './typescript-client-contribution';\nimport { TypeScriptCallHierarchyService } from './typescript-callhierarchy-service';\nimport { TypeScriptFrontendContribution } from './typescript-frontend-contribution';\nimport { TypeScriptEditorTextFocusContext } from './typescript-keybinding-contexts';\nimport { bindTypescriptPreferences } from './typescript-preferences';\nimport { TypescriptVersionService, typescriptVersionPath } from '../common/typescript-version-service';\n\nexport default new ContainerModule(bind => {\n    bindTypescriptPreferences(bind);\n\n    bind(TypescriptVersionService).toDynamicValue(({ container }) =>\n        WebSocketConnectionProvider.createProxy(container, typescriptVersionPath)\n    ).inSingletonScope();\n    bind(TypeScriptClientContribution).toSelf().inSingletonScope();\n    bind(LanguageClientContribution).toService(TypeScriptClientContribution);\n\n    bind(TypeScriptCallHierarchyService).toSelf().inSingletonScope();\n    bind(CallHierarchyService).toService(TypeScriptCallHierarchyService);\n\n    bind(TypeScriptFrontendContribution).toSelf().inSingletonScope();\n    bind(CommandContribution).toService(TypeScriptFrontendContribution);\n    bind(MenuContribution).toService(TypeScriptFrontendContribution);\n    bind(KeybindingContribution).toService(TypeScriptFrontendContribution);\n    bind(FrontendApplicationContribution).toService(TypeScriptFrontendContribution);\n\n    bind(KeybindingContext).to(TypeScriptEditorTextFocusContext).inSingletonScope();\n});\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { EditorTextFocusContext, EditorWidget } from '@theia/editor/lib/browser';\nimport { TYPESCRIPT_LANGUAGE_ID } from '../common';\n\nexport namespace TypeScriptKeybindingContexts {\n    export const typescriptEditorTextFocus = 'typescriptEditorTextFocus';\n}\n\n@injectable()\nexport class TypeScriptEditorTextFocusContext extends EditorTextFocusContext {\n\n    readonly id: string = TypeScriptKeybindingContexts.typescriptEditorTextFocus;\n\n    protected canHandle(widget: EditorWidget): boolean {\n        return super.canHandle(widget) && widget.editor.document.languageId === TYPESCRIPT_LANGUAGE_ID;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport {\n    createPreferenceProxy,\n    PreferenceProxy,\n    PreferenceService,\n    PreferenceContribution,\n    PreferenceSchema,\n    PreferenceChangeEvent\n} from '@theia/core/lib/browser/preferences';\n\nexport const typescriptPreferenceSchema: PreferenceSchema = {\n    'type': 'object',\n    'properties': {\n        'typescript.server.log': {\n            'type': 'string',\n            'enum': [\n                'off',\n                'terse',\n                'normal',\n                'verbose'\n            ],\n            'default': 'off',\n            // eslint-disable-next-line max-len\n            'description': 'Enables logging of the TS server to a file. This log can be used to diagnose TS Server issues. The log may contain file paths, source code, and other potentially sensitive information from your project.'\n        },\n        'typescript.tsdk': {\n            'type': [\n                'string',\n                'null'\n            ],\n            // eslint-disable-next-line no-null/no-null\n            'default': null,\n            'description': 'Specifies the folder path containing the tsserver and lib*.d.ts files to use.',\n            'scope': 'window'\n        }\n    }\n};\n\nexport interface TypescriptConfiguration {\n    'typescript.server.log': 'off' | 'terse' | 'normal' | 'verbose'\n    'typescript.tsdk'?: string\n}\nexport type TypescriptPreferenceChange = PreferenceChangeEvent<TypescriptConfiguration>;\n\nexport const TypescriptPreferences = Symbol('TypescriptPreferences');\nexport type TypescriptPreferences = PreferenceProxy<TypescriptConfiguration>;\n\nexport function createTypescriptPreferences(preferences: PreferenceService): TypescriptPreferences {\n    return createPreferenceProxy(preferences, typescriptPreferenceSchema);\n}\n\nexport function bindTypescriptPreferences(bind: interfaces.Bind): void {\n    bind(TypescriptPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        return createTypescriptPreferences(preferences);\n    }).inSingletonScope();\n\n    bind(PreferenceContribution).toConstantValue({ schema: typescriptPreferenceSchema });\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { TypescriptVersion } from './typescript-version-service';\n\nexport const TYPESCRIPT_LANGUAGE_ID = 'typescript';\nexport const TYPESCRIPT_LANGUAGE_NAME = 'TypeScript';\n\nexport const TYPESCRIPT_REACT_LANGUAGE_ID = 'typescriptreact';\nexport const TYPESCRIPT_REACT_LANGUAGE_NAME = 'TypeScript React';\n\nexport const JAVASCRIPT_LANGUAGE_ID = 'javascript';\nexport const JAVASCRIPT_LANGUAGE_NAME = 'JavaScript';\n\nexport const JAVASCRIPT_REACT_LANGUAGE_ID = 'javascriptreact';\nexport const JAVASCRIPT_REACT_LANGUAGE_NAME = 'JavaScript React';\n\nexport const JSX_TAGS_LANGUAGE_ID = 'jsx-tags';\n\nexport const TS_JS_LANGUAGES = new Set([\n    TYPESCRIPT_LANGUAGE_ID,\n    TYPESCRIPT_REACT_LANGUAGE_ID,\n    JAVASCRIPT_LANGUAGE_ID,\n    JAVASCRIPT_REACT_LANGUAGE_ID,\n    JSX_TAGS_LANGUAGE_ID\n]);\n\nexport interface TypescriptStartParams {\n    version?: TypescriptVersion\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport const typescriptVersionPath = '/services/ts-version';\n\nexport type TypescriptVersionQualifier = 'Bundled' | 'Workspace';\nexport interface TypescriptVersion {\n    uri: string\n    version: string\n    qualifier: TypescriptVersionQualifier\n}\nexport namespace TypescriptVersion {\n    export function equals(one: TypescriptVersion | undefined, another: TypescriptVersion | undefined): boolean {\n        return JSON.stringify({ version: one }) === JSON.stringify({ version: another });\n    }\n}\n\nexport interface TypescriptVersionOptions {\n    workspaceFolders: string[]\n    localTsdk?: string\n}\n\nexport const TypescriptVersionService = Symbol('TypescriptVersionService');\nexport interface TypescriptVersionService {\n    getVersions(options: TypescriptVersionOptions): Promise<TypescriptVersion[]>\n}\n",null],"sourceRoot":""}
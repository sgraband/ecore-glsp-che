{"version":3,"sources":["webpack:///../node_modules/@eclipse-glsp/theia-integration/css/command-palette.css?59fd","webpack:///../node_modules/@eclipse-glsp/theia-integration/src/browser/diagram/glsp-diagram-client.ts","webpack:///../node_modules/@eclipse-glsp/theia-integration/src/browser/diagram/glsp-diagram-manager.ts","webpack:///../node_modules/@eclipse-glsp/theia-integration/src/browser/diagram/glsp-diagram-widget.ts","webpack:///../node_modules/@eclipse-glsp/theia-integration/src/browser/diagram/glsp-theia-diagram-server.ts","webpack:///../node_modules/@eclipse-glsp/theia-integration/src/browser/index.ts","webpack:///../node_modules/@eclipse-glsp/theia-integration/src/browser/theia-command-palette.ts","webpack:///../node_modules/@eclipse-glsp/theia-integration/css/command-palette.css","webpack:///../node_modules/sprotty/css/edit-label.css","webpack:///../node_modules/sprotty/css/edit-label.css?5ceb"],"names":[],"mappings":"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","file":"31.bundle.js","sourcesContent":["\nvar content = require(\"!!../../../css-loader/index.js!./command-palette.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../css-loader/index.js!./command-palette.css\", function() {\n\t\tvar newContent = require(\"!!../../../css-loader/index.js!./command-palette.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { CommandRegistry } from \"@theia/core\";\nimport { ApplicationShell } from \"@theia/core/lib/browser\";\nimport { EditorManager } from \"@theia/editor/lib/browser\";\nimport { inject, injectable } from \"inversify\";\nimport { ActionMessage } from \"sprotty\";\nimport { ActionMessageReceiver } from \"sprotty-theia/lib/theia/languageserver/diagram-language-client\";\n\nimport { ActionMessageNotification } from \"../../common\";\nimport { GLSPClientContribution } from \"../language/glsp-client-contribution\";\nimport { GLSPClient } from \"../language/glsp-client-services\";\n\n@injectable()\nexport class GLSPDiagramClient {\n\n    actionMessageReceivers: ActionMessageReceiver[] = [];\n\n    @inject(ApplicationShell) readonly shell: ApplicationShell;\n    @inject(CommandRegistry) readonly commandsRegistry: CommandRegistry;\n\n    constructor(readonly glspClientContribution: GLSPClientContribution,\n        readonly editorManager: EditorManager) {\n        this.glspClientContribution.glspClient\n            .then(gc => gc.onNotification(ActionMessageNotification.type, this.onMessageReceived.bind(this)))\n            .catch(err => console.error(err));\n    }\n\n    sendThroughLsp(message: ActionMessage) {\n        this.glspClientContribution.glspClient\n            .then(gc => gc.onReady()\n                .then(() => gc.sendNotification(ActionMessageNotification.type, message)));\n    }\n\n    onMessageReceived(message: ActionMessage) {\n        this.actionMessageReceivers.forEach(client => client.onMessageReceived(message));\n    }\n\n    get glspClient(): Promise<GLSPClient> {\n        return this.glspClientContribution.glspClient;\n    }\n\n    didClose(clientId: string) {\n        // this.glspClient.then(gc => gc.stop())\n    }\n\n    connect(client: ActionMessageReceiver) {\n        this.actionMessageReceivers.push(client);\n    }\n\n    disconnect(client: ActionMessageReceiver) {\n        const index = this.actionMessageReceivers.indexOf(client);\n        if (index >= 0) {\n            this.actionMessageReceivers.splice(index);\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { WidgetOpenerOptions } from \"@theia/core/lib/browser\";\nimport URI from \"@theia/core/lib/common/uri\";\nimport { EditorPreferences } from \"@theia/editor/lib/browser\";\nimport { inject, injectable } from \"inversify\";\nimport { DiagramManager, DiagramWidget, DiagramWidgetOptions } from \"sprotty-theia\";\n\nimport { GLSPDiagramWidget } from \"./glsp-diagram-widget\";\nimport { GLSPTheiaSprottyConnector } from \"./glsp-theia-sprotty-connector\";\n\n@injectable()\nexport abstract class GLSPDiagramManager extends DiagramManager {\n    @inject(EditorPreferences)\n    protected readonly editorPreferences: EditorPreferences;\n    abstract get fileExtensions(): string[];\n\n    async createWidget(options?: any): Promise<DiagramWidget> {\n        if (DiagramWidgetOptions.is(options)) {\n            const clientId = this.createClientId();\n            const config = this.diagramConfigurationRegistry.get(options.diagramType);\n            const diContainer = config.createContainer(clientId);\n            return new GLSPDiagramWidget(options, clientId + '_widget', diContainer, this.editorPreferences, this.diagramConnector);\n        }\n        throw Error('DiagramWidgetFactory needs DiagramWidgetOptions but got ' + JSON.stringify(options));\n    }\n\n    canHandle(uri: URI, options?: WidgetOpenerOptions | undefined): number {\n        for (const extension of this.fileExtensions) {\n            if (uri.path.toString().endsWith(extension)) {\n                return 1001;\n            }\n        }\n        return 0;\n    }\n\n    get diagramConnector(): GLSPTheiaSprottyConnector | undefined {\n        return undefined;\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport {\n    DiagramServer,\n    EnableToolPaletteAction,\n    GLSP_TYPES,\n    IActionDispatcher,\n    ICopyPasteHandler,\n    ModelSource,\n    RequestModelAction,\n    RequestTypeHintsAction,\n    SaveModelAction,\n    TYPES\n} from \"@eclipse-glsp/client\";\nimport { Message } from \"@phosphor/messaging/lib\";\nimport { Saveable, SaveableSource } from \"@theia/core/lib/browser\";\nimport { Disposable, DisposableCollection, Emitter, Event, MaybePromise } from \"@theia/core/lib/common\";\nimport { EditorPreferences } from \"@theia/editor/lib/browser\";\nimport { Container } from \"inversify\";\nimport { DiagramWidget, DiagramWidgetOptions, TheiaSprottyConnector } from \"sprotty-theia\";\n\nimport { DirtyStateNotifier, GLSPTheiaDiagramServer } from \"./glsp-theia-diagram-server\";\n\nexport class GLSPDiagramWidget extends DiagramWidget implements SaveableSource {\n\n    protected copyPasteHandler?: ICopyPasteHandler;\n    saveable = new SaveableGLSPModelSource(this.actionDispatcher, this.diContainer.get<ModelSource>(TYPES.ModelSource));\n\n    constructor(options: DiagramWidgetOptions, readonly widgetId: string, readonly diContainer: Container,\n        readonly editorPreferences: EditorPreferences, readonly connector?: TheiaSprottyConnector) {\n        super(options, widgetId, diContainer, connector);\n        this.updateSaveable();\n        const prefUpdater = editorPreferences.onPreferenceChanged(() => this.updateSaveable());\n        this.toDispose.push(prefUpdater);\n        this.toDispose.push(this.saveable);\n    }\n\n    protected updateSaveable() {\n        this.saveable.autoSave = this.editorPreferences['editor.autoSave'];\n        this.saveable.autoSaveDelay = this.editorPreferences['editor.autoSaveDelay'];\n    }\n\n    protected initializeSprotty() {\n        const modelSource = this.diContainer.get<ModelSource>(TYPES.ModelSource);\n        if (modelSource instanceof DiagramServer)\n            modelSource.clientId = this.id;\n        if (modelSource instanceof GLSPTheiaDiagramServer && this.connector)\n            this.connector.connect(modelSource);\n\n        this.disposed.connect(() => {\n            if (modelSource instanceof GLSPTheiaDiagramServer && this.connector)\n                this.connector.disconnect(modelSource);\n        });\n\n        this.actionDispatcher.dispatch(new RequestModelAction({\n            sourceUri: this.options.uri.replace(\"file://\", \"\"),\n            needsClientLayout: `${this.viewerOptions.needsClientLayout}`,\n            ...this.options\n        }));\n        this.actionDispatcher.dispatch(new RequestTypeHintsAction(this.options.diagramType));\n        this.actionDispatcher.dispatch(new EnableToolPaletteAction());\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        if (this.diContainer.isBound(GLSP_TYPES.ICopyPasteHandler)) {\n            this.copyPasteHandler = this.diContainer.get<ICopyPasteHandler>(GLSP_TYPES.ICopyPasteHandler);\n            this.addClipboardListener(this.node, 'copy', e => this.handleCopy(e));\n            this.addClipboardListener(this.node, 'paste', e => this.handlePaste(e));\n            this.addClipboardListener(this.node, 'cut', e => this.handleCut(e));\n        }\n    }\n\n    handleCopy(e: ClipboardEvent) {\n        if (this.copyPasteHandler) {\n            this.copyPasteHandler.handleCopy(e);\n        }\n    }\n\n    handleCut(e: ClipboardEvent) {\n        if (this.copyPasteHandler) {\n            this.copyPasteHandler.handleCut(e);\n        }\n    }\n\n    handlePaste(e: ClipboardEvent) {\n        if (this.copyPasteHandler) {\n            this.copyPasteHandler.handlePaste(e);\n        }\n    }\n}\n\nexport class SaveableGLSPModelSource implements Saveable, Disposable {\n    isAutoSave: \"on\" | \"off\" = \"on\";\n    autoSaveDelay: number = 500;\n\n    private autoSaveJobs = new DisposableCollection();\n    private isDirty: boolean = false;\n    readonly dirtyChangedEmitter: Emitter<void> = new Emitter<void>();\n\n    constructor(readonly actionDispatcher: IActionDispatcher, readonly modelSource: ModelSource) {\n        if (DirtyStateNotifier.is(this.modelSource)) {\n            this.modelSource.onDirtyStateChange((dirtyState) => this.dirty = dirtyState.isDirty);\n        }\n    }\n\n    get onDirtyChanged(): Event<void> {\n        return this.dirtyChangedEmitter.event;\n    }\n\n    save(): MaybePromise<void> {\n        return this.actionDispatcher.dispatch(new SaveModelAction());\n    }\n\n    get dirty(): boolean {\n        return this.isDirty;\n    }\n\n    set dirty(newDirty: boolean) {\n        const oldValue = this.isDirty;\n        if (oldValue !== newDirty) {\n            this.isDirty = newDirty;\n            this.dirtyChangedEmitter.fire(undefined);\n        }\n        this.scheduleAutoSave();\n    }\n\n    set autoSave(isAutoSave: \"on\" | \"off\") {\n        this.isAutoSave = isAutoSave;\n        if (this.shouldAutoSave) {\n            this.scheduleAutoSave();\n        } else {\n            this.autoSaveJobs.dispose();\n        }\n    }\n\n    get autoSave(): \"on\" | \"off\" {\n        return this.isAutoSave;\n    }\n\n    protected scheduleAutoSave() {\n        if (this.shouldAutoSave) {\n            this.autoSaveJobs.dispose();\n            const autoSaveJob = window.setTimeout(() => this.doAutoSave(), this.autoSaveDelay);\n            const disposableAutoSaveJob = Disposable.create(() => window.clearTimeout(autoSaveJob));\n            this.autoSaveJobs.push(disposableAutoSaveJob);\n        }\n    }\n\n    protected doAutoSave() {\n        if (this.shouldAutoSave) {\n            this.save();\n        }\n    }\n\n    protected get shouldAutoSave(): boolean {\n        return this.dirty && this.autoSave === 'on';\n    }\n\n    dispose(): void {\n        this.autoSaveJobs.dispose();\n        this.dirtyChangedEmitter.dispose();\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport {\n    Action,\n    ActionHandlerRegistry,\n    ComputedBoundsAction,\n    isServerMessageAction,\n    ModelSource,\n    registerDefaultGLSPServerActions,\n    ServerMessageAction\n} from \"@eclipse-glsp/client\";\nimport { Emitter, Event } from \"@theia/core/lib/common\";\nimport { injectable } from \"inversify\";\nimport { TheiaDiagramServer } from \"sprotty-theia\";\n\nimport { GLSPTheiaSprottyConnector } from \"./glsp-theia-sprotty-connector\";\n\n@injectable()\nexport class GLSPTheiaDiagramServer extends TheiaDiagramServer implements NotifyingModelSource, DirtyStateNotifier {\n\n    readonly handledActionEventEmitter: Emitter<Action> = new Emitter<Action>();\n    readonly dirtyStateChangeEmitter: Emitter<DirtyState> = new Emitter<DirtyState>();\n\n    protected dirtyState: DirtyState = { isDirty: false };\n\n    initialize(registry: ActionHandlerRegistry): void {\n        registry.register(SetDirtyStateAction.KIND, this);\n        registry.register(ServerMessageAction.KIND, this);\n        registerDefaultGLSPServerActions(registry, this);\n    }\n\n    public getSourceURI(): string {\n        return this.sourceUri;\n    }\n\n    get onHandledAction(): Event<Action> {\n        return this.handledActionEventEmitter.event;\n    }\n\n    get onDirtyStateChange(): Event<DirtyState> {\n        return this.dirtyStateChangeEmitter.event;\n    }\n\n    protected setDirty(dirty: boolean) {\n        if (dirty !== this.dirtyState.isDirty) {\n            this.dirtyState = { isDirty: dirty };\n            this.dirtyStateChangeEmitter.fire(this.dirtyState);\n        }\n    }\n\n    handle(action: Action) {\n        this.handledActionEventEmitter.fire(action);\n        return super.handle(action);\n    }\n\n    handleLocally(action: Action): boolean {\n        if (isSetDirtyStateAction(action)) {\n            this.setDirty(action.isDirty);\n            return false;\n        }\n        if (isServerMessageAction(action)) {\n            return this.handleServerMessageAction(action);\n        }\n        return super.handleLocally(action);\n    }\n\n    protected handleComputedBounds(action: ComputedBoundsAction): boolean {\n        return true;\n    }\n\n    protected handleServerMessageAction(status: ServerMessageAction): boolean {\n        (<GLSPTheiaSprottyConnector>this.connector).showMessage(this.clientId, status);\n        return false;\n    }\n}\n\nexport interface NotifyingModelSource extends ModelSource {\n    readonly onHandledAction: Event<Action>;\n}\n\nexport namespace NotifyingModelSource {\n    export function is(arg: any): arg is NotifyingModelSource {\n        return !!arg && ('onHandledAction' in arg);\n    }\n}\n\nexport class SetDirtyStateAction implements Action {\n    static readonly KIND = 'setDirtyState';\n    readonly kind = SetDirtyStateAction.KIND;\n    constructor(public isDirty: boolean) { }\n}\n\nexport function isSetDirtyStateAction(action: Action): action is SetDirtyStateAction {\n    return SetDirtyStateAction.KIND === action.kind && ('isDirty' in action);\n}\n\nexport interface DirtyState {\n    isDirty: boolean;\n}\n\nexport interface DirtyStateNotifier {\n    readonly onDirtyStateChange: Event<DirtyState>;\n}\n\nexport namespace DirtyStateNotifier {\n    export function is(arg: any): arg is DirtyStateNotifier {\n        return !!arg && ('onDirtyStateChange' in arg);\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './theia-command-palette';\n// diagram export\nexport * from './diagram/glsp-diagram-client';\nexport * from './diagram/glsp-diagram-manager';\nexport * from './diagram/glsp-diagram-widget';\nexport * from './diagram/glsp-theia-diagram-server';\nexport * from './diagram/glsp-theia-sprotty-connector';\nexport * from './diagram/glsp-notification-manager';\nexport * from './diagram/glsp-theia-context-menu-service';\n// language export\nexport * from './language/glsp-client';\nexport * from './language/glsp-client-contribution';\nexport * from './language/glsp-client-provider';\nexport * from './language/glsp-client-services';\nexport * from './language/glsp-frontend-contribution';\n\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport \"../../css/command-palette.css\";\n\nimport { CommandPalette } from \"sprotty\";\n\nexport class TheiaCommandPalette extends CommandPalette {\n    protected loadingIndicatorClasses = ['loading', 'fa', 'fa-spinner', 'fa-pulse', 'fa-3x', 'fa-fw'];\n}\n","exports = module.exports = require(\"../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (c) 2019 EclipseSource and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.command-palette {\\n    z-index: var(--theia-menu-z-index);\\n    -webkit-animation: fadein 0.3s;\\n    -moz-animation: fadein 0.3s;\\n    -ms-animation: fadein 0.3s;\\n    -o-animation: fadein 0.3s;\\n    animation: fadein 0.3s;\\n}\\n\\n.command-palette.validation .validation-decorator {\\n    position: absolute;\\n    padding-left: 5px;\\n    padding-top: 5px;\\n    padding-bottom: 5px;\\n    border-radius: 5px 5px 0px 0px;\\n    color: white;\\n    /* indent second line for icon */\\n    padding-left: 25px;\\n    text-indent: -10px;\\n    /* let error decoration fade in */\\n    -webkit-animation: fadein 0.3s;\\n    -moz-animation: fadein 0.3s;\\n    -ms-animation: fadein 0.3s;\\n    -o-animation: fadein 0.3s;\\n    animation: fadein 0.3s;\\n}\\n\\n.command-palette.validation.error input, .command-palette.validation.error input:focus {\\n    color: var(--theia-inputValidation-errorForeground);\\n    outline-color: var(--theia-inputValidation-errorBorder);\\n}\\n\\n.command-palette.validation.error .validation-decorator.error {\\n    border: 1px solid var(--theia-inputValidation-errorBorder);\\n    background-color: var(--theia-inputValidation-errorBorder);\\n}\\n\\n.command-palette.validation.warning input, .command-palette.validation.warning input:focus {\\n    color: var(--theia-inputValidation-warningForeground);\\n    outline-color: var(--theia-inputValidation-warningBorder);\\n}\\n\\n.command-palette.validation.warning .validation-decorator.warning {\\n    border: 1px solid var(--theia-inputValidation-warningBorder);\\n    background-color: var(--theia-inputValidation-warningBorder);\\n}\\n\\n.command-palette {\\n    box-shadow: var(--theia-border-width) var(--theia-border-width) var(--theia-widget-shadow);\\n    background-color: var(--theia-menu-background);\\n}\\n\\n.command-palette input {\\n    background: var(--theia-input-background);\\n    color: var(--theia-input-foreground);\\n    border: var(--theia-border-width) solid var(--theia-input-border);\\n    font-family: var(--theia-ui-font-family);\\n    font-size: var(--theia-ui-font-size1);\\n    line-height: var(--theia-content-line-height);\\n    padding-left: 5px;\\n}\\n\\n.command-palette .command-palette-suggestions {\\n    background: inherit;\\n    line-height: var(--theia-content-line-height);\\n}\\n\\n.command-palette .command-palette-suggestions>div:hover:not(.group) {\\n    background: var(--theia-menubar-selectionBackground);\\n}\\n\\n.command-palette .command-palette-suggestions>div.selected {\\n    background: var(--theia-menu-selectionBackground);\\n    color: var(--theia-menu-selectionForeground);\\n}\\n\\n.command-palette .loading {\\n    position: absolute;\\n    font-size: inherit;\\n    top: 5px;\\n    right: 0;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (c) 2019-2020 EclipseSource and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.label-edit input, .label-edit textarea {\\n    background: rgba(255, 255, 255, 0.5);\\n    border-radius: 5px;\\n    border: 0;\\n    width: 99%;\\n    height: 99%;\\n}\\n\\n.label-edit input:focus, .label-edit textarea:focus {\\n    outline: none;\\n    outline-offset: 0px;\\n}\\n\\n.label-edit {\\n    border-left: 1px dotted gray;\\n}\\n\\n.label-edit.validation-warning {\\n    color: orange;\\n    border-left: 1px dotted orange;\\n}\\n\\n.label-edit.validation-error {\\n    color: red;\\n    border-left: 1px dotted red;\\n}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../css-loader/index.js!./edit-label.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../css-loader/index.js!./edit-label.css\", function() {\n\t\tvar newContent = require(\"!!../../css-loader/index.js!./edit-label.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}
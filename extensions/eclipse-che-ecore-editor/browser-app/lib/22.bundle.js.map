{"version":3,"sources":["webpack:///../node_modules/@theia/markers/src/browser/index.ts","webpack:///../node_modules/@theia/monaco/src/browser/monaco-configurations.ts","webpack:///../node_modules/@theia/monaco/src/browser/monaco-workspace.ts"],"names":[],"mappings":"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","file":"22.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './marker-manager';\nexport * from './problem/problem-manager';\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { JSONValue } from '@phosphor/coreutils';\nimport { Configurations, ConfigurationChangeEvent, WorkspaceConfiguration } from 'monaco-languageclient';\nimport { Event, Emitter } from '@theia/core/lib/common';\nimport { PreferenceService, PreferenceChanges, PreferenceSchemaProvider, createPreferenceProxy } from '@theia/core/lib/browser';\n\nexport interface MonacoConfigurationChangeEvent extends ConfigurationChangeEvent {\n    affectedSections?: string[]\n}\n\n@injectable()\nexport class MonacoConfigurations implements Configurations {\n\n    protected readonly onDidChangeConfigurationEmitter = new Emitter<MonacoConfigurationChangeEvent>();\n    readonly onDidChangeConfiguration: Event<MonacoConfigurationChangeEvent> = this.onDidChangeConfigurationEmitter.event;\n\n    @inject(PreferenceService)\n    protected readonly preferences: PreferenceService;\n\n    @inject(PreferenceSchemaProvider)\n    protected readonly preferenceSchemaProvider: PreferenceSchemaProvider;\n\n    @postConstruct()\n    protected init(): void {\n        this.reconcileData();\n        this.preferences.onPreferencesChanged(changes => this.reconcileData(changes));\n    }\n\n    protected reconcileData(changes?: PreferenceChanges): void {\n        this.onDidChangeConfigurationEmitter.fire({\n            affectedSections: MonacoConfigurations.parseSections(changes),\n            affectsConfiguration: section => this.affectsConfiguration(section, changes)\n        });\n    }\n\n    protected affectsConfiguration(section: string, changes?: PreferenceChanges): boolean {\n        if (!changes) {\n            return true;\n        }\n        for (const preferenceName in changes) {\n            if (section.startsWith(preferenceName) || preferenceName.startsWith(section)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    getConfiguration(section?: string, resource?: string): WorkspaceConfiguration {\n        return new MonacoWorkspaceConfiguration(this.preferences, this.preferenceSchemaProvider, section, resource);\n    }\n\n}\n\nexport namespace MonacoConfigurations {\n    export function parseSections(changes?: PreferenceChanges): string[] | undefined {\n        if (!changes) {\n            return undefined;\n        }\n        const sections = [];\n        for (let key of Object.keys(changes)) {\n            const hasOverride = key.startsWith('[');\n            while (key) {\n                sections.push(key);\n                if (hasOverride && key.indexOf('.') !== -1) {\n                    sections.push(key.substr(key.indexOf('.')));\n                }\n                const index = key.lastIndexOf('.');\n                key = key.substring(0, index);\n            }\n        }\n        return sections;\n    }\n}\n\nexport class MonacoWorkspaceConfiguration implements WorkspaceConfiguration {\n\n    constructor(\n        protected readonly preferences: PreferenceService,\n        protected readonly preferenceSchemaProvider: PreferenceSchemaProvider,\n        protected readonly section?: string,\n        protected readonly resource?: string\n    ) {\n    }\n\n    readonly [key: string]: any;\n\n    protected getSection(section: string): string {\n        if (this.section) {\n            return this.section + '.' + section;\n        }\n        return section;\n    }\n\n    has(section: string): boolean {\n        return this.preferences.inspect(this.getSection(section), this.resource) !== undefined;\n    }\n\n    get<T>(section: string, defaultValue?: T): T | undefined {\n        return this.preferences.get(this.getSection(section), defaultValue, this.resource);\n    }\n\n    toJSON(): JSONValue | undefined {\n        const proxy = createPreferenceProxy<{ [key: string]: any }>(this.preferences, this.preferenceSchemaProvider.getCombinedSchema(), {\n            resourceUri: this.resource,\n            style: 'deep'\n        });\n        if (this.section) {\n            return proxy[this.section];\n        }\n        return proxy;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable no-null/no-null */\n\nimport Uri from 'vscode-uri';\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { ProtocolToMonacoConverter, MonacoToProtocolConverter, testGlob } from 'monaco-languageclient';\nimport URI from '@theia/core/lib/common/uri';\nimport { DisposableCollection } from '@theia/core/lib/common';\nimport { FileSystem, FileStat, } from '@theia/filesystem/lib/common';\nimport { FileChangeType, FileSystemWatcher } from '@theia/filesystem/lib/browser';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { EditorManager, EditorOpenerOptions } from '@theia/editor/lib/browser';\nimport * as lang from '@theia/languages/lib/browser';\nimport { Emitter, TextDocumentWillSaveEvent, TextEdit } from '@theia/languages/lib/browser';\nimport { MonacoTextModelService } from './monaco-text-model-service';\nimport { WillSaveMonacoModelEvent, MonacoEditorModel, MonacoModelContentChangedEvent } from './monaco-editor-model';\nimport { MonacoEditor } from './monaco-editor';\nimport { MonacoConfigurations } from './monaco-configurations';\nimport { ProblemManager } from '@theia/markers/lib/browser';\nimport { MaybePromise } from '@theia/core/lib/common/types';\n\nexport interface MonacoDidChangeTextDocumentParams extends lang.DidChangeTextDocumentParams {\n    readonly textDocument: MonacoEditorModel;\n}\n\nexport interface MonacoTextDocumentWillSaveEvent extends TextDocumentWillSaveEvent {\n    readonly textDocument: MonacoEditorModel;\n}\n\n// Note: `newUri` and `oldUri` are both optional although it is mandatory in `monaco.languages.ResourceFileEdit`.\n// See: https://github.com/microsoft/monaco-editor/issues/1396\nexport interface ResourceEdit {\n    readonly newUri?: string;\n    readonly oldUri?: string;\n    readonly options?: {\n        readonly overwrite?: boolean;\n        readonly ignoreIfNotExists?: boolean;\n        readonly ignoreIfExists?: boolean;\n        readonly recursive?: boolean;\n    }\n}\n\nexport interface CreateResourceEdit extends ResourceEdit {\n    readonly newUri: string;\n}\nexport namespace CreateResourceEdit {\n    export function is(arg: Edit): arg is CreateResourceEdit {\n        return 'newUri' in arg\n            && typeof (arg as any).newUri === 'string' // eslint-disable-line @typescript-eslint/no-explicit-any\n            && (!('oldUri' in arg) || typeof (arg as any).oldUri === 'undefined'); // eslint-disable-line @typescript-eslint/no-explicit-any\n    }\n}\n\nexport interface DeleteResourceEdit extends ResourceEdit {\n    readonly oldUri: string;\n}\nexport namespace DeleteResourceEdit {\n    export function is(arg: Edit): arg is DeleteResourceEdit {\n        return 'oldUri' in arg\n            && typeof (arg as any).oldUri === 'string' // eslint-disable-line @typescript-eslint/no-explicit-any\n            && (!('newUri' in arg) || typeof (arg as any).newUri === 'undefined'); // eslint-disable-line @typescript-eslint/no-explicit-any\n    }\n}\n\nexport interface RenameResourceEdit extends ResourceEdit {\n    readonly newUri: string;\n    readonly oldUri: string;\n}\nexport namespace RenameResourceEdit {\n    export function is(arg: Edit): arg is RenameResourceEdit {\n        return 'oldUri' in arg\n            && typeof (arg as any).oldUri === 'string' // eslint-disable-line @typescript-eslint/no-explicit-any\n            && 'newUri' in arg\n            && typeof (arg as any).newUri === 'string'; // eslint-disable-line @typescript-eslint/no-explicit-any\n    }\n}\n\nexport interface TextEdits {\n    readonly uri: string\n    readonly version: number | undefined\n    readonly textEdits: monaco.languages.TextEdit[]\n}\nexport namespace TextEdits {\n    export function is(arg: Edit): arg is TextEdits {\n        return 'uri' in arg\n            && typeof (arg as any).uri === 'string'; // eslint-disable-line @typescript-eslint/no-explicit-any\n    }\n    export function isVersioned(arg: TextEdits): boolean {\n        return is(arg) && arg.version !== undefined;\n    }\n}\n\nexport interface EditsByEditor extends TextEdits {\n    readonly editor: MonacoEditor;\n}\nexport namespace EditsByEditor {\n    export function is(arg: Edit): arg is EditsByEditor {\n        return TextEdits.is(arg)\n            && 'editor' in arg\n            && (arg as any).editor instanceof MonacoEditor; // eslint-disable-line @typescript-eslint/no-explicit-any\n    }\n}\n\nexport type Edit = TextEdits | ResourceEdit;\n\nexport interface WorkspaceFoldersChangeEvent {\n    readonly added: WorkspaceFolder[];\n    readonly removed: WorkspaceFolder[];\n}\n\nexport interface WorkspaceFolder {\n    readonly uri: Uri;\n    readonly name: string;\n    readonly index: number;\n}\n\n@injectable()\nexport class MonacoWorkspace implements lang.Workspace {\n\n    readonly capabilities = {\n        applyEdit: true,\n        workspaceEdit: {\n            documentChanges: true\n        }\n    };\n\n    protected resolveReady: () => void;\n    readonly ready = new Promise<void>(resolve => {\n        this.resolveReady = resolve;\n    });\n\n    protected readonly onDidOpenTextDocumentEmitter = new Emitter<MonacoEditorModel>();\n    readonly onDidOpenTextDocument = this.onDidOpenTextDocumentEmitter.event;\n\n    protected readonly onDidCloseTextDocumentEmitter = new Emitter<MonacoEditorModel>();\n    readonly onDidCloseTextDocument = this.onDidCloseTextDocumentEmitter.event;\n\n    protected readonly onDidChangeTextDocumentEmitter = new Emitter<MonacoDidChangeTextDocumentParams>();\n    readonly onDidChangeTextDocument = this.onDidChangeTextDocumentEmitter.event;\n\n    protected readonly onWillSaveTextDocumentEmitter = new Emitter<MonacoTextDocumentWillSaveEvent>();\n    readonly onWillSaveTextDocument = this.onWillSaveTextDocumentEmitter.event;\n\n    protected readonly onDidSaveTextDocumentEmitter = new Emitter<MonacoEditorModel>();\n    readonly onDidSaveTextDocument = this.onDidSaveTextDocumentEmitter.event;\n\n    protected readonly onDidChangeWorkspaceFoldersEmitter = new Emitter<WorkspaceFoldersChangeEvent>();\n    readonly onDidChangeWorkspaceFolders = this.onDidChangeWorkspaceFoldersEmitter.event;\n\n    @inject(FileSystem)\n    protected readonly fileSystem: FileSystem;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    @inject(FileSystemWatcher)\n    protected readonly fileSystemWatcher: FileSystemWatcher;\n\n    @inject(MonacoTextModelService)\n    protected readonly textModelService: MonacoTextModelService;\n\n    @inject(MonacoToProtocolConverter)\n    protected readonly m2p: MonacoToProtocolConverter;\n\n    @inject(ProtocolToMonacoConverter)\n    protected readonly p2m: ProtocolToMonacoConverter;\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(MonacoConfigurations)\n    readonly configurations: MonacoConfigurations;\n\n    @inject(ProblemManager)\n    protected readonly problems: ProblemManager;\n\n    protected _workspaceFolders: WorkspaceFolder[] = [];\n    get workspaceFolders(): WorkspaceFolder[] {\n        return this._workspaceFolders;\n    }\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        const roots = await this.workspaceService.roots;\n        this.updateWorkspaceFolders(roots);\n        this.resolveReady();\n\n        this.workspaceService.onWorkspaceChanged(async newRootDirs => {\n            this.updateWorkspaceFolders(newRootDirs);\n        });\n\n        for (const model of this.textModelService.models) {\n            this.fireDidOpen(model);\n        }\n        this.textModelService.onDidCreate(model => this.fireDidOpen(model));\n    }\n\n    protected updateWorkspaceFolders(newRootDirs: FileStat[]): void {\n        const oldWorkspaceUris = this.workspaceFolders.map(folder => folder.uri.toString());\n        const newWorkspaceUris = newRootDirs.map(folder => folder.uri);\n        const added = newWorkspaceUris.filter(uri => oldWorkspaceUris.indexOf(uri) < 0).map((dir, index) => this.toWorkspaceFolder(dir, index));\n        const removed = oldWorkspaceUris.filter(uri => newWorkspaceUris.indexOf(uri) < 0).map((dir, index) => this.toWorkspaceFolder(dir, index));\n        this._workspaceFolders = newWorkspaceUris.map(this.toWorkspaceFolder);\n        this.onDidChangeWorkspaceFoldersEmitter.fire({ added, removed });\n    }\n\n    protected toWorkspaceFolder(uriString: string, index: number): WorkspaceFolder {\n        const uri = Uri.parse(uriString);\n        const path = uri.path;\n        return {\n            uri,\n            name: path.substring(path.lastIndexOf('/') + 1),\n            index\n        };\n    }\n\n    get rootUri(): string | null {\n        if (this._workspaceFolders.length > 0) {\n            return this._workspaceFolders[0].uri.toString();\n        } else {\n            return null;\n        }\n    }\n\n    get rootPath(): string | null {\n        if (this._workspaceFolders.length > 0) {\n            return new URI(this._workspaceFolders[0].uri).path.toString();\n        } else {\n            return null;\n        }\n    }\n\n    get textDocuments(): MonacoEditorModel[] {\n        return this.textModelService.models;\n    }\n\n    getTextDocument(uri: string): MonacoEditorModel | undefined {\n        return this.textModelService.get(uri);\n    }\n\n    protected fireDidOpen(model: MonacoEditorModel): void {\n        this.doFireDidOpen(model);\n        model.textEditorModel.onDidChangeLanguage(e => {\n            this.problems.cleanAllMarkers(new URI(model.uri));\n            model.setLanguageId(e.oldLanguage);\n            try {\n                this.fireDidClose(model);\n            } finally {\n                model.setLanguageId(undefined);\n            }\n            this.doFireDidOpen(model);\n        });\n        model.onDidChangeContent(event => this.fireDidChangeContent(event));\n        model.onDidSaveModel(() => this.fireDidSave(model));\n        model.onWillSaveModel(event => this.fireWillSave(event));\n        model.onDirtyChanged(() => this.openEditorIfDirty(model));\n        model.onDispose(() => this.fireDidClose(model));\n    }\n\n    protected doFireDidOpen(model: MonacoEditorModel): void {\n        this.onDidOpenTextDocumentEmitter.fire(model);\n    }\n\n    protected fireDidClose(model: MonacoEditorModel): void {\n        this.onDidCloseTextDocumentEmitter.fire(model);\n    }\n\n    protected fireDidChangeContent(event: MonacoModelContentChangedEvent): void {\n        const { model, contentChanges } = event;\n        this.onDidChangeTextDocumentEmitter.fire({\n            textDocument: model,\n            contentChanges\n        });\n    }\n\n    protected fireWillSave(event: WillSaveMonacoModelEvent): void {\n        const { reason } = event;\n        const timeout = new Promise<TextEdit[]>(resolve =>\n            setTimeout(() => resolve([]), 1000)\n        );\n        const resolveEdits = new Promise<TextEdit[]>(async resolve => {\n            const thenables: Thenable<TextEdit[]>[] = [];\n            const allEdits: TextEdit[] = [];\n\n            this.onWillSaveTextDocumentEmitter.fire({\n                textDocument: event.model,\n                reason,\n                waitUntil: thenable => {\n                    thenables.push(thenable);\n                }\n            });\n\n            for (const listenerEdits of await Promise.all(thenables)) {\n                allEdits.push(...listenerEdits);\n            }\n\n            resolve(allEdits);\n        });\n        event.waitUntil(\n            Promise.race([resolveEdits, timeout]).then(edits =>\n                this.p2m.asTextEdits(edits).map(edit => edit as monaco.editor.IIdentifiedSingleEditOperation)\n            )\n        );\n    }\n\n    protected fireDidSave(model: MonacoEditorModel): void {\n        this.onDidSaveTextDocumentEmitter.fire(model);\n    }\n\n    protected suppressedOpenIfDirty: MonacoEditorModel[] = [];\n\n    protected openEditorIfDirty(model: MonacoEditorModel): void {\n        if (this.suppressedOpenIfDirty.indexOf(model) !== -1) {\n            return;\n        }\n        if (model.dirty && MonacoEditor.findByDocument(this.editorManager, model).length === 0) {\n            // create a new reference to make sure the model is not disposed before it is\n            // acquired by the editor, thus losing the changes that made it dirty.\n            this.textModelService.createModelReference(model.textEditorModel.uri).then(ref => {\n                this.editorManager.open(new URI(model.uri), {\n                    mode: 'open',\n                }).then(editor => ref.dispose());\n            });\n        }\n    }\n\n    protected async suppressOpenIfDirty(model: MonacoEditorModel, cb: () => MaybePromise<void>): Promise<void> {\n        this.suppressedOpenIfDirty.push(model);\n        try {\n            await cb();\n        } finally {\n            const i = this.suppressedOpenIfDirty.indexOf(model);\n            if (i !== -1) {\n                this.suppressedOpenIfDirty.splice(i, 1);\n            }\n        }\n    }\n\n    createFileSystemWatcher(globPattern: string, ignoreCreateEvents?: boolean, ignoreChangeEvents?: boolean, ignoreDeleteEvents?: boolean): lang.FileSystemWatcher {\n        const disposables = new DisposableCollection();\n        const onDidCreateEmitter = new lang.Emitter<Uri>();\n        disposables.push(onDidCreateEmitter);\n        const onDidChangeEmitter = new lang.Emitter<Uri>();\n        disposables.push(onDidChangeEmitter);\n        const onDidDeleteEmitter = new lang.Emitter<Uri>();\n        disposables.push(onDidDeleteEmitter);\n        disposables.push(this.fileSystemWatcher.onFilesChanged(changes => {\n            for (const change of changes) {\n                const fileChangeType = change.type;\n                if (ignoreCreateEvents === true && fileChangeType === FileChangeType.ADDED) {\n                    continue;\n                }\n                if (ignoreChangeEvents === true && fileChangeType === FileChangeType.UPDATED) {\n                    continue;\n                }\n                if (ignoreDeleteEvents === true && fileChangeType === FileChangeType.DELETED) {\n                    continue;\n                }\n                const uri = change.uri.toString();\n                const codeUri = change.uri['codeUri'];\n                if (testGlob(globPattern, uri)) {\n                    if (fileChangeType === FileChangeType.ADDED) {\n                        onDidCreateEmitter.fire(codeUri);\n                    } else if (fileChangeType === FileChangeType.UPDATED) {\n                        onDidChangeEmitter.fire(codeUri);\n                    } else if (fileChangeType === FileChangeType.DELETED) {\n                        onDidDeleteEmitter.fire(codeUri);\n                    } else {\n                        throw new Error(`Unexpected file change type: ${fileChangeType}.`);\n                    }\n                }\n            }\n        }));\n        return {\n            onDidCreate: onDidCreateEmitter.event,\n            onDidChange: onDidChangeEmitter.event,\n            onDidDelete: onDidDeleteEmitter.event,\n            dispose: () => disposables.dispose()\n        };\n    }\n\n    /**\n     * Applies given edits to the given model.\n     * The model is saved if no editors is opened for it.\n     */\n    applyBackgroundEdit(model: MonacoEditorModel, editOperations: monaco.editor.IIdentifiedSingleEditOperation[]): Promise<void> {\n        return this.suppressOpenIfDirty(model, async () => {\n            const editor = MonacoEditor.findByDocument(this.editorManager, model)[0];\n            const cursorState = editor && editor.getControl().getSelections() || [];\n            model.textEditorModel.pushStackElement();\n            model.textEditorModel.pushEditOperations(cursorState, editOperations, () => cursorState);\n            model.textEditorModel.pushStackElement();\n            if (!editor) {\n                await model.save();\n            }\n        });\n    }\n\n    async applyEdit(changes: lang.WorkspaceEdit, options?: EditorOpenerOptions): Promise<boolean> {\n        const workspaceEdit = this.p2m.asWorkspaceEdit(changes);\n        await this.applyBulkEdit(workspaceEdit, options);\n        return true;\n    }\n\n    async applyBulkEdit(workspaceEdit: monaco.languages.WorkspaceEdit, options?: EditorOpenerOptions): Promise<monaco.editor.IBulkEditResult> {\n        try {\n            const unresolvedEdits = this.groupEdits(workspaceEdit);\n            const edits = await this.openEditors(unresolvedEdits, options);\n            this.checkVersions(edits);\n            let totalEdits = 0;\n            let totalFiles = 0;\n            for (const edit of edits) {\n                if (TextEdits.is(edit)) {\n                    const { editor } = (await this.toTextEditWithEditor(edit));\n                    const model = editor.document.textEditorModel;\n                    const currentSelections = editor.getControl().getSelections() || [];\n                    const editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = edit.textEdits.map(e => ({\n                        identifier: undefined,\n                        forceMoveMarkers: false,\n                        range: new monaco.Range(e.range.startLineNumber, e.range.startColumn, e.range.endLineNumber, e.range.endColumn),\n                        text: e.text\n                    }));\n                    // start a fresh operation\n                    model.pushStackElement();\n                    model.pushEditOperations(currentSelections, editOperations, (_: monaco.editor.IIdentifiedSingleEditOperation[]) => currentSelections);\n                    // push again to make this change an undoable operation\n                    model.pushStackElement();\n                    totalFiles += 1;\n                    totalEdits += editOperations.length;\n                } else if (CreateResourceEdit.is(edit) || DeleteResourceEdit.is(edit) || RenameResourceEdit.is(edit)) {\n                    await this.performResourceEdit(edit);\n                } else {\n                    throw new Error(`Unexpected edit type: ${JSON.stringify(edit)}`);\n                }\n            }\n            const ariaSummary = this.getAriaSummary(totalEdits, totalFiles);\n            return { ariaSummary };\n        } catch (e) {\n            const ariaSummary = `Error applying workspace edits: ${e.toString()}`;\n            console.error(ariaSummary);\n            return { ariaSummary };\n        }\n    }\n\n    protected async openEditors(edits: Edit[], options?: EditorOpenerOptions): Promise<Edit[]> {\n        const result = [];\n        for (const edit of edits) {\n            if (TextEdits.is(edit) && TextEdits.isVersioned(edit) && !EditsByEditor.is(edit)) {\n                result.push(await this.toTextEditWithEditor(edit, options));\n            } else {\n                result.push(edit);\n            }\n        }\n        return result;\n    }\n\n    protected async toTextEditWithEditor(textEdit: TextEdits, options?: EditorOpenerOptions): Promise<EditsByEditor> {\n        if (EditsByEditor.is(textEdit)) {\n            return textEdit;\n        }\n        const editorWidget = await this.editorManager.open(new URI(textEdit.uri), options);\n        const editor = MonacoEditor.get(editorWidget);\n        if (!editor) {\n            throw Error(`Could not open editor. URI: ${textEdit.uri}`);\n        }\n        const textEditWithEditor = { ...textEdit, editor };\n        return textEditWithEditor;\n    }\n\n    protected checkVersions(edits: Edit[]): void {\n        for (const textEdit of edits.filter(TextEdits.is).filter(TextEdits.isVersioned)) {\n            if (!EditsByEditor.is(textEdit)) {\n                throw Error(`Could not open editor for URI: ${textEdit.uri}.`);\n            }\n            const model = textEdit.editor.document.textEditorModel;\n            if (textEdit.version !== undefined && model.getVersionId() !== textEdit.version) {\n                throw Error(`Version conflict in editor. URI: ${textEdit.uri}`);\n            }\n        }\n    }\n\n    protected getAriaSummary(totalEdits: number, totalFiles: number): string {\n        if (totalEdits === 0) {\n            return 'Made no edits';\n        }\n        if (totalEdits > 1 && totalFiles > 1) {\n            return `Made ${totalEdits} text edits in ${totalFiles} files`;\n        }\n        return `Made ${totalEdits} text edits in one file`;\n    }\n\n    protected groupEdits(workspaceEdit: monaco.languages.WorkspaceEdit): Edit[] {\n        const map = new Map<string, TextEdits>();\n        const result = [];\n        for (const edit of workspaceEdit.edits) {\n            if (this.isResourceFileEdit(edit)) {\n                const resourceTextEdit = edit;\n                const uri = resourceTextEdit.resource.toString();\n                const version = resourceTextEdit.modelVersionId;\n                let editorEdit = map.get(uri);\n                if (!editorEdit) {\n                    editorEdit = {\n                        uri,\n                        version,\n                        textEdits: []\n                    };\n                    map.set(uri, editorEdit);\n                    result.push(editorEdit);\n                } else {\n                    if (editorEdit.version !== version) {\n                        throw Error(`Multiple versions for the same URI '${uri}' within the same workspace edit.`);\n                    }\n                }\n                editorEdit.textEdits.push(...resourceTextEdit.edits);\n            } else {\n                const { options } = edit;\n                const oldUri = !!edit.oldUri ? edit.oldUri.toString() : undefined;\n                const newUri = !!edit.newUri ? edit.newUri.toString() : undefined;\n                result.push({\n                    oldUri,\n                    newUri,\n                    options\n                });\n            }\n        }\n        return result;\n    }\n\n    protected async performResourceEdit(edit: CreateResourceEdit | RenameResourceEdit | DeleteResourceEdit): Promise<void> {\n        const options = edit.options || {};\n        if (RenameResourceEdit.is(edit)) {\n            // rename\n            if (options.overwrite === undefined && options.ignoreIfExists && await this.fileSystem.exists(edit.newUri)) {\n                return; // not overwriting, but ignoring, and the target file exists\n            }\n            await this.fileSystem.move(edit.oldUri, edit.newUri, { overwrite: options.overwrite });\n        } else if (DeleteResourceEdit.is(edit)) {\n            // delete file\n            if (!options.ignoreIfNotExists || await this.fileSystem.exists(edit.oldUri)) {\n                if (options.recursive === false) {\n                    console.warn(\"Ignored 'recursive': 'false' option. Deleting recursively.\");\n                }\n                await this.fileSystem.delete(edit.oldUri);\n            }\n        } else if (CreateResourceEdit.is(edit)) {\n            const exists = await this.fileSystem.exists(edit.newUri);\n            // create file\n            if (options.overwrite === undefined && options.ignoreIfExists && exists) {\n                return; // not overwriting, but ignoring, and the target file exists\n            }\n            if (exists && options.overwrite) {\n                const stat = await this.fileSystem.getFileStat(edit.newUri);\n                if (!stat) {\n                    throw new Error(`Cannot get file stat for the resource: ${edit.newUri}.`);\n                }\n                await this.fileSystem.setContent(stat, '');\n            } else {\n                await this.fileSystem.createFile(edit.newUri);\n            }\n        }\n    }\n\n    protected isResourceFileEdit(edit: monaco.languages.ResourceFileEdit | monaco.languages.ResourceTextEdit): edit is monaco.languages.ResourceTextEdit {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return 'resource' in edit && (edit as any).resource instanceof monaco.Uri;\n    }\n\n}\n"],"sourceRoot":""}
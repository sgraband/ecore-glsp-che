{"version":3,"sources":["webpack:///../node_modules/@theia/terminal/src/browser/base/terminal-service.ts","webpack:///../node_modules/@theia/terminal/src/browser/base/terminal-widget.ts","webpack:///../node_modules/@theia/terminal/src/browser/search/terminal-search-container.ts","webpack:///../node_modules/@theia/terminal/src/browser/search/terminal-search-widget.tsx","webpack:///../node_modules/@theia/terminal/src/browser/terminal-contribution.ts","webpack:///../node_modules/@theia/terminal/src/browser/terminal-copy-on-selection-handler.ts","webpack:///../node_modules/@theia/terminal/src/browser/terminal-frontend-contribution.ts","webpack:///../node_modules/@theia/terminal/src/browser/terminal-frontend-module.ts","webpack:///../node_modules/@theia/terminal/src/browser/terminal-keybinding-contexts.ts","webpack:///../node_modules/@theia/terminal/src/browser/terminal-linkmatcher-diff.ts","webpack:///../node_modules/@theia/terminal/src/browser/terminal-linkmatcher-files.ts","webpack:///../node_modules/@theia/terminal/src/browser/terminal-linkmatcher.ts","webpack:///../node_modules/@theia/terminal/src/browser/terminal-preferences.ts","webpack:///../node_modules/@theia/terminal/src/browser/terminal-quick-open-service.ts","webpack:///../node_modules/@theia/terminal/src/browser/terminal-theme-service.ts","webpack:///../node_modules/@theia/terminal/src/browser/terminal-widget-impl.ts","webpack:///../node_modules/@theia/terminal/src/common/base-terminal-protocol.ts","webpack:///../node_modules/@theia/terminal/src/common/shell-terminal-protocol.ts","webpack:///../node_modules/@theia/terminal/src/common/terminal-common-module.ts","webpack:///../node_modules/@theia/terminal/src/common/terminal-protocol.ts","webpack:///../node_modules/@theia/terminal/src/common/terminal-watcher.ts","webpack:///../node_modules/@theia/terminal/src/browser/style/terminal-search.css?cbc6","webpack:///../node_modules/@theia/terminal/src/browser/style/terminal.css?c760","webpack:///../node_modules/@theia/terminal/src/browser/style/terminal-search.css","webpack:///../node_modules/@theia/terminal/src/browser/style/terminal.css","webpack:///../node_modules/xterm/css/xterm.css","webpack:///FitAddon/webpack/universalModuleDefinition","webpack:///FitAddon/webpack/bootstrap","webpack:///FitAddon/src/FitAddon.ts","webpack:///SearchAddon/webpack/universalModuleDefinition","webpack:///SearchAddon/webpack/bootstrap","webpack:///SearchAddon/src/SearchAddon.ts","webpack:///../node_modules/xterm/css/xterm.css?2f2a","webpack:////webpack/universalModuleDefinition","webpack:////webpack/bootstrap","webpack:////src/common/services/Services.ts","webpack:////src/common/EventEmitter.ts","webpack:////src/common/Lifecycle.ts","webpack:////src/common/buffer/Constants.ts","webpack:////src/browser/services/Services.ts","webpack:////src/common/buffer/CellData.ts","webpack:////src/common/buffer/AttributeData.ts","webpack:////src/common/input/TextDecoder.ts","webpack:////src/browser/Lifecycle.ts","webpack:////src/browser/renderer/atlas/Constants.ts","webpack:////src/browser/Color.ts","webpack:////src/common/Platform.ts","webpack:////src/common/data/EscapeSequences.ts","webpack:////src/browser/renderer/BaseRenderLayer.ts","webpack:////src/common/services/ServiceRegistry.ts","webpack:////src/common/TypedArrayUtils.ts","webpack:////src/common/buffer/BufferLine.ts","webpack:////src/browser/LocalizableStrings.ts","webpack:////src/common/data/Charsets.ts","webpack:////src/common/parser/Params.ts","webpack:////src/common/parser/OscParser.ts","webpack:////src/common/parser/Constants.ts","webpack:////src/common/parser/DcsParser.ts","webpack:////src/browser/renderer/atlas/CharAtlasCache.ts","webpack:////src/browser/renderer/atlas/CharAtlasUtils.ts","webpack:////src/browser/ColorManager.ts","webpack:////src/browser/renderer/RendererUtils.ts","webpack:////src/browser/renderer/CharacterJoinerRegistry.ts","webpack:////src/browser/input/Mouse.ts","webpack:////src/browser/RenderDebouncer.ts","webpack:////src/browser/ScreenDprMonitor.ts","webpack:////src/common/Clone.ts","webpack:////src/public/Terminal.ts","webpack:////src/Terminal.ts","webpack:////src/browser/input/CompositionHelper.ts","webpack:////src/browser/Viewport.ts","webpack:////src/browser/Clipboard.ts","webpack:////src/InputHandler.ts","webpack:////src/common/parser/EscapeSequenceParser.ts","webpack:////src/browser/renderer/Renderer.ts","webpack:////src/browser/renderer/TextRenderLayer.ts","webpack:////src/browser/renderer/GridCache.ts","webpack:////src/browser/renderer/atlas/DynamicCharAtlas.ts","webpack:////src/browser/renderer/atlas/BaseCharAtlas.ts","webpack:////src/browser/ColorContrastCache.ts","webpack:////src/browser/renderer/atlas/LRUMap.ts","webpack:////src/browser/renderer/SelectionRenderLayer.ts","webpack:////src/browser/renderer/CursorRenderLayer.ts","webpack:////src/browser/renderer/LinkRenderLayer.ts","webpack:////src/browser/Linkifier.ts","webpack:////src/browser/services/SelectionService.ts","webpack:////src/browser/selection/SelectionModel.ts","webpack:////src/browser/input/MoveToCell.ts","webpack:////src/browser/services/SoundService.ts","webpack:////src/browser/MouseZoneManager.ts","webpack:////src/AccessibilityManager.ts","webpack:////src/browser/renderer/dom/DomRenderer.ts","webpack:////src/browser/renderer/dom/DomRendererRowFactory.ts","webpack:////src/common/input/Keyboard.ts","webpack:////src/common/WindowsMode.ts","webpack:////src/browser/services/RenderService.ts","webpack:////src/common/services/OptionsService.ts","webpack:////src/browser/services/CharSizeService.ts","webpack:////src/common/services/BufferService.ts","webpack:////src/common/buffer/BufferSet.ts","webpack:////src/common/buffer/Buffer.ts","webpack:////src/common/CircularList.ts","webpack:////src/common/buffer/BufferReflow.ts","webpack:////src/common/buffer/Marker.ts","webpack:////src/browser/services/MouseService.ts","webpack:////src/common/services/CoreService.ts","webpack:////src/common/services/LogService.ts","webpack:////src/common/services/DirtyRowService.ts","webpack:////src/common/services/InstantiationService.ts","webpack:////src/common/services/CoreMouseService.ts","webpack:////src/common/input/WriteBuffer.ts","webpack:////src/browser/services/CoreBrowserService.ts","webpack:////src/common/services/UnicodeService.ts","webpack:////src/common/input/UnicodeV6.ts","webpack:////src/common/services/CharsetService.ts","webpack:////src/public/AddonManager.ts"],"names":["root","factory","module","exports","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","activate","terminal","this","_terminal","dispose","fit","dims","proposeDimensions","core","_core","rows","cols","_renderService","clear","resize","element","parentElement","parentElementStyle","getComputedStyle","parentElementHeight","parseInt","getPropertyValue","parentElementWidth","Math","max","elementStyle","availableHeight","availableWidth","viewport","scrollBarWidth","floor","dimensions","actualCellWidth","actualCellHeight","FitAddon","_linesCacheTimeoutId","findNext","term","searchOptions","Error","length","clearSelection","currentSelection","startCol","startRow","hasSelection","incremental","getSelectionPosition","endRow","startColumn","endColumn","_initLinesCache","searchPosition","result","_findInLine","y","buffer","baseY","_selectResult","findPrevious","row","col","_linesCache","Array","_cursorMoveListener","onCursorMove","_destroyLinesCache","_resizeListener","onResize","clearTimeout","setTimeout","undefined","_isWholeWord","searchIndex","line","indexOf","isReverseSearch","firstLine","getLine","isWrapped","stringLine","_translateBufferLineToStringWithWrap","searchTerm","caseSensitive","toLowerCase","searchStringLine","resultIndex","regex","searchRegex","RegExp","foundTerm","exec","slice","lastIndex","lastIndexOf","wholeWord","cell","getCell","char","getChars","getWidth","lineIndex","trimRight","lineWrapsToNext","lineString","nextLine","translateToString","substring","select","viewportY","scrollLines","SearchAddon","IBufferService","createDecorator","ICoreMouseService","ICoreService","ICharsetService","IDirtyRowService","IInstantiationService","ILogService","IOptionsService","IUnicodeService","_listeners","_disposed","_event","listener","push","splice","fire","arg1","arg2","queue","EventEmitter","_disposables","_isDisposed","forEach","register","unregister","index","Disposable","DEFAULT_COLOR","DEFAULT_ATTR","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CODE_INDEX","NULL_CELL_CHAR","NULL_CELL_WIDTH","NULL_CELL_CODE","WHITESPACE_CELL_CHAR","WHITESPACE_CELL_WIDTH","WHITESPACE_CELL_CODE","ICharSizeService","ICoreBrowserService","IMouseService","IRenderService","ISelectionService","ISoundService","content","fg","bg","combinedData","fromCharData","obj","CellData","setFromCharData","isCombined","stringFromCodePoint","getCode","charCodeAt","combined","code","second","getAsCharData","AttributeData","toColorRGB","fromColorRGB","clone","newObj","isInverse","isBold","isUnderline","isBlink","isInvisible","isItalic","isDim","getFgColorMode","getBgColorMode","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","getFgColor","getBgColor","codePoint","String","fromCharCode","data","start","end","codepoint","_interim","decode","input","target","size","startPos","StringToUtf32","interim","Uint8Array","fill","byte1","byte2","byte3","byte4","discardInterim","cp","pos","tmp","type","missing","fourStop","Utf8ToUtf32","node","handler","useCapture","addEventListener","disposed","removeEventListener","INVERTED_DEFAULT_COLOR","DIM_OPACITY","CHAR_ATLAS_CELL_SPACING","channels","rgb","rgba","toPaddedHex","toString","contrastRatio","l1","l2","toCss","g","b","a","toRgba","color","blend","css","fgR","fgG","fgB","bgR","bgG","bgB","round","ensureContrastRatio","ratio","toColor","opaque","rgbaColor","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","ceil","increaseLuminance","min","bgL","fgL","toChannels","isNode","navigator","userAgent","platform","contains","arr","el","isFirefox","isSafari","test","isMac","isIpad","isIphone","isWindows","isLinux","C0","NUL","SOH","STX","ETX","EOT","ENQ","ACK","BEL","BS","HT","LF","VT","FF","CR","SO","SI","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","ESC","FS","GS","RS","US","SP","DEL","C1","PAD","HOP","BPH","NBH","IND","NEL","SSA","ESA","HTS","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","ST","OSC","PM","APC","_container","id","zIndex","_alpha","_colors","_rendererId","_bufferService","_optionsService","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","bold","dim","italic","_canvas","document","createElement","classList","add","style","_initCanvas","appendChild","removeChild","_charAtlas","_ctx","throwIfFalsy","getContext","alpha","_clearAll","onOptionsChanged","onBlur","onFocus","onGridChanged","onSelectionChanged","columnSelectMode","setColors","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","acquireCharAtlas","options","warmUp","scaledCellWidth","scaledCellHeight","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","width","scaledCanvasWidth","height","scaledCanvasHeight","canvasWidth","canvasHeight","_fillCells","x","fillRect","_fillBottomLineAtCells","devicePixelRatio","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","fillStyle","background","_clearCells","_fillCharTrueColor","font","_getFont","textBaseline","_clipRow","fillText","_drawChars","contrastColor","_getContrastColor","_drawUncachedChars","drawBoldTextInBrightColors","draw","fgOverride","save","join","ansi","foreground","globalAlpha","restore","beginPath","rect","clip","fontWeightBold","fontWeight","fontSize","fontFamily","minimumContrastRatio","adjustedColor","contrastCache","getColor","fgColor","fgColorMode","bgColor","bgColorMode","temp","temp2","_resolveBackgroundRgba","_resolveForegroundRgba","setColor","inverse","BaseRenderLayer","DI_TARGET","DI_DEPENDENCIES","storeServiceDependency","serviceRegistry","Map","ctor","has","decorator","arguments","set","fillFallback","array","constructor","CELL_SIZE","DEFAULT_ATTR_DATA","freeze","fillCellData","_combined","_data","Uint32Array","setCell","hasWidth","getFg","getBg","hasContent","getCodePoint","getString","loadCell","startIndex","setCellFromCodePoint","addCodepointToCell","insertCells","eraseAttr","deleteCells","replaceCells","subarray","keys","copyFrom","newLine","BufferLine","getTrimmedLength","copyCellsFrom","src","srcCol","destCol","applyInReverse","srcData","srcCombinedKeys","endCol","promptLabel","tooMuchOutput","CHARSETS","DEFAULT_CHARSET","MAX_SUBPARAMS","maxLength","maxSubParamsLength","params","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","values","Params","k","addSubParam","addParam","newParams","toArray","res","reset","hasSubParams","idx","getSubParams","getSubParamsAll","addDigit","store","cur","_state","_id","_handlers","_handlerFb","addHandler","ident","handlerList","handlerIndex","setHandler","clearHandler","setHandlerFallback","_start","handlers","j","_put","put","utf32ToString","_end","success","OscParser","_handler","_hitLimit","PAYLOAD_LIMIT","ret","OscHandler","EMPTY_HANDLERS","_active","_ident","unhook","hook","DcsParser","_params","DcsHandler","charAtlasCache","rendererId","colors","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","atlas","newEntry","DynamicCharAtlas","clonedColors","cursor","cursorAccent","selection","allowTransparency","colorCode","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","v","canvas","ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","ColorContrastCache","selectionOpaque","onOptionsChange","setTheme","theme","_parseColor","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","fallback","console","warn","getImageData","ColorManager","firstCell","_width","JoinedCellData","_characterJoiners","_nextCharacterJoinerId","_workCell","registerCharacterJoiner","joiner","deregisterCharacterJoiner","joinerId","getJoinedCharacters","lines","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","joinedRanges","_getJoinedRanges","endIndex","lineData","text","joinerRanges","CharacterJoinerRegistry","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","newRange","inRange","range","getCoordsRelativeToElement","event","getBoundingClientRect","clientX","left","clientY","top","colCount","rowCount","hasValidCharSize","isSelection","coords","_renderCallback","_animationFrame","cancelAnimationFrame","refresh","rowStart","rowEnd","_rowCount","_rowStart","_rowEnd","requestAnimationFrame","_innerRefresh","RenderDebouncer","_currentDevicePixelRatio","setListener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","ScreenDprMonitor","val","depth","clonedObject","isArray","Terminal","_addonManager","AddonManager","onLineFeed","onSelectionChange","onData","onBinary","onTitleChange","onScroll","onKey","onRender","_parser","ParserApi","UnicodeApi","textarea","BufferApiView","markers","blur","focus","columns","_verifyIntegers","open","parent","attachCustomKeyEventHandler","customKeyEventHandler","registerLinkMatcher","deregisterLinkMatcher","matcherId","registerMarker","cursorYOffset","addMarker","column","getSelection","selectAll","selectLines","amount","scrollPages","pageCount","scrollToTop","scrollToBottom","scrollToLine","write","callback","writeUtf8","writeln","paste","getOption","optionsService","setOption","loadAddon","addon","Strings","Infinity","isNaN","_buffer","ydisp","ybase","BufferLineApiView","getNullCell","_line","registerCsiHandler","addCsiHandler","registerDcsHandler","addDcsHandler","registerEscHandler","addEscHandler","registerOscHandler","addOscHandler","provider","unicodeService","versions","activeVersion","version","browser","Browser","mouseEvents","_keyDownHandled","_blankLine","_onCursorMove","_onData","_onBinary","_onKey","_onLineFeed","_onRender","_onResize","_onScroll","_onSelectionChange","_onTitleChange","_onFocus","_onBlur","onA11yCharEmitter","onA11yTabEmitter","_instantiationService","InstantiationService","OptionsService","setService","createInstance","BufferService","_logService","LogService","_coreService","CoreService","e","_coreMouseService","CoreMouseService","_dirtyRowService","DirtyRowService","UnicodeService","_charsetService","CharsetService","_setupOptionsListeners","_setup","_writeBuffer","WriteBuffer","_inputHandler","parse","_windowsMode","_customKeyEventHandler","parentNode","insertMode","bracketedPasteMode","_userScrolling","InputHandler","onRequestBell","bell","onRequestRefreshRows","onRequestReset","linkifier","Linkifier","windowsMode","_enableWindowsMode","updateWindowsModeWrappedState","final","buffers","active","preventScroll","onOptionChange","_charSizeService","measure","setRenderer","_createRenderer","syncScrollArea","screenReaderMode","_accessibilityManager","AccessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","ev","sendFocus","triggerDataEvent","updateCursorStyle","showCursor","_onTextAreaBlur","remove","_initGlobal","_bindKeys","addDisposableDomListener","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","button","rightClickHandler","screenElement","rightClickSelectsWord","moveTextAreaUnderMouseCursor","_keyUp","_keyDown","_keyPress","_compositionHelper","compositionstart","compositionupdate","compositionend","updateCompositionElements","_queueLinkification","body","_document","ownerDocument","dir","setAttribute","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","tabIndex","coreBrowserService","CoreBrowserService","CharSizeService","_compositionView","CompositionHelper","_theme","_colorManager","renderer","RenderService","_soundService","SoundService","_mouseService","MouseService","Viewport","suppressEvent","onThemeChange","onDimensionsChange","SelectionService","onRedrawRequest","onLinuxMouseSelection","_mouseZoneManager","MouseZoneManager","clearAll","attachToDom","onMouseDown","disable","enable","bindMouse","rendererType","Renderer","DomRenderer","self","sendEvent","but","action","getRawByteCoords","overrideType","buttons","deltaY","triggerMouseEvent","ctrl","ctrlKey","alt","altKey","shift","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","preventDefault","onProtocolChange","events","logLevel","debug","explainEvents","activeProtocol","shouldForceSelection","hasScrollback","getLinesScrolled","sequence","decPrivateModes","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","linkifyRows","shouldColumnSelect","isCursorInitialized","scroll","getBlankLine","topRow","scrollTop","bottomRow","scrollBottom","willBufferBeTrimmed","isFull","recycle","scrollRegionHeight","shiftElements","markRangeDirty","disp","suppressScrollEvent","oldYdisp","scrollAmount","normal","setSelection","selectionText","selectionStart","selectionEnd","keydown","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","domEvent","thirdLevelKey","metaKey","keyCode","wasModifierKeyOnlyEvent","charCode","which","_soundBell","playBellSound","_visualBell","_visualBellTimer","MINIMUM_COLS","MINIMUM_ROWS","hasValidSize","is","termName","handleTitle","title","userScrolling","force","cancelEvents","stopPropagation","bellStyle","writeSync","_textarea","_isComposing","_isSendingComposition","_compositionPosition","textContent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","_clearTextareaPosition","oldValue","diff","replace","dontRecurse","isCursorInViewport","cellHeight","lineHeight","cursorTop","cursorLeft","compositionViewBounds","FALLBACK_SCROLL_BAR_WIDTH","_scrollLines","_scrollArea","_currentRowHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","backgroundColor","_refresh","immediate","offsetHeight","newBufferHeight","newScrollTop","offsetParent","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","prepareTextForTerminal","bracketTextForPaste","coreService","position","selectionService","clipboardData","setData","getData","shouldSelectWord","isClickInSelection","selectWordAtCursor","GLEVEL","paramToWindowOption","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","concat","pt","cursorStyle","cursorBlink","_unicodeService","EscapeSequenceParser","_parseBuffer","_stringDecoder","_utf8Decoder","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestRefreshRows","_onRequestReset","_onRequestBell","setCsiHandlerFallback","identifier","identToString","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","setCsiHandler","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","lineFeed","carriageReturn","backspace","tab","shiftOut","shiftIn","tabSet","setOscHandler","setTitle","setIconName","setEscHandler","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","screenAlignmentPattern","setErrorHandler","state","error","setDcsHandler","DECRQSS","cursorStartX","cursorStartY","clearRange","len","chWidth","charset","wraparoundMode","wraparound","curAttr","bufferRow","markDirty","wcwidth","ch","_eraseAttrData","precedingCodepoint","convertEol","_restrictCursor","originalX","nextStop","origin","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","_resetBufferLine","scrollBackSize","trimStart","scrollBottomRowsOffset","scrollBottomAbsolute","setgCharset","applicationKeypad","activeEncoding","isCursorHidden","activateAltBuffer","activateNormalBuffer","_extractColor","attr","accu","cSpace","advance","subparams","isBlinking","bottom","getService","log","w","toFixed","h","pop","savedX","savedY","savedCurAttrData","savedCharset","_savedCharset","collectAndFlag","level","yOffset","markAllDirty","table","setDefault","next","addMany","codes","TransitionTable","VT500_TRANSITION_TABLE","blueprint","apply","map","unused","PRINTABLES","EXECUTABLES","states","TRANSITIONS","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","transition","osc","dcs","collect","abort","handlersEsc","jj","nextRendererId","_screenElement","_linkifier","_characterJoinerRegistry","_renderLayers","TextRenderLayer","SelectionRenderLayer","LinkRenderLayer","CursorRenderLayer","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","container","characterJoinerRegistry","bufferService","_characterWidth","_characterFont","_characterOverlapCache","GridCache","terminalFont","_forEachCell","firstRow","lastRow","joinerRegistry","isJoined","lastCharX","_isOverlapping","_drawBackground","startX","startY","prevFillStyle","nextFillStyle","_drawForeground","cache","beginFrame","overlaps","measureText","TEXTURE_WIDTH","TEXTURE_HEIGHT","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","tmpCanvas","_tmpCtx","_height","capacity","_cacheMap","LRUMap","prealloc","_canCache","glyphKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","isEmpty","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","_getBackgroundColor","_getForegroundColor","fontStyle","imageData","offset","clearColor","putImageData","_addGlyphToBitmap","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","then","bitmap","BaseCharAtlas","NoneCharAtlas","_didWarmUp","_doWarmUp","_color","_rgba","setCss","getCss","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","count","nodePool","peekValue","head","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","_onRequestRefreshRowsEvent","_coreBrowserService","_cell","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_clearCursor","_cursorBlinkStateManager","pause","resume","CursorBlinkStateManager","_render","restartBlinkAnimation","isPaused","triggeredByAnimationFrame","cursorY","viewportRelativeCursorY","_renderBlurCursor","isCursorVisible","cursorWidth","strokeStyle","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","Date","now","timeToStart","time","setInterval","onLinkHover","_onLinkHover","onLinkLeave","_onLinkLeave","_clearCurrentLink","x1","y1","middleRowCount","y2","x2","is256Color","_linkMatchers","_nextLinkMatcherId","_onLinkTooltip","_rowsToLinkify","mouseZoneManager","_element","_rowsTimeoutId","_linkifyRows","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","iterator","hasNext","_doLinkifyRow","first","matcher","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","rowIndex","match","rex","source","flags","stringIndex","uri","bufferIndex","stringIndexToBufferIndex","isValid","_addLink","getStringCellWidth","MouseZone","newWindow","opener","location","href","_createLinkHoverEvent","clickCallback","hoverCallback","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_onLinuxMouseSelection","_onRedrawRequest","_mouseMoveListener","_onMouseMove","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","onTrim","_onTrim","onBufferActivate","_onBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","translateBufferLineToString","bufferLine","isLinuxMouseSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAt","isSelectAllActive","getCoords","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","selectionStartLength","_selectLineAt","stopImmediatePropagation","previousSelectionEnd","_selectToWordAt","timeElapsed","coordinates","moveToCellSequence","activeBuffer","_convertViewportColToCharacterIndex","charIndex","_getWordAt","allowWhitespaceOnlySelection","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","areSelectionValuesReversed","wordSeparator","wrappedRange","getWrappedRangeForLine","last","startPlusLength","moveToRequestedRow","targetY","applicationCursor","wrappedRowsForRow","repeat","wrappedRows","direction","verticalDirection","wrappedRowsCount","currentRow","lineWraps","horizontalDirection","targetX","forward","currentCol","bufferStr","mod","str","rpt","resetStartingRow","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","base64","binaryString","atob","bytes","dataURI","split","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseLeaveListener","_onMouseLeave","_clickListener","_onClick","_deactivate","zone","_activate","_currentZone","pageX","_onHover","_findZoneEventAt","_tooltipTimeout","_onTooltip","_getSelectionLength","currentSelectionLength","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","_rowContainer","_rowElements","_createAccessibilityTreeNode","_topBoundaryFocusListener","_onBoundaryFocus","_bottomBoundaryFocusListener","_refreshRowsDimensions","_renderRowsDebouncer","_renderRows","_refreshRows","_liveRegion","insertAdjacentElement","onA11yChar","_onChar","onA11yTab","spaceCount","_onTab","_clearLiveRegion","_screenDprMonitor","boundaryElement","beforeBoundaryElement","getAttribute","relatedTarget","topBoundaryElement","bottomBoundaryElement","newElement","unshift","children","_refreshRowDimensions","MAX_ROWS_TO_READ","keyChar","setSize","posInSet","innerHTML","_announceCharacters","TERMINAL_CLASS_PREFIX","ROW_CONTAINER_CLASS","SELECTION_CLASS","nextTerminalId","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","documentFragment","_createSelectionElement","colStart","colEnd","cursorAbsoluteY","cursorX","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","isCursorRow","cellWidth","lineLength","charElement","_applyMinimumContrast","_addStyle","padStart","padChar","KEYCODE_KEY_MAPPINGS","48","49","50","51","52","53","54","55","56","57","186","187","188","189","190","191","192","219","220","221","222","applicationCursorMode","modifiers","keyMapping","lastChar","_renderer","charSizeService","_isPaused","_needsFullRefresh","_canvasWidth","_canvasHeight","_onDimensionsChange","_onRefreshRequest","_renderDebouncer","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","intersectionRatio","_fireOnCanvasResize","changeOptions","_fullRefresh","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","scrollback","disableStdin","tabStopWidth","CONSTRUCTOR_ONLY_OPTIONS","_onOptionChange","newValue","_sanitizeAndValidateOption","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","BufferSet","_normal","Buffer","fillViewportRows","_alt","_activeBuffer","inactiveBuffer","fillAttr","newCols","newRows","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","_whitespaceCell","_cols","_rows","CircularList","_getCorrectBufferLength","getWhitespaceCell","relativeY","correctBufferLength","nullCell","newMaxLength","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","destLineIndex","srcLineIndex","cellsToCopy","wrappedLinesIndex","getWrappedLineTrimmedLength","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","onInsertEmitter","onTrimEmitter","marker","Marker","onInsert","onDelete","onDispose","_removeMarker","startOverscan","endOverscan","BufferStringIterator","_trimRight","_startIndex","_endIndex","_startOverscan","_endOverscan","_current","_maxLength","onDeleteEmitter","_array","_length","newArray","_getCyclicIndex","newLength","deleteCount","items","countToTrim","expandListBy","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_nextId","isDisposed","_onDispose","DEFAULT_DEC_PRIVATE_MODES","_scrollToBottom","_onUserInput","wasUserInput","triggerBinaryEvent","LogLevel","optionsKeyToLogLevel","DEBUG","info","INFO","WARN","ERROR","off","OFF","_updateLogLevel","_logLevel","_evalLazyOptionalParams","optionalParams","_log","message","_entries","entries","service","instance","ServiceCollection","_services","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","args","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","addEncoding","protocol","encoding","_compareEvents","report","DOWN","UP","MOVE","WHEEL","e1","e2","_action","_callbacks","_pendingData","_bufferOffset","cb","_innerWrite","startTime","activeElement","hasFocus","_providers","_onChange","defaultProvider","UnicodeV6","_activeProvider","num","BMP_COMBINING","HIGH_COMBINING","ucs","mid","bisearch","charsets","glevel","_addons","loadedAddon","_wrappedAddonDispose"],"mappings":"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,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAA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","file":"25.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { Event } from '@theia/core/lib/common/event';\nimport { WidgetOpenerOptions } from '@theia/core/lib/browser';\nimport { TerminalWidgetOptions, TerminalWidget } from './terminal-widget';\n\n/**\n * Service manipulating terminal widgets.\n */\nexport const TerminalService = Symbol('TerminalService');\nexport interface TerminalService {\n\n    /**\n     * Create new terminal with predefined options.\n     * @param options - terminal options.\n     */\n    newTerminal(options: TerminalWidgetOptions): Promise<TerminalWidget>;\n\n    /**\n     * Display new terminal widget.\n     * @param terminal - widget to attach.\n     * @deprecated use #open\n     */\n    activateTerminal(terminal: TerminalWidget): void;\n\n    open(terminal: TerminalWidget, options?: WidgetOpenerOptions): void;\n\n    readonly all: TerminalWidget[];\n\n    /**\n     * @param id - the widget id (NOT the terminal id!)\n     * @return the widget\n     */\n    getById(id: string): TerminalWidget | undefined;\n\n    /**\n     * Returns detected default shell.\n     */\n    getDefaultShell(): Promise<string>;\n\n    readonly onDidCreateTerminal: Event<TerminalWidget>;\n\n    readonly currentTerminal: TerminalWidget | undefined;\n\n    readonly onDidChangeCurrentTerminal: Event<TerminalWidget | undefined>;\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Event } from '@theia/core';\nimport { BaseWidget } from '@theia/core/lib/browser';\nimport { TerminalSearchWidget } from '../search/terminal-search-widget';\n\n/**\n * Terminal UI widget.\n */\nexport abstract class TerminalWidget extends BaseWidget {\n\n    abstract processId: Promise<number>;\n\n    /**\n     * Start terminal and return terminal id.\n     * @param id - terminal id.\n     */\n    abstract start(id?: number): Promise<number>;\n\n    /**\n     * Send text to the terminal server.\n     * @param text - text content.\n     */\n    abstract sendText(text: string): void;\n\n    abstract onDidOpen: Event<void>;\n\n    abstract scrollLineUp(): void;\n\n    abstract scrollLineDown(): void;\n\n    abstract scrollToTop(): void;\n\n    abstract scrollPageUp(): void;\n\n    abstract scrollPageDown(): void;\n\n    /**\n     * Event which fires when terminal did closed. Event value contains closed terminal widget definition.\n     */\n    abstract onTerminalDidClose: Event<TerminalWidget>;\n\n    /**\n     * Cleat terminal output.\n     */\n    abstract clearOutput(): void;\n\n    /**\n     * Return Terminal search box widget.\n     */\n    abstract getSearchBox(): TerminalSearchWidget;\n    /**\n     * Whether the terminal process has child processes.\n     */\n    abstract hasChildProcesses(): Promise<boolean>;\n}\n\n/**\n * Terminal widget options.\n */\nexport const TerminalWidgetOptions = Symbol('TerminalWidgetOptions');\nexport interface TerminalWidgetOptions {\n\n    /**\n     * Human readable terminal representation on the UI.\n     */\n    readonly title?: string;\n\n    /**\n     * Path to the executable shell. For example: `/bin/bash`, `bash`, `sh`.\n     */\n    readonly shellPath?: string;\n\n    /**\n     * Shell arguments to executable shell, for example: [`-l`] - without login.\n     */\n    readonly shellArgs?: string[];\n\n    /**\n     * Current working directory.\n     */\n    readonly cwd?: string;\n\n    /**\n     * Environment variables for terminal.\n     */\n    readonly env?: { [key: string]: string | null };\n\n    /**\n     * In case `destroyTermOnClose` is true - terminal process will be destroyed on close terminal widget, otherwise will be kept\n     * alive.\n     */\n    readonly destroyTermOnClose?: boolean;\n\n    /**\n     * Terminal server side can send to the client `terminal title` to display this value on the UI. If\n     * useServerTitle = true then display this title, otherwise display title defined by 'title' argument.\n     */\n    readonly useServerTitle?: boolean;\n\n    /**\n     * Terminal id. Should be unique for all DOM.\n     */\n    readonly id?: string;\n\n    /**\n     * Terminal attributes. Can be useful to apply some implementation specific information.\n     */\n    readonly attributes?: { [key: string]: string | null };\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport { TerminalSearchWidget, TerminalSearchWidgetFactory } from './terminal-search-widget';\nimport { Terminal } from 'xterm';\n\nexport function createTerminalSearchFactory(container: interfaces.Container): TerminalSearchWidgetFactory {\n    container.bind(TerminalSearchWidget).toSelf().inSingletonScope();\n\n    return (terminal: Terminal) => {\n        container.bind(Terminal).toConstantValue(terminal);\n        return container.get(TerminalSearchWidget);\n    };\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { ReactWidget } from '@theia/core/lib/browser/widgets/react-widget';\nimport * as React from 'react';\nimport '../../../src/browser/style/terminal-search.css';\nimport { Terminal } from 'xterm';\nimport { SearchAddon, ISearchOptions } from 'xterm-addon-search';\nimport { Key } from '@theia/core/lib/browser';\n\nexport const TERMINAL_SEARCH_WIDGET_FACTORY_ID = 'terminal-search';\nexport const TerminalSearchWidgetFactory = Symbol('TerminalSearchWidgetFactory');\nexport type TerminalSearchWidgetFactory = (terminal: Terminal) => TerminalSearchWidget;\n\n@injectable()\nexport class TerminalSearchWidget extends ReactWidget {\n\n    private searchInput: HTMLInputElement | null;\n    private searchBox: HTMLDivElement | null;\n    private searchOptions: ISearchOptions = {};\n    private searchAddon: SearchAddon;\n\n    @inject(Terminal)\n    protected terminal: Terminal;\n\n    @postConstruct()\n    protected init(): void {\n        this.node.classList.add('theia-search-terminal-widget-parent');\n\n        this.searchAddon = new SearchAddon();\n        this.terminal.loadAddon(this.searchAddon);\n\n        this.hide();\n        this.update();\n    }\n\n    protected render(): React.ReactNode {\n        return <div className='theia-search-terminal-widget'>\n            <div className='theia-search-elem-box' ref={searchBox => this.searchBox = searchBox} >\n                <input\n                    title='Find'\n                    type='text'\n                    placeholder='Find'\n                    ref={ip => this.searchInput = ip}\n                    onKeyUp={this.onInputChanged}\n                    onFocus={this.onSearchInputFocus}\n                    onBlur={this.onSearchInputBlur}\n                />\n                <div title='Match case' tabIndex={0} className='search-elem match-case' onClick={this.handleCaseSensitiveOptionClicked}></div>\n                <div title='Match whole word' tabIndex={0} className='search-elem whole-word' onClick={this.handleWholeWordOptionClicked}></div>\n                <div title='Use regular expression' tabIndex={0} className='search-elem use-regexp' onClick={this.handleRegexOptionClicked}></div>\n            </div>\n            <button title='Previous match' className='search-elem arrow-up' onClick={this.handlePreviousButtonClicked}></button>\n            <button title='Next match' className='search-elem arrow-down' onClick={this.handleNextButtonClicked}></button>\n            <button title='Close' className='search-elem close' onClick={this.handleHide}></button>\n       </div>;\n    }\n\n    onSearchInputFocus = (): void => {\n        if (this.searchBox) {\n            this.searchBox.classList.add('focused');\n        }\n    };\n\n    onSearchInputBlur = (): void => {\n        if (this.searchBox) {\n            this.searchBox.classList.remove('focused');\n        }\n    };\n\n    private handleHide = (): void => {\n        this.hide();\n    };\n\n    private handleCaseSensitiveOptionClicked = (event: React.MouseEvent<HTMLSpanElement>): void => {\n        this.searchOptions.caseSensitive = !this.searchOptions.caseSensitive;\n        this.updateSearchInputBox(this.searchOptions.caseSensitive, event.currentTarget);\n    };\n\n    private handleWholeWordOptionClicked = (event: React.MouseEvent<HTMLSpanElement>): void => {\n        this.searchOptions.wholeWord = !this.searchOptions.wholeWord;\n        this.updateSearchInputBox(this.searchOptions.wholeWord, event.currentTarget);\n    };\n\n    private handleRegexOptionClicked = (event: React.MouseEvent<HTMLSpanElement>): void => {\n        this.searchOptions.regex = !this.searchOptions.regex;\n        this.updateSearchInputBox(this.searchOptions.regex, event.currentTarget);\n    };\n\n    private updateSearchInputBox(enable: boolean, optionElement: HTMLSpanElement): void {\n        if (enable) {\n            optionElement.classList.add('option-enabled');\n        } else {\n            optionElement.classList.remove('option-enabled');\n        }\n        this.searchInput!.focus();\n    }\n\n    private onInputChanged = (event: React.KeyboardEvent): void => {\n        // move to previous search result on `Shift + Enter`\n        if (event && event.shiftKey && event.keyCode === Key.ENTER.keyCode) {\n            this.search(false, 'previous');\n            return;\n        }\n        // move to next search result on `Enter`\n        if (event && event.keyCode === Key.ENTER.keyCode) {\n            this.search(false, 'next');\n            return;\n        }\n\n        this.search(true, 'next');\n    };\n\n    search(incremental: boolean, searchDirection: 'next' | 'previous'): void {\n        if (this.searchInput) {\n            this.searchOptions.incremental = incremental;\n            const searchText = this.searchInput.value;\n\n            if (searchDirection === 'next') {\n                this.searchAddon.findNext(searchText, this.searchOptions);\n            }\n\n            if (searchDirection === 'previous') {\n                this.searchAddon.findPrevious(searchText, this.searchOptions);\n            }\n        }\n    }\n\n    private handleNextButtonClicked = (): void => {\n        this.search(false, 'next');\n    };\n\n    private handlePreviousButtonClicked = (): void => {\n        this.search(false, 'previous');\n    };\n\n    onAfterHide(): void {\n        this.terminal.focus();\n    }\n\n    onAfterShow(): void {\n        if (this.searchInput) {\n            this.searchInput.select();\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { TerminalWidgetImpl } from './terminal-widget-impl';\n\nexport const TerminalContribution = Symbol('TerminalContribution');\nexport interface TerminalContribution {\n    onCreate(term: TerminalWidgetImpl): void;\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, postConstruct } from 'inversify';\nimport { isFirefox } from '@theia/core/lib/browser';\n\n@injectable()\nexport class TerminalCopyOnSelectionHandler {\n\n    private textToCopy: string;\n    private interceptCopy: boolean;\n\n    private copyListener = (ev: ClipboardEvent) => {\n        if (this.interceptCopy && ev.clipboardData) {\n            ev.clipboardData.setData('text/plain', this.textToCopy);\n            ev.preventDefault();\n        }\n    };\n\n    @postConstruct()\n    protected init(): void {\n        document.addEventListener('copy', this.copyListener);\n    }\n\n    private async clipBoardCopyIsGranted(): Promise<boolean> {\n        // Unfortunately Firefox doesn't support permission check `clipboard-write`, so let try to copy anyway,\n        if (isFirefox) {\n            return true;\n        }\n        try {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const permissions = (navigator as any).permissions;\n            const { state } = await permissions.query({ name: 'clipboard-write' });\n            if (state === 'granted') {\n                return true;\n            }\n        } catch (e) { }\n\n        return false;\n    }\n\n    private executeCommandCopy(): void {\n        try {\n            this.interceptCopy = true;\n            document.execCommand('copy');\n            this.interceptCopy = false;\n        } catch (e) {\n            // do nothing\n        }\n    }\n\n    private async writeToClipBoard(): Promise<void> {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const clipboard = (navigator as any).clipboard;\n\n        if (!clipboard) {\n            this.executeCommandCopy();\n            return;\n        }\n\n        try {\n            await clipboard.writeText(this.textToCopy);\n        } catch (e) {\n            this.executeCommandCopy();\n        }\n    }\n\n    async copy(text: string): Promise<void> {\n        this.textToCopy = text;\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const permissions = (navigator as any).permissions;\n        if (permissions && permissions.query && await this.clipBoardCopyIsGranted()) {\n            await this.writeToClipBoard();\n        } else {\n            this.executeCommandCopy();\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport {\n    CommandContribution,\n    Command,\n    CommandRegistry,\n    MenuContribution,\n    MenuModelRegistry,\n    isOSX,\n    SelectionService,\n    Emitter, Event\n} from '@theia/core/lib/common';\nimport { QuickPickService } from '@theia/core/lib/common/quick-pick-service';\nimport {\n    ApplicationShell, KeybindingContribution, KeyCode, Key,\n    KeybindingRegistry, Widget, LabelProvider, WidgetOpenerOptions\n} from '@theia/core/lib/browser';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { WidgetManager } from '@theia/core/lib/browser';\nimport { TERMINAL_WIDGET_FACTORY_ID, TerminalWidgetFactoryOptions } from './terminal-widget-impl';\nimport { TerminalKeybindingContexts } from './terminal-keybinding-contexts';\nimport { TerminalService } from './base/terminal-service';\nimport { TerminalWidgetOptions, TerminalWidget } from './base/terminal-widget';\nimport { UriAwareCommandHandler } from '@theia/core/lib/common/uri-command-handler';\nimport { FileSystem } from '@theia/filesystem/lib/common';\nimport { ShellTerminalServerProxy } from '../common/shell-terminal-protocol';\nimport URI from '@theia/core/lib/common/uri';\nimport { MAIN_MENU_BAR } from '@theia/core';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport { ColorContribution } from '@theia/core/lib/browser/color-application-contribution';\nimport { ColorRegistry } from '@theia/core/lib/browser/color-registry';\nimport { terminalAnsiColorMap } from './terminal-theme-service';\n\nexport namespace TerminalMenus {\n    export const TERMINAL = [...MAIN_MENU_BAR, '7_terminal'];\n    export const TERMINAL_NEW = [...TERMINAL, '1_terminal'];\n    export const TERMINAL_TASKS = [...TERMINAL, '2_terminal'];\n    export const TERMINAL_TASKS_INFO = [...TERMINAL_TASKS, '3_terminal'];\n    export const TERMINAL_TASKS_CONFIG = [...TERMINAL_TASKS, '4_terminal'];\n    export const TERMINAL_NAVIGATOR_CONTEXT_MENU = ['navigator-context-menu', 'navigation'];\n}\n\nexport namespace TerminalCommands {\n    const TERMINAL_CATEGORY = 'Terminal';\n    export const NEW: Command = {\n        id: 'terminal:new',\n        category: TERMINAL_CATEGORY,\n        label: 'Open New Terminal'\n    };\n    export const NEW_ACTIVE_WORKSPACE: Command = {\n        id: 'terminal:new:active:workspace',\n        category: TERMINAL_CATEGORY,\n        label: 'Open New Terminal (In Active Workspace)'\n    };\n    export const TERMINAL_CLEAR: Command = {\n        id: 'terminal:clear',\n        category: TERMINAL_CATEGORY,\n        label: 'Clear Terminal'\n    };\n    export const TERMINAL_CONTEXT: Command = {\n        id: 'terminal:context',\n        category: TERMINAL_CATEGORY,\n        label: 'Open in Terminal'\n    };\n    export const SPLIT: Command = {\n        id: 'terminal:split',\n        category: TERMINAL_CATEGORY,\n        label: 'Split Terminal'\n    };\n    export const TERMINAL_FIND_TEXT: Command = {\n        id: 'terminal:find',\n        category: TERMINAL_CATEGORY,\n        label: 'Find'\n    };\n    export const TERMINAL_FIND_TEXT_CANCEL: Command = {\n        id: 'terminal:find:cancel',\n        category: TERMINAL_CATEGORY,\n        label: 'Hide find widget'\n    };\n\n    export const SCROLL_LINE_UP: Command = {\n        id: 'terminal:scroll:line:up',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll line up'\n    };\n    export const SCROLL_LINE_DOWN: Command = {\n        id: 'terminal:scroll:line:down',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll line down'\n    };\n    export const SCROLL_TO_TOP: Command = {\n        id: 'terminal:scroll:top',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll to top'\n    };\n    export const SCROLL_PAGE_UP: Command = {\n        id: 'terminal:scroll:page:up',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll page up'\n    };\n    export const SCROLL_PAGE_DOWN: Command = {\n        id: 'terminal:scroll:page:down',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll page down'\n    };\n\n    /**\n     * Command that displays all terminals that are currently opened\n     */\n    export const SHOW_ALL_OPENED_TERMINALS: Command = {\n        id: 'workbench.action.showAllTerminals',\n        category: 'View',\n        label: 'Show All Opened Terminals'\n    };\n}\n\n@injectable()\nexport class TerminalFrontendContribution implements TerminalService, CommandContribution, MenuContribution, KeybindingContribution, TabBarToolbarContribution, ColorContribution {\n\n    constructor(\n        @inject(ApplicationShell) protected readonly shell: ApplicationShell,\n        @inject(ShellTerminalServerProxy) protected readonly shellTerminalServer: ShellTerminalServerProxy,\n        @inject(WidgetManager) protected readonly widgetManager: WidgetManager,\n        @inject(FileSystem) protected readonly fileSystem: FileSystem,\n        @inject(SelectionService) protected readonly selectionService: SelectionService\n    ) { }\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(QuickPickService)\n    protected readonly quickPick: QuickPickService;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    protected readonly onDidCreateTerminalEmitter = new Emitter<TerminalWidget>();\n    readonly onDidCreateTerminal: Event<TerminalWidget> = this.onDidCreateTerminalEmitter.event;\n\n    protected readonly onDidChangeCurrentTerminalEmitter = new Emitter<TerminalWidget | undefined>();\n    readonly onDidChangeCurrentTerminal: Event<TerminalWidget | undefined> = this.onDidChangeCurrentTerminalEmitter.event;\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    @postConstruct()\n    protected init(): void {\n        this.shell.currentChanged.connect(() => this.updateCurrentTerminal());\n        this.widgetManager.onDidCreateWidget(({ widget }) => {\n            if (widget instanceof TerminalWidget) {\n                this.updateCurrentTerminal();\n                this.onDidCreateTerminalEmitter.fire(widget);\n            }\n        });\n\n        const terminalFocusKey = this.contextKeyService.createKey<boolean>('terminalFocus', false);\n        const updateFocusKey = () => terminalFocusKey.set(this.shell.activeWidget instanceof TerminalWidget);\n        updateFocusKey();\n        this.shell.activeChanged.connect(updateFocusKey);\n    }\n\n    protected _currentTerminal: TerminalWidget | undefined;\n    get currentTerminal(): TerminalWidget | undefined {\n        return this._currentTerminal;\n    }\n    protected setCurrentTerminal(current: TerminalWidget | undefined): void {\n        if (this._currentTerminal !== current) {\n            this._currentTerminal = current;\n            this.onDidChangeCurrentTerminalEmitter.fire(this._currentTerminal);\n        }\n    }\n    protected updateCurrentTerminal(): void {\n        const widget = this.shell.currentWidget;\n        if (widget instanceof TerminalWidget) {\n            this.setCurrentTerminal(widget);\n        } else if (!this._currentTerminal || !this._currentTerminal.isVisible) {\n            this.setCurrentTerminal(undefined);\n        }\n    }\n\n    get all(): TerminalWidget[] {\n        return this.widgetManager.getWidgets(TERMINAL_WIDGET_FACTORY_ID) as TerminalWidget[];\n    }\n\n    getById(id: string): TerminalWidget | undefined {\n        return this.all.find(terminal => terminal.id === id);\n    }\n\n    getDefaultShell(): Promise<string> {\n        return this.shellTerminalServer.getDefaultShell();\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(TerminalCommands.NEW, {\n            execute: () => this.openTerminal()\n        });\n        commands.registerCommand(TerminalCommands.NEW_ACTIVE_WORKSPACE, {\n            execute: () => this.openActiveWorkspaceTerminal()\n        });\n        commands.registerCommand(TerminalCommands.SPLIT, {\n            execute: widget => this.splitTerminal(widget),\n            isEnabled: widget => !!this.getTerminalRef(widget),\n            isVisible: widget => !!this.getTerminalRef(widget)\n        });\n\n        commands.registerCommand(TerminalCommands.TERMINAL_CLEAR);\n        commands.registerHandler(TerminalCommands.TERMINAL_CLEAR.id, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            execute: () => (this.shell.activeWidget as TerminalWidget).clearOutput()\n        });\n\n        commands.registerCommand(TerminalCommands.TERMINAL_CONTEXT, new UriAwareCommandHandler<URI>(this.selectionService, {\n            execute: async uri => {\n                // Determine folder path of URI\n                const stat = await this.fileSystem.getFileStat(uri.toString());\n                if (!stat) {\n                    return;\n                }\n\n                // Use folder if a file was selected\n                const cwd = (stat.isDirectory) ? uri.toString() : uri.parent.toString();\n\n                // Open terminal\n                const termWidget = await this.newTerminal({ cwd });\n                termWidget.start();\n                this.activateTerminal(termWidget);\n            }\n        }));\n\n        commands.registerCommand(TerminalCommands.TERMINAL_FIND_TEXT);\n        commands.registerHandler(TerminalCommands.TERMINAL_FIND_TEXT.id, {\n            isEnabled: () => {\n                if (this.shell.activeWidget instanceof TerminalWidget) {\n                    return !this.shell.activeWidget.getSearchBox().isVisible;\n                }\n                return false;\n            } ,\n            execute: () => {\n                const termWidget = (this.shell.activeWidget as TerminalWidget);\n                const terminalSearchBox = termWidget.getSearchBox();\n                terminalSearchBox.show();\n            }\n        });\n        commands.registerCommand(TerminalCommands.TERMINAL_FIND_TEXT_CANCEL);\n        commands.registerHandler(TerminalCommands.TERMINAL_FIND_TEXT_CANCEL.id, {\n            isEnabled: () => {\n                if (this.shell.activeWidget instanceof TerminalWidget) {\n                    return this.shell.activeWidget.getSearchBox().isVisible;\n                }\n                return false;\n            },\n            execute: () => {\n                const termWidget = (this.shell.activeWidget as TerminalWidget);\n                const terminalSearchBox = termWidget.getSearchBox();\n                terminalSearchBox.hide();\n            }\n        });\n\n        commands.registerCommand(TerminalCommands.SCROLL_LINE_UP, {\n                isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n                isVisible: () => false,\n                execute: () => {\n                    (this.shell.activeWidget as TerminalWidget).scrollLineUp();\n                }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_LINE_DOWN, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollLineDown();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_TO_TOP, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollToTop();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_PAGE_UP, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollPageUp();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_PAGE_DOWN, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollPageDown();\n            }\n        });\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerSubmenu(TerminalMenus.TERMINAL, 'Terminal');\n        menus.registerMenuAction(TerminalMenus.TERMINAL_NEW, {\n            commandId: TerminalCommands.NEW.id,\n            label: 'New Terminal',\n            order: '0'\n        });\n        menus.registerMenuAction(TerminalMenus.TERMINAL_NEW, {\n            commandId: TerminalCommands.SPLIT.id,\n            order: '1'\n        });\n        menus.registerMenuAction(TerminalMenus.TERMINAL_NAVIGATOR_CONTEXT_MENU, {\n            commandId: TerminalCommands.TERMINAL_CONTEXT.id,\n            order: 'z'\n        });\n    }\n\n    registerToolbarItems(toolbar: TabBarToolbarRegistry): void {\n        toolbar.registerItem({\n            id: TerminalCommands.SPLIT.id,\n            command: TerminalCommands.SPLIT.id,\n            text: '$(columns)',\n            tooltip: TerminalCommands.SPLIT.label\n        });\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        keybindings.registerKeybinding({\n            command: TerminalCommands.NEW.id,\n            keybinding: 'ctrl+shift+`'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.NEW_ACTIVE_WORKSPACE.id,\n            keybinding: 'ctrl+`'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.TERMINAL_CLEAR.id,\n            keybinding: 'ctrlcmd+k',\n            context: TerminalKeybindingContexts.terminalActive\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.TERMINAL_FIND_TEXT.id,\n            keybinding: 'ctrlcmd+f',\n            context: TerminalKeybindingContexts.terminalActive\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.TERMINAL_FIND_TEXT_CANCEL.id,\n            keybinding: 'esc',\n            context: TerminalKeybindingContexts.terminalHideSearch\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_LINE_UP.id,\n            keybinding: 'ctrl+shift+up',\n            context: TerminalKeybindingContexts.terminalActive\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_LINE_DOWN.id,\n            keybinding: 'ctrl+shift+down',\n            context: TerminalKeybindingContexts.terminalActive\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_TO_TOP.id,\n            keybinding: 'shift-home',\n            context: TerminalKeybindingContexts.terminalActive\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_PAGE_UP.id,\n            keybinding: 'shift-pageUp',\n            context: TerminalKeybindingContexts.terminalActive\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_PAGE_DOWN.id,\n            keybinding: 'shift-pageDown',\n            context: TerminalKeybindingContexts.terminalActive\n        });\n\n        /* Register passthrough keybindings for combinations recognized by\n           xterm.js and converted to control characters.\n\n             See: https://github.com/xtermjs/xterm.js/blob/v3/src/Terminal.ts#L1684 */\n\n        /* Register ctrl + k (the passed Key) as a passthrough command in the\n           context of the terminal.  */\n        const regCtrl = (k: { keyCode: number, code: string }) => {\n            keybindings.registerKeybinding({\n                command: KeybindingRegistry.PASSTHROUGH_PSEUDO_COMMAND,\n                keybinding: KeyCode.createKeyCode({ key: k, ctrl: true }).toString(),\n                context: TerminalKeybindingContexts.terminalActive,\n            });\n        };\n\n        /* Register alt + k (the passed Key) as a passthrough command in the\n           context of the terminal.  */\n        const regAlt = (k: { keyCode: number, code: string }) => {\n            keybindings.registerKeybinding({\n                command: KeybindingRegistry.PASSTHROUGH_PSEUDO_COMMAND,\n                keybinding: KeyCode.createKeyCode({ key: k, alt: true }).toString(),\n                context: TerminalKeybindingContexts.terminalActive\n            });\n        };\n\n        /* ctrl-space (000 - NUL).  */\n        regCtrl(Key.SPACE);\n\n        /* ctrl-A (001/1/0x1) through ctrl-Z (032/26/0x1A).  */\n        for (let i = 0; i < 26; i++) {\n            regCtrl({\n                keyCode: Key.KEY_A.keyCode + i,\n                code: 'Key' + String.fromCharCode('A'.charCodeAt(0) + i)\n            });\n        }\n\n        /* ctrl-[ or ctrl-3 (033/27/0x1B - ESC).  */\n        regCtrl(Key.BRACKET_LEFT);\n        regCtrl(Key.DIGIT3);\n\n        /* ctrl-\\ or ctrl-4 (034/28/0x1C - FS).  */\n        regCtrl(Key.BACKSLASH);\n        regCtrl(Key.DIGIT4);\n\n        /* ctrl-] or ctrl-5 (035/29/0x1D - GS).  */\n        regCtrl(Key.BRACKET_RIGHT);\n        regCtrl(Key.DIGIT5);\n\n        /* ctrl-6 (036/30/0x1E - RS).  */\n        regCtrl(Key.DIGIT6);\n\n        /* ctrl-7 (037/31/0x1F - US).  */\n        regCtrl(Key.DIGIT7);\n\n        /* ctrl-8 (177/127/0x7F - DEL).  */\n        regCtrl(Key.DIGIT8);\n\n        /* alt-A (0x1B 0x62) through alt-Z (0x1B 0x7A).  */\n        for (let i = 0; i < 26; i++) {\n            regAlt({\n                keyCode: Key.KEY_A.keyCode + i,\n                code: 'Key' + String.fromCharCode('A'.charCodeAt(0) + i)\n            });\n        }\n\n        /* alt-` (0x1B 0x60).  */\n        regAlt(Key.BACKQUOTE);\n\n        /* alt-0 (0x1B 0x30) through alt-9 (0x1B 0x39).  */\n        for (let i = 0; i < 10; i++) {\n            regAlt({\n                keyCode: Key.DIGIT0.keyCode + i,\n                code: 'Digit' + String.fromCharCode('0'.charCodeAt(0) + i)\n            });\n        }\n        if (isOSX) {\n            // selectAll on OSX\n            keybindings.registerKeybinding({\n                command: KeybindingRegistry.PASSTHROUGH_PSEUDO_COMMAND,\n                keybinding: 'ctrlcmd+a',\n                context: TerminalKeybindingContexts.terminalActive\n            });\n        }\n    }\n\n    async newTerminal(options: TerminalWidgetOptions): Promise<TerminalWidget> {\n        const widget = <TerminalWidget>await this.widgetManager.getOrCreateWidget(TERMINAL_WIDGET_FACTORY_ID, <TerminalWidgetFactoryOptions>{\n            created: new Date().toString(),\n            ...options\n        });\n        return widget;\n    }\n\n    activateTerminal(widget: TerminalWidget, widgetOptions?: ApplicationShell.WidgetOptions): void {\n        this.open(widget, { widgetOptions });\n    }\n\n    // TODO: reuse WidgetOpenHandler.open\n    open(widget: TerminalWidget, options?: WidgetOpenerOptions): void {\n        const op: WidgetOpenerOptions = {\n            mode: 'activate',\n            ...options,\n            widgetOptions: {\n                area: 'bottom',\n                ...(options && options.widgetOptions)\n            }\n        };\n        if (!widget.isAttached) {\n            this.shell.addWidget(widget, op.widgetOptions);\n        }\n        if (op.mode === 'activate') {\n            this.shell.activateWidget(widget.id);\n        } else if (op.mode === 'reveal') {\n            this.shell.revealWidget(widget.id);\n        }\n    }\n\n    protected async selectTerminalCwd(): Promise<string | undefined> {\n        const roots = this.workspaceService.tryGetRoots();\n        return this.quickPick.show(roots.map(\n            ({ uri }) => ({ label: this.labelProvider.getName(new URI(uri)), description: this.labelProvider.getLongName(new URI(uri)), value: uri })\n        ), { placeholder: 'Select current working directory for new terminal' });\n    }\n\n    protected async splitTerminal(widget?: Widget): Promise<void> {\n        const ref = this.getTerminalRef(widget);\n        if (ref) {\n            await this.openTerminal({ ref, mode: 'split-right' });\n        }\n    }\n\n    protected getTerminalRef(widget?: Widget): TerminalWidget | undefined {\n        const ref = widget ? widget : this.shell.currentWidget;\n        return ref instanceof TerminalWidget ? ref : undefined;\n    }\n\n    protected async openTerminal(options?: ApplicationShell.WidgetOptions): Promise<void> {\n        const cwd = await this.selectTerminalCwd();\n        const termWidget = await this.newTerminal({ cwd });\n        termWidget.start();\n        this.open(termWidget, { widgetOptions: options });\n    }\n\n    protected async openActiveWorkspaceTerminal(options?: ApplicationShell.WidgetOptions): Promise<void> {\n        const termWidget = await this.newTerminal({});\n        termWidget.start();\n        this.open(termWidget, { widgetOptions: options });\n    }\n\n    /**\n     * It should be aligned with https://code.visualstudio.com/api/references/theme-color#integrated-terminal-colors\n     */\n    registerColors(colors: ColorRegistry): void {\n        colors.register({\n            id: 'terminal.background',\n            defaults: {\n                dark: 'panel.background',\n                light: 'panel.background',\n                hc: 'panel.background'\n            },\n            description: 'The background color of the terminal, this allows coloring the terminal differently to the panel.'\n        });\n        colors.register({\n            id: 'terminal.foreground',\n            defaults: {\n                light: '#333333',\n                dark: '#CCCCCC',\n                hc: '#FFFFFF'\n            },\n            description: 'The foreground color of the terminal.'\n        });\n        colors.register({\n            id: 'terminalCursor.foreground',\n            description: 'The foreground color of the terminal cursor.'\n        });\n        colors.register({\n            id: 'terminalCursor.background',\n            description: 'The background color of the terminal cursor. Allows customizing the color of a character overlapped by a block cursor.'\n        });\n        colors.register({\n            id: 'terminal.selectionBackground',\n            defaults: {\n                light: '#00000040',\n                dark: '#FFFFFF40',\n                hc: '#FFFFFF80'\n            },\n            description: 'The selection background color of the terminal.'\n        });\n        colors.register({\n            id: 'terminal.border',\n            defaults: {\n                light: 'panel.border',\n                dark: 'panel.border',\n                hc: 'panel.border'\n            },\n            description: 'The color of the border that separates split panes within the terminal. This defaults to panel.border.'\n        });\n        // eslint-disable-next-line guard-for-in\n        for (const id in terminalAnsiColorMap) {\n            const entry = terminalAnsiColorMap[id];\n            const colorName = id.substring(13);\n            colors.register({\n                id,\n                defaults: entry.defaults,\n                description: `'${colorName}'  ANSI color in the terminal.`\n            });\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport '../../src/browser/style/terminal.css';\nimport 'xterm/css/xterm.css';\n\nimport { ContainerModule, Container } from 'inversify';\nimport { CommandContribution, MenuContribution } from '@theia/core/lib/common';\nimport { bindContributionProvider } from '@theia/core';\nimport { KeybindingContribution, WebSocketConnectionProvider, WidgetFactory, KeybindingContext, QuickOpenContribution } from '@theia/core/lib/browser';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { TerminalFrontendContribution } from './terminal-frontend-contribution';\nimport { TerminalWidgetImpl, TERMINAL_WIDGET_FACTORY_ID } from './terminal-widget-impl';\nimport { TerminalWidget, TerminalWidgetOptions } from './base/terminal-widget';\nimport { ITerminalServer, terminalPath } from '../common/terminal-protocol';\nimport { TerminalWatcher } from '../common/terminal-watcher';\nimport { IShellTerminalServer, shellTerminalPath, ShellTerminalServerProxy } from '../common/shell-terminal-protocol';\nimport { TerminalActiveContext, TerminalSearchVisibleContext } from './terminal-keybinding-contexts';\nimport { createCommonBindings } from '../common/terminal-common-module';\nimport { TerminalService } from './base/terminal-service';\nimport { bindTerminalPreferences } from './terminal-preferences';\nimport { URLMatcher, LocalhostMatcher } from './terminal-linkmatcher';\nimport { TerminalContribution } from './terminal-contribution';\nimport { TerminalLinkmatcherFiles } from './terminal-linkmatcher-files';\nimport { TerminalLinkmatcherDiffPre, TerminalLinkmatcherDiffPost } from './terminal-linkmatcher-diff';\nimport { TerminalSearchWidgetFactory } from './search/terminal-search-widget';\nimport { TerminalQuickOpenService, TerminalQuickOpenContribution } from './terminal-quick-open-service';\nimport { createTerminalSearchFactory } from './search/terminal-search-container';\nimport { TerminalCopyOnSelectionHandler } from './terminal-copy-on-selection-handler';\nimport { ColorContribution } from '@theia/core/lib/browser/color-application-contribution';\nimport { TerminalThemeService } from './terminal-theme-service';\n\nexport default new ContainerModule(bind => {\n    bindTerminalPreferences(bind);\n    bind(KeybindingContext).to(TerminalActiveContext).inSingletonScope();\n    bind(KeybindingContext).to(TerminalSearchVisibleContext).inSingletonScope();\n\n    bind(TerminalWidget).to(TerminalWidgetImpl).inTransientScope();\n    bind(TerminalWatcher).toSelf().inSingletonScope();\n\n    let terminalNum = 0;\n    bind(WidgetFactory).toDynamicValue(ctx => ({\n        id: TERMINAL_WIDGET_FACTORY_ID,\n        createWidget: (options: TerminalWidgetOptions) => {\n            const child = new Container({ defaultScope: 'Singleton' });\n            child.parent = ctx.container;\n            const counter = terminalNum++;\n            const domId = options.id || 'terminal-' + counter;\n            const widgetOptions: TerminalWidgetOptions = {\n                title: 'Terminal ' + counter,\n                useServerTitle: true,\n                destroyTermOnClose: true,\n                ...options\n            };\n            child.bind(TerminalWidgetOptions).toConstantValue(widgetOptions);\n            child.bind('terminal-dom-id').toConstantValue(domId);\n\n            child.bind(TerminalSearchWidgetFactory).toDynamicValue(context => createTerminalSearchFactory(context.container));\n\n            return child.get(TerminalWidget);\n        }\n    }));\n\n    bind(TerminalQuickOpenService).toSelf().inSingletonScope();\n    bind(TerminalCopyOnSelectionHandler).toSelf().inSingletonScope();\n\n    bind(TerminalQuickOpenContribution).toSelf().inSingletonScope();\n    for (const identifier of [CommandContribution, QuickOpenContribution]) {\n        bind(identifier).toService(TerminalQuickOpenContribution);\n    }\n\n    bind(TerminalThemeService).toSelf().inSingletonScope();\n    bind(TerminalFrontendContribution).toSelf().inSingletonScope();\n    bind(TerminalService).toService(TerminalFrontendContribution);\n    for (const identifier of [CommandContribution, MenuContribution, KeybindingContribution, TabBarToolbarContribution, ColorContribution]) {\n        bind(identifier).toService(TerminalFrontendContribution);\n    }\n\n    bind(ITerminalServer).toDynamicValue(ctx => {\n        const connection = ctx.container.get(WebSocketConnectionProvider);\n        const terminalWatcher = ctx.container.get(TerminalWatcher);\n        return connection.createProxy<ITerminalServer>(terminalPath, terminalWatcher.getTerminalClient());\n    }).inSingletonScope();\n\n    bind(ShellTerminalServerProxy).toDynamicValue(ctx => {\n        const connection = ctx.container.get(WebSocketConnectionProvider);\n        const terminalWatcher = ctx.container.get(TerminalWatcher);\n        return connection.createProxy<IShellTerminalServer>(shellTerminalPath, terminalWatcher.getTerminalClient());\n    }).inSingletonScope();\n    bind(IShellTerminalServer).toService(ShellTerminalServerProxy);\n\n    createCommonBindings(bind);\n\n    // link matchers\n    bindContributionProvider(bind, TerminalContribution);\n\n    bind(URLMatcher).toSelf().inSingletonScope();\n    bind(TerminalContribution).toService(URLMatcher);\n\n    bind(LocalhostMatcher).toSelf().inSingletonScope();\n    bind(TerminalContribution).toService(LocalhostMatcher);\n\n    bind(TerminalLinkmatcherFiles).toSelf().inSingletonScope();\n    bind(TerminalContribution).toService(TerminalLinkmatcherFiles);\n\n    bind(TerminalLinkmatcherDiffPre).toSelf().inSingletonScope();\n    bind(TerminalContribution).toService(TerminalLinkmatcherDiffPre);\n\n    bind(TerminalLinkmatcherDiffPost).toSelf().inSingletonScope();\n    bind(TerminalContribution).toService(TerminalLinkmatcherDiffPost);\n});\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { KeybindingContext, ApplicationShell } from '@theia/core/lib/browser';\nimport { TerminalWidget } from './base/terminal-widget';\n\nexport namespace TerminalKeybindingContexts {\n    export const terminalActive = 'terminalActive';\n    export const terminalHideSearch = 'hideSearch';\n}\n\n@injectable()\nexport class TerminalActiveContext implements KeybindingContext {\n    readonly id: string = TerminalKeybindingContexts.terminalActive;\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    isEnabled(): boolean {\n        return this.shell.activeWidget instanceof TerminalWidget;\n    }\n}\n\n@injectable()\nexport class TerminalSearchVisibleContext implements KeybindingContext {\n    readonly id: string = TerminalKeybindingContexts.terminalHideSearch;\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    isEnabled(): boolean {\n        if (!(this.shell.activeWidget instanceof TerminalWidget)) {\n            return false;\n        }\n        const searchWidget = this.shell.activeWidget.getSearchBox();\n        return searchWidget.isVisible;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { TerminalLinkmatcherFiles } from './terminal-linkmatcher-files';\n\n@injectable()\nexport class TerminalLinkmatcherDiffPre extends TerminalLinkmatcherFiles {\n    async getRegExp(): Promise<RegExp> {\n        return /^--- a\\/(\\S*)/;\n    }\n}\n\n@injectable()\nexport class TerminalLinkmatcherDiffPost extends TerminalLinkmatcherFiles {\n    async getRegExp(): Promise<RegExp> {\n        return /^\\+\\+\\+ b\\/(\\S*)/;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { ApplicationServer } from '@theia/core/lib/common/application-protocol';\nimport { OS } from '@theia/core/lib/common';\nimport { OpenerService } from '@theia/core/lib/browser';\nimport { Position } from '@theia/editor/lib/browser';\nimport { AbstractCmdClickTerminalContribution } from './terminal-linkmatcher';\nimport { TerminalWidgetImpl } from './terminal-widget-impl';\nimport { Path } from '@theia/core';\nimport { FileSystem } from '@theia/filesystem/lib/common';\nimport URI from '@theia/core/lib/common/uri';\n\n@injectable()\nexport class TerminalLinkmatcherFiles extends AbstractCmdClickTerminalContribution {\n\n    @inject(ApplicationServer) protected appServer: ApplicationServer;\n    @inject(OpenerService) protected openerService: OpenerService;\n    @inject(FileSystem) protected fileSystem: FileSystem;\n\n    protected backendOs: Promise<OS.Type>;\n\n    @postConstruct()\n    protected init(): void {\n        this.backendOs = this.appServer.getBackendOS();\n    }\n\n    async getRegExp(): Promise<RegExp> {\n        const os = await this.backendOs;\n        const baseLocalLinkClause = os === OS.Type.Windows ? winLocalLinkClause : unixLocalLinkClause;\n        return new RegExp(`${baseLocalLinkClause}(${lineAndColumnClause})`);\n    }\n\n    getValidate(terminalWidget: TerminalWidgetImpl): (link: string) => Promise<boolean> {\n        return async match => {\n            try {\n                const toOpen = await this.toURI(match, await terminalWidget.cwd);\n                if (toOpen) {\n                    // TODO: would be better to ask the opener service, but it returns positively even for unknown files.\n                    const f = await this.fileSystem.getFileStat(toOpen.toString());\n                    // eslint-disable-next-line no-null/no-null\n                    return f !== undefined && f !== null && !f.isDirectory;\n                }\n            } catch (err) {\n                console.trace('Error validating ' + match);\n            }\n            return false;\n        };\n    }\n\n    getHandler(terminalWidget: TerminalWidgetImpl): (event: MouseEvent, link: string) => void {\n        return async (event, fullMatch) => {\n            const toOpen = await this.toURI(fullMatch, await terminalWidget.cwd);\n            if (!toOpen) {\n                return;\n            }\n            const position = await this.extractPosition(fullMatch);\n            let options = {};\n            if (position) {\n                options = {\n                    selection: {\n                        start: position\n                    }\n                };\n            }\n            try {\n                const opener = await this.openerService.getOpener(toOpen, options);\n                opener.open(toOpen, options);\n            } catch (err) {\n                console.error('Cannot open link ' + fullMatch, err);\n            }\n        };\n    }\n\n    protected async toURI(match: string, cwd: URI): Promise<URI | undefined> {\n        const path = await this.extractPath(match);\n        if (!path) {\n            return;\n        }\n        const pathObj = new Path(path);\n        return pathObj.isAbsolute ? cwd.withPath(path) : cwd.resolve(path);\n    }\n\n    protected async extractPosition(link: string): Promise<Position> {\n        const matches: string[] | null = (await this.getRegExp()).exec(link);\n        const info: Position = {\n            line: 1,\n            character: 1\n        };\n\n        if (!matches) {\n            return info;\n        }\n\n        const lineAndColumnMatchIndex = (await this.backendOs) === OS.Type.Windows ? winLineAndColumnMatchIndex : unixLineAndColumnMatchIndex;\n        for (let i = 0; i < lineAndColumnClause.length; i++) {\n            const lineMatchIndex = lineAndColumnMatchIndex + (lineAndColumnClauseGroupCount * i);\n            const rowNumber = matches[lineMatchIndex];\n            if (rowNumber) {\n                info.line = parseInt(rowNumber, 10) - 1;\n                const columnNumber = matches[lineMatchIndex + 2];\n                if (columnNumber) {\n                    info.character = parseInt(columnNumber, 10) - 1;\n                }\n                break;\n            }\n        }\n\n        return info;\n    }\n\n    protected async extractPath(link: string): Promise<string | undefined> {\n        const matches: string[] | null = (await this.getRegExp()).exec(link);\n        if (!matches) {\n            return undefined;\n        }\n        return matches[1];\n    }\n}\n\n// The following regular expressions are taken from:\n// https://github.com/microsoft/vscode/blob/fbbc1aa80332189aa0d3006cb2159b79a9eba480/src/vs/workbench/contrib/terminal/browser/terminalLinkHandler.ts\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst pathPrefix = '(\\\\.\\\\.?|\\\\~)';\nconst pathSeparatorClause = '\\\\/';\n// '\":; are allowed in paths but they are often separators so ignore them\n// Also disallow \\\\ to prevent a catastrophic backtracking case #24798\nconst excludedPathCharactersClause = '[^\\\\0\\\\s!$`&*()\\\\[\\\\]+\\'\":;\\\\\\\\]';\n/** A regex that matches paths in the form /foo, ~/foo, ./foo, ../foo, foo/bar */\nconst unixLocalLinkClause = '((' + pathPrefix + '|(' + excludedPathCharactersClause + ')+)?(' + pathSeparatorClause + '(' + excludedPathCharactersClause + ')+)+)';\n\nconst winDrivePrefix = '[a-zA-Z]:';\nconst winPathPrefix = '(' + winDrivePrefix + '|\\\\.\\\\.?|\\\\~)';\nconst winPathSeparatorClause = '(\\\\\\\\|\\\\/)';\nconst winExcludedPathCharactersClause = '[^\\\\0<>\\\\?\\\\|\\\\/\\\\s!$`&*()\\\\[\\\\]+\\'\":;]';\n/** A regex that matches paths in the form c:\\foo, ~\\foo, .\\foo, ..\\foo, foo\\bar */\nconst winLocalLinkClause = '((' + winPathPrefix + '|(' + winExcludedPathCharactersClause + ')+)?(' + winPathSeparatorClause + '(' + winExcludedPathCharactersClause + ')+)+)';\n\n/** As xterm reads from DOM, space in that case is non-breaking char ASCII code - 160, replacing space with nonBreakingSpace or space ASCII code - 32. */\nconst lineAndColumnClause = [\n    // \"(file path)\", line 45 [see #40468]\n    '((\\\\S*)\", line ((\\\\d+)( column (\\\\d+))?))',\n    // (file path) on line 8, column 13\n    '((\\\\S*) on line ((\\\\d+)(, column (\\\\d+))?))',\n    // (file path):line 8, column 13\n    '((\\\\S*):line ((\\\\d+)(, column (\\\\d+))?))',\n    // (file path)(45), (file path) (45), (file path)(45,18), (file path) (45,18), (file path)(45, 18), (file path) (45, 18), also with []\n    '(([^\\\\s\\\\(\\\\)]*)(\\\\s?[\\\\(\\\\[](\\\\d+)(,\\\\s?(\\\\d+))?)[\\\\)\\\\]])',\n    // (file path):336, (file path):336:9\n    '(([^:\\\\s\\\\(\\\\)<>\\'\\\"\\\\[\\\\]]*)(:(\\\\d+))?(:(\\\\d+))?)'\n].join('|').replace(/ /g, `[${'\\u00A0'} ]`);\n\n// Changing any regex may effect this value, hence changes this as well if required.\nconst winLineAndColumnMatchIndex = 12;\nconst unixLineAndColumnMatchIndex = 11;\n\n// Each line and column clause have 6 groups (ie no. of expressions in round brackets)\nconst lineAndColumnClauseGroupCount = 6;\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { isOSX, } from '@theia/core';\nimport { TerminalContribution } from './terminal-contribution';\nimport { TerminalWidgetImpl } from './terminal-widget-impl';\nimport { open, OpenerService } from '@theia/core/lib/browser/opener-service';\nimport URI from '@theia/core/lib/common/uri';\n\n@injectable()\nexport abstract class AbstractCmdClickTerminalContribution implements TerminalContribution {\n\n    abstract getRegExp(terminalWidget: TerminalWidgetImpl): Promise<RegExp>;\n    abstract getHandler(terminalWidget: TerminalWidgetImpl): (event: MouseEvent, text: string) => void;\n    getValidate(terminalWidget: TerminalWidgetImpl): (text: string) => Promise<boolean> {\n        return () => Promise.resolve(true);\n    }\n\n    async onCreate(terminalWidget: TerminalWidgetImpl): Promise<void> {\n        const term = terminalWidget.getTerminal();\n        const regexp = await this.getRegExp(terminalWidget);\n        const handler = this.getHandler(terminalWidget);\n        const validate = this.getValidate(terminalWidget);\n        const wrappedHandler = (event: MouseEvent, match: string) => {\n            event.preventDefault();\n            if (this.isCommandPressed(event) || this.wasTouchEvent(event, terminalWidget.lastTouchEndEvent)) {\n                handler(event, match);\n            } else {\n                term.focus();\n            }\n        };\n        const matcherId = term.registerLinkMatcher(regexp, wrappedHandler, {\n            willLinkActivate: (event: MouseEvent, uri: string) => this.isCommandPressed(event) || this.wasTouchEvent(event, terminalWidget.lastTouchEndEvent),\n            tooltipCallback: (event: MouseEvent, uri: string) => {\n                if (!this.wasTouchEvent(event, terminalWidget.lastTouchEndEvent)) {\n                    terminalWidget.showHoverMessage(event.clientX, event.clientY, this.getHoverMessage());\n                }\n            },\n            leaveCallback: () => {\n                terminalWidget.hideHover();\n            },\n            validationCallback: async (uri: string, callBack: (isValid: boolean) => void) => {\n                callBack(await validate(uri));\n            }\n        });\n        terminalWidget.onDispose(() => {\n            term.deregisterLinkMatcher(matcherId);\n        });\n    }\n\n    protected isCommandPressed(event: MouseEvent): boolean {\n        return isOSX ? event.metaKey : event.ctrlKey;\n    }\n\n    protected wasTouchEvent(event: MouseEvent, lastTouchEnd: TouchEvent | undefined): boolean {\n        if (!lastTouchEnd) {\n            return false;\n        }\n        if ((event.timeStamp - lastTouchEnd.timeStamp) > 400) {\n            // A 'touchend' event typically precedes a matching 'click' event by 50ms.\n            return false;\n        }\n        if (Math.abs(event.pageX - (lastTouchEnd as unknown as MouseEvent).pageX) > 5) {\n            // Matching 'touchend' and 'click' events typically have the same page coordinates,\n            // plus or minus 1 pixel.\n            return false;\n        }\n        if (Math.abs(event.pageY - (lastTouchEnd as unknown as MouseEvent).pageY) > 5) {\n            return false;\n        }\n        // We have a match! This link was tapped.\n        return true;\n    }\n\n    protected getHoverMessage(): string {\n        if (isOSX) {\n            return 'Cmd + click to follow link';\n        } else {\n            return 'Ctrl + click to follow link';\n        }\n    }\n\n}\n\n@injectable()\nexport class URLMatcher extends AbstractCmdClickTerminalContribution {\n\n    @inject(OpenerService)\n    protected readonly openerService: OpenerService;\n\n    async getRegExp(): Promise<RegExp> {\n        return /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/;\n    }\n\n    getHandler(): (event: MouseEvent, uri: string) => void {\n        return (event: MouseEvent, uri: string) =>\n            open(this.openerService, new URI(uri));\n    }\n}\n\n@injectable()\nexport class LocalhostMatcher extends AbstractCmdClickTerminalContribution {\n\n    @inject(OpenerService)\n    protected readonly openerService: OpenerService;\n\n    async getRegExp(): Promise<RegExp> {\n        return /(https?:\\/\\/)?(localhost|127\\.0\\.0\\.1|0\\.0\\.0\\.0)(:[0-9]{1,5})?([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/;\n    }\n\n    getHandler(): (event: MouseEvent, uri: string) => void {\n        return (event: MouseEvent, matched: string) => {\n            const uri = matched.startsWith('http') ? matched : `http://${matched}`;\n            open(this.openerService, new URI(uri));\n        };\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Bitsler and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport { createPreferenceProxy, PreferenceProxy, PreferenceService, PreferenceContribution, PreferenceSchema } from '@theia/core/lib/browser';\nimport { EDITOR_FONT_DEFAULTS } from '@theia/editor/lib/browser';\n\nexport const TerminalConfigSchema: PreferenceSchema = {\n    type: 'object',\n    properties: {\n        'terminal.enableCopy': {\n            type: 'boolean',\n            description: 'Enable ctrl-c (cmd-c on macOS) to copy selected text',\n            default: true\n        },\n        'terminal.enablePaste': {\n            type: 'boolean',\n            description: 'Enable ctrl-v (cmd-v on macOS) to paste from clipboard',\n            default: true\n        },\n        'terminal.integrated.fontFamily': {\n            type: 'string',\n            description: 'Controls the font family of the terminal.',\n            default: EDITOR_FONT_DEFAULTS.fontFamily\n        },\n        'terminal.integrated.fontSize': {\n            type: 'number',\n            description: 'Controls the font size in pixels of the terminal.',\n            minimum: 6,\n            default: EDITOR_FONT_DEFAULTS.fontSize\n        },\n        'terminal.integrated.fontWeight': {\n            type: 'string',\n            enum: ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'],\n            description: 'The font weight to use within the terminal for non-bold text.',\n            default: 'normal'\n        },\n        'terminal.integrated.fontWeightBold': {\n            type: 'string',\n            enum: ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'],\n            description: 'The font weight to use within the terminal for bold text.',\n            default: 'bold'\n        },\n        'terminal.integrated.drawBoldTextInBrightColors': {\n            description: 'Controls whether to draw bold text in bright colors.',\n            type: 'boolean',\n            default: true,\n        },\n        'terminal.integrated.letterSpacing': {\n            description: 'Controls the letter spacing of the terminal, this is an integer value which represents the amount of additional pixels to add between characters.',\n            type: 'number',\n            default: 1\n        },\n        'terminal.integrated.lineHeight': {\n            description: 'Controls the line height of the terminal, this number is multiplied by the terminal font size to get the actual line-height in pixels.',\n            type: 'number',\n            minimum: 1,\n            default: 1\n        },\n        'terminal.integrated.scrollback': {\n            description: 'Controls the maximum amount of lines the terminal keeps in its buffer.',\n            type: 'number',\n            default: 1000\n        },\n        'terminal.integrated.fastScrollSensitivity': {\n            description: 'Controls the scrolling speed when pressing \\'alt\\'.',\n            type: 'number',\n            default: 5,\n        },\n        'terminal.integrated.rendererType': {\n            description: 'Controls how the terminal is rendered.',\n            type: 'string',\n            enum: ['canvas', 'dom'],\n            default: 'canvas'\n        },\n        'terminal.integrated.copyOnSelection': {\n            description: 'Controls whether text selected in the terminal will be copied to the clipboard.',\n            type: 'boolean',\n            default: false,\n        },\n        'terminal.integrated.cursorBlinking': {\n            description: 'Controls whether the terminal cursor blinks.',\n            type: 'boolean',\n            default: false\n        },\n        'terminal.integrated.cursorStyle': {\n            description: 'Controls the style of the terminal cursor.',\n            enum: ['block', 'underline', 'line'],\n            default: 'block'\n        },\n        'terminal.integrated.cursorWidth': {\n            description: 'Controls the width of the cursor when \\'terminal.integrated.cursorStyle\\' is set to \\'line\\'.',\n            markdownDescription: 'Controls the width of the cursor when `#terminal.integrated.cursorStyle#` is set to `line`.',\n            type: 'number',\n            default: 1\n        },\n    }\n};\n\nexport interface TerminalConfiguration {\n    'terminal.enableCopy': boolean\n    'terminal.enablePaste': boolean\n    'terminal.integrated.fontFamily': string\n    'terminal.integrated.fontSize': number\n    'terminal.integrated.fontWeight': FontWeight\n    'terminal.integrated.fontWeightBold': FontWeight,\n    'terminal.integrated.drawBoldTextInBrightColors': boolean,\n    'terminal.integrated.letterSpacing': number\n    'terminal.integrated.lineHeight': number,\n    'terminal.integrated.scrollback': number,\n    'terminal.integrated.fastScrollSensitivity': number,\n    'terminal.integrated.rendererType': TerminalRendererType,\n    'terminal.integrated.copyOnSelection': boolean,\n    'terminal.integrated.cursorBlinking': boolean,\n    'terminal.integrated.cursorStyle': CursorStyleVSCode,\n    'terminal.integrated.cursorWidth': number\n}\n\ntype FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\nexport type CursorStyle = 'block' | 'underline' | 'bar';\n// VS Code uses 'line' to represent 'bar'. The following conversion is necessary to support their preferences.\nexport type CursorStyleVSCode = CursorStyle | 'line';\nexport type TerminalRendererType = 'canvas' | 'dom';\nexport const DEFAULT_TERMINAL_RENDERER_TYPE = 'canvas';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isTerminalRendererType(arg: any): arg is TerminalRendererType {\n    return typeof arg === 'string' && (arg === 'canvas' || arg === 'dom');\n}\n\nexport const TerminalPreferences = Symbol('TerminalPreferences');\nexport type TerminalPreferences = PreferenceProxy<TerminalConfiguration>;\n\nexport function createTerminalPreferences(preferences: PreferenceService): TerminalPreferences {\n    return createPreferenceProxy(preferences, TerminalConfigSchema);\n}\n\nexport function bindTerminalPreferences(bind: interfaces.Bind): void {\n    bind(TerminalPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        return createTerminalPreferences(preferences);\n    });\n    bind(PreferenceContribution).toConstantValue({ schema: TerminalConfigSchema });\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport {\n    QuickOpenModel, QuickOpenGroupItem, QuickOpenHandler,\n    QuickOpenOptions, QuickOpenItemOptions, QuickOpenMode,\n    PrefixQuickOpenService,\n    QuickOpenContribution, QuickOpenHandlerRegistry, QuickOpenGroupItemOptions\n} from '@theia/core/lib/browser';\nimport { CommandContribution, CommandRegistry, CommandService } from '@theia/core/lib/common';\nimport { TerminalWidget } from './base/terminal-widget';\nimport { TerminalService } from './base/terminal-service';\nimport { TerminalCommands } from './terminal-frontend-contribution';\n\n@injectable()\nexport class TerminalQuickOpenService implements QuickOpenModel, QuickOpenHandler {\n\n    @inject(PrefixQuickOpenService)\n    protected readonly prefixQuickOpenService: PrefixQuickOpenService;\n\n    @inject(CommandService)\n    protected readonly commandService: CommandService;\n\n    @inject(TerminalService)\n    protected readonly terminalService: TerminalService;\n\n    readonly prefix: string = 'term ';\n\n    get description(): string {\n        return 'Show All Opened Terminals';\n    }\n\n    getModel(): QuickOpenModel {\n        return this;\n    }\n\n    getOptions(): QuickOpenOptions {\n        return {\n            fuzzyMatchLabel: {\n                enableSeparateSubstringMatching: true\n            },\n            fuzzyMatchDescription: {\n                enableSeparateSubstringMatching: true\n            }\n        };\n    }\n\n    open(): void {\n        this.prefixQuickOpenService.open(this.prefix);\n    }\n\n    async onType(lookFor: string, acceptor: (items: QuickOpenGroupItem[]) => void): Promise<void> {\n        const terminalItems: QuickOpenGroupItem[] = [];\n\n        // Get the sorted list of currently opened terminal widgets\n        const widgets: TerminalWidget[] = this.terminalService.all\n            .sort((a: TerminalWidget, b: TerminalWidget) => this.compareItems(a, b));\n\n        for (const widget of widgets) {\n            const item = await this.toItem(widget);\n            terminalItems.push(item);\n        }\n        // Append a quick open item to create a new terminal.\n        const createNewTerminalItem = new QuickOpenGroupItem<QuickOpenGroupItemOptions>({\n            label: 'Open New Terminal',\n            iconClass: 'fa fa-plus',\n            run: this.doCreateNewTerminal(),\n            groupLabel: undefined,\n            showBorder: !!terminalItems.length\n        });\n        terminalItems.push(createNewTerminalItem);\n\n        acceptor(terminalItems);\n        return;\n    }\n\n    /**\n     * Compare two terminal widgets by label. If labels are identical, compare by the widget id.\n     * @param a `TerminalWidget` for comparison\n     * @param b `TerminalWidget` for comparison\n     */\n    protected compareItems(a: TerminalWidget, b: TerminalWidget): number {\n        const normalize = (str: string) => str.trim().toLowerCase();\n\n        if (normalize(a.title.label) !== normalize(b.title.label)) {\n            return normalize(a.title.label).localeCompare(normalize(b.title.label));\n        } else {\n            return normalize(a.id).localeCompare(normalize(b.id));\n        }\n    }\n\n    /**\n     * Get the function that can create a new terminal.\n     * @param {TerminalWidget} widget - the terminal widget to be opened.\n     * @returns Function that would create a new terminal if mode === QuickOpenMode.OPEN.\n     */\n    protected doCreateNewTerminal(): (mode: QuickOpenMode) => boolean {\n        return (mode: QuickOpenMode) => {\n            if (mode !== QuickOpenMode.OPEN) {\n                return false;\n            }\n            this.commandService.executeCommand(TerminalCommands.NEW.id);\n            return true;\n        };\n    }\n\n    /**\n     * Convert the terminal widget to the quick open item.\n     * @param {TerminalWidget} widget - the terminal widget.\n     * @returns The quick open group item.\n     */\n    protected async toItem(widget: TerminalWidget): Promise<QuickOpenGroupItem<QuickOpenItemOptions>> {\n        const options: QuickOpenGroupItemOptions = {\n            label: widget.title.label,\n            description: widget.id,\n            tooltip: widget.title.label,\n            hidden: false,\n            run: this.getRunFunction(widget),\n            groupLabel: undefined,\n            showBorder: false\n        };\n        return new QuickOpenGroupItem<QuickOpenGroupItemOptions>(options);\n    }\n\n    /**\n     * Get the function that can open the editor file.\n     * @param {TerminalWidget} widget - the terminal widget to be opened.\n     * @returns Function that would open the terminal if mode === QuickOpenMode.OPEN.\n     */\n    protected getRunFunction(widget: TerminalWidget): (mode: QuickOpenMode) => boolean {\n        return (mode: QuickOpenMode) => {\n            if (mode !== QuickOpenMode.OPEN) {\n                return false;\n            }\n            this.terminalService.open(widget);\n            return true;\n        };\n    }\n}\n\n/**\n * TODO: merge it to TerminalFrontendContribution.\n */\n@injectable()\nexport class TerminalQuickOpenContribution implements CommandContribution, QuickOpenContribution {\n\n    @inject(TerminalQuickOpenService)\n    protected readonly terminalQuickOpenService: TerminalQuickOpenService;\n\n    registerQuickOpenHandlers(handlers: QuickOpenHandlerRegistry): void {\n        handlers.registerHandler(this.terminalQuickOpenService);\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(TerminalCommands.SHOW_ALL_OPENED_TERMINALS, {\n            execute: () => this.terminalQuickOpenService.open()\n        });\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ITheme } from 'xterm';\nimport { injectable, inject } from 'inversify';\nimport { ColorRegistry, ColorDefaults } from '@theia/core/lib/browser/color-registry';\nimport { ThemeService } from '@theia/core/lib/browser/theming';\n\n/**\n * It should be aligned with https://github.com/microsoft/vscode/blob/0dfa355b3ad185a6289ba28a99c141ab9e72d2be/src/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts#L40\n */\nexport const terminalAnsiColorMap: { [key: string]: { index: number, defaults: ColorDefaults } } = {\n    'terminal.ansiBlack': {\n        index: 0,\n        defaults: {\n            light: '#000000',\n            dark: '#000000',\n            hc: '#000000'\n        }\n    },\n    'terminal.ansiRed': {\n        index: 1,\n        defaults: {\n            light: '#cd3131',\n            dark: '#cd3131',\n            hc: '#cd0000'\n        }\n    },\n    'terminal.ansiGreen': {\n        index: 2,\n        defaults: {\n            light: '#00BC00',\n            dark: '#0DBC79',\n            hc: '#00cd00'\n        }\n    },\n    'terminal.ansiYellow': {\n        index: 3,\n        defaults: {\n            light: '#949800',\n            dark: '#e5e510',\n            hc: '#cdcd00'\n        }\n    },\n    'terminal.ansiBlue': {\n        index: 4,\n        defaults: {\n            light: '#0451a5',\n            dark: '#2472c8',\n            hc: '#0000ee'\n        }\n    },\n    'terminal.ansiMagenta': {\n        index: 5,\n        defaults: {\n            light: '#bc05bc',\n            dark: '#bc3fbc',\n            hc: '#cd00cd'\n        }\n    },\n    'terminal.ansiCyan': {\n        index: 6,\n        defaults: {\n            light: '#0598bc',\n            dark: '#11a8cd',\n            hc: '#00cdcd'\n        }\n    },\n    'terminal.ansiWhite': {\n        index: 7,\n        defaults: {\n            light: '#555555',\n            dark: '#e5e5e5',\n            hc: '#e5e5e5'\n        }\n    },\n    'terminal.ansiBrightBlack': {\n        index: 8,\n        defaults: {\n            light: '#666666',\n            dark: '#666666',\n            hc: '#7f7f7f'\n        }\n    },\n    'terminal.ansiBrightRed': {\n        index: 9,\n        defaults: {\n            light: '#cd3131',\n            dark: '#f14c4c',\n            hc: '#ff0000'\n        }\n    },\n    'terminal.ansiBrightGreen': {\n        index: 10,\n        defaults: {\n            light: '#14CE14',\n            dark: '#23d18b',\n            hc: '#00ff00'\n        }\n    },\n    'terminal.ansiBrightYellow': {\n        index: 11,\n        defaults: {\n            light: '#b5ba00',\n            dark: '#f5f543',\n            hc: '#ffff00'\n        }\n    },\n    'terminal.ansiBrightBlue': {\n        index: 12,\n        defaults: {\n            light: '#0451a5',\n            dark: '#3b8eea',\n            hc: '#5c5cff'\n        }\n    },\n    'terminal.ansiBrightMagenta': {\n        index: 13,\n        defaults: {\n            light: '#bc05bc',\n            dark: '#d670d6',\n            hc: '#ff00ff'\n        }\n    },\n    'terminal.ansiBrightCyan': {\n        index: 14,\n        defaults: {\n            light: '#0598bc',\n            dark: '#29b8db',\n            hc: '#00ffff'\n        }\n    },\n    'terminal.ansiBrightWhite': {\n        index: 15,\n        defaults: {\n            light: '#a5a5a5',\n            dark: '#e5e5e5',\n            hc: '#ffffff'\n        }\n    }\n};\n\n@injectable()\nexport class TerminalThemeService {\n\n    @inject(ColorRegistry)\n    protected readonly colorRegistry: ColorRegistry;\n\n    readonly onDidChange = ThemeService.get().onThemeChange;\n\n    get theme(): ITheme {\n        const foregroundColor = this.colorRegistry.getCurrentColor('terminal.foreground');\n        const backgroundColor = this.colorRegistry.getCurrentColor('terminal.background') || this.colorRegistry.getCurrentColor('panel.background');\n        const cursorColor = this.colorRegistry.getCurrentColor('terminalCursor.foreground') || foregroundColor;\n        const cursorAccentColor = this.colorRegistry.getCurrentColor('terminalCursor.background') || backgroundColor;\n        const selectionColor = this.colorRegistry.getCurrentColor('terminal.selectionBackground');\n\n        const theme: ITheme = {\n            background: backgroundColor,\n            foreground: foregroundColor,\n            cursor: cursorColor,\n            cursorAccent: cursorAccentColor,\n            selection: selectionColor\n        };\n        // eslint-disable-next-line guard-for-in\n        for (const id in terminalAnsiColorMap) {\n            const colorId = id.substring(13);\n            const colorName = colorId.charAt(0).toLowerCase() + colorId.slice(1);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (theme as any)[colorName] = this.colorRegistry.getCurrentColor(id);\n        }\n        return theme;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Terminal, RendererType } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { inject, injectable, named, postConstruct } from 'inversify';\nimport { ContributionProvider, Disposable, Event, Emitter, ILogger, DisposableCollection } from '@theia/core';\nimport { Widget, Message, WebSocketConnectionProvider, StatefulWidget, isFirefox, MessageLoop, KeyCode } from '@theia/core/lib/browser';\nimport { isOSX } from '@theia/core/lib/common';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { ShellTerminalServerProxy } from '../common/shell-terminal-protocol';\nimport { terminalsPath } from '../common/terminal-protocol';\nimport { IBaseTerminalServer } from '../common/base-terminal-protocol';\nimport { TerminalWatcher } from '../common/terminal-watcher';\nimport { TerminalWidgetOptions, TerminalWidget } from './base/terminal-widget';\nimport { MessageConnection } from 'vscode-jsonrpc';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { TerminalPreferences, TerminalRendererType, isTerminalRendererType, DEFAULT_TERMINAL_RENDERER_TYPE, CursorStyle } from './terminal-preferences';\nimport { TerminalContribution } from './terminal-contribution';\nimport URI from '@theia/core/lib/common/uri';\nimport { TerminalService } from './base/terminal-service';\nimport { TerminalSearchWidgetFactory, TerminalSearchWidget } from './search/terminal-search-widget';\nimport { TerminalCopyOnSelectionHandler } from './terminal-copy-on-selection-handler';\nimport { TerminalThemeService } from './terminal-theme-service';\n\nexport const TERMINAL_WIDGET_FACTORY_ID = 'terminal';\n\nexport interface TerminalWidgetFactoryOptions extends Partial<TerminalWidgetOptions> {\n    /* a unique string per terminal */\n    created: string\n}\n\n@injectable()\nexport class TerminalWidgetImpl extends TerminalWidget implements StatefulWidget {\n\n    private readonly TERMINAL = 'Terminal';\n    protected readonly onTermDidClose = new Emitter<TerminalWidget>();\n    protected terminalId = -1;\n    protected fitAddon: FitAddon;\n    protected term: Terminal;\n    protected searchBox: TerminalSearchWidget;\n    protected restored = false;\n    protected closeOnDispose = true;\n    protected waitForConnection: Deferred<MessageConnection> | undefined;\n    protected hoverMessage: HTMLDivElement;\n    protected lastTouchEnd: TouchEvent | undefined;\n\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(WebSocketConnectionProvider) protected readonly webSocketConnectionProvider: WebSocketConnectionProvider;\n    @inject(TerminalWidgetOptions) options: TerminalWidgetOptions;\n    @inject(ShellTerminalServerProxy) protected readonly shellTerminalServer: ShellTerminalServerProxy;\n    @inject(TerminalWatcher) protected readonly terminalWatcher: TerminalWatcher;\n    @inject(ILogger) @named('terminal') protected readonly logger: ILogger;\n    @inject('terminal-dom-id') public readonly id: string;\n    @inject(TerminalPreferences) protected readonly preferences: TerminalPreferences;\n    @inject(ContributionProvider) @named(TerminalContribution) protected readonly terminalContributionProvider: ContributionProvider<TerminalContribution>;\n    @inject(TerminalService) protected readonly terminalService: TerminalService;\n    @inject(TerminalSearchWidgetFactory) protected readonly terminalSearchBoxFactory: TerminalSearchWidgetFactory;\n    @inject(TerminalCopyOnSelectionHandler) protected readonly copyOnSelectionHandler: TerminalCopyOnSelectionHandler;\n    @inject(TerminalThemeService) protected readonly themeService: TerminalThemeService;\n\n    protected readonly onDidOpenEmitter = new Emitter<void>();\n    readonly onDidOpen: Event<void> = this.onDidOpenEmitter.event;\n\n    protected readonly toDisposeOnConnect = new DisposableCollection();\n\n    @postConstruct()\n    protected init(): void {\n        this.title.caption = this.options.title || this.TERMINAL;\n        this.title.label = this.options.title || this.TERMINAL;\n        this.title.iconClass = 'fa fa-terminal';\n\n        if (this.options.destroyTermOnClose === true) {\n            this.toDispose.push(Disposable.create(() =>\n                this.term.dispose()\n            ));\n        }\n\n        this.title.closable = true;\n        this.addClass('terminal-container');\n\n        this.term = new Terminal({\n            cursorBlink: this.preferences['terminal.integrated.cursorBlinking'],\n            cursorStyle: this.getCursorStyle(),\n            cursorWidth: this.preferences['terminal.integrated.cursorWidth'],\n            fontFamily: this.preferences['terminal.integrated.fontFamily'],\n            fontSize: this.preferences['terminal.integrated.fontSize'],\n            fontWeight: this.preferences['terminal.integrated.fontWeight'],\n            fontWeightBold: this.preferences['terminal.integrated.fontWeightBold'],\n            drawBoldTextInBrightColors: this.preferences['terminal.integrated.drawBoldTextInBrightColors'],\n            letterSpacing: this.preferences['terminal.integrated.letterSpacing'],\n            lineHeight: this.preferences['terminal.integrated.lineHeight'],\n            scrollback: this.preferences['terminal.integrated.scrollback'],\n            fastScrollSensitivity: this.preferences['terminal.integrated.fastScrollSensitivity'],\n            rendererType: this.getTerminalRendererType(this.preferences['terminal.integrated.rendererType']),\n            theme: this.themeService.theme\n        });\n\n        this.fitAddon = new FitAddon();\n        this.term.loadAddon(this.fitAddon);\n\n        this.hoverMessage = document.createElement('div');\n        this.hoverMessage.textContent = 'Cmd + click to follow link';\n        this.hoverMessage.style.position = 'fixed';\n        // TODO use `var(--theia-editorHoverWidget-foreground) with a newer Monaco version\n        this.hoverMessage.style.color = 'var(--theia-editorWidget-foreground)';\n        this.hoverMessage.style.backgroundColor = 'var(--theia-editorHoverWidget-background)';\n        this.hoverMessage.style.borderColor = 'var(--theia-editorHoverWidget-border)';\n        this.hoverMessage.style.borderWidth = '0.5px';\n        this.hoverMessage.style.borderStyle = 'solid';\n        this.hoverMessage.style.padding = '5px';\n        // Above the xterm.js canvas layers:\n        // https://github.com/xtermjs/xterm.js/blob/ff790236c1b205469f17a21246141f512d844295/src/renderer/Renderer.ts#L41-L46\n        this.hoverMessage.style.zIndex = '10';\n        // Initially invisible:\n        this.hoverMessage.style.display = 'none';\n        this.node.appendChild(this.hoverMessage);\n\n        this.toDispose.push(this.preferences.onPreferenceChanged(change => {\n            const lastSeparator = change.preferenceName.lastIndexOf('.');\n            if (lastSeparator > 0) {\n                let preferenceName = change.preferenceName.substr(lastSeparator + 1);\n                let preferenceValue = this.preferences[change.preferenceName];\n\n                if (preferenceName === 'rendererType') {\n                    const newRendererType: string = this.preferences[change.preferenceName] as string;\n                    if (newRendererType !== this.getTerminalRendererType(newRendererType)) {\n                        // given terminal renderer type is not supported or invalid\n                        preferenceValue = DEFAULT_TERMINAL_RENDERER_TYPE;\n                    }\n                }\n\n                // Convert the terminal preference into a valid `xterm` option.\n                if (preferenceName === 'cursorBlinking') {\n                    preferenceName = 'cursorBlink';\n                } else if (preferenceName === 'cursorStyle') {\n                    preferenceValue = this.getCursorStyle();\n                }\n\n                this.term.setOption(preferenceName, preferenceValue);\n                this.needsResize = true;\n                this.update();\n            }\n        }));\n\n        this.toDispose.push(this.themeService.onDidChange(() => this.term.setOption('theme', this.themeService.theme)));\n        this.attachCustomKeyEventHandler();\n        const titleChangeListenerDispose = this.term.onTitleChange((title: string) => {\n            if (this.options.useServerTitle) {\n                this.title.label = title;\n            }\n        });\n        this.toDispose.push(titleChangeListenerDispose);\n\n        this.toDispose.push(this.terminalWatcher.onTerminalError(({ terminalId, error }) => {\n            if (terminalId === this.terminalId) {\n                this.dispose();\n                this.onTermDidClose.fire(this);\n                this.onTermDidClose.dispose();\n                this.logger.error(`The terminal process terminated. Cause: ${error}`);\n            }\n        }));\n        this.toDispose.push(this.terminalWatcher.onTerminalExit(({ terminalId }) => {\n            if (terminalId === this.terminalId) {\n                this.dispose();\n                this.onTermDidClose.fire(this);\n                this.onTermDidClose.dispose();\n            }\n        }));\n        this.toDispose.push(this.toDisposeOnConnect);\n        this.toDispose.push(this.shellTerminalServer.onDidCloseConnection(() => {\n            const disposable = this.shellTerminalServer.onDidOpenConnection(() => {\n                disposable.dispose();\n                this.reconnectTerminalProcess();\n            });\n            this.toDispose.push(disposable);\n        }));\n        this.toDispose.push(this.onTermDidClose);\n        this.toDispose.push(this.onDidOpenEmitter);\n\n        const touchEndListener = (event: TouchEvent) => {\n            if (this.node.contains(event.target as Node)) {\n                this.lastTouchEnd = event;\n            }\n        };\n        document.addEventListener('touchend', touchEndListener, { passive: true });\n        this.onDispose(() => {\n            document.removeEventListener('touchend', touchEndListener);\n        });\n\n        this.toDispose.push(this.term.onSelectionChange(() => {\n            if (this.copyOnSelection) {\n                this.copyOnSelectionHandler.copy(this.term.getSelection());\n            }\n        }));\n\n        for (const contribution of this.terminalContributionProvider.getContributions()) {\n            contribution.onCreate(this);\n        }\n\n        this.searchBox = this.terminalSearchBoxFactory(this.term);\n        this.toDispose.push(this.searchBox);\n    }\n\n    /**\n     * Get the cursor style compatible with `xterm`.\n     * @returns CursorStyle\n     */\n    private getCursorStyle(): CursorStyle {\n        const value = this.preferences['terminal.integrated.cursorStyle'];\n        return value === 'line' ? 'bar' : value;\n    }\n\n    /**\n     * Returns given renderer type if it is valid and supported or default renderer otherwise.\n     *\n     * @param terminalRendererType desired terminal renderer type\n     */\n    private getTerminalRendererType(terminalRendererType?: string | TerminalRendererType): RendererType {\n        if (terminalRendererType && isTerminalRendererType(terminalRendererType)) {\n            return terminalRendererType;\n        }\n        return DEFAULT_TERMINAL_RENDERER_TYPE;\n    }\n\n    showHoverMessage(x: number, y: number, message: string): void {\n        this.hoverMessage.innerText = message;\n        this.hoverMessage.style.display = 'inline';\n        this.hoverMessage.style.top = `${y - 30}px`;\n        this.hoverMessage.style.left = `${x - 60}px`;\n    }\n\n    hideHover(): void {\n        this.hoverMessage.style.display = 'none';\n    }\n\n    getTerminal(): Terminal {\n        return this.term;\n    }\n\n    getSearchBox(): TerminalSearchWidget {\n        return this.searchBox;\n    }\n\n    get cwd(): Promise<URI> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        if (this.terminalService.getById(this.id)) {\n            return this.shellTerminalServer.getCwdURI(this.terminalId)\n                .then(cwdUrl => new URI(cwdUrl));\n        }\n        return Promise.resolve(new URI());\n    }\n\n    get processId(): Promise<number> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        return this.shellTerminalServer.getProcessId(this.terminalId);\n    }\n\n    get lastTouchEndEvent(): TouchEvent | undefined {\n        return this.lastTouchEnd;\n    }\n\n    onDispose(onDispose: () => void): void {\n        this.toDispose.push(Disposable.create(onDispose));\n    }\n\n    clearOutput(): void {\n        this.term.clear();\n    }\n\n    async hasChildProcesses(): Promise<boolean> {\n        return this.shellTerminalServer.hasChildProcesses(await this.processId);\n    }\n\n    storeState(): object {\n        this.closeOnDispose = false;\n        return { terminalId: this.terminalId, titleLabel: this.title.label };\n    }\n\n    restoreState(oldState: object): void {\n        if (this.restored === false) {\n            const state = oldState as { terminalId: number, titleLabel: string };\n            /* This is a workaround to issue #879 */\n            this.restored = true;\n            this.title.label = state.titleLabel;\n            this.start(state.terminalId);\n        }\n    }\n\n    /**\n     * Create a new shell terminal in the back-end and attach it to a\n     * new terminal widget.\n     * If id is provided attach to the terminal for this id.\n     */\n    async start(id?: number): Promise<number> {\n        this.terminalId = typeof id !== 'number' ? await this.createTerminal() : await this.attachTerminal(id);\n        this.resizeTerminalProcess();\n        this.connectTerminalProcess();\n        if (IBaseTerminalServer.validateId(this.terminalId)) {\n            this.onDidOpenEmitter.fire(undefined);\n            return this.terminalId;\n        }\n        throw new Error('Failed to start terminal' + (id ? ` for id: ${id}.` : '.'));\n    }\n\n    protected async attachTerminal(id: number): Promise<number> {\n        const terminalId = await this.shellTerminalServer.attach(id);\n        if (IBaseTerminalServer.validateId(terminalId)) {\n            return terminalId;\n        }\n        this.logger.error(`Error attaching to terminal id ${id}, the terminal is most likely gone. Starting up a new terminal instead.`);\n        return this.createTerminal();\n    }\n\n    protected async createTerminal(): Promise<number> {\n        let rootURI = this.options.cwd;\n        if (!rootURI) {\n            const root = (await this.workspaceService.roots)[0];\n            rootURI = root && root.uri;\n        }\n        const { cols, rows } = this.term;\n\n        const terminalId = await this.shellTerminalServer.create({\n            shell: this.options.shellPath,\n            args: this.options.shellArgs,\n            env: this.options.env,\n            rootURI,\n            cols,\n            rows\n        });\n        if (IBaseTerminalServer.validateId(terminalId)) {\n            return terminalId;\n        }\n        throw new Error('Error creating terminal widget, see the backend error log for more information.');\n    }\n\n    processMessage(msg: Message): void {\n        super.processMessage(msg);\n        switch (msg.type) {\n            case 'fit-request':\n                this.onFitRequest(msg);\n                break;\n            default:\n                break;\n        }\n    }\n    protected onFitRequest(msg: Message): void {\n        super.onFitRequest(msg);\n        MessageLoop.sendMessage(this, Widget.ResizeMessage.UnknownSize);\n    }\n    protected onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.term.focus();\n    }\n    protected onAfterShow(msg: Message): void {\n        super.onAfterShow(msg);\n        this.update();\n    }\n    protected onAfterAttach(msg: Message): void {\n        Widget.attach(this.searchBox, this.node);\n        super.onAfterAttach(msg);\n        this.update();\n    }\n    protected onResize(msg: Widget.ResizeMessage): void {\n        super.onResize(msg);\n        this.needsResize = true;\n        this.update();\n    }\n\n    protected needsResize = true;\n    protected onUpdateRequest(msg: Message): void {\n        super.onUpdateRequest(msg);\n        if (!this.isVisible || !this.isAttached) {\n            return;\n        }\n\n        this.open();\n\n        if (this.needsResize) {\n            this.resizeTerminal();\n            this.needsResize = false;\n\n            this.resizeTerminalProcess();\n        }\n    }\n\n    // Device status code emitted by Xterm.js\n    // Check: https://github.com/xtermjs/xterm.js/blob/release/3.14/src/InputHandler.ts#L1055-L1082\n    protected readonly deviceStatusCodes = new Set(['\\u001B[>0;276;0c', '\\u001B[>85;95;0c', '\\u001B[>83;40003;0c', '\\u001B[?1;2c', '\\u001B[?6c']);\n\n    protected connectTerminalProcess(): void {\n        if (typeof this.terminalId !== 'number') {\n            return;\n        }\n        this.toDisposeOnConnect.dispose();\n        this.toDispose.push(this.toDisposeOnConnect);\n        this.term.reset();\n        const waitForConnection = this.waitForConnection = new Deferred<MessageConnection>();\n        this.webSocketConnectionProvider.listen({\n            path: `${terminalsPath}/${this.terminalId}`,\n            onConnection: connection => {\n                connection.onNotification('onData', (data: string) => this.write(data));\n\n                // Excludes the device status code emitted by Xterm.js\n                const sendData = (data?: string) => {\n                    if (data && !this.deviceStatusCodes.has(data)) {\n                        return connection.sendRequest('write', data);\n                    }\n                };\n\n                const disposable = this.term.onData(sendData);\n                connection.onDispose(() => disposable.dispose());\n\n                this.toDisposeOnConnect.push(connection);\n                connection.listen();\n                if (waitForConnection) {\n                    waitForConnection.resolve(connection);\n                }\n            }\n        }, { reconnecting: false });\n    }\n    protected async reconnectTerminalProcess(): Promise<void> {\n        if (typeof this.terminalId === 'number') {\n            await this.start(this.terminalId);\n        }\n    }\n\n    protected termOpened = false;\n    protected initialData = '';\n    protected open(): void {\n        if (this.termOpened) {\n            return;\n        }\n        this.term.open(this.node);\n        if (this.initialData) {\n            this.term.write(this.initialData);\n        }\n        this.termOpened = true;\n        this.initialData = '';\n\n        if (isFirefox) {\n            // The software scrollbars don't work with xterm.js, so we disable the scrollbar if we are on firefox.\n            if (this.term.element) {\n                (this.term.element.children.item(0) as HTMLElement).style.overflow = 'hidden';\n            }\n        }\n    }\n    protected write(data: string): void {\n        if (this.termOpened) {\n            this.term.write(data);\n        } else {\n            this.initialData += data;\n        }\n    }\n\n    sendText(text: string): void {\n        if (this.waitForConnection) {\n            this.waitForConnection.promise.then(connection =>\n                connection.sendRequest('write', text)\n            );\n        }\n    }\n\n    scrollLineUp(): void {\n        this.term.scrollLines(-1);\n    }\n\n    scrollLineDown(): void {\n        this.term.scrollLines(1);\n    }\n\n    scrollToTop(): void {\n        this.term.scrollToTop();\n    }\n\n    scrollPageUp(): void {\n        this.term.scrollPages(-1);\n    }\n\n    scrollPageDown(): void {\n        this.term.scrollPages(1);\n    }\n\n    get onTerminalDidClose(): Event<TerminalWidget> {\n        return this.onTermDidClose.event;\n    }\n\n    dispose(): void {\n        /* Close the backend terminal only when explicitly closing the terminal\n         * a refresh for example won't close it.  */\n        if (this.closeOnDispose === true && typeof this.terminalId === 'number') {\n            this.shellTerminalServer.close(this.terminalId);\n            this.onTermDidClose.fire(this);\n            this.onTermDidClose.dispose();\n        }\n        super.dispose();\n    }\n\n    protected resizeTerminal(): void {\n        const geo = this.fitAddon.proposeDimensions();\n        const cols = geo.cols;\n        const rows = geo.rows - 1; // subtract one row for margin\n        this.term.resize(cols, rows);\n    }\n\n    protected resizeTerminalProcess(): void {\n        if (!IBaseTerminalServer.validateId(this.terminalId)\n            && !this.terminalService.getById(this.id)) {\n            return;\n        }\n        const { cols, rows } = this.term;\n        this.shellTerminalServer.resize(this.terminalId, cols, rows);\n    }\n\n    protected get enableCopy(): boolean {\n        return this.preferences['terminal.enableCopy'];\n    }\n\n    protected get enablePaste(): boolean {\n        return this.preferences['terminal.enablePaste'];\n    }\n\n    protected customKeyHandler(event: KeyboardEvent): boolean {\n        const keyBindings = KeyCode.createKeyCode(event).toString();\n        const ctrlCmdCopy = (isOSX && keyBindings === 'meta+c') || (!isOSX && keyBindings === 'ctrl+c');\n        const ctrlCmdPaste = (isOSX && keyBindings === 'meta+v') || (!isOSX && keyBindings === 'ctrl+v');\n        if (ctrlCmdCopy && this.enableCopy && this.term.hasSelection()) {\n            return false;\n        }\n        if (ctrlCmdPaste && this.enablePaste) {\n            return false;\n        }\n        return true;\n    }\n\n    protected get copyOnSelection(): boolean {\n        return this.preferences['terminal.integrated.copyOnSelection'];\n    }\n\n    protected attachCustomKeyEventHandler(): void {\n        this.term.attachCustomKeyEventHandler(e => this.customKeyHandler(e));\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { JsonRpcServer } from '@theia/core/lib/common/messaging/proxy-factory';\nimport { Disposable } from '@theia/core';\n\nexport interface IBaseTerminalServerOptions { }\n\nexport interface IBaseTerminalServer extends JsonRpcServer<IBaseTerminalClient> {\n    create(IBaseTerminalServerOptions: object): Promise<number>;\n    getProcessId(id: number): Promise<number>;\n    getCwdURI(id: number): Promise<string>;\n    resize(id: number, cols: number, rows: number): Promise<void>;\n    attach(id: number): Promise<number>;\n    close(id: number): Promise<void>;\n    getDefaultShell(): Promise<string>;\n}\nexport namespace IBaseTerminalServer {\n    export function validateId(id?: number): boolean {\n        return typeof id === 'number' && id !== -1;\n    }\n}\n\nexport interface IBaseTerminalExitEvent {\n    terminalId: number;\n\n    // Exactly one of code and signal will be set.\n    code?: number;\n    signal?: string;\n}\n\nexport interface IBaseTerminalErrorEvent {\n    terminalId: number;\n    error: Error\n}\n\nexport interface IBaseTerminalClient {\n    onTerminalExitChanged(event: IBaseTerminalExitEvent): void;\n    onTerminalError(event: IBaseTerminalErrorEvent): void;\n}\n\nexport class DispatchingBaseTerminalClient {\n\n    protected readonly clients = new Set<IBaseTerminalClient>();\n\n    push(client: IBaseTerminalClient): Disposable {\n        this.clients.add(client);\n        return Disposable.create(() => this.clients.delete(client));\n    }\n\n    onTerminalExitChanged(event: IBaseTerminalExitEvent): void {\n        this.clients.forEach(c => {\n            try {\n                c.onTerminalExitChanged(event);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    onTerminalError(event: IBaseTerminalErrorEvent): void {\n\n        this.clients.forEach(c => {\n            try {\n                c.onTerminalError(event);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { JsonRpcProxy } from '@theia/core';\nimport { IBaseTerminalServer, IBaseTerminalServerOptions } from './base-terminal-protocol';\n\nexport const IShellTerminalServer = Symbol('IShellTerminalServer');\n\nexport interface IShellTerminalServer extends IBaseTerminalServer {\n    hasChildProcesses(processId: number | undefined): Promise<boolean>;\n}\n\nexport const shellTerminalPath = '/services/shell-terminal';\n\nexport interface IShellTerminalServerOptions extends IBaseTerminalServerOptions {\n    shell?: string,\n    args?: string[],\n    rootURI?: string,\n    cols?: number,\n    rows?: number,\n    env?: { [key: string]: string | null };\n}\n\nexport const ShellTerminalServerProxy = Symbol('ShellTerminalServerProxy');\nexport type ShellTerminalServerProxy = JsonRpcProxy<IShellTerminalServer>;\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport { ILogger } from '@theia/core';\n\n/**\n * Create the bindings common to node and browser.\n *\n * @param bind The bind function from inversify.\n */\nexport function createCommonBindings(bind: interfaces.Bind): void {\n    bind(ILogger).toDynamicValue(ctx => {\n        const logger = ctx.container.get<ILogger>(ILogger);\n        return logger.child('terminal');\n    }).inSingletonScope().whenTargetNamed('terminal');\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { IBaseTerminalServer, IBaseTerminalServerOptions } from './base-terminal-protocol';\n\nexport const ITerminalServer = Symbol('ITerminalServer');\n\nexport const terminalPath = '/services/terminal';\nexport const terminalsPath = '/services/terminals';\n\nexport interface ITerminalServer extends IBaseTerminalServer {\n    create(ITerminalServerOptions: object): Promise<number>;\n}\n\nexport interface ITerminalServerOptions extends IBaseTerminalServerOptions {\n    command: string,\n    args?: string[],\n    options?: object\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { IBaseTerminalClient, IBaseTerminalExitEvent, IBaseTerminalErrorEvent } from './base-terminal-protocol';\n\n@injectable()\nexport class TerminalWatcher {\n\n    getTerminalClient(): IBaseTerminalClient {\n        const exitEmitter = this.onTerminalExitEmitter;\n        const errorEmitter = this.onTerminalErrorEmitter;\n        return {\n            onTerminalExitChanged(event: IBaseTerminalExitEvent): void {\n                exitEmitter.fire(event);\n            },\n            onTerminalError(event: IBaseTerminalErrorEvent): void {\n                errorEmitter.fire(event);\n            }\n        };\n    }\n\n    private onTerminalExitEmitter = new Emitter<IBaseTerminalExitEvent>();\n    private onTerminalErrorEmitter = new Emitter<IBaseTerminalErrorEvent>();\n\n    get onTerminalExit(): Event<IBaseTerminalExitEvent> {\n        return this.onTerminalExitEmitter.event;\n    }\n\n    get onTerminalError(): Event<IBaseTerminalErrorEvent> {\n        return this.onTerminalErrorEmitter.event;\n    }\n}\n","\nvar content = require(\"!!../../../../../css-loader/index.js!./terminal-search.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../css-loader/index.js!./terminal-search.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../css-loader/index.js!./terminal-search.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../../css-loader/index.js!./terminal.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../css-loader/index.js!./terminal.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../css-loader/index.js!./terminal.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2019 Red Hat, Inc. and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-search-terminal-widget-parent {\\n    background: var(--theia-sideBar-background);\\n    position: absolute;\\n    margin: 0px;\\n    border: var(--theia-border-width) solid transparent;\\n    padding: 0px;\\n    top: 1px;\\n    right: 19px;\\n\\n    z-index: 10;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box {\\n    display: flex;\\n    margin: 0px;\\n    border: var(--theia-border-width) solid transparent;\\n    padding: 0px;\\n    align-items: center;\\n    color: var(--theia-input-foreground);\\n    background: var(--theia-input-background);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box input {\\n    margin-left: 5px;\\n    padding: 0px;\\n    width: 100px;\\n    height: 18px;\\n    color: inherit;\\n    background-color: inherit;\\n    border: var(--theia-border-width) solid transparent;\\n    outline: none;\\n}\\n\\n.theia-search-terminal-widget-parent .search-elem {\\n    border: var(--theia-border-width) solid transparent;\\n    background-position: center;\\n    background-repeat: no-repeat;\\n    height: 18px;\\n    width: 18px;\\n    margin: 1px;\\n    opacity: 0.7;\\n    outline: none;\\n}\\n\\n.theia-search-terminal-widget-parent .search-elem:hover {\\n    opacity: 1;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box.focused {\\n    border: var(--theia-border-width) solid var(--theia-focusBorder);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box .search-elem.option-enabled {\\n    border: var(--theia-border-width) solid var(--theia-inputOption-activeBorder);\\n    background-color: var(--theia-inputOption-activeBackground);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box .whole-word {\\n    background-image: var(--theia-icon-whole-word);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box .match-case {\\n    background-image: var(--theia-icon-case-sensitive);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box .use-regexp {\\n    background-image: var(--theia-icon-regex);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget {\\n    margin: 2px;\\n    display: flex;\\n    align-items: center;\\n    font: var(--theia-content-font-size);\\n    color: var(--theia-input-foreground);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget button {\\n    background-color: transparent;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget button:focus {\\n    border: var(--theia-border-width) var(--theia-focusBorder) solid;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget .search-elem.close {\\n    background-image: var(--theia-icon-close);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget .search-elem.arrow-up {\\n    background-image: var(--theia-icon-arrow-up);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget .search-elem.arrow-down {\\n    background-image: var(--theia-icon-arrow-down);\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2017 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.terminal-container {\\n    width:100%;\\n    height:100%;\\n    padding: var(--theia-code-padding);\\n    background: var(--theia-terminal-background);\\n}\\n\\n.xterm .xterm-screen canvas {\\n  /* fix random 1px white border on terminal in Firefox. See https://github.com/eclipse-theia/theia/issues/4665 */\\n  border: 1px solid var(--theia-terminal-background);\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/**\\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\\n * https://github.com/chjj/term.js\\n * @license MIT\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\n * in the Software without restriction, including without limitation the rights\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n * copies of the Software, and to permit persons to whom the Software is\\n * furnished to do so, subject to the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be included in\\n * all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n * THE SOFTWARE.\\n *\\n * Originally forked from (with the author's permission):\\n *   Fabrice Bellard's javascript vt100 for jslinux:\\n *   http://bellard.org/jslinux/\\n *   Copyright (c) 2011 Fabrice Bellard\\n *   The original design remains. The terminal itself\\n *   has been extended to include xterm CSI codes, among\\n *   other features.\\n */\\n\\n/**\\n *  Default styles for xterm.js\\n */\\n\\n.xterm {\\n    font-feature-settings: \\\"liga\\\" 0;\\n    position: relative;\\n    user-select: none;\\n    -ms-user-select: none;\\n    -webkit-user-select: none;\\n}\\n\\n.xterm.focus,\\n.xterm:focus {\\n    outline: none;\\n}\\n\\n.xterm .xterm-helpers {\\n    position: absolute;\\n    top: 0;\\n    /**\\n     * The z-index of the helpers must be higher than the canvases in order for\\n     * IMEs to appear on top.\\n     */\\n    z-index: 5;\\n}\\n\\n.xterm .xterm-helper-textarea {\\n    /*\\n     * HACK: to fix IE's blinking cursor\\n     * Move textarea out of the screen to the far left, so that the cursor is not visible.\\n     */\\n    position: absolute;\\n    opacity: 0;\\n    left: -9999em;\\n    top: 0;\\n    width: 0;\\n    height: 0;\\n    z-index: -5;\\n    /** Prevent wrapping so the IME appears against the textarea at the correct position */\\n    white-space: nowrap;\\n    overflow: hidden;\\n    resize: none;\\n}\\n\\n.xterm .composition-view {\\n    /* TODO: Composition position got messed up somewhere */\\n    background: #000;\\n    color: #FFF;\\n    display: none;\\n    position: absolute;\\n    white-space: nowrap;\\n    z-index: 1;\\n}\\n\\n.xterm .composition-view.active {\\n    display: block;\\n}\\n\\n.xterm .xterm-viewport {\\n    /* On OS X this is required in order for the scroll bar to appear fully opaque */\\n    background-color: #000;\\n    overflow-y: scroll;\\n    cursor: default;\\n    position: absolute;\\n    right: 0;\\n    left: 0;\\n    top: 0;\\n    bottom: 0;\\n}\\n\\n.xterm .xterm-screen {\\n    position: relative;\\n}\\n\\n.xterm .xterm-screen canvas {\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n}\\n\\n.xterm .xterm-scroll-area {\\n    visibility: hidden;\\n}\\n\\n.xterm-char-measure-element {\\n    display: inline-block;\\n    visibility: hidden;\\n    position: absolute;\\n    top: 0;\\n    left: -9999em;\\n    line-height: normal;\\n}\\n\\n.xterm {\\n    cursor: text;\\n}\\n\\n.xterm.enable-mouse-events {\\n    /* When mouse events are enabled (eg. tmux), revert to the standard pointer cursor */\\n    cursor: default;\\n}\\n\\n.xterm.xterm-cursor-pointer {\\n    cursor: pointer;\\n}\\n\\n.xterm.column-select.focus {\\n    /* Column selection mode */\\n    cursor: crosshair;\\n}\\n\\n.xterm .xterm-accessibility,\\n.xterm .xterm-message {\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n    bottom: 0;\\n    right: 0;\\n    z-index: 10;\\n    color: transparent;\\n}\\n\\n.xterm .live-region {\\n    position: absolute;\\n    left: -9999px;\\n    width: 1px;\\n    height: 1px;\\n    overflow: hidden;\\n}\\n\\n.xterm-dim {\\n    opacity: 0.5;\\n}\\n\\n.xterm-underline {\\n    text-decoration: underline;\\n}\\n\", \"\"]);\n\n// exports\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  constructor() {}\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (<any>this._terminal)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (<any>this._terminal)._core;\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - core.viewport.scrollBarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / core._renderService.dimensions.actualCellWidth)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / core._renderService.dimensions.actualCellHeight))\n    };\n    return geometry;\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SearchAddon\"] = factory();\n\telse\n\t\troot[\"SearchAddon\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, IDisposable, ITerminalAddon, ISelectionPosition } from 'xterm';\n\nexport interface ISearchOptions {\n  regex?: boolean;\n  wholeWord?: boolean;\n  caseSensitive?: boolean;\n  incremental?: boolean;\n}\n\nexport interface ISearchPosition {\n  startCol: number;\n  startRow: number;\n}\n\nexport interface ISearchResult {\n  term: string;\n  col: number;\n  row: number;\n}\n\nconst NON_WORD_CHARACTERS = ' ~!@#$%^&*()+`-=[]{}|\\;:\"\\',./<>?';\nconst LINES_CACHE_TIME_TO_LIVE = 15 * 1000; // 15 secs\n\nexport class SearchAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  /**\n   * translateBufferLineToStringWithWrap is a fairly expensive call.\n   * We memoize the calls into an array that has a time based ttl.\n   * _linesCache is also invalidated when the terminal cursor moves.\n   */\n  private _linesCache: string[] | undefined;\n  private _linesCacheTimeoutId = 0;\n  private _cursorMoveListener: IDisposable | undefined;\n  private _resizeListener: IDisposable | undefined;\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void { }\n\n  /**\n   * Find the next instance of the term, then scroll to and select it. If it\n   * doesn't exist, do nothing.\n   * @param term The search term.\n   * @param searchOptions Search options.\n   * @return Whether a result was found.\n   */\n  public findNext(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n\n    if (!term || term.length === 0) {\n      this._terminal.clearSelection();\n      return false;\n    }\n\n    let startCol = 0;\n    let startRow = 0;\n    let currentSelection: ISelectionPosition | undefined;\n    if (this._terminal.hasSelection()) {\n      const incremental = searchOptions ? searchOptions.incremental : false;\n      // Start from the selection end if there is a selection\n      // For incremental search, use existing row\n      currentSelection = this._terminal.getSelectionPosition()!;\n      startRow = incremental ? currentSelection.startRow : currentSelection.endRow;\n      startCol = incremental ? currentSelection.startColumn : currentSelection.endColumn;\n    }\n\n    this._initLinesCache();\n\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    // Search startRow\n    let result = this._findInLine(term, searchPosition, searchOptions);\n\n    // Search from startRow + 1 to end\n    if (!result) {\n\n      for (let y = startRow + 1; y < this._terminal.buffer.baseY + this._terminal.rows; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        // If the current line is wrapped line, increase index of column to ignore the previous scan\n        // Otherwise, reset beginning column index to zero with set new unwrapped line index\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n    // If we hit the bottom and didn't search from the very top wrap back up\n    if (!result && startRow !== 0) {\n      for (let y = 0; y < startRow; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    // If there is only one result, return true.\n    if (!result && currentSelection) return true;\n\n    // Set selection and scroll if a result was found\n    return this._selectResult(result);\n  }\n\n  /**\n   * Find the previous instance of the term, then scroll to and select it. If it\n   * doesn't exist, do nothing.\n   * @param term The search term.\n   * @param searchOptions Search options.\n   * @return Whether a result was found.\n   */\n  public findPrevious(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n\n    if (!term || term.length === 0) {\n      this._terminal.clearSelection();\n      return false;\n    }\n\n    const isReverseSearch = true;\n    let startRow = this._terminal.buffer.baseY + this._terminal.rows;\n    let startCol = this._terminal.cols;\n    let result: ISearchResult | undefined;\n    const incremental = searchOptions ? searchOptions.incremental : false;\n    let currentSelection: ISelectionPosition | undefined;\n    if (this._terminal.hasSelection()) {\n      currentSelection = this._terminal.getSelectionPosition()!;\n      // Start from selection start if there is a selection\n      startRow = currentSelection.startRow;\n      startCol = currentSelection.startColumn;\n    }\n\n    this._initLinesCache();\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    if (incremental) {\n      result = this._findInLine(term, searchPosition, searchOptions, false);\n      if (!(result && result.row === startRow && result.col === startCol)) {\n        result = this._findInLine(term, searchPosition, searchOptions, true);\n      }\n    } else {\n      result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n    }\n\n    // Search from startRow - 1 to top\n    if (!result) {\n      searchPosition.startCol = Math.max(searchPosition.startCol, this._terminal.cols);\n      for (let y = startRow - 1; y >= 0; y--) {\n        searchPosition.startRow = y;\n        result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n        if (result) {\n          break;\n        }\n      }\n    }\n    // If we hit the top and didn't search from the very bottom wrap back down\n    if (!result && startRow !== (this._terminal.buffer.baseY + this._terminal.rows)) {\n      for (let y = (this._terminal.buffer.baseY + this._terminal.rows); y > startRow; y--) {\n        searchPosition.startRow = y;\n        result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    // If there is only one result, return true.\n    if (!result && currentSelection) return true;\n\n    // Set selection and scroll if a result was found\n    return this._selectResult(result);\n  }\n\n  /**\n   * Sets up a line cache with a ttl\n   */\n  private _initLinesCache(): void {\n    const terminal = this._terminal!;\n    if (!this._linesCache) {\n      this._linesCache = new Array(terminal.buffer.length);\n      this._cursorMoveListener = terminal.onCursorMove(() => this._destroyLinesCache());\n      this._resizeListener = terminal.onResize(() => this._destroyLinesCache());\n    }\n\n    window.clearTimeout(this._linesCacheTimeoutId);\n    this._linesCacheTimeoutId = window.setTimeout(() => this._destroyLinesCache(), LINES_CACHE_TIME_TO_LIVE);\n  }\n\n  private _destroyLinesCache(): void {\n    this._linesCache = undefined;\n    if (this._cursorMoveListener) {\n      this._cursorMoveListener.dispose();\n      this._cursorMoveListener = undefined;\n    }\n    if (this._resizeListener) {\n      this._resizeListener.dispose();\n      this._resizeListener = undefined;\n    }\n    if (this._linesCacheTimeoutId) {\n      window.clearTimeout(this._linesCacheTimeoutId);\n      this._linesCacheTimeoutId = 0;\n    }\n  }\n\n  /**\n   * A found substring is a whole word if it doesn't have an alphanumeric character directly adjacent to it.\n   * @param searchIndex starting indext of the potential whole word substring\n   * @param line entire string in which the potential whole word was found\n   * @param term the substring that starts at searchIndex\n   */\n  private _isWholeWord(searchIndex: number, line: string, term: string): boolean {\n    return (((searchIndex === 0) || (NON_WORD_CHARACTERS.indexOf(line[searchIndex - 1]) !== -1)) &&\n      (((searchIndex + term.length) === line.length) || (NON_WORD_CHARACTERS.indexOf(line[searchIndex + term.length]) !== -1)));\n  }\n\n  /**\n   * Searches a line for a search term. Takes the provided terminal line and searches the text line, which may contain\n   * subsequent terminal lines if the text is wrapped. If the provided line number is part of a wrapped text line that\n   * started on an earlier line then it is skipped since it will be properly searched when the terminal line that the\n   * text starts on is searched.\n   * @param term The search term.\n   * @param position The position to start the search.\n   * @param searchOptions Search options.\n   * @return The search result if it was found.\n   */\n  protected _findInLine(term: string, searchPosition: ISearchPosition, searchOptions: ISearchOptions = {}, isReverseSearch: boolean = false): ISearchResult | undefined {\n    const terminal = this._terminal!;\n    let row = searchPosition.startRow;\n    const col = searchPosition.startCol;\n\n    // Ignore wrapped lines, only consider on unwrapped line (first row of command string).\n    const firstLine = terminal.buffer.getLine(row);\n    if (firstLine && firstLine.isWrapped) {\n      if (isReverseSearch) {\n        searchPosition.startCol += terminal.cols;\n        return;\n      }\n\n      // This will iterate until we find the line start.\n      // When we find it, we will search using the calculated start column.\n      searchPosition.startRow--;\n      searchPosition.startCol += terminal.cols;\n      return this._findInLine(term, searchPosition, searchOptions);\n    }\n    let stringLine = this._linesCache ? this._linesCache[row] : void 0;\n    if (stringLine === void 0) {\n      stringLine = this._translateBufferLineToStringWithWrap(row, true);\n      if (this._linesCache) {\n        this._linesCache[row] = stringLine;\n      }\n    }\n\n    const searchTerm = searchOptions.caseSensitive ? term : term.toLowerCase();\n    const searchStringLine = searchOptions.caseSensitive ? stringLine : stringLine.toLowerCase();\n\n    let resultIndex = -1;\n    if (searchOptions.regex) {\n      const searchRegex = RegExp(searchTerm, 'g');\n      let foundTerm: RegExpExecArray | null;\n      if (isReverseSearch) {\n        // This loop will get the resultIndex of the _last_ regex match in the range 0..col\n        while (foundTerm = searchRegex.exec(searchStringLine.slice(0, col))) {\n          resultIndex = searchRegex.lastIndex - foundTerm[0].length;\n          term = foundTerm[0];\n          searchRegex.lastIndex -= (term.length - 1);\n        }\n      } else {\n        foundTerm = searchRegex.exec(searchStringLine.slice(col));\n        if (foundTerm && foundTerm[0].length > 0) {\n          resultIndex = col + (searchRegex.lastIndex - foundTerm[0].length);\n          term = foundTerm[0];\n        }\n      }\n    } else {\n      if (isReverseSearch) {\n        if (col - searchTerm.length >= 0) {\n          resultIndex = searchStringLine.lastIndexOf(searchTerm, col - searchTerm.length);\n        }\n      } else {\n        resultIndex = searchStringLine.indexOf(searchTerm, col);\n      }\n    }\n\n    if (resultIndex >= 0) {\n      // Adjust the row number and search index if needed since a \"line\" of text can span multiple rows\n      if (resultIndex >= terminal.cols) {\n        row += Math.floor(resultIndex / terminal.cols);\n        resultIndex = resultIndex % terminal.cols;\n      }\n      if (searchOptions.wholeWord && !this._isWholeWord(resultIndex, searchStringLine, term)) {\n        return;\n      }\n\n      const line = terminal.buffer.getLine(row);\n\n      if (line) {\n        for (let i = 0; i < resultIndex; i++) {\n          const cell = line.getCell(i);\n          if (!cell) {\n            break;\n          }\n          // Adjust the searchIndex to normalize emoji into single chars\n          const char = cell.getChars();\n          if (char.length > 1) {\n            resultIndex -= char.length - 1;\n          }\n          // Adjust the searchIndex for empty characters following wide unicode\n          // chars (eg. CJK)\n          const charWidth = cell.getWidth();\n          if (charWidth === 0) {\n            resultIndex++;\n          }\n        }\n      }\n      return {\n        term,\n        col: resultIndex,\n        row\n      };\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, including subsequent lines if they are wraps.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   */\n  private _translateBufferLineToStringWithWrap(lineIndex: number, trimRight: boolean): string {\n    const terminal = this._terminal!;\n    let lineString = '';\n    let lineWrapsToNext: boolean;\n\n    do {\n      const nextLine = terminal.buffer.getLine(lineIndex + 1);\n      lineWrapsToNext = nextLine ? nextLine.isWrapped : false;\n      const line = terminal.buffer.getLine(lineIndex);\n      if (!line) {\n        break;\n      }\n      lineString += line.translateToString(!lineWrapsToNext && trimRight).substring(0, terminal.cols);\n      lineIndex++;\n    } while (lineWrapsToNext);\n\n    return lineString;\n  }\n\n  /**\n   * Selects and scrolls to a result.\n   * @param result The result to select.\n   * @return Whethera result was selected.\n   */\n  private _selectResult(result: ISearchResult | undefined): boolean {\n    const terminal = this._terminal!;\n    if (!result) {\n      terminal.clearSelection();\n      return false;\n    }\n    terminal.select(result.col, result.row, result.term.length);\n    // If it is not in the viewport then we scroll else it just gets selected\n    if (result.row >= (terminal.buffer.viewportY + terminal.rows) || result.row < terminal.buffer.viewportY) {\n      let scroll = result.row - terminal.buffer.viewportY;\n      scroll = scroll - Math.floor(terminal.rows / 2);\n      terminal.scrollLines(scroll);\n    }\n    return true;\n  }\n}\n","\nvar content = require(\"!!../../css-loader/index.js!./xterm.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../css-loader/index.js!./xterm.css\", function() {\n\t\tvar newContent = require(\"!!../../css-loader/index.js!./xterm.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 32);\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: any;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n\n  // TODO: Move resize event here\n\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): {[event: string]: boolean};\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: any;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n   triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: any;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n  readonly charsets: ReadonlyArray<ICharset>;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n   setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: any;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IConstructorSignature0<T> {\n  new(...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n  new(first: A1, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n  new(first: A1, second: A2, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n  new(first: A1, second: A2, third: A3, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n\n  createInstance<T>(ctor: IConstructorSignature0<T>): T;\n  createInstance<A1, T>(ctor: IConstructorSignature1<A1, T>, first: A1): T;\n  createInstance<A1, A2, T>(ctor: IConstructorSignature2<A1, A2, T>, first: A1, second: A2): T;\n  createInstance<A1, A2, A3, T>(ctor: IConstructorSignature3<A1, A2, A3, T>, first: A1, second: A2, third: A3): T;\n  createInstance<A1, A2, A3, A4, T>(ctor: IConstructorSignature4<A1, A2, A3, A4, T>, first: A1, second: A2, third: A3, fourth: A4): T;\n  createInstance<A1, A2, A3, A4, A5, T>(ctor: IConstructorSignature5<A1, A2, A3, A4, A5, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5): T;\n  createInstance<A1, A2, A3, A4, A5, A6, T>(ctor: IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6): T;\n  createInstance<A1, A2, A3, A4, A5, A6, A7, T>(ctor: IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7): T;\n  createInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8): T;\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: any;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: any;\n\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface IPartialTerminalOptions {\n  allowTransparency?: boolean;\n  bellSound?: string;\n  bellStyle?: 'none' /*| 'visual'*/ | 'sound' /*| 'both'*/;\n  cols?: number;\n  cursorBlink?: boolean;\n  cursorStyle?: 'block' | 'underline' | 'bar';\n  cursorWidth?: number;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  rendererType?: RendererType;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollSensitivity?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  wordSeparator?: string;\n  windowOptions?: IWindowOptions;\n}\n\nexport interface ITerminalOptions {\n  allowTransparency: boolean;\n  bellSound: string;\n  bellStyle: 'none' /*| 'visual'*/ | 'sound' /*| 'both'*/;\n  cols: number;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  convertEol: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    this._disposables.forEach(d => d.dispose());\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   */\n  public register<T extends IDisposable>(d: T): void {\n    this._disposables.push(d);\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..31 (32th bit unused)\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 4 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: any;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: any;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: any;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: any;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n  registerCharacterJoiner(handler: CharacterJoinerHandler): number;\n  deregisterCharacterJoiner(joinerId: number): boolean;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: any;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRedrawRequest: IEvent<ISelectionRedrawRequestEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  isClickInSelection(event: MouseEvent): boolean;\n  selectWordAtCursor(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: any;\n\n  playBellSound(): void;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content: number = 0;\n  public fg: number = 0;\n  public bg: number = 0;\n  public combinedData: string = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n  static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    return newObj;\n  }\n\n  // data\n  public fg: number = 0;\n  public bg: number = 0;\n\n  // flags\n  public isInverse(): number   { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number      { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number     { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number    { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number       { return this.bg & BgFlags.DIM; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF)) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF)) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  useCapture?: boolean\n): IDisposable {\n  node.addEventListener(type, handler, useCapture);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (!disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, useCapture);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor } from 'browser/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    return {\n      css,\n      rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        return reduceLuminance(bgRgba, fgRgba, ratio);\n      }\n      return increaseLuminance(bgRgba, fgRgba, ratio);\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number): IColor {\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = !!~userAgent.indexOf('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = contains(['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'], platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = contains(['Windows', 'Win16', 'Win32', 'WinCE'], platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n\n/**\n * Return if the given array contains the given element\n * @param arr The array to search for the given element.\n * @param el The element to look for into the array\n */\nfunction contains(arr: any[], el: any): boolean {\n  return arr.indexOf(el) >= 0;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'browser/Color';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    this._container.removeChild(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', {alpha: this._alpha}));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = <HTMLCanvasElement>this._canvas.cloneNode();\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.options, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n        width * this._scaledCellWidth,\n        window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        window.devicePixelRatio * width,\n        this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n        x * this._scaledCellWidth + window.devicePixelRatio / 2,\n        y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n        width * this._scaledCellWidth - window.devicePixelRatio,\n        (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = 'middle';\n    this._clipRow(y);\n    this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas && this._charAtlas.draw(\n      this._ctx,\n      this._currentGlyphIdentifier,\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop\n    );\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = 'middle';\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n    this._ctx.restore();\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n        0,\n        y * this._scaledCellHeight,\n        this._bufferService.cols * this._scaledCellWidth,\n        this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.options.fontWeightBold : this._optionsService.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.options.fontSize * window.devicePixelRatio}px ${this._optionsService.options.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData): IColor | undefined {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._optionsService.options.minimumContrastRatio);\n\n    if (!result) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n      return undefined;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.options.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n}\n\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator = <any>function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray\n  | Int8Array | Int16Array | Int32Array\n  | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number): void {\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport let promptLabel = 'Terminal input';\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | null } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | null = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = null;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (values[0] instanceof Array) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (value instanceof Array) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n\n  public addHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setHandler(ident: number, handler: IOscHandler): void {\n    this._handlers[ident] = [handler];\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n  }\n\n  public reset(): void {\n    // cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      this.end(false);\n    }\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = handlers.length - 1; j >= 0; j--) {\n        handlers[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = handlers.length - 1; j >= 0; j--) {\n        handlers[j].put(data, start, end);\n      }\n    }\n  }\n\n  private _end(success: boolean): void {\n    // other than the old code we always have to call .end\n    // to keep the bubbling we use `success` to indicate\n    // whether a handler should execute\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'END', success);\n    } else {\n      let j = handlers.length - 1;\n      for (; j >= 0; j--) {\n        if (handlers[j].end(success) !== false) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        handlers[j].end(false);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._id = -1;\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean): void {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n      this._end(success);\n    }\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => any) {}\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): any {\n    let ret;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => {};\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n  }\n\n  public addHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public setHandler(ident: number, handler: IDcsHandler): void {\n    this._handlers[ident] = [handler];\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    if (this._active.length) {\n      this.unhook(false);\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let j = this._active.length - 1;\n      for (; j >= 0; j--) {\n        if (this._active[j].unhook(success) !== false) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams | undefined;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => any) {}\n\n  public hook(params: IParams): void {\n    this._params = params.clone();\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): any {\n    let ret;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params ? this._params : new Params());\n    }\n    this._params = undefined;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors = <IPartialColorSet>{\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(0, 16)\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'browser/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS. Do not mutate DEFAULT_ANSI_COLORS, instead make a copy\n// and mutate that.\nexport const DEFAULT_ANSI_COLORS = (() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})();\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selection: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selection = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selection);\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css: channels.toCss(r, g, b, alpha)\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoinerRegistry, ICharacterJoiner } from 'browser/renderer/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerRegistry implements ICharacterJoinerRegistry {\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(private _bufferService: IBufferService) { }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    const joinedRanges: [number, number][] = this._characterJoiners[0].handler(text);\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      const joinerRanges = this._characterJoiners[i].handler(text);\n      for (let j = 0; j < joinerRanges.length; j++) {\n        CharacterJoinerRegistry._mergeRanges(joinedRanges, joinerRanges[j]);\n      }\n    }\n    this._stringRangesToCellRanges(joinedRanges, lineData, startCol);\n    return joinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IDisposable {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number, rowEnd: number, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    this._rowStart = Math.max(this._rowStart, 0);\n    this._rowEnd = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Run render callback\n    this._renderCallback(this._rowStart, this._rowEnd);\n\n    // Reset debouncer\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._resolutionMediaMatchList || !this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] ? clone(val[key], depth - 1) : val[key]);\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, ITerminalOptions, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi, IParser, IFunctionIdentifier, IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\nimport { ITerminal } from '../Types';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { Terminal as TerminalCore } from '../Terminal';\nimport * as Strings from '../browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { AddonManager } from './AddonManager';\nimport { IParams } from 'common/parser/Types';\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n  }\n\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferApi { return new BufferApiView(this._core.buffer); }\n  public get markers(): ReadonlyArray<IMarker> { return this._core.markers; }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public addMarker(cursorYOffset: number): IMarker {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'fontWeight' | 'fontWeightBold' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell'): boolean;\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell', value: boolean): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    values.forEach(value => {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    });\n  }\n}\n\nclass BufferApiView implements IBufferApi {\n  constructor(private _buffer: IBuffer) { }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n\nclass BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, <ICellData>cell);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n\nclass ParserApi implements IParser {\n  constructor(private _core: ITerminal) {}\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean): IDisposable {\n    return this._core.addEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._core.addOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n\nclass UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ITerminal) {}\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { IInputHandlingTerminal, ICompositionHelper, ITerminalOptions, ITerminal, IBrowser, CustomKeyEventHandler } from './Types';\nimport { IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { InputHandler } from './InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IKeyboardEvent, KeyboardResultType, IBufferLine, IAttributeData, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { IOptionsService, IBufferService, ICoreMouseService, ICoreService, ILogService, IDirtyRowService, IInstantiationService, ICharsetService, IUnicodeService } from 'common/services/Services';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { LogService } from 'common/services/LogService';\nimport { ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport } from 'browser/Types';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document = (typeof window !== 'undefined') ? window.document : null;\n\n\nexport class Terminal extends Disposable implements ITerminal, IDisposable, IInputHandlingTerminal {\n  public textarea: HTMLTextAreaElement;\n  public element: HTMLElement;\n  public screenElement: HTMLElement;\n\n  private _document: Document;\n  private _viewportScrollArea: HTMLElement;\n  private _viewportElement: HTMLElement;\n  private _helperContainer: HTMLElement;\n  private _compositionView: HTMLElement;\n\n  private _visualBellTimer: number;\n\n  public browser: IBrowser = <any>Browser;\n\n  // TODO: We should remove options once components adopt optionsService\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n\n  private _customKeyEventHandler: CustomKeyEventHandler;\n\n  // common services\n  private _bufferService: IBufferService;\n  private _coreService: ICoreService;\n  private _charsetService: ICharsetService;\n  private _coreMouseService: ICoreMouseService;\n  private _dirtyRowService: IDirtyRowService;\n  private _instantiationService: IInstantiationService;\n  private _logService: ILogService;\n  public optionsService: IOptionsService;\n  public unicodeService: IUnicodeService;\n\n  // browser services\n  private _charSizeService: ICharSizeService;\n  private _mouseService: IMouseService;\n  private _renderService: IRenderService;\n  private _selectionService: ISelectionService;\n  private _soundService: ISoundService;\n\n  // modes\n  public insertMode: boolean;\n  public bracketedPasteMode: boolean;\n\n  // mouse properties\n  public mouseEvents: CoreMouseEventType = CoreMouseEventType.NONE;\n  public sendFocus: boolean;\n\n  // write buffer\n  private _writeBuffer: WriteBuffer;\n\n  // Store if user went browsing history in scrollback\n  private _userScrolling: boolean;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  private _inputHandler: InputHandler;\n  public linkifier: ILinkifier;\n  public viewport: IViewport;\n  private _compositionHelper: ICompositionHelper;\n  private _mouseZoneManager: IMouseZoneManager;\n  private _accessibilityManager: AccessibilityManager;\n  private _colorManager: ColorManager;\n  private _theme: ITheme;\n  private _windowsMode: IDisposable | undefined;\n\n  // bufferline to clone/copy from for new blank lines\n  private _blankLine: IBufferLine = null;\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  public onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this.onA11yCharEmitter.event; }\n  public onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this.onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: ITerminalOptions = {}\n  ) {\n    super();\n\n    // Setup and initialize common services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this._instantiationService.createInstance(BufferService);\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this._coreService = this._instantiationService.createInstance(CoreService, () => this.scrollToBottom());\n    this._instantiationService.setService(ICoreService, this._coreService);\n    this._coreService.onData(e => this._onData.fire(e));\n    this._coreService.onBinary(e => this._onBinary.fire(e));\n    this._coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this._coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    this._setupOptionsListeners();\n    this._setup();\n\n    this._writeBuffer = new WriteBuffer(data => this._inputHandler.parse(data));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n    this._renderService?.dispose();\n    this._customKeyEventHandler = null;\n    this.write = () => {};\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  private _setup(): void {\n    this._customKeyEventHandler = null;\n\n    // modes\n    this.insertMode = false;\n    this.bracketedPasteMode = false;\n\n    this._userScrolling = false;\n\n    if (this._inputHandler) {\n      this._inputHandler.reset();\n    } else {\n      // Register input handler and refire/handle events\n      this._inputHandler = new InputHandler(this, this._bufferService, this._charsetService, this._coreService, this._dirtyRowService, this._logService, this.optionsService, this._coreMouseService, this.unicodeService, this._instantiationService);\n      this._inputHandler.onRequestBell(() => this.bell());\n      this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end));\n      this._inputHandler.onRequestReset(() => this.reset());\n      this._inputHandler.onCursorMove(() => this._onCursorMove.fire());\n      this._inputHandler.onLineFeed(() => this._onLineFeed.fire());\n      this.register(this._inputHandler);\n    }\n\n    if (!this.linkifier) {\n      this.linkifier = new Linkifier(this._bufferService, this._logService, this.optionsService, this.unicodeService);\n    }\n\n    if (this.options.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  private _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.addCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          disposables.forEach(d => d.dispose());\n        }\n      };\n    }\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  public get buffers(): IBufferSet {\n    return this._bufferService.buffers;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _setupOptionsListeners(): void {\n    // TODO: These listeners should be owned by individual components\n    this.optionsService.onOptionChange(key => {\n      switch (key) {\n        case 'fontFamily':\n        case 'fontSize':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          this._renderService?.clear();\n          this._charSizeService?.measure();\n          break;\n        case 'cursorBlink':\n        case 'cursorStyle':\n          // The DOM renderer needs a row refresh to update the cursor styles\n          this.refresh(this.buffer.y, this.buffer.y);\n          break;\n        case 'drawBoldTextInBrightColors':\n        case 'letterSpacing':\n        case 'lineHeight':\n        case 'fontWeight':\n        case 'fontWeightBold':\n        case 'minimumContrastRatio':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          if (this._renderService) {\n            this._renderService.clear();\n            this._renderService.onResize(this.cols, this.rows);\n            this.refresh(0, this.rows - 1);\n          }\n          break;\n        case 'rendererType':\n          if (this._renderService) {\n            this._renderService.setRenderer(this._createRenderer());\n            this._renderService.onResize(this.cols, this.rows);\n          }\n          break;\n        case 'scrollback':\n          this.buffers.resize(this.cols, this.rows);\n          this.viewport?.syncScrollArea();\n          break;\n        case 'screenReaderMode':\n          if (this.optionsService.options.screenReaderMode) {\n            if (!this._accessibilityManager && this._renderService) {\n              this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n            }\n          } else {\n            this._accessibilityManager?.dispose();\n            this._accessibilityManager = null;\n          }\n          break;\n        case 'tabStopWidth': this.buffers.setupTabStops(); break;\n        case 'theme':\n          this._setTheme(this.optionsService.options.theme);\n          break;\n        case 'windowsMode':\n          if (this.optionsService.options.windowsMode) {\n            this._enableWindowsMode();\n          } else {\n            this._windowsMode?.dispose();\n            this._windowsMode = undefined;\n          }\n          break;\n      }\n    });\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element.classList.add('focus');\n    this.showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent) => handlePasteEvent(event, this.textarea, this.bracketedPasteMode, this._coreService);\n    this.register(addDisposableDomListener(this.textarea, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea, this.screenElement);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'compositionstart', () => this._compositionHelper.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea, 'compositionend', () => this._compositionHelper.compositionend()));\n    this.register(this.onRender(() => this._compositionHelper.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!document.body.contains(parent)) {\n      this._logService.warn('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._theme = this.options.theme || this._theme;\n    this.options.theme = undefined;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.optionsService.onOptionChange(e => this._colorManager.onOptionsChange(e));\n    this._colorManager.setTheme(this._theme);\n\n    const renderer = this._createRenderer();\n    this._renderService = this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement);\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this._renderService.onRender(e => this._onRender.fire(e));\n    this.onResize(e => this._renderService.resize(e.cols, e.rows));\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => this._renderService.onCursorMove()));\n    this.register(this.onResize(() => this._renderService.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService.onBlur()));\n    this.register(this.onFocus(() => this._renderService.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport.syncScrollArea()));\n\n    this._selectionService = this._instantiationService.createInstance(SelectionService,\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this.element,\n      this.screenElement);\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRedrawRequest(e => this._renderService.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea.value = text;\n      this.textarea.focus();\n      this.textarea.select();\n    }));\n    this.register(this.onScroll(() => {\n      this.viewport.syncScrollArea();\n      this._selectionService.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.mouseEvents) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager.colors, this.screenElement, this.linkifier);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager.colors, this.element, this.screenElement, this._viewportElement, this.linkifier);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager.colors);\n    this.viewport?.onThemeChange(this._colorManager.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      let pos;\n\n      // get mouse coordinates\n      pos = self._mouseService.getRawByteCoords(ev, self.screenElement, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction;\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n                  ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                  ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          // only UP/DOWN wheel events are respected\n          if ((ev as WheelEvent).deltaY !== 0) {\n            action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          }\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self._coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: {[key: string]: ((ev: Event) => void) | null} = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: {[key: string]: (ev: Event) => void} = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document.removeEventListener('mouseup', requestedEvents.mouseup);\n          if (requestedEvents.mousedrag) {\n            this._document.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        ev.preventDefault();\n        return this.cancel(ev);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this._coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      this.mouseEvents = events;\n      if (events) {\n        if (this.optionsService.options.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this._coreMouseService.explainEvents(events));\n        }\n        this.element.classList.add('enable-mouse-events');\n        this._selectionService.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element.classList.remove('enable-mouse-events');\n        this._selectionService.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel);\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document.removeEventListener('mouseup', requestedEvents.mouseup);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document.removeEventListener('mousemove', requestedEvents.mousedrag);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    });\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this._coreMouseService.activeProtocol = this._coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.mouseEvents || this._selectionService.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (!requestedEvents.wheel) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        if (!this.buffer.hasScrollback) {\n          const amount = this.viewport.getLinesScrolled(ev);\n\n          // Do nothing if there's no vertical scroll\n          if (amount === 0) {\n            return;\n          }\n\n          // Construct and send sequences\n          const sequence = C0.ESC + (this._coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + ( ev.deltaY < 0 ? 'A' : 'B');\n          let data = '';\n          for (let i = 0; i < Math.abs(amount); i++) {\n            data += sequence;\n          }\n          this._coreService.triggerDataEvent(data, true);\n        }\n        return;\n      }\n    }));\n\n    // allow wheel scrolling in\n    // the shell for example\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (requestedEvents.wheel) return;\n      if (!this.viewport.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onTouchStart(ev);\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      if (!this.viewport.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService && this._selectionService.shouldColumnSelect(ev)) {\n      this.element.classList.add('column-select');\n    } else {\n      this.element.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  public showCursor(): void {\n    if (!this._coreService.isCursorInitialized) {\n      this._coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    let newLine: IBufferLine;\n    newLine = this._blankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = this.buffer.getBlankLine(eraseAttr, isWrapped);\n      this._blankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = this.buffer.ybase + this.buffer.scrollTop;\n    const bottomRow = this.buffer.ybase + this.buffer.scrollBottom;\n\n    if (this.buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = this.buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === this.buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          this.buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          this.buffer.lines.push(newLine.clone());\n        }\n      } else {\n        this.buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        this.buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this._userScrolling) {\n          this.buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this._userScrolling) {\n          this.buffer.ydisp = Math.max(this.buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1/*as it's zero-based*/;\n      this.buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      this.buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this._userScrolling) {\n      this.buffer.ydisp = this.buffer.ybase;\n    }\n\n    // Flag rows that need updating\n    this._dirtyRowService.markRangeDirty(this.buffer.scrollTop, this.buffer.scrollBottom);\n\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean): void {\n    if (disp < 0) {\n      if (this.buffer.ydisp === 0) {\n        return;\n      }\n      this._userScrolling = true;\n    } else if (disp + this.buffer.ydisp >= this.buffer.ybase) {\n      this._userScrolling = false;\n    }\n\n    const oldYdisp = this.buffer.ydisp;\n    this.buffer.ydisp = Math.max(Math.min(this.buffer.ydisp + disp, this.buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === this.buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(this.buffer.ydisp);\n    }\n\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea, this.bracketedPasteMode, this._coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._inputHandler.addEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._inputHandler.addDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    return this._inputHandler.addCsiHandler(id, callback);\n  }\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._inputHandler.addOscHandler(ident, callback);\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    const joinerId = this._renderService.registerCharacterJoiner(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (this._renderService.deregisterCharacterJoiner(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart[0],\n      startRow: this._selectionService.selectionStart[1],\n      endColumn: this._selectionService.selectionEnd[0],\n      endRow: this._selectionService.selectionEnd[1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    const result = evaluateKeyboardEvent(event, this._coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this.showCursor();\n    this._coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.options.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: IKeyboardEvent): boolean {\n    const thirdLevelKey =\n        (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n        (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey);\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this.showCursor();\n    this._coreService.triggerDataEvent(key, true);\n\n    return true;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService.playBellSound();\n    }\n\n    if (this._visualBell()) {\n      this.element.classList.add('visual-bell-active');\n      clearTimeout(this._visualBellTimer);\n      this._visualBellTimer = window.setTimeout(() => {\n        this.element.classList.remove('visual-bell-active');\n      }, 200);\n    }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    if (x < MINIMUM_COLS) x = MINIMUM_COLS;\n    if (y < MINIMUM_ROWS) y = MINIMUM_ROWS;\n\n    this.buffers.resize(x, y);\n\n    this._bufferService.resize(x, y);\n    this.buffers.setupTabStops(this.cols);\n\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n\n    this.refresh(0, this.rows - 1);\n    this._onResize.fire({ cols: x, rows: y });\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y));\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  public is(term: string): boolean {\n    return (this.options.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * Emit the data event and populate the given data.\n   * @param data The data to populate in the event.\n   */\n  // public handler(data: string): void {\n  //   // Prevents all events to pty process if stdin is disabled\n  //   if (this.options.disableStdin) {\n  //     return;\n  //   }\n\n  //   // Clear the selection if the selection manager is available and has an active selection\n  //   if (this.selectionService && this.selectionService.hasSelection) {\n  //     this.selectionService.clearSelection();\n  //   }\n\n  //   // Input is being sent to the terminal, the terminal should focus the prompt.\n  //   if (this.buffer.ybase !== this.buffer.ydisp) {\n  //     this.scrollToBottom();\n  //   }\n  //   this._onData.fire(data);\n  // }\n\n  /**\n   * Emit the 'title' event and populate the given title.\n   * @param title The title to populate in the event.\n   */\n  public handleTitle(title: string): void {\n    this._onTitleChange.fire(title);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n    const userScrolling = this._userScrolling;\n\n    this._setup();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this._coreService.reset();\n    this._coreMouseService.reset();\n    this._selectionService?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n    this._userScrolling = userScrolling;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  public writeSync(data: string | Uint8Array): void {\n    this._writeBuffer.writeSync(data);\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: CompositionEvent): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      } else if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n    this._clearTextareaPosition();\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          this._coreService.triggerDataEvent(input, true);\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cellHeight = Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n      const cursorTop = this._bufferService.buffer.y * cellHeight;\n      const cursorLeft = this._bufferService.buffer.x * this._charSizeService.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.options.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.options.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      this._textarea.style.width = compositionViewBounds.width + 'px';\n      this._textarea.style.height = compositionViewBounds.height + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n\n  /**\n   * Clears the textarea's position so that the cursor does not blink on IE.\n   * @private\n   */\n  private _clearTextareaPosition(): void {\n    this._textarea.style.left = '';\n    this._textarea.style.top = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    const newScrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._lastScrollTop !== newScrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If element's scroll top changed, this can happen when hiding the element\n    if (this._lastScrollTop !== this._viewportElement.scrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio !== this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff, true);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n        (amount > 0 &&  scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.options.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n        (modifier === 'ctrl' && ev.ctrlKey) ||\n        (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.options.fastScrollSensitivity * this._optionsService.options.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.options.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, bracketedPasteMode: boolean, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, bracketedPasteMode, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, bracketedPasteMode: boolean, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.position = 'absolute';\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n\n  // Reset the terminal textarea's styling\n  // Timeout needs to be long enough for click event to be handled.\n  setTimeout(() => {\n    textarea.style.position = '';\n    textarea.style.width = '';\n    textarea.style.height = '';\n    textarea.style.left = '';\n    textarea.style.top = '';\n    textarea.style.zIndex = '';\n  }, 200);\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord && !selectionService.isClickInSelection(ev)) {\n    selectionService.selectWordAtCursor(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IInputHandlingTerminal } from './Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IAttributeData, IDisposable, IWindowOptions } from 'common/Types';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService, IInstantiationService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IRenderService } from 'browser/services/Services';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: {[key: string]: number} = {'(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2};\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\n\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  unhook(success: boolean): void {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n      case '\"p': // DECSCL\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n                ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n      case ' q': // DECSCUSR\n        const STYLES: {[key: string]: number} = {'block': 2, 'underline': 4, 'bar': 6};\n        let style = STYLES[this._optionsService.options.cursorStyle];\n        style -= this._optionsService.options.cursorBlink ? 1 : 0;\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _windowTitleStack: string[] = [];\n  private _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  constructor(\n    private _terminal: IInputHandlingTerminal,\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _instantiationService: IInstantiationService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser())\n  {\n    super();\n    this.register(this._parser);\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.setCsiHandler({final: '@'}, params => this.insertChars(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: '@'}, params => this.scrollLeft(params));\n    this._parser.setCsiHandler({final: 'A'}, params => this.cursorUp(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: 'A'}, params => this.scrollRight(params));\n    this._parser.setCsiHandler({final: 'B'}, params => this.cursorDown(params));\n    this._parser.setCsiHandler({final: 'C'}, params => this.cursorForward(params));\n    this._parser.setCsiHandler({final: 'D'}, params => this.cursorBackward(params));\n    this._parser.setCsiHandler({final: 'E'}, params => this.cursorNextLine(params));\n    this._parser.setCsiHandler({final: 'F'}, params => this.cursorPrecedingLine(params));\n    this._parser.setCsiHandler({final: 'G'}, params => this.cursorCharAbsolute(params));\n    this._parser.setCsiHandler({final: 'H'}, params => this.cursorPosition(params));\n    this._parser.setCsiHandler({final: 'I'}, params => this.cursorForwardTab(params));\n    this._parser.setCsiHandler({final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.setCsiHandler({final: 'K'}, params => this.eraseInLine(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'K'}, params => this.eraseInLine(params));\n    this._parser.setCsiHandler({final: 'L'}, params => this.insertLines(params));\n    this._parser.setCsiHandler({final: 'M'}, params => this.deleteLines(params));\n    this._parser.setCsiHandler({final: 'P'}, params => this.deleteChars(params));\n    this._parser.setCsiHandler({final: 'S'}, params => this.scrollUp(params));\n    this._parser.setCsiHandler({final: 'T'}, params => this.scrollDown(params));\n    this._parser.setCsiHandler({final: 'X'}, params => this.eraseChars(params));\n    this._parser.setCsiHandler({final: 'Z'}, params => this.cursorBackwardTab(params));\n    this._parser.setCsiHandler({final: '`'}, params => this.charPosAbsolute(params));\n    this._parser.setCsiHandler({final: 'a'}, params => this.hPositionRelative(params));\n    this._parser.setCsiHandler({final: 'b'}, params => this.repeatPrecedingCharacter(params));\n    this._parser.setCsiHandler({final: 'c'}, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.setCsiHandler({prefix: '>', final: 'c'}, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.setCsiHandler({final: 'd'}, params => this.linePosAbsolute(params));\n    this._parser.setCsiHandler({final: 'e'}, params => this.vPositionRelative(params));\n    this._parser.setCsiHandler({final: 'f'}, params => this.hVPosition(params));\n    this._parser.setCsiHandler({final: 'g'}, params => this.tabClear(params));\n    this._parser.setCsiHandler({final: 'h'}, params => this.setMode(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'h'}, params => this.setModePrivate(params));\n    this._parser.setCsiHandler({final: 'l'}, params => this.resetMode(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'l'}, params => this.resetModePrivate(params));\n    this._parser.setCsiHandler({final: 'm'}, params => this.charAttributes(params));\n    this._parser.setCsiHandler({final: 'n'}, params => this.deviceStatus(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'n'}, params => this.deviceStatusPrivate(params));\n    this._parser.setCsiHandler({intermediates: '!', final: 'p'}, params => this.softReset(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: 'q'}, params => this.setCursorStyle(params));\n    this._parser.setCsiHandler({final: 'r'}, params => this.setScrollRegion(params));\n    this._parser.setCsiHandler({final: 's'}, params => this.saveCursor(params));\n    this._parser.setCsiHandler({final: 't'}, params => this.windowOptions(params));\n    this._parser.setCsiHandler({final: 'u'}, params => this.restoreCursor(params));\n    this._parser.setCsiHandler({intermediates: '\\'', final: '}'}, params => this.insertColumns(params));\n    this._parser.setCsiHandler({intermediates: '\\'', final: '~'}, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.setOscHandler(0, new OscHandler((data: string) => { this.setTitle(data); this.setIconName(data); }));\n    //   1 - icon name\n    this._parser.setOscHandler(1, new OscHandler((data: string) => this.setIconName(data)));\n    //   2 - title\n    this._parser.setOscHandler(2, new OscHandler((data: string) => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    //  11 - Change VT100 text background color to Pt.\n    //  12 - Change text cursor color to Pt.\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    // 111 - Reset VT100 text background color.\n    // 112 - Reset text cursor color.\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.setEscHandler({final: '7'}, () => this.saveCursor());\n    this._parser.setEscHandler({final: '8'}, () => this.restoreCursor());\n    this._parser.setEscHandler({final: 'D'}, () => this.index());\n    this._parser.setEscHandler({final: 'E'}, () => this.nextLine());\n    this._parser.setEscHandler({final: 'H'}, () => this.tabSet());\n    this._parser.setEscHandler({final: 'M'}, () => this.reverseIndex());\n    this._parser.setEscHandler({final: '='}, () => this.keypadApplicationMode());\n    this._parser.setEscHandler({final: '>'}, () => this.keypadNumericMode());\n    this._parser.setEscHandler({final: 'c'}, () => this.fullReset());\n    this._parser.setEscHandler({final: 'n'}, () => this.setgLevel(2));\n    this._parser.setEscHandler({final: 'o'}, () => this.setgLevel(3));\n    this._parser.setEscHandler({final: '|'}, () => this.setgLevel(3));\n    this._parser.setEscHandler({final: '}'}, () => this.setgLevel(2));\n    this._parser.setEscHandler({final: '~'}, () => this.setgLevel(1));\n    this._parser.setEscHandler({intermediates: '%', final: '@'}, () => this.selectDefaultCharset());\n    this._parser.setEscHandler({intermediates: '%', final: 'G'}, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.setEscHandler({intermediates: '(', final: flag}, () => this.selectCharset('(' + flag));\n      this._parser.setEscHandler({intermediates: ')', final: flag}, () => this.selectCharset(')' + flag));\n      this._parser.setEscHandler({intermediates: '*', final: flag}, () => this.selectCharset('*' + flag));\n      this._parser.setEscHandler({intermediates: '+', final: flag}, () => this.selectCharset('+' + flag));\n      this._parser.setEscHandler({intermediates: '-', final: flag}, () => this.selectCharset('-' + flag));\n      this._parser.setEscHandler({intermediates: '.', final: flag}, () => this.selectCharset('.' + flag));\n      this._parser.setEscHandler({intermediates: '/', final: flag}, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.setEscHandler({intermediates: '#', final: '8'}, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.setDcsHandler({intermediates: '$', final: 'q'}, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public parse(data: string | Uint8Array): void {\n    let buffer = this._bufferService.buffer;\n    const cursorStartX = buffer.x;\n    const cursorStartY = buffer.y;\n\n    this._logService.debug('parsing data', data);\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    this._dirtyRowService.clearRange();\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = 0; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        this._parser.parse(this._parseBuffer, len);\n      }\n    } else {\n      const len = (typeof data === 'string')\n        ? this._stringDecoder.decode(data, this._parseBuffer)\n        : this._utf8Decoder.decode(data, this._parseBuffer);\n      this._parser.parse(this._parseBuffer, len);\n    }\n\n    buffer = this._bufferService.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const buffer = this._bufferService.buffer;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.options.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._terminal.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n\n    this._dirtyRowService.markDirty(buffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (buffer.x && end - start > 0 && bufferRow.getWidth(buffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(buffer.x - 1, 0, 1, curAttr.fg, curAttr.bg);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._terminal.onA11yCharEmitter.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // buffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for buffer.x to avoid overflow left\n      if (!chWidth && buffer.x) {\n        if (!bufferRow.getWidth(buffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(buffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(buffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (buffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          buffer.x = 0;\n          buffer.y++;\n          if (buffer.y === buffer.scrollBottom + 1) {\n            buffer.y--;\n            this._terminal.scroll(this._eraseAttrData(), true);\n          } else {\n            if (buffer.y >= this._bufferService.rows) {\n              buffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            buffer.lines.get(buffer.y).isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n        } else {\n          buffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(buffer.x, chWidth, buffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(buffer.x++, code, chWidth, curAttr.fg, curAttr.bg);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that buffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(buffer.x++, 0, 0, curAttr.fg, curAttr.bg);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(buffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (buffer.x < cols && end - start > 0 && bufferRow.getWidth(buffer.x) === 0 && !bufferRow.hasContent(buffer.x)) {\n      bufferRow.setCellFromCodePoint(buffer.x, 0, 1, curAttr.fg, curAttr.bg);\n    }\n\n    this._dirtyRowService.markDirty(buffer.y);\n  }\n\n  /**\n   * Forward addCsiHandler from parser.\n   */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.addCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.addCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward addDcsHandler from parser.\n   */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._parser.addDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward addEscHandler from parser.\n   */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._parser.addEscHandler(id, callback);\n  }\n\n  /**\n   * Forward addOscHandler from parser.\n   */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._parser.addOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): void {\n    this._onRequestBell.fire();\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): void {\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    this._dirtyRowService.markDirty(buffer.y);\n    if (this._optionsService.options.convertEol) {\n      buffer.x = 0;\n    }\n    buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._terminal.scroll(this._eraseAttrData());\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (buffer.x >= this._bufferService.cols) {\n      buffer.x--;\n    }\n    this._dirtyRowService.markDirty(buffer.y);\n\n    this._onLineFeed.fire();\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): void {\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   */\n  public backspace(): void {\n    this._restrictCursor();\n    if (this._bufferService.buffer.x > 0) {\n      this._bufferService.buffer.x--;\n    }\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    const originalX = this._bufferService.buffer.x;\n    this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    if (this._optionsService.options.screenReaderMode) {\n      this._terminal.onA11yTabEmitter.fire(this._bufferService.buffer.x - originalX);\n    }\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): void {\n    this._charsetService.setgLevel(1);\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): void {\n    this._charsetService.setgLevel(0);\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(): void {\n    this._bufferService.buffer.x = Math.min(this._bufferService.cols - 1, Math.max(0, this._bufferService.buffer.x));\n    this._bufferService.buffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._bufferService.buffer.scrollBottom, Math.max(this._bufferService.buffer.scrollTop, this._bufferService.buffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._bufferService.buffer.y));\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = this._bufferService.buffer.scrollTop + y;\n    } else {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._bufferService.buffer.x + x, this._bufferService.buffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): void {\n    // stop at scrollTop\n    const diffToTop = this._bufferService.buffer.y - this._bufferService.buffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): void {\n    // stop at scrollBottom\n    const diffToBottom = this._bufferService.buffer.scrollBottom - this._bufferService.buffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): void {\n    this._moveCursor(-(params.params[0] || 1), 0);\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): void {\n    this.cursorDown(params);\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): void {\n    this.cursorUp(params);\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): void {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): void {\n    this._setCursor(this._bufferService.buffer.x, (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): void {\n    this._moveCursor(0, params.params[0] || 1);\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): void {\n    this.cursorPosition(params);\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): void {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._bufferService.buffer.tabs[this._bufferService.buffer.x];\n    } else if (param === 3) {\n      this._bufferService.buffer.tabs = {};\n    }\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    }\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.x = buffer.prevStop();\n    }\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y);\n    line.replaceCells(\n      start,\n      end,\n      this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y);\n    line.fill(this._bufferService.buffer.getNullCell(this._eraseAttrData()));\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): void {\n    this._restrictCursor();\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._bufferService.buffer.x, this._bufferService.cols, this._bufferService.buffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._bufferService.buffer.x + 1, true);\n        if (this._bufferService.buffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._bufferService.buffer.lines.get(j + 1).isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._bufferService.buffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._bufferService.buffer.lines.trimStart(scrollBackSize);\n          this._bufferService.buffer.ybase = Math.max(this._bufferService.buffer.ybase - scrollBackSize, 0);\n          this._bufferService.buffer.ydisp = Math.max(this._bufferService.buffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): void {\n    this._restrictCursor();\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._bufferService.buffer.y, this._bufferService.buffer.x, this._bufferService.cols);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.buffer.x + 1);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.cols);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.y + buffer.ybase;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - buffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + buffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      buffer.lines.splice(row, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.y + buffer.ybase;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - buffer.scrollBottom;\n    j = this._bufferService.rows - 1 + buffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(row, 1);\n      buffer.lines.splice(j, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.insertCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.deleteCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 0, buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y);\n      line.deleteCells(0, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y);\n      line.insertCells(0, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = this._bufferService.buffer.lines.get(buffer.ybase + y);\n      line.insertCells(buffer.x, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y);\n      line.deleteCells(buffer.x, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.replaceCells(\n        this._bufferService.buffer.x,\n        this._bufferService.buffer.x + (params.params[0] || 1),\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): void {\n    if (!this._parser.precedingCodepoint) {\n      return;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n    if (this._terminal.is('xterm') || this._terminal.is('rxvt-unicode') || this._terminal.is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._terminal.is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._terminal.is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._terminal.is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._terminal.is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._terminal.is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public setMode(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._terminal.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._terminal.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._terminal.viewport?.syncScrollArea();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._terminal.sendFocus = true;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n          // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._terminal.viewport?.syncScrollArea();\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = true;\n          break;\n      }\n    }\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._terminal.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._terminal.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._terminal.viewport?.syncScrollArea();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._terminal.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n        this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n           // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._terminal.viewport?.syncScrollArea();\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = false;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance);\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n          || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    if (accu[0] === 38) {\n      if (accu[1] === 2) {\n        attr.fg |= Attributes.CM_RGB;\n        attr.fg &= ~Attributes.RGB_MASK;\n        attr.fg |= AttributeData.fromColorRGB([accu[3], accu[4], accu[5]]);\n      } else if (accu[1] === 5) {\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P256 | (accu[3] & 0xff);\n      }\n    } else if (accu[0] === 48) {\n      if (accu[1] === 2) {\n        attr.bg |= Attributes.CM_RGB;\n        attr.bg &= ~Attributes.RGB_MASK;\n        attr.bg |= AttributeData.fromColorRGB([accu[3], accu[4], accu[5]]);\n      } else if (accu[1] === 5) {\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P256 | (accu[3] & 0xff);\n      }\n    }\n\n    return advance;\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied from in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined. (no support for newer underline styles)      | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters.                                  | #N      |\n   * | 21        | Doubly  underlined.                                      | #N      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out.                                         | #N      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): void {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): void {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): void {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - cursor is reset (default = visible, home position)\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): void {\n    this._coreService.isCursorHidden = false;\n    this._terminal.insertMode = false;\n    this._terminal.viewport?.syncScrollArea();\n    this._bufferService.buffer.scrollTop = 0;\n    this._bufferService.buffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._bufferService.buffer.x = this._bufferService.buffer.y = 0; // ?\n    this._coreService.reset();\n    this._charsetService.reset();\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): void {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): void {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) >  this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._bufferService.buffer.scrollTop = top - 1;\n      this._bufferService.buffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): void {\n    if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n      return;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    const rs = this._instantiationService.getService(IRenderService);\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (rs && second !== 2) {\n          console.log(rs.dimensions);\n          const w = rs.dimensions.scaledCanvasWidth.toFixed(0);\n          const h = rs.dimensions.scaledCanvasHeight.toFixed(0);\n          this._coreService.triggerDataEvent(`${C0.ESC}[4;${h};${w}t`);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        if (rs) {\n          const w = rs.dimensions.scaledCellWidth.toFixed(0);\n          const h = rs.dimensions.scaledCellHeight.toFixed(0);\n          this._coreService.triggerDataEvent(`${C0.ESC}[6;${h};${w}t`);\n        }\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop());\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop());\n          }\n        }\n        break;\n    }\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): void {\n    this._bufferService.buffer.savedX = this._bufferService.buffer.x;\n    this._bufferService.buffer.savedY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    this._bufferService.buffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._bufferService.buffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._bufferService.buffer.savedCharset = this._charsetService.charset;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): void {\n    this._bufferService.buffer.x = this._bufferService.buffer.savedX || 0;\n    this._bufferService.buffer.y = Math.max(this._bufferService.buffer.savedY - this._bufferService.buffer.ybase, 0);\n    this._curAttrData.fg = this._bufferService.buffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._bufferService.buffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._bufferService.buffer.savedCharset) {\n      this._charsetService.charset = this._bufferService.buffer.savedCharset;\n    }\n    this._restrictCursor();\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): void {\n    this._windowTitle = data;\n    this._terminal.handleTitle(data);\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): void {\n    this._iconName = data;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): void {\n    this._bufferService.buffer.x = 0;\n    this.index();\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): void {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._terminal.viewport?.syncScrollArea();\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): void {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._terminal.viewport?.syncScrollArea();\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): void {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): void {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return;\n    }\n    if (collectAndFlag[0] === '/') {\n      return;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): void {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    this._bufferService.buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._terminal.scroll(this._eraseAttrData());\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): void {\n    this._bufferService.buffer.tabs[this._bufferService.buffer.x] = true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): void {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    if (buffer.y === buffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = buffer.scrollBottom - buffer.scrollTop;\n      buffer.lines.shiftElements(buffer.y + buffer.ybase, scrollRegionHeight, 1);\n      buffer.lines.set(buffer.y + buffer.ybase, buffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    } else {\n      buffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): void {\n    this._parser.reset();\n    this._onRequestReset.fire();\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): void {\n    this._charsetService.setgLevel(level);\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): void {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n    const buffer = this._bufferService.buffer;\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = buffer.y + buffer.ybase + yOffset;\n      buffer.lines.get(row).fill(cell);\n      buffer.lines.get(row).isWrapped = false;\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number) => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: {[flag: number]: ExecuteHandlerType};\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  constructor(readonly TRANSITIONS: TransitionTable = VT500_TRANSITION_TABLE) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.setEscHandler({final: '\\\\'}, () => {});\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public addEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): void {\n    this._escHandlers[this._identifier(id, [0x30, 0x7e])] = [handler];\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public addCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): void {\n    this._csiHandlers[this._identifier(id)] = [handler];\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public addDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.addHandler(this._identifier(id), handler);\n  }\n  public setDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): void {\n    this._dcsParser.setHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public addOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.addHandler(ident, handler);\n  }\n  public setOscHandler(ident: number, handler: IOscHandler): void {\n    this._oscParser.setHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n  }\n\n\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   */\n  public parse(data: Uint32Array, length: number): void {\n    let code = 0;\n    let transition = 0;\n    let currentState = this.currentState;\n    const osc = this._oscParser;\n    const dcs = this._dcsParser;\n    let collect = this._collect;\n    const params = this._params;\n    const table: Uint8Array = this.TRANSITIONS.table;\n\n    // process input string\n    for (let i = 0; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = table[currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState,\n              collect,\n              params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // undefined or true means success and to stop bubbling\n            if (handlers[j](params) !== false) {\n              break;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(collect << 8 | code, params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          collect <<= 8;\n          collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // undefined or true means success and to stop bubbling\n            if (handlersEsc[jj]() !== false) {\n              break;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          dcs.hook(collect << 8 | code, params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              dcs.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          dcs.unhook(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          osc.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code <= 0x9f)) {\n              osc.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          osc.end(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n\n    // save collected intermediates\n    this._collect = collect;\n\n    // save state\n    this.currentState = currentState;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, CharacterJoinerHandler, ICharacterJoinerRegistry, IRequestRefreshRowsEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { CharacterJoinerRegistry } from 'browser/renderer/CharacterJoinerRegistry';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRefreshRows = new EventEmitter<IRequestRefreshRowsEvent>();\n  public get onRequestRefreshRows(): IEvent<IRequestRefreshRowsEvent> { return this._onRequestRefreshRows.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService readonly coreService: ICoreService,\n    @ICoreBrowserService readonly coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.options.allowTransparency;\n    this._characterJoinerRegistry = new CharacterJoinerRegistry(this._bufferService);\n\n    this._renderLayers = [\n      new TextRenderLayer(this._screenElement, 0, this._colors, this._characterJoinerRegistry, allowTransparency, this._id, this._bufferService, _optionsService),\n      new SelectionRenderLayer(this._screenElement, 1, this._colors, this._id, this._bufferService, _optionsService),\n      new LinkRenderLayer(this._screenElement, 2, this._colors, this._id, this._linkifier, this._bufferService, _optionsService),\n      new CursorRenderLayer(this._screenElement, 3, this._colors, this._id, this._onRequestRefreshRows, this._bufferService, _optionsService, coreService, coreBrowserService)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._renderLayers.forEach(l => l.dispose());\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n\n    // Clear layers and force a full render\n    this._renderLayers.forEach(l => {\n      l.setColors(this._colors);\n      l.reset();\n    });\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    this._renderLayers.forEach(l => l.resize(this.dimensions));\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    this._renderLayers.forEach(l => operation(l));\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    this._renderLayers.forEach(l => l.onGridChanged(start, end));\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._characterJoinerRegistry.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._characterJoinerRegistry.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharacterJoinerRegistry, IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { JoinedCellData } from 'browser/renderer/CharacterJoinerRegistry';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    characterJoinerRegistry: ICharacterJoinerRegistry,\n    alpha: boolean,\n    rendererId: number,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n    this._characterJoinerRegistry = characterJoinerRegistry;\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    joinerRegistry: ICharacterJoinerRegistry | null,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = joinerRegistry ? joinerRegistry.getJoinedCharacters(row) : [];\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, null, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle ? prevFillStyle : '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle ? prevFillStyle : '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, this._characterJoinerRegistry, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        this._fillBottomLineAtCells(x, y, cell.getWidth());\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.options.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'browser/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', {alpha: true}));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', {alpha: this._config.allowTransparency}));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    } else if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    } else if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    } else if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    } else if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = 'middle';\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight / 2);\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  protected _doWarmUp(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorContrastCache } from 'browser/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selection.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number], end: [number, number], columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRefreshRowsEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRefreshRowsEvent: IEventEmitter<IRequestRefreshRowsEvent>,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService,\n    private readonly _coreService: ICoreService,\n    private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    // TODO: Consider initial options? Maybe onOptionsChanged should be called at the end of open?\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n      this.onOptionsChanged();\n    }\n  }\n\n  public onBlur(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.pause();\n    }\n    this._onRequestRefreshRowsEvent.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.resume();\n    } else {\n      this._onRequestRefreshRowsEvent.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n    }\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRefreshRowsEvent.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(this._bufferService.buffer.x, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](this._bufferService.buffer.x, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(this._bufferService.buffer.x, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = this._bufferService.buffer.x;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === this._bufferService.buffer.x &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.options.cursorStyle || 'block'](this._bufferService.buffer.x, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = this._bufferService.buffer.x;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.options.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.options.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = <number><any>setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = <number><any>setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onLinkHover(e => this._onLinkHover(e));\n    linkifier.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService, IOptionsService, IUnicodeService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onLinkHover = new EventEmitter<ILinkifierEvent>();\n  public get onLinkHover(): IEvent<ILinkifierEvent> { return this._onLinkHover.event; }\n  private _onLinkLeave = new EventEmitter<ILinkifierEvent>();\n  public get onLinkLeave(): IEvent<ILinkifierEvent> { return this._onLinkLeave.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    protected readonly _bufferService: IBufferService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _unicodeService: IUnicodeService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n    this._rowsTimeoutId = <number><any>setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency);\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n    // FIXME: get cell length from buffer to avoid mismatch after Unicode version change\n    const width = this._unicodeService.getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.opener = null;\n          newWindow.location.href = uri;\n        } else {\n          console.warn('Opening link blocked as opener could not be cleared');\n        }\n      },\n      () => {\n        this._onLinkHover.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onLinkLeave.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICharSizeService, IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService implements ISelectionService {\n  serviceBrand: any;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n\n  private _onLinuxMouseSelection = new EventEmitter<string>();\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = new EventEmitter<ISelectionRedrawRequestEvent>();\n  public get onRedrawRequest(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(<MouseEvent>event);\n    this._mouseUpListener = event => this._onMouseUp(<MouseEvent>event);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine && bufferLine.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  public isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  public selectWordAtCursor(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, false);\n      this._model.selectionEnd = undefined;\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._bufferService.rows * Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.options.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current work.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.WORD;\n      this._selectWordAt(coords, true);\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.options.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._scrollLines(this._dragScrollAmount, false);\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME) {\n      if (event.altKey && this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else if (this.hasSelection) {\n      this._onSelectionChange.fire();\n    }\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n        endIndex // The index of the selection's end char in the line string\n        - startIndex // The index of the selection's start char in the line string\n        + leftWideCharCount // The number of wide chars left of the initial char\n        + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n        - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n        - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /*' '*/) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /*' '*/) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /*' '*/) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine && nextBufferLine.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /*' '*/) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.options.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /*wrap around 1 row*/ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\nfunction moveHorizontallyOnly(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line && line.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line && line.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line && line.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  serviceBrand: any;\n\n  private static _audioContext: AudioContext;\n\n  static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (<any>window).AudioContext || (<any>window).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.options.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService } from 'common/services/Services';\n\nconst HOVER_DURATION = 500;\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = <number><any>setTimeout(() => this._onTooltip(e), HOVER_DURATION);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    if (zone && zone.tooltipCallback) {\n      zone.tooltipCallback(e);\n    }\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from './browser/LocalizableStrings';\nimport { ITerminal } from './Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new RenderDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._terminal.element.removeChild(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = <HTMLElement>e.target;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      if (this._liveRegion.parentNode) {\n        this._accessibilityTreeRoot.removeChild(this._liveRegion);\n      }\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerHTML = '&nbsp;';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler, IRequestRefreshRowsEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'browser/Color';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRefreshRows = new EventEmitter<IRequestRefreshRowsEvent>();\n  public get onRequestRefreshRows(): IEvent<IRequestRefreshRowsEvent> { return this._onRequestRefreshRows.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = new DomRendererRowFactory(document, this._optionsService, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this._linkifier.onLinkHover(e => this._onLinkHover(e));\n    this._linkifier.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.removeChild(this._rowContainer);\n    this._screenElement.removeChild(this._selectionContainer);\n    this._screenElement.removeChild(this._themeStyleElement);\n    this._screenElement.removeChild(this._dimensionsStyleElement);\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    this._rowElements.forEach(element => {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    });\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n        ` display: inline-block;` +\n        ` height: 100%;` +\n        ` vertical-align: top;` +\n        ` width: ${this.dimensions.actualCellWidth}px` +\n        `}`;\n\n    this._dimensionsStyleElement.innerHTML = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n        ` color: ${this._colors.foreground.css};` +\n        ` background-color: ${this._colors.background.css};` +\n        ` font-family: ${this._optionsService.options.fontFamily};` +\n        ` font-size: ${this._optionsService.options.fontSize}px;` +\n        `}`;\n    // Text styles\n    styles +=\n        `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n        ` font-weight: ${this._optionsService.options.fontWeight};` +\n        `}` +\n        `${this._terminalSelector} span.${BOLD_CLASS} {` +\n        ` font-weight: ${this._optionsService.options.fontWeightBold};` +\n        `}` +\n        `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n        ` font-style: italic;` +\n        `}`;\n    // Blink animation\n    styles +=\n        `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n        ` 50% {` +\n        `  box-shadow: none;` +\n        ` }` +\n        `}`;\n    styles +=\n        `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n        ` 0% {` +\n        `  background-color: ${this._colors.cursor.css};` +\n        `  color: ${this._colors.cursorAccent.css};` +\n        ` }` +\n        ` 50% {` +\n        `  background-color: ${this._colors.cursorAccent.css};` +\n        `  color: ${this._colors.cursor.css};` +\n        ` }` +\n        `}`;\n    // Cursor\n    styles +=\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` outline: 1px solid ${this._colors.cursor.css};` +\n        ` outline-offset: -1px;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n        ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` background-color: ${this._colors.cursor.css};` +\n        ` color: ${this._colors.cursorAccent.css};` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n        ` box-shadow: ${this._optionsService.options.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n        ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n        `}`;\n    // Selection\n    styles +=\n        `${this._terminalSelector} .${SELECTION_CLASS} {` +\n        ` position: absolute;` +\n        ` top: 0;` +\n        ` left: 0;` +\n        ` z-index: 1;` +\n        ` pointer-events: none;` +\n        `}` +\n        `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n        ` position: absolute;` +\n        ` background-color: ${this._colors.selection.css};` +\n        `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n          `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n          `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.innerHTML = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    this._rowElements.forEach(e => e.innerHTML = '');\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = this._bufferService.buffer.x;\n    const cursorBlink = this._optionsService.options.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerHTML = '';\n\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number { return -1; }\n  public deregisterCharacterJoiner(joinerId: number): boolean { return false; }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = <HTMLElement>row.children[x];\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'browser/Color';\nimport { IColorSet, IColor } from 'browser/Types';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private readonly _document: Document,\n    private readonly _optionsService: IOptionsService,\n    private _colors: IColorSet\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public createRow(lineData: IBufferLine, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      const width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (this._workCell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (this._workCell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (this._workCell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (this._workCell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (this._workCell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = this._workCell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      let fg = this._workCell.getFgColor();\n      let fgColorMode = this._workCell.getFgColorMode();\n      let bg = this._workCell.getBgColor();\n      let bgColorMode = this._workCell.getBgColorMode();\n      const isInverse = !!this._workCell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (this._workCell.isBold() && fg < 8 && this._optionsService.options.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.ansi[fg])) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, this._colors.background, color)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.foreground)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // Background\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          this._addStyle(charElement, `background-color:#${padStart(bg.toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          }\n      }\n\n      fragment.appendChild(charElement);\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor): boolean {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return false;\n    }\n\n    // Try get from cache first\n    let adjustedColor = this._colors.contrastCache.getColor(this._workCell.bg, this._workCell.fg);\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bg, fg, this._optionsService.options.minimumContrastRatio);\n      this._colors.contrastCache.setColor(this._workCell.bg, this._workCell.fg, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping && keyMapping[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { IOptionsService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\nexport class RenderService extends Disposable implements IRenderService {\n  serviceBrand: any;\n\n  private _renderDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    readonly screenElement: HTMLElement,\n    @IOptionsService readonly optionsService: IOptionsService,\n    @ICharSizeService readonly charSizeService: ICharSizeService\n  ) {\n    super();\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRefreshRows(e => this.refreshRows(e.start, e.end));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.intersectionRatio === 0;\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n    this._onRender.fire({ start, end });\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    this._renderer.dispose();\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRefreshRows(e => this.refreshRows(e.start, e.end));\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._renderer.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._renderer.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, IPartialTerminalOptions } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { clone } from 'common/Clone';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\n// TODO: Freeze?\nexport const DEFAULT_OPTIONS: ITerminalOptions = Object.freeze({\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  bellSound:  DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false\n});\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class OptionsService implements IOptionsService {\n  serviceBrand: any;\n\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: IPartialTerminalOptions) {\n    this.options = clone(DEFAULT_OPTIONS);\n    Object.keys(options).forEach(k => {\n      if (k in this.options) {\n        const newValue = options[k as keyof IPartialTerminalOptions] as any;\n        this.options[k] = newValue;\n      }\n    });\n  }\n\n  public setOption(key: string, value: any): void {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n    if (CONSTRUCTOR_ONLY_OPTIONS.indexOf(key) !== -1) {\n      throw new Error(`Option \"${key}\" can only be set in the constructor`);\n    }\n    if (this.options[key] === value) {\n      return;\n    }\n\n    value = this._sanitizeAndValidateOption(key, value);\n\n    // Don't fire an option change event if they didn't change\n    if (this.options[key] === value) {\n      return;\n    }\n\n    this.options[key] = value;\n    this._onOptionChange.fire(key);\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error(`No option with key \"${key}\"`);\n    }\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  serviceBrand: any;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    readonly document: Document,\n    readonly parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.options.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.options.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService implements IBufferService {\n  serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    this.cols = Math.max(_optionsService.options.cols, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.options.rows, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n  }\n\n  public reset(): void {\n    this.buffers = new BufferSet(this._optionsService, this);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet implements IBufferSet {\n  private _normal: Buffer;\n  private _alt: Buffer;\n  private _activeBuffer: Buffer;\n\n\n  private _onBufferActivate = new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>();\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    readonly optionsService: IOptionsService,\n    readonly bufferService: IBufferService\n  ) {\n    this._normal = new Buffer(true, optionsService, bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, optionsService, bufferService);\n    this._activeBuffer = this._normal;\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | null = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.options.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.options.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.options.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.options.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    this.markers.splice(this.markers.indexOf(marker), 1);\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let result = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      result += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return {range: range, content: result};\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  serviceBrand: any;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, ICharset } from 'common/Types';\nimport { clone } from 'common/Clone';\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  origin: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService implements ICoreService {\n  serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public decPrivateModes: IDecPrivateModes;\n\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = new EventEmitter<void>();\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    private readonly _scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\n\nexport enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevel } = {\n  debug: LogLevel.DEBUG,\n  info: LogLevel.INFO,\n  warn: LogLevel.WARN,\n  error: LogLevel.ERROR,\n  off: LogLevel.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  serviceBrand: any;\n\n  private _logLevel!: LogLevel;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.options.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): any {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return <T>new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    Object.keys(DEFAULT_PROTOCOLS).forEach(name => this.addProtocol(name, DEFAULT_PROTOCOLS[name]));\n    Object.keys(DEFAULT_ENCODINGS).forEach(name => this.addEncoding(name, DEFAULT_ENCODINGS[name]));\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      DOWN: !!(events & CoreMouseEventType.DOWN),\n      UP: !!(events & CoreMouseEventType.UP),\n      DRAG: !!(events & CoreMouseEventType.DRAG),\n      MOVE: !!(events & CoreMouseEventType.MOVE),\n      WHEEL: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n\n  constructor(private _action: (data: string | Uint8Array) => void) { }\n\n  public writeSync(data: string | Uint8Array): void {\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    if (this._writeBuffer.length) {\n      for (let i = this._bufferOffset; i < this._writeBuffer.length; ++i) {\n        const data = this._writeBuffer[i];\n        const cb = this._callbacks[i];\n        this._action(data);\n        if (cb) cb();\n      }\n      // reset all to avoid reprocessing of chunks with scheduled innerWrite call\n      this._writeBuffer = [];\n      this._callbacks = [];\n      this._pendingData = 0;\n      // stop scheduled innerWrite by offset > length condition\n      this._bufferOffset = 0x7FFFFFFF;\n    }\n    // handle current data chunk\n    this._action(data);\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  protected _innerWrite(): void {\n    const startTime = Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const cb = this._callbacks[this._bufferOffset];\n      this._bufferOffset++;\n\n      this._action(data);\n      this._pendingData -= data.length;\n      if (cb) cb();\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite(), 0);\n    } else {\n      this._writeBuffer = [];\n      this._callbacks = [];\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  serviceBrand: any;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    return document.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public charsets: ICharset[] = [];\n  public glevel: number = 0;\n\n  public reset(): void {\n    this.charset = undefined;\n    this.charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this.charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset): void {\n    this.charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(<any>terminal);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///../node_modules/@eclipse-glsp/client/css/command-palette.css?0432","webpack:///../node_modules/@eclipse-glsp/client/css/glsp-sprotty.css?12d5","webpack:///../node_modules/@eclipse-glsp/client/css/tool-palette.css?23dc","webpack:///../node_modules/@eclipse-glsp/client/src/base/actions/context-actions.ts","webpack:///../node_modules/@eclipse-glsp/client/src/base/actions/edit-validation-actions.ts","webpack:///../node_modules/@eclipse-glsp/client/src/base/auto-complete/auto-complete-actions.ts","webpack:///../node_modules/@eclipse-glsp/client/src/base/auto-complete/auto-complete-widget.ts","webpack:///../node_modules/@eclipse-glsp/client/src/base/auto-complete/validation-decorator.ts","webpack:///../node_modules/@eclipse-glsp/client/src/base/command-stack.ts","webpack:///../node_modules/@eclipse-glsp/client/src/base/di.config.ts","webpack:///../node_modules/@eclipse-glsp/client/src/base/editor-context.ts","webpack:///../node_modules/@eclipse-glsp/client/src/base/model/update-model-command.ts","webpack:///../node_modules/@eclipse-glsp/client/src/base/operations/operation.ts","webpack:///../node_modules/@eclipse-glsp/client/src/base/selection-clearing-mouse-listener.ts","webpack:///../node_modules/@eclipse-glsp/client/src/base/tool-manager/glsp-tool-manager.ts","webpack:///../node_modules/@eclipse-glsp/client/src/base/types.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/change-bounds/model.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/change-bounds/movement-restrictor.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/change-bounds/snap.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/command-palette/di.config.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/command-palette/server-command-palette-provider.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/context-menu/delete-element-context-menu.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/context-menu/di.config.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/context-menu/server-context-menu-provider.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/copy-paste/copy-paste-actions.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/copy-paste/copy-paste-context-menu.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/copy-paste/copy-paste-handler.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/copy-paste/di.config.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/edit-label-validation/di.config.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/edit-label-validation/edit-label-validator.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/execute/di.config.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/execute/execute-command.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/execute/model.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/hints/di.config.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/hints/model.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/hints/request-type-hints-action.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/hints/type-hints.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/hover/di.config.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/hover/hover.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/layout/di.config.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/layout/layout-commands.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/mouse-tool/di.config.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/mouse-tool/mouse-tool.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/rank/model.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/reconnect/model.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/request-response/di.config.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/request-response/glsp-action-dispatcher.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/save/di.config.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/save/model.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/save/save.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/select/action-definitions.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/select/di.config.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/select/select-mouse-listener.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/select/selection-service.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/tool-feedback/change-bounds-tool-feedback.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/tool-feedback/creation-tool-feedback.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/tool-feedback/css-feedback.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/tool-feedback/di.config.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/tool-feedback/edge-edit-tool-feedback.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/tool-feedback/feedback-action-dispatcher.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/tool-feedback/model.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/tool-feedback/view.tsx","webpack:///../node_modules/@eclipse-glsp/client/src/features/tool-palette/di.config.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/tool-palette/palette-item.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/tool-palette/tool-palette.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/tools/change-bounds-tool.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/tools/creation-tool.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/tools/delete-tool.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/tools/di.config.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/tools/drag-aware-mouse-listener.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/tools/edge-edit-tool.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/undo-redo/model.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/validation/di.config.ts","webpack:///../node_modules/@eclipse-glsp/client/src/features/validation/validate.ts","webpack:///../node_modules/@eclipse-glsp/client/src/index.ts","webpack:///../node_modules/@eclipse-glsp/client/src/lib/model.ts","webpack:///../node_modules/@eclipse-glsp/client/src/model-source/glsp-server-status.ts","webpack:///../node_modules/@eclipse-glsp/client/src/model-source/websocket-diagram-server.ts","webpack:///../node_modules/@eclipse-glsp/client/src/utils/array-utils.ts","webpack:///../node_modules/@eclipse-glsp/client/src/utils/layout-utils.ts","webpack:///../node_modules/@eclipse-glsp/client/src/utils/marker.ts","webpack:///../node_modules/@eclipse-glsp/client/src/utils/smodel-util.ts","webpack:///../node_modules/@eclipse-glsp/client/src/utils/viewpoint-util.ts","webpack:///../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/bytesToUuid.js","webpack:///../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/index.js","webpack:///../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/md5.js","webpack:///../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/rng.js","webpack:///../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/sha1.js","webpack:///../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/v1.js","webpack:///../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/v3.js","webpack:///../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/v35.js","webpack:///../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/v4.js","webpack:///../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/v5.js","webpack:///../node_modules/@eclipse-glsp/theia-integration/css/diagram.css?d6f5","webpack:///../node_modules/@eclipse-glsp/theia-integration/css/tool-palette.css?bdff","webpack:///../node_modules/@eclipse-glsp/theia-integration/src/browser/diagram/glsp-notification-manager.ts","webpack:///../node_modules/@eclipse-glsp/theia-integration/src/browser/diagram/glsp-theia-context-menu-service.ts","webpack:///../node_modules/@eclipse-glsp/theia-integration/src/browser/diagram/glsp-theia-sprotty-connector.ts","webpack:///../node_modules/@eclipse-glsp/theia-integration/src/browser/language/glsp-client-contribution.ts","webpack:///../node_modules/@eclipse-glsp/theia-integration/src/browser/language/glsp-client-provider.ts","webpack:///../node_modules/@eclipse-glsp/theia-integration/src/browser/language/glsp-client-services.ts","webpack:///../node_modules/@eclipse-glsp/theia-integration/src/browser/language/glsp-client.ts","webpack:///../node_modules/@eclipse-glsp/theia-integration/src/browser/language/glsp-frontend-contribution.ts","webpack:///../node_modules/@eclipse-glsp/theia-integration/src/common/index.ts","webpack:///../node_modules/@eclipse-glsp/theia-integration/src/common/protocol.ts","webpack:///../node_modules/@eclipse-glsp/client/css/command-palette.css","webpack:///../node_modules/@eclipse-glsp/client/css/glsp-sprotty.css","webpack:///../node_modules/@eclipse-glsp/client/css/tool-palette.css","webpack:///../node_modules/@eclipse-glsp/theia-integration/css/diagram.css","webpack:///../node_modules/@eclipse-glsp/theia-integration/css/tool-palette.css","webpack:///../node_modules/sprotty-theia/src/index.ts","webpack:///../node_modules/sprotty-theia/src/sprotty/languageserver/code-action-palette.ts","webpack:///../node_modules/sprotty-theia/src/sprotty/languageserver/completion-label-edit.ts","webpack:///../node_modules/sprotty-theia/src/sprotty/languageserver/delete.ts","webpack:///../node_modules/sprotty-theia/src/sprotty/languageserver/edit-diagram-locker.ts","webpack:///../node_modules/sprotty-theia/src/sprotty/languageserver/index.ts","webpack:///../node_modules/sprotty-theia/src/sprotty/languageserver/ls-theia-diagram-server.ts","webpack:///../node_modules/sprotty-theia/src/sprotty/languageserver/ls-theia-sprotty-connector.ts","webpack:///../node_modules/sprotty-theia/src/sprotty/languageserver/rename-label-edit.ts","webpack:///../node_modules/sprotty-theia/src/sprotty/languageserver/traceable.ts","webpack:///../node_modules/sprotty-theia/src/sprotty/languageserver/workspace-edit-command.ts","webpack:///../node_modules/sprotty-theia/src/sprotty/theia-key-tool.ts","webpack:///../node_modules/sprotty-theia/src/sprotty/theia-sprotty-context-menu-service.ts","webpack:///../node_modules/sprotty-theia/src/sprotty/theia-sprotty-selection-forwarder.ts","webpack:///../node_modules/sprotty-theia/src/theia/languageserver/diagram-language-client-contribution.ts","webpack:///../node_modules/sprotty-theia/src/theia/languageserver/diagram-language-client.ts","webpack:///../node_modules/sprotty-theia/src/theia/languageserver/index.ts","webpack:///../node_modules/sprotty-theia/src/theia/languageserver/ls-diagram-contributions.ts","webpack:///../node_modules/sprotty-theia/src/theia/languageserver/ls-diagram-module.ts"],"names":[],"mappings":"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,CAAC;IACnC,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;IACrC,OAAO,yBAAe,CAAC,EAAE,CAAC,KAAE,CAAC,KAAE,KAAK,SAAE,MAAM,UAAE,EAAE,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;AAC3E,CAAC;AAPD,4CAOC;AAED;;;;;GAKG;AACH,SAAgB,kBAAkB,CAAC,MAAmC;IAClE,OAAO,gBAAgB,CAAC,MAAM,CAAC,CAAC;AACpC,CAAC;AAFD,gDAEC;AAED;;;;;GAKG;AACH,SAAgB,cAAc,CAAC,MAAmC;IAC9D,OAAO,gBAAgB,CAAC,MAAM,CAAC,CAAC;AACpC,CAAC;AAFD,wCAEC;;;;;;;;;;;;;ACnGD;AAAA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA,sBAAsB;;AAEtB;AACA;;AAEe,0EAAW,E;;;;;;;;;;;;ACjB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACA;AACA;;;;;;;;;;;;;ACFxC;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;;AAElD;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,aAAa,mBAAmB;AAChC;AACA;;AAEA;;AAEA,aAAa,aAAa;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,kEAAG,E;;;;;;;;;;;;ACzNlB;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;;AAEhB;AACf;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;;ACdA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kDAAkD;;AAElD;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;;AAEA,oBAAoB,QAAQ;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEe,mEAAI,E;;;;;;;;;;;;AC1FnB;AAAA;AAAA;AAA2B;AACgB;AAC3C;AACA;AACA;;AAEA;;AAEA,cAAc;;;AAGd;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA,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","file":"17.bundle.js","sourcesContent":["\nvar content = require(\"!!../../../css-loader/index.js!./command-palette.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../css-loader/index.js!./command-palette.css\", function() {\n\t\tvar newContent = require(\"!!../../../css-loader/index.js!./command-palette.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../css-loader/index.js!./glsp-sprotty.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../css-loader/index.js!./glsp-sprotty.css\", function() {\n\t\tvar newContent = require(\"!!../../../css-loader/index.js!./glsp-sprotty.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../css-loader/index.js!./tool-palette.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../css-loader/index.js!./tool-palette.css\", function() {\n\t\tvar newContent = require(\"!!../../../css-loader/index.js!./tool-palette.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { Action, generateRequestId, LabeledAction, RequestAction, ResponseAction } from \"sprotty\";\n\nimport { EditorContext } from \"../editor-context\";\n\nexport class RequestContextActions implements RequestAction<SetContextActions> {\n    static readonly KIND = \"requestContextActions\";\n    kind = RequestContextActions.KIND;\n    constructor(\n        public readonly contextId: string,\n        public readonly editorContext: EditorContext,\n        public readonly requestId: string = generateRequestId()) { }\n}\n\nexport class SetContextActions implements ResponseAction {\n    static readonly KIND = \"setContextActions\";\n    kind = SetContextActions.KIND;\n    constructor(public readonly actions: LabeledAction[],\n        public readonly responseId: string = '',\n        readonly args?: { [key: string]: string | number | boolean }) { }\n}\n\nexport function isSetContextActionsAction(action: Action): action is SetContextActions {\n    return action !== undefined && (action.kind === SetContextActions.KIND)\n        && (<SetContextActions>action).actions !== undefined;\n}\n","/********************************************************************************\n * Copyright (c) 2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { Action, generateRequestId, RequestAction, ResponseAction } from \"sprotty\";\n\nexport class RequestEditValidationAction implements RequestAction<SetEditValidationResultAction> {\n    static readonly KIND = \"requestEditValidation\";\n    kind = RequestEditValidationAction.KIND;\n    constructor(\n        public readonly contextId: string,\n        public readonly modelElementId: string,\n        public readonly text: string,\n        public readonly requestId: string = generateRequestId()) { }\n}\n\nexport class SetEditValidationResultAction implements ResponseAction {\n    static readonly KIND = \"setEditValidationResult\";\n    kind = SetEditValidationResultAction.KIND;\n    constructor(public readonly status: ValidationStatus,\n        public readonly responseId: string = '',\n        readonly args?: { [key: string]: string | number | boolean }) { }\n}\n\nexport function isSetEditValidationResultAction(action: Action): action is SetEditValidationResultAction {\n    return action !== undefined && (action.kind === SetEditValidationResultAction.KIND)\n        && (<SetEditValidationResultAction>action).status !== undefined;\n}\n\nexport interface ValidationStatus {\n    readonly severity: ValidationStatus.Severity;\n    readonly message: string;\n    readonly error: ResponseError;\n}\n\nexport interface ResponseError {\n    readonly code: number;\n    readonly message: string;\n    readonly data: Object;\n}\n\nexport namespace ValidationStatus {\n\n    export enum Severity {\n        FATAL, ERROR, WARNING, INFO, OK, NONE\n    }\n\n    export const NONE: ValidationStatus = {\n        severity: Severity.NONE, message: '', error: { code: -1, message: '', data: {} }\n    };\n\n    export function isOk(validationStatus: ValidationStatus): boolean {\n        return validationStatus.severity === Severity.OK\n            || validationStatus.severity === Severity.INFO\n            || validationStatus.severity === Severity.NONE;\n    }\n\n    export function isWarning(validationStatus: ValidationStatus): boolean {\n        return validationStatus.severity === Severity.WARNING;\n    }\n\n    export function isError(validationStatus: ValidationStatus): boolean {\n        return validationStatus.severity === Severity.ERROR\n            || validationStatus.severity === Severity.FATAL;\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { LabeledAction } from \"sprotty/lib\";\n\nexport interface SetAutoCompleteValueAction extends LabeledAction {\n    readonly text: string;\n}\n\nexport function isSetAutoCompleteValueAction(action: LabeledAction): action is SetAutoCompleteValueAction {\n    return action !== undefined && (<SetAutoCompleteValueAction>action).text !== undefined;\n}\n","/********************************************************************************\n * Copyright (c) 2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { AutocompleteResult, AutocompleteSettings } from \"autocompleter\";\nimport { Action, ILogger, isAction, isLabeledAction, LabeledAction, SModelRoot } from \"sprotty/lib\";\nimport { toArray } from \"sprotty/lib/utils/iterable\";\nimport { matchesKeystroke } from \"sprotty/lib/utils/keyboard\";\n\nimport { ValidationStatus } from \"../actions/edit-validation-actions\";\nimport { isSetAutoCompleteValueAction } from \"./auto-complete-actions\";\nimport { IValidationDecorator } from \"./validation-decorator\";\n\nexport interface AutoCompleteSettings {\n    readonly noSuggestionsMessage: string;\n    readonly suggestionsClass: string;\n    readonly debounceWaitMs: number;\n    readonly showOnFocus: boolean;\n}\n\nexport interface InputValidator {\n    validate(input: string): Promise<ValidationStatus>;\n}\n\nexport interface SuggestionProvider {\n    provideSuggestions(input: string): Promise<LabeledAction[]>;\n}\n\nexport interface InputValueInitializer {\n    initializeValue(containerElement: HTMLElement, root: Readonly<SModelRoot>, ...contextElementIds: string[]): string;\n}\n\nexport interface SuggestionSubmitHandler {\n    executeFromSuggestion(input: LabeledAction | Action | Action[]): void;\n}\n\nexport interface TextSubmitHandler {\n    executeFromTextOnlyInput(input: string): void;\n}\n\nconst configureAutocomplete: (settings: AutocompleteSettings<LabeledAction>) => AutocompleteResult = require('autocompleter');\n\nexport class AutoCompleteWidget {\n\n    loadingIndicatorClasses = ['loading', 'fa', 'fa-spinner', 'fa-pulse', 'fa-3x', 'fa-fw'];\n\n    protected containerElement: HTMLElement;\n    protected inputElement: HTMLInputElement;\n    protected loadingIndicator: HTMLSpanElement;\n    protected autoCompleteResult: AutocompleteResult;\n    protected contextActions?: LabeledAction[];\n    protected previousContent?: string;\n\n    protected inputValidator?: InputValidator;\n    protected validationDecorator: IValidationDecorator = IValidationDecorator.NO_DECORATION;\n\n    protected textSubmitHandler?: TextSubmitHandler;\n\n    constructor(\n        protected autoSuggestionSettings: AutoCompleteSettings,\n        protected suggestionProvider: SuggestionProvider,\n        protected suggestionSubmitHandler: SuggestionSubmitHandler,\n        protected notifyClose: () => void = () => { },\n        protected logger?: ILogger\n    ) { }\n\n    configureValidation(inputValidator: InputValidator,\n        validationDecorator: IValidationDecorator = IValidationDecorator.NO_DECORATION): void {\n        this.inputValidator = inputValidator;\n        this.validationDecorator = validationDecorator;\n    }\n\n    configureTextSubmitHandler(textSubmitHandler: TextSubmitHandler): void {\n        this.textSubmitHandler = textSubmitHandler;\n    }\n\n    initialize(containerElement: HTMLElement): void {\n        this.containerElement = containerElement;\n        this.inputElement = document.createElement('input');\n        this.inputElement.style.position = 'absolute';\n        this.inputElement.spellcheck = false;\n        this.inputElement.autocapitalize = 'false';\n        this.inputElement.autocomplete = 'false';\n        this.inputElement.style.width = '100%';\n        this.inputElement.addEventListener('keydown', event => this.handleKeyDown(event));\n        this.inputElement.addEventListener('blur', () => window.setTimeout(() => this.notifyClose(), 200));\n        this.containerElement.appendChild(this.inputElement);\n        this.containerElement.style.position = 'absolute';\n    }\n\n    protected handleKeyDown(event: KeyboardEvent) {\n        if (matchesKeystroke(event, 'Escape')) {\n            this.notifyClose();\n            return;\n        }\n        if (matchesKeystroke(event, 'Enter') && !this.isInputElementChanged() && this.isSuggestionAvailable()) {\n            return;\n        }\n        if (this.isInputElementChanged()) {\n            this.invalidateValidationResultAndContextActions();\n        }\n        if (!matchesKeystroke(event, 'Enter') || this.isSuggestionAvailable()) {\n            return;\n        }\n        if (!this.validationDecorator.isValidatedOk()) {\n            event.stopImmediatePropagation();\n            return;\n        }\n        if (this.textSubmitHandler) {\n            this.executeFromTextOnlyInput();\n            this.notifyClose();\n        }\n    }\n\n    protected isInputElementChanged() {\n        return this.inputElement.value !== this.previousContent;\n    }\n\n    protected invalidateValidationResultAndContextActions() {\n        this.contextActions = undefined;\n        this.validationDecorator.invalidate();\n    }\n\n    open(root: Readonly<SModelRoot>, ...contextElementIds: string[]) {\n        this.contextActions = undefined;\n        this.autoCompleteResult = configureAutocomplete(this.autocompleteSettings(root));\n        this.previousContent = this.inputElement.value;\n        this.inputElement.setSelectionRange(0, this.inputElement.value.length);\n        this.inputElement.focus();\n    }\n\n    protected autocompleteSettings(root: Readonly<SModelRoot>): AutocompleteSettings<LabeledAction> {\n        return {\n            input: this.inputElement,\n            emptyMsg: this.autoSuggestionSettings.noSuggestionsMessage,\n            className: this.autoSuggestionSettings.suggestionsClass,\n            showOnFocus: this.autoSuggestionSettings.showOnFocus,\n            debounceWaitMs: this.autoSuggestionSettings.debounceWaitMs,\n            minLength: -1,\n            fetch: (text: string, update: (items: LabeledAction[]) => void) =>\n                this.updateSuggestions(update, text, root),\n            onSelect: (item: LabeledAction) => this.onSelect(item),\n            render: (item: LabeledAction, currentValue: string): HTMLDivElement | undefined =>\n                this.renderSuggestions(item, currentValue),\n            customize: (input: HTMLInputElement, inputRect: ClientRect | DOMRect, container: HTMLDivElement, maxHeight: number) => {\n                this.customizeInputElement(input, inputRect, container, maxHeight);\n            }\n        };\n    }\n\n    protected customizeInputElement(input: HTMLInputElement, inputRect: ClientRect | DOMRect, container: HTMLDivElement, maxHeight: number) {\n        // move container into our UIExtension container as this is already positioned correctly\n        if (this.containerElement) {\n            this.containerElement.appendChild(container);\n        }\n    }\n\n    protected updateSuggestions(update: (items: LabeledAction[]) => void, text: string, root: Readonly<SModelRoot>, ...contextElementIds: string[]) {\n        this.onLoading();\n        this.doUpdateSuggestions(text, root)\n            .then(actions => {\n                this.contextActions = this.filterActions(text, actions);\n                update(this.contextActions);\n                this.onLoaded('success');\n            })\n            .catch(reason => {\n                if (this.logger) { this.logger.error(this, 'Failed to obtain suggestions', reason); }\n                this.onLoaded('error');\n            });\n    }\n\n    protected onLoading() {\n        if (this.loadingIndicator && this.containerElement.contains(this.loadingIndicator)) {\n            return;\n        }\n        this.loadingIndicator = document.createElement('span');\n        this.loadingIndicator.classList.add(...this.loadingIndicatorClasses);\n        this.containerElement.appendChild(this.loadingIndicator);\n    }\n\n    protected doUpdateSuggestions(text: string, root: Readonly<SModelRoot>, ...contextElementIds: string[]): Promise<LabeledAction[]> {\n        return this.suggestionProvider.provideSuggestions(text);\n    }\n\n    protected onLoaded(success: 'success' | 'error') {\n        if (this.containerElement.contains(this.loadingIndicator)) {\n            this.containerElement.removeChild(this.loadingIndicator);\n        }\n        this.validationDecorator.invalidate();\n        this.validateInputIfNoContextActions();\n        this.previousContent = this.inputElement.value;\n    }\n\n    protected renderSuggestions(item: LabeledAction, value: string) {\n        const itemElement = document.createElement('div');\n        const wordMatcher = this.espaceForRegExp(value).split(' ').join('|');\n        const regex = new RegExp(wordMatcher, 'gi');\n        if (item.icon) {\n            this.renderIcon(itemElement, item.icon);\n        }\n        itemElement.innerHTML += item.label.replace(regex, match => '<em>' + match + '</em>');\n        return itemElement;\n    }\n\n    protected espaceForRegExp(value: string) {\n        return value.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n    }\n\n    protected renderIcon(itemElement: HTMLDivElement, icon: string) {\n        itemElement.innerHTML += `<span class=\"icon ${icon}\"></span>`;\n    }\n\n    protected filterActions(filterText: string, actions: LabeledAction[]): LabeledAction[] {\n        return toArray(actions.filter(action => {\n            const label = action.label.toLowerCase();\n            const searchWords = filterText.split(' ');\n            return searchWords.every(word => label.indexOf(word.toLowerCase()) !== -1);\n        }));\n    }\n\n    protected onSelect(item: LabeledAction) {\n        if (isSetAutoCompleteValueAction(item)) {\n            this.inputElement.value = item.text;\n            // trigger update of suggestions with an keyup event\n            window.setTimeout(() => this.inputElement.dispatchEvent(new Event('keyup')));\n        } else {\n            this.executeFromSuggestion(item);\n            this.notifyClose();\n        }\n    }\n\n    protected validateInputIfNoContextActions() {\n        if (this.isNoOrExactlyOneMatchingContextAction()) {\n            this.validateInput();\n        } else {\n            this.validationDecorator.dispose();\n        }\n    }\n\n    private isNoOrExactlyOneMatchingContextAction() {\n        return !this.isSuggestionAvailable()\n            || (this.contextActions\n                && this.contextActions.length === 1\n                && this.inputElement.value.endsWith(this.contextActions[0].label));\n    }\n\n    protected isSuggestionAvailable() {\n        return this.contextActions && this.contextActions.length > 0;\n    }\n\n    validateInput() {\n        if (this.inputValidator) {\n            this.inputValidator.validate(this.inputElement.value)\n                .then(result => this.validationDecorator.decorateValidationResult(result))\n                .catch(error => this.handleErrorDuringValidation(error));\n        }\n    }\n\n    protected handleErrorDuringValidation(error: Error) {\n        if (this.logger) { this.logger.error(this, 'Failed to validate input', error); }\n        this.validationDecorator.dispose();\n    }\n\n    protected executeFromSuggestion(input: LabeledAction | Action[] | Action): void {\n        this.suggestionSubmitHandler.executeFromSuggestion(input);\n    }\n\n    protected executeFromTextOnlyInput(): void {\n        if (this.textSubmitHandler) {\n            this.textSubmitHandler.executeFromTextOnlyInput(this.inputElement.value);\n        }\n    }\n\n    get inputField(): HTMLInputElement {\n        return this.inputElement;\n    }\n\n    dispose() {\n        this.validationDecorator.dispose();\n        if (this.autoCompleteResult) {\n            this.autoCompleteResult.destroy();\n        }\n    }\n}\n\nexport function toActionArray(input: LabeledAction | Action[] | Action): Action[] {\n    if (isLabeledAction(input)) {\n        return input.actions;\n    } else if (isAction(input)) {\n        return [input];\n    }\n    return [];\n}\n","/********************************************************************************\n * Copyright (c) 2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ValidationStatus } from \"../actions/edit-validation-actions\";\n\nexport interface IValidationDecorator {\n    decorateValidationResult(status: ValidationStatus): void;\n    isValidatedOk(): boolean;\n    invalidate(): void;\n    dispose(): void;\n}\n\nexport namespace IValidationDecorator {\n    export const NO_DECORATION: IValidationDecorator = {\n        decorateValidationResult(status: ValidationStatus) { },\n        isValidatedOk(): boolean { return false; },\n        invalidate() { },\n        dispose() { }\n    };\n}\n\nexport class ValidationDecorator implements IValidationDecorator {\n\n    warningClasses = ['warning'];\n    warningIconClasses = ['fa', 'fa-question-circle'];\n    errorClasses = ['error'];\n    errorIconClasses = ['fa', 'fa-exclamation-circle'];\n\n    isValidated: boolean = false;\n    hasValidationError: boolean = false;\n\n    protected decorationDiv?: HTMLDivElement;\n\n    constructor(protected containerElement: HTMLElement) { }\n\n    decorateValidationResult(status: ValidationStatus): void {\n        if (ValidationStatus.isError(status)) {\n            this.hasValidationError = true;\n            this.decorateError(status.message ? status.message : 'Error');\n        } else if (ValidationStatus.isWarning(status)) {\n            this.hasValidationError = false;\n            this.decorateWarning(status.message ? status.message : 'Warning');\n        } else {\n            this.hasValidationError = false;\n            this.dispose();\n        }\n        this.isValidated = true;\n    }\n\n    protected decorateError(message: string): void {\n        this.switchCssClasses(this.containerElement, this.errorClasses);\n        const div = this.createDecorationDiv();\n        this.switchCssClasses(div, this.errorClasses);\n        div.innerHTML = `<span class=\"${this.errorIconClasses.join(' ')}\"></span> ${message}`;\n        this.adjustPosition();\n    }\n\n    protected decorateWarning(message: string): void {\n        this.switchCssClasses(this.containerElement, this.warningClasses);\n        const div = this.createDecorationDiv();\n        this.switchCssClasses(div, this.warningClasses);\n        div.innerHTML = `<span class=\"${this.warningIconClasses.join(' ')}\"></span> ${message}`;\n        this.adjustPosition();\n    }\n\n    protected switchCssClasses(element: HTMLElement, cssClasses: string[]) {\n        element.classList.remove(...this.errorClasses, ...this.warningClasses);\n        element.classList.add(...cssClasses);\n    }\n\n    protected createDecorationDiv(): HTMLDivElement {\n        if (!this.decorationDiv) {\n            this.containerElement.classList.add('validation');\n            this.decorationDiv = document.createElement('div');\n            this.decorationDiv.style.width = `${this.decorationContainerWidth()}px`;\n            this.decorationDiv.classList.add('validation-decorator');\n            this.containerElement.appendChild(this.decorationDiv);\n        }\n        return this.decorationDiv;\n    }\n\n    protected decorationContainerWidth(): number {\n        return this.containerElement.clientWidth - 22;\n    }\n\n    protected adjustPosition(): void {\n        if (this.decorationDiv) {\n            const height = this.decorationDiv.clientHeight + 2;\n            this.decorationDiv.style.top = `-${height}px`;\n        }\n    }\n\n    isValidatedOk(): boolean {\n        return this.isValidated && !this.hasValidationError;\n    }\n\n    invalidate(): void {\n        this.isValidated = false;\n    }\n\n    dispose(): void {\n        this.hasValidationError = false;\n        this.isValidated = false;\n        if (this.decorationDiv && this.containerElement && this.containerElement.contains(this.decorationDiv)) {\n            this.containerElement.removeChild(this.decorationDiv);\n            this.switchCssClasses(this.containerElement, []);\n            this.decorationDiv = undefined;\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport { CommandStack, IActionDispatcher, SModelRoot, TYPES } from \"sprotty\";\n\nimport { GlspRedoAction, GlspUndoAction } from \"../features/undo-redo/model\";\n\n@injectable()\nexport class GLSPCommandStack extends CommandStack {\n\n    @inject(TYPES.IActionDispatcherProvider) protected actionDispatcher: () => Promise<IActionDispatcher>;\n\n    undo(): Promise<SModelRoot> {\n        this.actionDispatcher().then(dispatcher => dispatcher.dispatch(new GlspUndoAction()));\n        return this.thenUpdate();\n    }\n\n    redo(): Promise<SModelRoot> {\n        this.actionDispatcher().then(dispatcher => dispatcher.dispatch(new GlspRedoAction()));\n        return this.thenUpdate();\n    }\n}\n\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport \"../../css/glsp-sprotty.css\";\n\nimport { ContainerModule } from \"inversify\";\nimport { configureActionHandler, configureCommand, SetModelCommand, TYPES } from \"sprotty\";\n\nimport { GLSPCommandStack } from \"./command-stack\";\nimport { EditorContextService } from \"./editor-context\";\nimport { FeedbackAwareUpdateModelCommand, SetModelActionHandler } from \"./model/update-model-command\";\nimport { SelectionClearingMouseListener } from \"./selection-clearing-mouse-listener\";\nimport { GLSPToolManager } from \"./tool-manager/glsp-tool-manager\";\n\nconst defaultGLSPModule = new ContainerModule((bind, _unbind, isBound, rebind) => {\n    const context = { bind, _unbind, isBound, rebind };\n    bind(EditorContextService).toSelf().inSingletonScope();\n\n    // Model update initialization ------------------------------------\n    configureCommand(context, FeedbackAwareUpdateModelCommand);\n    configureActionHandler(context, SetModelCommand.KIND, SetModelActionHandler);\n\n    bind(TYPES.MouseListener).to(SelectionClearingMouseListener);\n\n    rebind(TYPES.ICommandStack).to(GLSPCommandStack);\n    rebind(TYPES.IToolManager).to(GLSPToolManager).inSingletonScope();\n});\n\nexport default defaultGLSPModule;\n","/********************************************************************************\n * Copyright (c) 2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport { MousePositionTracker, Point } from \"sprotty\";\n\nimport { SelectionService } from \"../features/select/selection-service\";\nimport { GLSP_TYPES } from \"./types\";\n\nexport interface EditorContext {\n    readonly selectedElementIds: string[];\n    readonly lastMousePosition?: Point;\n    readonly args?: { [key: string]: string | number | boolean };\n}\n\n@injectable()\nexport class EditorContextService {\n\n    @inject(GLSP_TYPES.SelectionService) protected selectionService: SelectionService;\n    @inject(MousePositionTracker) protected mousePositionTracker: MousePositionTracker;\n\n    get(args?: { [key: string]: string | number | boolean }): EditorContext {\n        return {\n            selectedElementIds: Array.from(this.selectionService.getSelectedElementIDs()),\n            lastMousePosition: this.mousePositionTracker.lastPositionOnDiagram,\n            args\n        };\n    }\n\n    getWithSelection(selectedElementIds: string[], args?: { [key: string]: string | number | boolean }): EditorContext {\n        return {\n            selectedElementIds,\n            lastMousePosition: this.mousePositionTracker.lastPositionOnDiagram,\n            args\n        };\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable, multiInject, optional } from \"inversify\";\nimport {\n    Action,\n    ActionHandlerRegistry,\n    Command,\n    CommandActionHandler,\n    CommandExecutionContext,\n    CommandReturn,\n    IActionHandler,\n    ILogger,\n    SetModelAction,\n    SetModelCommand,\n    SModelRoot,\n    TYPES\n} from \"sprotty\";\nimport { UpdateModelAction, UpdateModelCommand } from \"sprotty/lib/features/update/update-model\";\n\nimport { IFeedbackActionDispatcher } from \"../../features/tool-feedback/feedback-action-dispatcher\";\nimport { FeedbackCommand } from \"../../features/tool-feedback/model\";\nimport { GLSP_TYPES } from \"../types\";\n\n/* ActionHandler that transforms a SetModelAction into an (feedback-aware) UpdateModelAction. This can be done because in sprotty\n*  UpdateModel behaves the same as SetModel if no model is present yet.*/\n@injectable()\nexport class SetModelActionHandler implements IActionHandler {\n    handle(action: Action): Action | void {\n        if (isSetModelAction(action)) {\n            return new UpdateModelAction(action.newRoot, false);\n        }\n    }\n}\n\nexport function isSetModelAction(action: Action): action is SetModelAction {\n    return action !== undefined && (action.kind === SetModelCommand.KIND)\n        && (<SetModelAction>action).newRoot !== undefined;\n}\n\nexport interface SModelRootListener {\n    modelRootChanged(root: Readonly<SModelRoot>): void\n}\n\n/**\n * A special`UpdateModelCommand` that retrieves all registered `actions` from the `IFeedbackActionDispatcher` (if present) and applies their feedback\n * to the `newRoot` before performing the update\n */\n@injectable()\nexport class FeedbackAwareUpdateModelCommand extends UpdateModelCommand {\n    protected actionHandlerRegistry?: ActionHandlerRegistry;\n    constructor(@inject(TYPES.Action) action: UpdateModelAction,\n        @inject(TYPES.ILogger) protected logger: ILogger,\n        @inject(GLSP_TYPES.IFeedbackActionDispatcher) @optional() protected readonly feedbackActionDispatcher: IFeedbackActionDispatcher,\n        @inject(TYPES.ActionHandlerRegistryProvider) actionHandlerRegistryProvider: () => Promise<ActionHandlerRegistry>,\n        @multiInject(GLSP_TYPES.SModelRootListener) @optional() protected modelRootListeners: SModelRootListener[] = []) {\n        super(action);\n        actionHandlerRegistryProvider().then(registry => this.actionHandlerRegistry = registry);\n    }\n\n    protected performUpdate(oldRoot: SModelRoot, newRoot: SModelRoot, context: CommandExecutionContext): CommandReturn {\n        if (this.feedbackActionDispatcher && this.actionHandlerRegistry) {\n            // Create a temporary context wich defines the `newRoot` as `root`\n            // This way we do not corrupt the redo/undo behavior of the super class\n            const tempContext: CommandExecutionContext = {\n                root: newRoot,\n                duration: context.duration,\n                logger: context.logger,\n                modelChanged: context.modelChanged,\n                modelFactory: context.modelFactory,\n                syncer: context.syncer\n            };\n\n            const feedbackCommands = this.getFeedbackCommands(this.actionHandlerRegistry);\n            feedbackCommands.forEach(command => command.execute(tempContext));\n        }\n\n        this.modelRootListeners.forEach(listener => listener.modelRootChanged(newRoot));\n        return super.performUpdate(oldRoot, newRoot, context);\n    }\n\n    private getFeedbackCommands(registry: ActionHandlerRegistry): Command[] {\n        const result: Command[] = [];\n        this.feedbackActionDispatcher.getRegisteredFeedback().forEach(action => {\n            const handler = registry.get(action.kind).find(h => h instanceof CommandActionHandler);\n            if (handler instanceof CommandActionHandler) {\n                result.push(handler.handle(action));\n            }\n        });\n        // sort commands descanding by priority\n        return result.sort((a, b) => getPriority(b) - getPriority(a));\n    }\n}\n\nfunction getPriority(command: Command): number {\n    if (command instanceof FeedbackCommand) {\n        return command.priority;\n    }\n    return 0;\n}\n","/********************************************************************************\n * Copyright (c) 2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { Action, ElementAndBounds, isAction, Point } from \"sprotty\";\n\nexport interface Operation extends Action { }\n\nexport interface CreateOperation extends Operation {\n    elementTypeId: string;\n    args?: { [key: string]: string | number | boolean };\n}\n\nexport function isCreateOperation(object?: any): object is CreateOperation {\n    return isAction(object) && \"elementTypeId\" in object;\n}\n\nexport class CreateNodeOperation implements CreateOperation {\n    static readonly KIND = \"createNode\";\n    readonly kind = CreateNodeOperation.KIND;\n\n    constructor(public readonly elementTypeId: string,\n        public location?: Point,\n        public containerId?: string,\n        public args?: { [key: string]: string | number | boolean }) { }\n}\n\nexport function isCreateNodeOperation(object?: any): object is CreateNodeOperation {\n    return isCreateOperation() && object.kind === CreateNodeOperation.KIND;\n}\n\nexport class CreateEdgeOperation implements CreateOperation {\n    static readonly KIND = \"createEdge\";\n    readonly kind = CreateEdgeOperation.KIND;\n\n    constructor(public readonly elementTypeId: string,\n        public sourceElementId?: string,\n        public targetElementId?: string,\n        public args?: { [key: string]: string | number | boolean }) { }\n}\n\nexport function isCreateConnectionOperation(object?: any): object is CreateEdgeOperation {\n    return isCreateOperation() && object.kind === CreateEdgeOperation.KIND;\n}\n\nexport class DeleteElementOperation implements Operation {\n    static readonly KIND = \"deleteElement\";\n    kind = DeleteElementOperation.KIND;\n    constructor(readonly elementIds: string[]) { }\n}\n\nexport class ChangeBoundsOperation implements Operation {\n    static readonly KIND = \"changeBounds\";\n    readonly kind = ChangeBoundsOperation.KIND;\n    constructor(public newBounds: ElementAndBounds[]) { }\n}\n\nexport class ChangeContainerOperation implements Operation {\n    static readonly KIND = \"changeContainer\";\n    readonly kind = ChangeContainerOperation.KIND;\n    constructor(public readonly elementId: string,\n        public readonly targetContainerId: string,\n        public readonly location?: string) { }\n}\n\nexport class ReconnectEdgeOperation implements Operation {\n    static readonly KIND = \"reconnectEdge\";\n    readonly kind = ReconnectEdgeOperation.KIND;\n    constructor(public readonly connectionElementId: string,\n        public readonly sourceElementId: string,\n        public readonly targetElementId: string) { }\n}\n\nexport class ChangeRoutingPointsOperation implements Operation {\n    static readonly KIND = \"changeRoutingPoints\";\n    readonly kind = ChangeRoutingPointsOperation.KIND;\n    constructor(public newRoutingPoints: ElementAndRoutingPoints[]) { }\n}\n\nexport interface ElementAndRoutingPoints {\n    elementId: string\n    newRoutingPoints?: Point[];\n}\n\nexport abstract class TriggerElementCreationAction implements Action {\n    abstract readonly kind: string;\n    constructor(public readonly elementTypeId: string,\n        readonly args?: { [key: string]: string | number | boolean }) { }\n}\n\nexport class TriggerNodeCreationAction extends TriggerElementCreationAction {\n    static readonly KIND = \"triggerNodeCreation\";\n    kind = TriggerNodeCreationAction.KIND;\n}\n\nexport class TriggerEdgeCreationAction extends TriggerElementCreationAction {\n    static readonly KIND = \"triggerEdgeCreation\";\n    kind = TriggerEdgeCreationAction.KIND;\n}\n\nexport function isTriggerElementTypeCreationAction(object?: any): object is TriggerElementCreationAction {\n    return isAction(object) && \"elementTypeId\" in object;\n}\n\nexport function isTriggerNodeCreationAction(object?: any): object is TriggerNodeCreationAction {\n    return isTriggerElementTypeCreationAction(object) && object.kind === TriggerNodeCreationAction.KIND;\n}\n\nexport function isTriggerEdgeCreationAction(object?: any): object is TriggerEdgeCreationAction {\n    return isTriggerElementTypeCreationAction(object) && object.kind === TriggerEdgeCreationAction.KIND;\n}\n","/********************************************************************************\n * Copyright (c) 2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { injectable } from \"inversify\";\nimport { MouseListener, SModelElement } from \"sprotty\";\n\n/**\n * A mouse listener that clears the document selection on click\n *\n * Clicking on SVG elements doesn't update the document selection. In the context of diagramming\n * with GLSP, this is unnatural, as the user would expect that clicking in the diagram (e.g. to\n * select a diagram element) would clear any other selection state in the DOM. From a technical\n * point of view, an active selection in the document after clicking into the diagram may also\n * lead to bogus target elements in certain browser events, such as clipboard events, etc.\n *\n * This listener helps to overcome this problem by actively clearing any existing selection in\n * the document, if the user clicks into the diagram.\n */\n@injectable()\nexport class SelectionClearingMouseListener extends MouseListener {\n    mouseDown(target: SModelElement, event: MouseEvent) {\n        const selection = document.getSelection();\n        if (selection === null) {\n            return [];\n        }\n        selection.removeAllRanges();\n        selection.empty();\n        return [];\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { injectable, multiInject, optional } from \"inversify\";\nimport { Tool, ToolManager } from \"sprotty\";\n\nimport { GLSP_TYPES } from \"../../base/types\";\nimport { distinctAdd } from \"../../utils/array-utils\";\n\n@injectable()\nexport class GLSPToolManager extends ToolManager {\n\n    constructor(@multiInject(GLSP_TYPES.ITool) @optional() tools: Tool[],\n        @multiInject(GLSP_TYPES.IDefaultTool) @optional() defaultTools: Tool[]) {\n        super();\n        this.registerTools(...tools);\n        this.registerDefaultTools(...defaultTools);\n        this.enableDefaultTools();\n    }\n\n    registerDefaultTools(...tools: Tool[]) {\n        for (const tool of tools) {\n            distinctAdd(this.defaultTools, tool);\n        }\n    }\n\n    registerTools(...tools: Tool[]) {\n        for (const tool of tools) {\n            distinctAdd(this.tools, tool);\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nexport const GLSP_TYPES = {\n    IAsyncClipboardService: Symbol.for(\"IAsyncClipboardService\"),\n    ICommandPaletteActionProviderRegistry: Symbol.for(\"ICommandPaletteActionProviderRegistry\"),\n    IFeedbackActionDispatcher: Symbol.for(\"IFeedbackActionDispatcher\"),\n    IToolFactory: Symbol.for(\"Factory<Tool>\"),\n    ITypeHintProvider: Symbol.for(\"ITypeHintProvider\"),\n    IMovementRestrictor: Symbol.for(\"IMovmementRestrictor\"),\n    SelectionService: Symbol.for(\"SelectionService\"),\n    SelectionListener: Symbol.for(\"SelectionListener\"),\n    SModelRootListener: Symbol.for(\"SModelRootListener\"),\n    MouseTool: Symbol.for(\"MouseTool\"),\n    IContextMenuService: Symbol.for(\"IContextMenuService\"),\n    IContextMenuServiceProvider: Symbol.for(\"IContextMenuServiceProvider\"),\n    IContextMenuProviderRegistry: Symbol.for(\"IContextMenuProviderRegistry\"),\n    IContextMenuProvider: Symbol.for(\"IContextMenuProvider\"),\n    ICopyPasteHandler: Symbol.for(\"ICopyPasteHandler\"),\n    ITool: Symbol.for(\"ITool\"),\n    IDefaultTool: Symbol.for(\"IDefaultTool\")\n};\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport {\n    BoundsAware,\n    Hoverable,\n    hoverFeedbackFeature,\n    isBoundsAware,\n    isMoveable,\n    isSelectable,\n    Locateable,\n    SChildElement,\n    Selectable,\n    SModelElement,\n    SParentElement\n} from \"sprotty\";\n\nexport const resizeFeature = Symbol(\"resizeFeature\");\n\nexport interface Resizable extends BoundsAware, Selectable {\n}\n\nexport function isResizable(element: SModelElement): element is SParentElement & Resizable {\n    return isBoundsAware(element) && isSelectable(element) && element instanceof SParentElement && element.hasFeature(resizeFeature);\n}\n\nexport enum ResizeHandleLocation {\n    TopLeft = \"top-left\",\n    TopRight = \"top-right\",\n    BottomLeft = \"bottom-left\",\n    BottomRight = \"bottom-right\"\n}\n\nexport function isBoundsAwareMoveable(element: SModelElement): element is SModelElement & Locateable & BoundsAware {\n    return isMoveable(element) && isBoundsAware(element);\n}\n\nexport class SResizeHandle extends SChildElement implements Hoverable {\n    static readonly TYPE = 'resize-handle';\n    type: string = SResizeHandle.TYPE;\n    hoverFeedback: boolean = false;\n    location?: ResizeHandleLocation;\n\n    constructor(location?: ResizeHandleLocation) {\n        super();\n        this.location = location;\n    }\n\n    hasFeature(feature: symbol): boolean {\n        return feature === hoverFeedbackFeature;\n    }\n}\n\nexport function addResizeHandles(element: SParentElement) {\n    removeResizeHandles(element);\n    element.add(new SResizeHandle(ResizeHandleLocation.TopLeft));\n    element.add(new SResizeHandle(ResizeHandleLocation.TopRight));\n    element.add(new SResizeHandle(ResizeHandleLocation.BottomLeft));\n    element.add(new SResizeHandle(ResizeHandleLocation.BottomRight));\n}\n\nexport function removeResizeHandles(element: SParentElement) {\n    element.removeAll(child => child instanceof SResizeHandle);\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { injectable } from \"inversify\";\nimport { BoundsAware, Point, SModelElement, SNode, SParentElement } from \"sprotty\";\n\nimport { toAbsoluteBounds } from \"../../utils/viewpoint-util\";\nimport { ModifyCSSFeedbackAction } from \"../tool-feedback/css-feedback\";\nimport { isBoundsAwareMoveable, SResizeHandle } from \"./model\";\n\nexport interface IMovementRestrictor {\n    validate(newLocation: Point, element: SModelElement): boolean;\n    cssClasses?: string[];\n}\n\nexport function createMovementRestrictionFeedback(element: SModelElement, movementRestrictor: IMovementRestrictor): ModifyCSSFeedbackAction {\n    const elements: SModelElement[] = [element];\n    if (element instanceof SParentElement) {\n        element.children.filter(child => child instanceof SResizeHandle).forEach(e => elements.push(e));\n    }\n    return new ModifyCSSFeedbackAction(elements, movementRestrictor.cssClasses);\n\n}\n\nexport function removeMovementRestrictionFeedback(element: SModelElement, movementRestrictor: IMovementRestrictor): ModifyCSSFeedbackAction {\n    const elements: SModelElement[] = [element];\n    if (element instanceof SParentElement) {\n        element.children.filter(child => child instanceof SResizeHandle).forEach(e => elements.push(e));\n    }\n\n    return new ModifyCSSFeedbackAction(elements, undefined, movementRestrictor.cssClasses);\n}\n\n@injectable()\nexport class NoOverlapMovmentRestrictor implements IMovementRestrictor {\n    validate(newLocation: Point, element: SModelElement): boolean {\n        if (!isBoundsAwareMoveable(element)) {\n            return false;\n        }\n        // Create ghost element at the newLocation\n        const ghostElement = Object.create(element) as SModelElement & BoundsAware;\n        ghostElement.bounds = {\n            x: newLocation.x,\n            y: newLocation.y,\n            width: element.bounds.width,\n            height: element.bounds.height\n        };\n        ghostElement.type = \"Ghost\";\n        ghostElement.id = element.id;\n        return !Array.from(element.root.index.all().filter(e => e.id !== ghostElement.id && e !== ghostElement.root && (e instanceof SNode))\n            .map(e => e as SModelElement & BoundsAware)).some(e => areOverlapping(e, ghostElement));\n    }\n\n    cssClasses = [\"movement-not-allowed\"];\n}\n\nexport function areOverlapping(element1: SModelElement & BoundsAware, element2: SModelElement & BoundsAware) {\n    const b1 = toAbsoluteBounds(element1);\n    const b2 = toAbsoluteBounds(element2);\n    const r1TopLeft: Point = b1;\n    const r1BottomRight = { x: b1.x + b1.width, y: b1.y + b1.height };\n    const r2TopLeft: Point = b2;\n    const r2BottomRight = { x: b2.x + b2.width, y: b2.y + b2.height };\n\n    // If one rectangle is on left side of other\n    if (r1TopLeft.x > r2BottomRight.x || r2TopLeft.x > r1BottomRight.x)\n        return false;\n\n    // If one rectangle is above other\n    if (r1BottomRight.y < r2TopLeft.y || r2BottomRight.y < r1TopLeft.y)\n        return false;\n\n    return true;\n\n}\n","/********************************************************************************\n * Copyright (c) 2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { injectable } from \"inversify\";\nimport { ISnapper, Point, SModelElement } from \"sprotty\";\n\n@injectable()\nexport class GridSnapper implements ISnapper {\n    get gridX() {\n        return 10;\n    }\n\n    get gridY() {\n        return 10;\n    }\n\n    snap(position: Point, element: SModelElement): Point {\n        return {\n            x: Math.round(position.x / this.gridX) * this.gridX,\n            y: Math.round(position.y / this.gridY) * this.gridY\n        };\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport \"../../../css/command-palette.css\";\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"sprotty\";\n\nimport { ServerCommandPaletteActionProvider } from \"./server-command-palette-provider\";\n\nconst glspCommandPaletteModule = new ContainerModule((bind) => {\n    bind(TYPES.ICommandPaletteActionProvider).to(ServerCommandPaletteActionProvider);\n});\n\nexport default glspCommandPaletteModule;\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport { Action, ICommandPaletteActionProvider, LabeledAction, Point, SModelElement, TYPES } from \"sprotty\";\n\nimport { isSetContextActionsAction, RequestContextActions } from \"../../base/actions/context-actions\";\nimport { EditorContextService } from \"../../base/editor-context\";\nimport { GLSPActionDispatcher } from \"../request-response/glsp-action-dispatcher\";\n\nexport namespace ServerCommandPalette {\n    export const CONTEXT_ID = \"command-palette\";\n    export const TEXT = \"text\";\n    export const INDEX = \"index\";\n}\n\n@injectable()\nexport class ServerCommandPaletteActionProvider implements ICommandPaletteActionProvider {\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: GLSPActionDispatcher;\n    @inject(EditorContextService) protected editorContext: EditorContextService;\n\n    getActions(root: Readonly<SModelElement>, text: string, lastMousePosition?: Point, index?: number): Promise<LabeledAction[]> {\n        const requestAction = new RequestContextActions(ServerCommandPalette.CONTEXT_ID, this.editorContext.get({\n            [ServerCommandPalette.TEXT]: text,\n            [ServerCommandPalette.INDEX]: index ? index : 0\n        }));\n        return this.actionDispatcher.requestUntil(requestAction).then(response => this.getPaletteActionsFromResponse(response));\n    }\n\n    getPaletteActionsFromResponse(action: Action): LabeledAction[] {\n        if (isSetContextActionsAction(action)) {\n            return action.actions;\n        }\n        return [];\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { injectable } from \"inversify\";\nimport { IContextMenuItemProvider, isDeletable, isSelected, MenuItem, Point, SModelRoot } from \"sprotty\";\n\nimport { DeleteElementOperation } from \"../../base/operations/operation\";\n\n@injectable()\nexport class DeleteElementContextMenuItemProvider implements IContextMenuItemProvider {\n    getItems(root: Readonly<SModelRoot>, lastMousePosition?: Point): Promise<MenuItem[]> {\n        const selectedElements = Array.from(root.index.all().filter(isSelected).filter(isDeletable));\n        return Promise.resolve([\n            {\n                id: \"delete\",\n                label: \"Delete\",\n                sortString: \"d\",\n                group: \"edit\",\n                actions: [new DeleteElementOperation(selectedElements.map(e => e.id))],\n                isEnabled: () => selectedElements.length > 0\n            }\n        ]);\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"sprotty\";\n\nimport { ServerContextMenuItemProvider } from \"./server-context-menu-provider\";\n\nconst glspContextMenuModule = new ContainerModule(bind => {\n    bind(TYPES.IContextMenuItemProvider).to(ServerContextMenuItemProvider);\n});\n\nexport default glspContextMenuModule;\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport { Action, IContextMenuItemProvider, isSelected, LabeledAction, Point, SModelElement, TYPES } from \"sprotty\";\n\nimport { isSetContextActionsAction, RequestContextActions } from \"../../base/actions/context-actions\";\nimport { EditorContextService } from \"../../base/editor-context\";\nimport { GLSPActionDispatcher } from \"../request-response/glsp-action-dispatcher\";\n\nexport namespace ServerContextMenu {\n    export const CONTEXT_ID = \"context-menu\";\n}\n\n@injectable()\nexport class ServerContextMenuItemProvider implements IContextMenuItemProvider {\n\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: GLSPActionDispatcher;\n    @inject(EditorContextService) protected editorContext: EditorContextService;\n\n    getItems(root: Readonly<SModelElement>, lastMousePosition?: Point): Promise<LabeledAction[]> {\n        const selectedElementIds = Array.from(root.index.all().filter(isSelected).map(e => e.id));\n        const context = this.editorContext.getWithSelection(selectedElementIds);\n        const requestAction = new RequestContextActions(ServerContextMenu.CONTEXT_ID, context);\n        return this.actionDispatcher.requestUntil(requestAction).then(response => this.getContextActionsFromResponse(response));\n    }\n\n    getContextActionsFromResponse(action: Action): LabeledAction[] {\n        if (isSetContextActionsAction(action)) {\n            return action.actions;\n        }\n        return [];\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { Action, generateRequestId, RequestAction, ResponseAction } from \"sprotty\";\n\nimport { EditorContext } from \"../../base/editor-context\";\n\nexport class CutOperationAction implements Action {\n    static readonly KIND = \"cut\";\n    kind = CutOperationAction.KIND;\n    constructor(public readonly editorContext: EditorContext) { }\n}\n\nexport class PasteOperationAction implements Action {\n    static readonly KIND = \"paste\";\n    kind = PasteOperationAction.KIND;\n    constructor(\n        public readonly clipboardData: ClipboardData,\n        public readonly editorContext: EditorContext) { }\n}\n\nexport class RequestClipboardDataAction implements RequestAction<SetClipboardDataAction> {\n    static readonly KIND = \"requestClipboardData\";\n    kind = RequestClipboardDataAction.KIND;\n\n    constructor(\n        public readonly editorContext: EditorContext,\n        public readonly requestId: string = generateRequestId()) { }\n\n    static create(editorContext: EditorContext): RequestAction<SetClipboardDataAction> {\n        return new RequestClipboardDataAction(editorContext);\n    }\n}\n\nexport type ClipboardData = { [format: string]: string };\n\nexport class SetClipboardDataAction implements ResponseAction {\n    static readonly KIND = \"setClipboardData\";\n    kind = SetClipboardDataAction.KIND;\n    constructor(\n        public readonly clipboardData: ClipboardData,\n        public readonly responseId: string = '') { }\n}\n","/********************************************************************************\n * Copyright (c) 2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport {\n    Action,\n    IActionDispatcher,\n    IActionHandler,\n    IContextMenuItemProvider,\n    isDeletable,\n    isSelected,\n    MenuItem,\n    Point,\n    SModelRoot,\n    TYPES\n} from \"sprotty/lib\";\n\nimport { GLSP_TYPES } from \"../../base/types\";\nimport { GLSPServerStatusAction, ServerMessageAction } from \"../../model-source/glsp-server-status\";\nimport { SelectionService } from \"../select/selection-service\";\n\nexport class InvokeCopyAction implements Action {\n    static readonly KIND = \"invoke-copy\";\n    kind = InvokeCopyAction.KIND;\n}\n\nexport class InvokePasteAction implements Action {\n    static readonly KIND = \"invoke-paste\";\n    kind = InvokePasteAction.KIND;\n}\n\nexport class InvokeCutAction implements Action {\n    static readonly KIND = \"invoke-cut\";\n    kind = InvokeCutAction.KIND;\n}\n\n@injectable()\nexport class InvokeCopyPasteActionHandler implements IActionHandler {\n    @inject(TYPES.IActionDispatcher) protected dispatcher: IActionDispatcher;\n    handle(action: Action) {\n        switch (action.kind) {\n            case InvokeCopyAction.KIND:\n                document.execCommand('copy');\n                break;\n            case InvokePasteAction.KIND:\n                // in a browser without additional permission we can't invoke the paste command\n                // the user needs to invoke it from the browser, so notify the user about it\n                this.notifyUserToUseShortcut();\n                break;\n            case InvokeCutAction.KIND:\n                document.execCommand('cut');\n                break;\n        }\n    }\n\n    protected notifyUserToUseShortcut() {\n        const message = 'Please use the browser\\'s paste command or shortcut.';\n        const timeout = 10000;\n        const severity = 'WARNING';\n        this.dispatcher.dispatchAll([\n            <GLSPServerStatusAction>{ kind: GLSPServerStatusAction.KIND, severity, timeout, message },\n            <ServerMessageAction>{ kind: ServerMessageAction.KIND, severity, timeout, message }\n        ]);\n    }\n}\n\n@injectable()\nexport class CopyPasteContextMenuItemProvider implements IContextMenuItemProvider {\n    @inject(GLSP_TYPES.SelectionService) protected selectionService: SelectionService;\n    getItems(root: Readonly<SModelRoot>, lastMousePosition?: Point): Promise<MenuItem[]> {\n        const selectedElements = Array.from(root.index.all().filter(isSelected).filter(isDeletable));\n        this.selectionService.updateSelection(root, selectedElements.map(element => element.id), []);\n        return Promise.resolve([\n            {\n                id: \"copy\",\n                label: \"Copy\",\n                group: \"copy-paste\",\n                actions: [new InvokeCopyAction()],\n                isEnabled: () => selectedElements.length > 0\n            },\n            {\n                id: \"cut\",\n                label: \"Cut\",\n                group: \"copy-paste\",\n                actions: [new InvokeCutAction()],\n                isEnabled: () => selectedElements.length > 0\n            },\n            {\n                id: \"paste\",\n                label: \"Paste\",\n                group: \"copy-paste\",\n                actions: [new InvokePasteAction()],\n                isEnabled: () => true\n            }\n        ]);\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport { TYPES } from \"sprotty\";\nimport { v4 as uuid } from \"uuid\";\n\nimport { EditorContextService } from \"../../base/editor-context\";\nimport { GLSP_TYPES } from \"../../base/types\";\nimport { GLSPActionDispatcher } from \"../request-response/glsp-action-dispatcher\";\nimport { ClipboardData, CutOperationAction, PasteOperationAction, RequestClipboardDataAction } from \"./copy-paste-actions\";\n\nexport interface ICopyPasteHandler {\n    handleCopy(e: ClipboardEvent): void;\n    handleCut(e: ClipboardEvent): void;\n    handlePaste(e: ClipboardEvent): void;\n}\n\nexport interface IAsyncClipboardService {\n    clear(): void;\n    put(data: ClipboardData, id?: string): void;\n    get(id?: string): ClipboardData | undefined;\n}\n\n/**\n * A local implementation of the async clipboard interface.\n *\n * This implementation just stores the clipboard data in memory, but not in the clipboard.\n * This implementation can be used if you don't need to support cross-widget/browser/application\n * data transfer and you would like to avoid to require the permission of the user for accessing the\n * system clipboard asynchronously.\n *\n * In order to detect whether the user copied something else since we recorded the clipboard data\n * we put a uuid into the system clipboard synchronously. If on paste this ID has changed or is not\n * available anymore, we know that the user copied in another application or context, so we shouldn't\n * paste what we have stored locally and just return undefined.\n *\n * Real async clipboard service implementations can just ignore the ID that is passed and rely on the\n * system clipboard's content instead.\n */\n@injectable()\nexport class LocalClipboardService implements IAsyncClipboardService {\n    protected currentId?: string;\n    protected data?: ClipboardData;\n\n    clear() {\n        this.currentId = undefined;\n        this.data = undefined;\n    }\n\n    put(data: ClipboardData, id: string) {\n        this.currentId = id;\n        this.data = data;\n    }\n\n    get(id?: string): ClipboardData | undefined {\n        if (id !== this.currentId) {\n            return undefined;\n        }\n        return this.data;\n    }\n}\n\ninterface ClipboardId {\n    readonly clipboardId: string;\n}\n\nfunction toClipboardId(clipboardId: string): string {\n    return JSON.stringify({ clipboardId });\n}\n\nfunction isClipboardId(jsonData: any): jsonData is ClipboardId {\n    return 'clipboardId' in jsonData;\n}\n\nfunction getClipboardIdFromDataTransfer(dataTransfer: DataTransfer): string | undefined {\n    const jsonString = dataTransfer.getData(CLIPBOARD_DATA_FORMAT);\n    const jsonObject = jsonString ? JSON.parse(jsonString) : undefined;\n    return isClipboardId(jsonObject) ? jsonObject.clipboardId : undefined;\n}\n\nconst CLIPBOARD_DATA_FORMAT = \"application/json\";\n\n@injectable()\nexport class ServerCopyPasteHandler implements ICopyPasteHandler {\n\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: GLSPActionDispatcher;\n    @inject(GLSP_TYPES.IAsyncClipboardService) protected clipboadService: IAsyncClipboardService;\n    @inject(EditorContextService) protected editorContext: EditorContextService;\n\n    handleCopy(e: ClipboardEvent) {\n        if (e.clipboardData && this.shouldCopy(e)) {\n            const clipboardId = uuid();\n            e.clipboardData.setData(CLIPBOARD_DATA_FORMAT, toClipboardId(clipboardId));\n            this.actionDispatcher\n                .request(RequestClipboardDataAction.create(this.editorContext.get()))\n                .then(action => this.clipboadService.put(action.clipboardData, clipboardId));\n            e.preventDefault();\n        } else {\n            if (e.clipboardData) { e.clipboardData.clearData(); }\n            this.clipboadService.clear();\n        }\n    }\n\n    handleCut(e: ClipboardEvent): void {\n        if (e.clipboardData && this.shouldCopy(e)) {\n            this.handleCopy(e);\n            this.actionDispatcher.dispatch(new CutOperationAction(this.editorContext.get()));\n            e.preventDefault();\n        }\n    }\n\n    handlePaste(e: ClipboardEvent): void {\n        if (e.clipboardData) {\n            const clipboardId = getClipboardIdFromDataTransfer(e.clipboardData);\n            const clipboardData = this.clipboadService.get(clipboardId);\n            if (clipboardData) {\n                this.actionDispatcher\n                    .dispatch(new PasteOperationAction(clipboardData, this.editorContext.get()));\n            }\n            e.preventDefault();\n        }\n    }\n\n    protected shouldCopy(e: ClipboardEvent) {\n        return this.editorContext.get().selectedElementIds.length > 0\n            && (e.srcElement instanceof HTMLBodyElement || e.srcElement instanceof SVGElement);\n    }\n\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ContainerModule } from \"inversify\";\nimport { configureActionHandler } from \"sprotty/lib\";\n\nimport { GLSP_TYPES } from \"../../base/types\";\nimport {\n    CopyPasteContextMenuItemProvider,\n    InvokeCopyAction,\n    InvokeCopyPasteActionHandler,\n    InvokeCutAction,\n    InvokePasteAction\n} from \"./copy-paste-context-menu\";\nimport { LocalClipboardService, ServerCopyPasteHandler } from \"./copy-paste-handler\";\n\nexport const glspServerCopyPasteModule = new ContainerModule((bind, _unbind, isBound) => {\n    bind(GLSP_TYPES.ICopyPasteHandler).to(ServerCopyPasteHandler);\n    bind(GLSP_TYPES.IAsyncClipboardService).to(LocalClipboardService).inSingletonScope();\n});\n\nexport const copyPasteContextMenuModule = new ContainerModule((bind, _unbind, isBound) => {\n    bind(GLSP_TYPES.IContextMenuProvider).to(CopyPasteContextMenuItemProvider).inSingletonScope();\n    bind(InvokeCopyPasteActionHandler).toSelf().inSingletonScope();\n    configureActionHandler({ bind, isBound }, InvokeCopyAction.KIND, InvokeCopyPasteActionHandler);\n    configureActionHandler({ bind, isBound }, InvokeCutAction.KIND, InvokeCopyPasteActionHandler);\n    configureActionHandler({ bind, isBound }, InvokePasteAction.KIND, InvokeCopyPasteActionHandler);\n});\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"sprotty\";\n\nimport { BalloonLabelValidationDecorator, ServerEditLabelValidator } from \"./edit-label-validator\";\n\nconst glspEditLabelValidationModule = new ContainerModule(bind => {\n    bind(TYPES.IEditLabelValidator).to(ServerEditLabelValidator);\n    bind(TYPES.IEditLabelValidationDecorator).to(BalloonLabelValidationDecorator);\n});\n\nexport default glspEditLabelValidationModule;\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport {\n    Action,\n    EditableLabel,\n    EditLabelValidationResult,\n    IEditLabelValidationDecorator,\n    IEditLabelValidator,\n    Severity,\n    SModelElement,\n    TYPES\n} from \"sprotty\";\n\nimport {\n    isSetEditValidationResultAction,\n    RequestEditValidationAction,\n    ValidationStatus\n} from \"../../base/actions/edit-validation-actions\";\nimport { GLSPActionDispatcher } from \"../request-response/glsp-action-dispatcher\";\n\nexport namespace LabelEditValidation {\n    export const CONTEXT_ID = 'label-edit';\n    export function toEditLabelValidationResult(status: ValidationStatus): EditLabelValidationResult {\n        const message = status.message;\n        let severity = <Severity>'ok';\n        if (ValidationStatus.isError(status)) {\n            severity = <Severity>'error';\n        } else if (ValidationStatus.isWarning(status)) {\n            severity = <Severity>'warning';\n        }\n        return { message, severity };\n    }\n}\n\nexport class ValidateLabelEditAction extends RequestEditValidationAction {\n    constructor(value: string, labelId: string) {\n        super(LabelEditValidation.CONTEXT_ID, labelId, value);\n    }\n}\n\n@injectable()\nexport class ServerEditLabelValidator implements IEditLabelValidator {\n\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: GLSPActionDispatcher;\n\n    validate(value: string, label: EditableLabel & SModelElement): Promise<EditLabelValidationResult> {\n        const action = new ValidateLabelEditAction(value, label.id);\n        return this.actionDispatcher.requestUntil(action).then(response => this.getValidationResultFromResponse(response));\n    }\n\n    getValidationResultFromResponse(action: Action): EditLabelValidationResult {\n        if (isSetEditValidationResultAction(action)) {\n            return LabelEditValidation.toEditLabelValidationResult(action.status);\n        }\n        return { severity: <Severity>'ok' };\n    }\n\n}\n\n@injectable()\nexport class BalloonLabelValidationDecorator implements IEditLabelValidationDecorator {\n\n    decorate(input: HTMLInputElement, result: EditLabelValidationResult): void {\n        const containerElement = input.parentElement;\n        if (!containerElement) {\n            return;\n        }\n        if (result.message) {\n            containerElement.setAttribute('data-balloon', result.message);\n            containerElement.setAttribute('data-balloon-pos', 'up-left');\n            containerElement.setAttribute('data-balloon-visible', 'true');\n        }\n        switch (result.severity) {\n            case 'ok': containerElement.classList.add('validation-ok'); break;\n            case 'warning': containerElement.classList.add('validation-warning'); break;\n            case 'error': containerElement.classList.add('validation-error'); break;\n        }\n    }\n\n    dispose(input: HTMLInputElement): void {\n        const containerElement = input.parentElement;\n        if (containerElement) {\n            containerElement.removeAttribute('data-balloon');\n            containerElement.removeAttribute('data-balloon-pos');\n            containerElement.removeAttribute('data-balloon-visible');\n            containerElement.classList.remove('validation-ok', 'validation-warning', 'validation-error');\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"sprotty\";\n\nimport { ExecuteCommandMouseListener } from \"./execute-command\";\n\nconst executeCommandModule = new ContainerModule(bind => {\n    bind(TYPES.MouseListener).to(ExecuteCommandMouseListener);\n});\n\nexport default executeCommandModule;\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { Action, findParentByFeature, MouseListener, SModelElement } from \"sprotty\";\n\nimport { isCommandExecutor } from \"./model\";\n\nexport class ExecuteServerCommandAction implements Action {\n    static readonly KIND = \"executeServerCommand\";\n    kind = ExecuteServerCommandAction.KIND;\n    constructor(public readonly commandId: String, public readonly options?: { [key: string]: string }) { }\n}\n\nexport class ExecuteCommandMouseListener extends MouseListener {\n    doubleClick(target: SModelElement, event: WheelEvent): (Action | Promise<Action>)[] {\n        const result: Action[] = [];\n        const commandExecutorTarget = findParentByFeature(target, isCommandExecutor);\n        if (commandExecutorTarget) {\n            result.push(new ExecuteServerCommandAction(commandExecutorTarget.commandId, { invokerId: commandExecutorTarget.id }));\n        }\n\n        return result;\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { SModelElement, SModelExtension } from \"sprotty\";\n\nexport const executeCommandFeature = Symbol('executeFeature');\n\nexport interface CommandExecutor extends SModelExtension {\n    commandId: string\n}\n\nexport function isCommandExecutor(element: SModelElement): element is SModelElement & CommandExecutor {\n    return element.hasFeature(executeCommandFeature);\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ContainerModule } from \"inversify\";\nimport { configureActionHandler, configureCommand } from \"sprotty\";\n\nimport { GLSP_TYPES } from \"../../base/types\";\nimport { SetTypeHintsAction } from \"./request-type-hints-action\";\nimport { ApplyTypeHintsCommand, TypeHintProvider } from \"./type-hints\";\n\nconst modelHintsModule = new ContainerModule((bind, _unbind, isBound) => {\n    bind(TypeHintProvider).toSelf().inSingletonScope();\n    bind(GLSP_TYPES.ITypeHintProvider).toService(TypeHintProvider);\n    configureActionHandler({ bind, isBound }, SetTypeHintsAction.KIND, TypeHintProvider);\n    configureCommand({ bind, isBound }, ApplyTypeHintsCommand);\n});\n\nexport default modelHintsModule;\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { SModelElement, SModelElementSchema, SModelExtension } from \"sprotty\";\n\nexport const containerFeature = Symbol(\"containable\");\nexport interface Containable extends SModelExtension {\n    isContainableElement(input: SModelElement | SModelElementSchema | string): boolean\n}\n\nexport function isContainable(element: SModelElement): element is SModelElement & Containable {\n    return element.hasFeature(containerFeature);\n}\n\nexport const reparentFeature = Symbol(\"reparentFeature\");\nexport interface Reparentable extends SModelExtension { }\n\nexport function isReparentable(element: SModelElement): element is SModelElement & Reparentable {\n    return element.hasFeature(reparentFeature);\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { Action } from \"sprotty\";\n\nimport { EdgeTypeHint, ShapeTypeHint } from \"./type-hints\";\n\nexport class RequestTypeHintsAction implements Action {\n    static readonly KIND = \"requestTypeHints\";\n    kind = RequestTypeHintsAction.KIND;\n    constructor(public readonly diagramType?: string) { }\n}\n\nexport class SetTypeHintsAction implements Action {\n    static readonly KIND = \"setTypeHints\";\n    kind = SetTypeHintsAction.KIND;\n    constructor(public readonly shapeHints: ShapeTypeHint[], public readonly edgeHints: EdgeTypeHint[]) { }\n}\n\nexport function isSetTypeHintsAction(action: Action): action is SetTypeHintsAction {\n    return action !== undefined && (action.kind === SetTypeHintsAction.KIND)\n        && (<SetTypeHintsAction>action).shapeHints !== undefined && (<SetTypeHintsAction>action).edgeHints !== undefined;\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport {\n    Action,\n    CommandExecutionContext,\n    CommandReturn,\n    Connectable,\n    connectableFeature,\n    deletableFeature,\n    editFeature,\n    FeatureSet,\n    IActionHandler,\n    ICommand,\n    moveFeature,\n    SEdge,\n    SModelElement,\n    SModelElementSchema,\n    SModelRoot,\n    SShapeElement,\n    TYPES\n} from \"sprotty\";\n\nimport { GLSP_TYPES } from \"../../base/types\";\nimport { resizeFeature } from \"../change-bounds/model\";\nimport { reconnectFeature } from \"../reconnect/model\";\nimport { IFeedbackActionDispatcher } from \"../tool-feedback/feedback-action-dispatcher\";\nimport { FeedbackCommand } from \"../tool-feedback/model\";\nimport { Containable, containerFeature, reparentFeature } from \"./model\";\nimport { isSetTypeHintsAction } from \"./request-type-hints-action\";\n\nexport abstract class TypeHint {\n    /**\n    The id of the element.\n    */\n    readonly elementTypeId: string;\n\n    /**\n    * Specifies whether the element can be relocated.\n    */\n    readonly repositionable: boolean;\n\n    /**\n     * Specifices wheter the element can be deleted\n     */\n    readonly deletable: boolean;\n}\n\nexport class ShapeTypeHint extends TypeHint {\n    /**\n     * Specifies whether the element can be resized.\n     */\n    readonly resizable: boolean;\n\n    /**\n     * Specifies whether the element can be moved to another parent\n     */\n    readonly reparentable: boolean;\n\n    /**\n     * The types of elements that can be contained by this element (if any)\n     */\n    readonly containableElementTypeIds?: string[];\n}\n\nexport class EdgeTypeHint extends TypeHint {\n    /**\n     * Specifies whether the routing of this element can be changed.\n     */\n    readonly routable: boolean;\n\n    /**\n     * Allowed source element types for this edge type\n     */\n    readonly sourceElementTypeIds: string[];\n\n    /**\n    * Allowed targe element types for this edge type\n    */\n    readonly targetElementTypeIds: string[];\n\n    isAllowedSource(input: SModelElement | SModelElementSchema | string): boolean {\n        const type = getElementTypeId(input);\n        return this.sourceElementTypeIds.includes(type);\n\n    }\n    isAllowedTarget(input: SModelElement | SModelElementSchema | string): boolean {\n        const type = getElementTypeId(input);\n        return this.targetElementTypeIds.includes(type);\n    }\n}\n\n@injectable()\nexport class ApplyTypeHintsAction implements Action {\n    readonly kind = ApplyTypeHintsCommand.KIND;\n    constructor() { }\n}\n\n@injectable()\nexport class ApplyTypeHintsCommand extends FeedbackCommand {\n\n    static KIND = \"applyTypeHints\";\n    readonly priority = 10;\n\n    constructor(@inject(TYPES.Action) protected action: ApplyTypeHintsAction,\n        @inject(GLSP_TYPES.ITypeHintProvider) protected typeHintProvider: ITypeHintProvider) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        context.root.index.all()\n            .forEach(element => {\n                if (element instanceof SShapeElement || element instanceof SModelRoot) {\n                    this.applyShapeTypeHint(element);\n\n                } else if (element instanceof SEdge) {\n                    return this.applyEdgeTypeHint(element);\n                }\n            });\n        return context.root;\n    }\n\n    protected applyEdgeTypeHint(element: SModelElement) {\n        const hint = this.typeHintProvider.getEdgeTypeHint(element);\n        if (hint && isModifiableFetureSet(element.features)) {\n            addOrRemove(element.features, deletableFeature, hint.deletable);\n            addOrRemove(element.features, editFeature, hint.routable);\n            addOrRemove(element.features, reconnectFeature, hint.repositionable);\n        }\n    }\n\n    protected applyShapeTypeHint(element: SModelElement) {\n        const hint = this.typeHintProvider.getShapeTypeHint(element);\n        if (hint && isModifiableFetureSet(element.features)) {\n            addOrRemove(element.features, deletableFeature, hint.deletable);\n            addOrRemove(element.features, moveFeature, hint.repositionable);\n            addOrRemove(element.features, resizeFeature, hint.resizable);\n            addOrRemove(element.features, reparentFeature, hint.reparentable);\n\n            addOrRemove(element.features, containerFeature, true);\n            const containable = createContainable(hint);\n            Object.assign(element, containable);\n\n            addOrRemove(element.features, connectableFeature, true);\n            const validSourceEdges = this.typeHintProvider.getValidEdgeElementTypes(element, \"source\");\n            const validTargetEdges = this.typeHintProvider.getValidEdgeElementTypes(element, \"target\");\n            const connectable = createConnectable(validSourceEdges, validTargetEdges);\n            Object.assign(element, connectable);\n        }\n    }\n}\n\nfunction createConnectable(validSourceEdges: string[], validTargetEdges: string[]): Connectable {\n    return {\n        canConnect: (routable, role) =>\n            role === \"source\" ?\n                validSourceEdges.includes(routable.type) :\n                validTargetEdges.includes(routable.type)\n    };\n}\n\nfunction createContainable(hint: ShapeTypeHint): Containable {\n    return {\n        isContainableElement: (element) =>\n            hint.containableElementTypeIds ?\n                hint.containableElementTypeIds.includes(getElementTypeId(element)) :\n                false\n    };\n}\n\nfunction addOrRemove(features: Set<symbol>, feature: symbol, add: boolean) {\n    if (add && !features.has(feature)) {\n        features.add(feature);\n    } else if (!add && features.has(feature)) {\n        features.delete(feature);\n    }\n}\nfunction isModifiableFetureSet(featureSet?: FeatureSet): featureSet is FeatureSet & Set<symbol> {\n    return featureSet !== undefined && featureSet instanceof Set;\n}\n\nexport interface ITypeHintProvider {\n    getShapeTypeHint(input: SModelElement | SModelElement | string): ShapeTypeHint | undefined;\n    getEdgeTypeHint(input: SModelElement | SModelElement | string): EdgeTypeHint | undefined;\n    getValidEdgeElementTypes(input: SModelElement | SModelElement | string, role: \"source\" | \"target\"): string[];\n}\n\n@injectable()\nexport class TypeHintProvider implements IActionHandler, ITypeHintProvider {\n\n    @inject(GLSP_TYPES.IFeedbackActionDispatcher)\n    protected feedbackActionDispatcher: IFeedbackActionDispatcher;\n\n    protected shapeHints: Map<string, ShapeTypeHint> = new Map;\n    protected edgeHints: Map<string, EdgeTypeHint> = new Map;\n\n    handle(action: Action): ICommand | Action | void {\n        if (isSetTypeHintsAction(action)) {\n            action.shapeHints.forEach(hint => this.shapeHints.set(hint.elementTypeId, hint));\n            action.edgeHints.forEach(hint => this.edgeHints.set(hint.elementTypeId, hint));\n            this.feedbackActionDispatcher.registerFeedback(this, [new ApplyTypeHintsAction()]);\n        }\n    }\n\n    getValidEdgeElementTypes(input: SModelElement | SModelElement | string, role: \"source\" | \"target\"): string[] {\n        const elementTypeId = getElementTypeId(input);\n        if (role === \"source\") {\n            return Array.from(\n                Array.from(this.edgeHints.values())\n                    .filter(hint => hint.sourceElementTypeIds.includes(elementTypeId))\n                    .map(hint => hint.elementTypeId));\n        } else {\n            return Array.from(\n                Array.from(this.edgeHints.values())\n                    .filter(hint => hint.targetElementTypeIds.includes(elementTypeId))\n                    .map(hint => hint.elementTypeId));\n        }\n    }\n\n    getShapeTypeHint(input: SModelElement | SModelElement | string) {\n        const type = getElementTypeId(input);\n        return this.shapeHints.get(type);\n    }\n\n    getEdgeTypeHint(input: SModelElement | SModelElement | string) {\n        const type = getElementTypeId(input);\n        return this.edgeHints.get(type);\n    }\n}\nexport function getElementTypeId(input: SModelElement | SModelElementSchema | string) {\n    if (typeof input === 'string') {\n        return <string>input;\n    } else {\n        return <string>(<any>input)[\"type\"];\n    }\n}\n\n","/********************************************************************************\n * Copyright (c) 2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ContainerModule } from \"inversify\";\nimport {\n    CenterCommand,\n    ClosePopupActionHandler,\n    configureActionHandler,\n    configureCommand,\n    FitToScreenCommand,\n    HoverFeedbackCommand,\n    HoverKeyListener,\n    HoverState,\n    MoveCommand,\n    PopupHoverMouseListener,\n    SetPopupModelCommand,\n    SetViewportCommand,\n    TYPES\n} from \"sprotty\";\nimport { PopupPositionUpdater } from \"sprotty/lib/features/hover/popup-position-updater\";\n\nimport { GlspHoverMouseListener } from \"./hover\";\n\n\nconst glspHoverModule = new ContainerModule((bind, _unbind, isBound) => {\n    bind(TYPES.PopupVNodePostprocessor).to(PopupPositionUpdater).inSingletonScope();\n    bind(TYPES.MouseListener).to(GlspHoverMouseListener);\n    bind(TYPES.PopupMouseListener).to(PopupHoverMouseListener);\n    bind(TYPES.KeyListener).to(HoverKeyListener);\n    bind<HoverState>(TYPES.HoverState).toConstantValue({\n        mouseOverTimer: undefined,\n        mouseOutTimer: undefined,\n        popupOpen: false,\n        previousPopupElement: undefined\n    });\n    bind(ClosePopupActionHandler).toSelf().inSingletonScope();\n\n    const context = { bind, isBound };\n    configureCommand(context, HoverFeedbackCommand);\n    configureCommand(context, SetPopupModelCommand);\n    configureActionHandler(context, SetPopupModelCommand.KIND, ClosePopupActionHandler);\n    configureActionHandler(context, FitToScreenCommand.KIND, ClosePopupActionHandler);\n    configureActionHandler(context, CenterCommand.KIND, ClosePopupActionHandler);\n    configureActionHandler(context, SetViewportCommand.KIND, ClosePopupActionHandler);\n    configureActionHandler(context, MoveCommand.KIND, ClosePopupActionHandler);\n});\n\nexport default glspHoverModule;\n","/********************************************************************************\n * Copyright (c) 2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { injectable } from \"inversify\";\nimport {\n    Action,\n    Bounds,\n    EMPTY_ROOT,\n    HoverMouseListener,\n    PreRenderedElementSchema,\n    RequestPopupModelAction,\n    SetPopupModelAction,\n    SIssueMarker,\n    SIssueSeverity,\n    SModelElement,\n    SModelRootSchema\n} from \"sprotty\";\n\nimport { GIssueMarker } from \"../validation/validate\";\n\n@injectable()\nexport class GlspHoverMouseListener extends HoverMouseListener {\n\n    protected startMouseOverTimer(target: SModelElement, event: MouseEvent): Promise<Action> {\n        this.stopMouseOverTimer();\n        return new Promise(resolve => {\n            this.state.mouseOverTimer = window.setTimeout(() => {\n                const popupBounds = this.computePopupBounds(target, { x: event.pageX, y: event.pageY });\n                if (target instanceof GIssueMarker) {\n                    resolve(new SetPopupModelAction(this.createPopupModel(target as GIssueMarker, popupBounds)));\n                } else {\n                    resolve(new RequestPopupModelAction(target.id, popupBounds));\n                }\n\n                this.state.popupOpen = true;\n                this.state.previousPopupElement = target;\n            }, this.options.popupOpenDelay);\n        });\n    }\n\n    protected createPopupModel(marker: GIssueMarker, bounds: Bounds): SModelRootSchema {\n        if (marker.issues !== undefined && marker.issues.length > 0) {\n            const message = marker.issues\n                .map(i => i.message)\n                .join(\"\\n\");\n            return {\n                type: 'html',\n                id: 'sprotty-popup',\n                children: [\n                    <PreRenderedElementSchema>{\n                        type: 'pre-rendered',\n                        id: 'popup-title',\n                        code: `<div class=\"${getSeverity(marker)}\"><div class=\"sprotty-popup-title\">${message}</div></div>`\n                    }\n                ],\n                canvasBounds: this.modifyBounds(bounds)\n            };\n        }\n        return { type: EMPTY_ROOT.type, id: EMPTY_ROOT.id };\n    }\n\n    protected modifyBounds(bounds: Bounds): Bounds {\n        return bounds;\n    }\n}\n\nexport function getSeverity(marker: SIssueMarker): SIssueSeverity {\n    let currentSeverity: SIssueSeverity = 'info';\n    for (const severity of marker.issues.map(s => s.severity)) {\n        if (severity === 'error')\n            return severity;\n        if (severity === 'warning' && currentSeverity === 'info')\n            currentSeverity = severity;\n    }\n    return currentSeverity;\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ContainerModule } from \"inversify\";\nimport { configureCommand, TYPES } from \"sprotty\";\n\nimport { AlignElementsCommand, LayoutKeyboardListener, ResizeElementsCommand } from \"./layout-commands\";\n\nconst layoutCommandsModule = new ContainerModule((bind, _unbind, isBound) => {\n    configureCommand({ bind, isBound }, ResizeElementsCommand);\n    configureCommand({ bind, isBound }, AlignElementsCommand);\n    bind(TYPES.KeyListener).to(LayoutKeyboardListener);\n});\n\nexport default layoutCommandsModule;\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable, optional } from \"inversify\";\nimport {\n    Action,\n    Command,\n    CommandExecutionContext,\n    CommandReturn,\n    ElementAndBounds,\n    ElementMove,\n    IActionDispatcher,\n    KeyListener,\n    MoveAction,\n    SetBoundsAction,\n    SModelElement,\n    TYPES\n} from \"sprotty\";\nimport { matchesKeystroke } from \"sprotty/lib/utils/keyboard\";\n\nimport { ChangeBoundsOperation } from \"../../base/operations/operation\";\nimport { GLSP_TYPES } from \"../../base/types\";\nimport {\n    toValidElementAndBounds,\n    toValidElementMove,\n    WriteableElementAndBounds,\n    WriteableElementMove\n} from \"../../utils/layout-utils\";\nimport { BoundsAwareModelElement } from \"../../utils/smodel-util\";\nimport { isBoundsAwareMoveable, isResizable } from \"../change-bounds/model\";\nimport { IMovementRestrictor } from \"../change-bounds/movement-restrictor\";\nimport { SelectionService } from \"../select/selection-service\";\n\nexport enum ResizeDimension {\n    Width,\n    Height,\n    Width_And_Height\n}\n\nexport namespace Reduce {\n    export function min(...values: number[]): number {\n        return Math.min(...values);\n    }\n\n    export function max(...values: number[]): number {\n        return Math.max(...values);\n    }\n\n    export function avg(...values: number[]): number {\n        return values.reduce((a, b) => a + b, 0) / values.length;\n    }\n\n    export function first(...values: number[]): number {\n        return values[0];\n    }\n\n    export function last(...values: number[]): number {\n        return values[values.length - 1];\n    }\n}\n\nexport class ResizeElementsAction implements Action {\n    readonly kind = ResizeElementsCommand.KIND;\n\n    constructor(\n        /**\n         * IDs of the elements that should be resized. If no IDs are given, the selected elements will be resized.\n         */\n        public readonly elementIds: string[] = [],\n        /**\n         * Resize dimension.\n         */\n        public readonly dimension: ResizeDimension = ResizeDimension.Width,\n        /**\n         * Function to reduce the dimension to a target dimension value, see Reduce.* for potential functions.\n         */\n        public readonly reductionFunction: (...values: number[]) => number) {\n    }\n}\n\nexport enum Alignment {\n    Left,\n    Center,\n    Right,\n    Top,\n    Middle,\n    Bottom\n}\n\nexport namespace Select {\n    export function all(elements: BoundsAwareModelElement[]) {\n        return elements;\n    }\n\n    export function first(elements: BoundsAwareModelElement[]) {\n        return [elements[0]];\n    }\n\n    export function last(elements: BoundsAwareModelElement[]) {\n        return [elements[elements.length - 1]];\n    }\n}\n\n\nexport class AlignElementsAction implements Action {\n    readonly kind = AlignElementsCommand.KIND;\n\n    constructor(\n        /**\n         * IDs of the elements that should be aligned. If no IDs are given, the selected elements will be aligned.\n         */\n        public readonly elementIds: string[] = [],\n        /**\n         * Alignment direction.\n         */\n        public readonly alignment: Alignment = Alignment.Left,\n        /**\n         * Function to selected elements that are considered during alignment calculation, see Select.* for potential functions.\n         */\n        public readonly selectionFunction: (elements: BoundsAwareModelElement[]) => BoundsAwareModelElement[] = Select.all) {\n    }\n}\n\n@injectable()\nabstract class LayoutElementsCommand extends Command {\n    constructor(@inject(TYPES.Action) protected action: ResizeElementsAction | AlignElementsAction,\n        @inject(TYPES.IActionDispatcher) protected actionDispatcher: IActionDispatcher,\n        @inject(GLSP_TYPES.SelectionService) protected selectionService: SelectionService,\n        @inject(GLSP_TYPES.IMovementRestrictor) @optional() readonly movementRestrictor?: IMovementRestrictor) {\n        super();\n    }\n\n    getActionElements(context: CommandExecutionContext): BoundsAwareModelElement[] {\n        const model = context.root;\n        const elementIDs = this.action.elementIds;\n        if (elementIDs.length === 0) {\n            // collect the selected elements from the selection service (selection order is kept by service)\n            this.selectionService.getSelectedElementIDs().forEach(elementID => elementIDs.push(elementID));\n        }\n        const boundsAwareElements: BoundsAwareModelElement[] = [];\n        elementIDs.forEach(id => {\n            const element = model.index.getById(id);\n            if (element && this.isActionElement(element)) {\n                boundsAwareElements.push(element);\n            }\n        });\n        return boundsAwareElements;\n    }\n\n    protected abstract isActionElement(element: SModelElement): element is BoundsAwareModelElement;\n\n    dispatchAction(action: Action) {\n        this.actionDispatcher.dispatch(action);\n    }\n\n    dispatchActions(actions: Action[]) {\n        this.actionDispatcher.dispatchAll(actions);\n    }\n}\n\n@injectable()\nexport class ResizeElementsCommand extends LayoutElementsCommand {\n    static readonly KIND = 'layout:resize';\n\n    constructor(@inject(TYPES.Action) protected action: ResizeElementsAction,\n        @inject(TYPES.IActionDispatcher) protected actionDispatcher: IActionDispatcher,\n        @inject(GLSP_TYPES.SelectionService) protected selectionService: SelectionService,\n        @inject(GLSP_TYPES.IMovementRestrictor) @optional() readonly movementRestrictor?: IMovementRestrictor) {\n        super(action, actionDispatcher, selectionService, movementRestrictor);\n    }\n\n    protected isActionElement(element: SModelElement): element is BoundsAwareModelElement {\n        return isResizable(element);\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const elements = this.getActionElements(context);\n        if (elements.length > 1) {\n            switch (this.action.dimension) {\n                case ResizeDimension.Width:\n                    this.resizeWidth(elements);\n                    break;\n                case ResizeDimension.Height:\n                    this.resizeHeight(elements);\n                    break;\n                case ResizeDimension.Width_And_Height:\n                    this.resizeWidthAndHeight(elements);\n                    break;\n            }\n        }\n        return context.root;\n    }\n\n    resizeWidth(elements: BoundsAwareModelElement[]) {\n        const targetWidth = this.action.reductionFunction(...elements.map(element => element.bounds.width));\n        this.dispatchResizeActions(elements, (element, bounds) => {\n            // resize around center\n            const halfDiffWidth = 0.5 * (targetWidth - element.bounds.width);\n            bounds.newPosition.x = element.bounds.x - halfDiffWidth;\n            bounds.newSize.width = targetWidth;\n        });\n    }\n\n    resizeHeight(elements: BoundsAwareModelElement[]) {\n        const targetHeight = this.action.reductionFunction(...elements.map(element => element.bounds.height));\n        this.dispatchResizeActions(elements, (element, bounds) => {\n            // resize around middle\n            const halfDiffHeight = 0.5 * (targetHeight - element.bounds.height);\n            bounds.newPosition.y = element.bounds.y - halfDiffHeight;\n            bounds.newSize.height = targetHeight;\n        });\n    }\n\n    resizeWidthAndHeight(elements: BoundsAwareModelElement[]) {\n        const targetWidth = this.action.reductionFunction(...elements.map(element => element.bounds.width));\n        const targetHeight = this.action.reductionFunction(...elements.map(element => element.bounds.height));\n        this.dispatchResizeActions(elements, (element, bounds) => {\n            // resize around center and middle\n            const halfDiffWidth = 0.5 * (targetWidth - element.bounds.width);\n            const halfDiffHeight = 0.5 * (targetHeight - element.bounds.height);\n            bounds.newPosition.x = element.bounds.x - halfDiffWidth;\n            bounds.newPosition.y = element.bounds.y - halfDiffHeight;\n            bounds.newSize.width = targetWidth;\n            bounds.newSize.height = targetHeight;\n        });\n    }\n\n    dispatchResizeActions(elements: BoundsAwareModelElement[], change: (element: BoundsAwareModelElement, bounds: WriteableElementAndBounds) => void) {\n        const elementAndBounds: ElementAndBounds[] = []; // client- and server-side resize\n        elements.forEach(element => {\n            const elementChange = this.createElementAndBounds(element, change);\n            if (elementChange) {\n                // simply skip invalid changes\n                elementAndBounds.push(elementChange);\n            }\n        });\n        this.dispatchActions([new SetBoundsAction(elementAndBounds), new ChangeBoundsOperation(elementAndBounds)]);\n    }\n\n    createElementAndBounds(element: BoundsAwareModelElement, change: (element: BoundsAwareModelElement, bounds: WriteableElementAndBounds) => void) {\n        const bounds: WriteableElementAndBounds = {\n            elementId: element.id,\n            newPosition: {\n                x: element.bounds.x,\n                y: element.bounds.y\n            },\n            newSize: {\n                width: element.bounds.width,\n                height: element.bounds.height\n            }\n        };\n        change(element, bounds);\n        return toValidElementAndBounds(element, bounds, this.movementRestrictor);\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        // we dispatch another action which can be undone, so no explicit implementation necessary\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        // we dispatch another action which can be redone, so no explicit implementation necessary\n        return context.root;\n    }\n}\n\n@injectable()\nexport class AlignElementsCommand extends LayoutElementsCommand {\n    static readonly KIND = 'layout:align';\n\n    constructor(@inject(TYPES.Action) protected action: AlignElementsAction,\n        @inject(TYPES.IActionDispatcher) protected actionDispatcher: IActionDispatcher,\n        @inject(GLSP_TYPES.SelectionService) protected selectionService: SelectionService,\n        @inject(GLSP_TYPES.IMovementRestrictor) @optional() readonly movementRestrictor?: IMovementRestrictor) {\n        super(action, actionDispatcher, selectionService, movementRestrictor);\n    }\n\n    protected isActionElement(element: SModelElement): element is BoundsAwareModelElement {\n        return isBoundsAwareMoveable(element);\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const elements = this.getActionElements(context);\n        if (elements.length > 1) {\n            switch (this.action.alignment) {\n                case Alignment.Left:\n                    this.alignLeft(elements);\n                    break;\n                case Alignment.Center:\n                    this.alignCenter(elements);\n                    break;\n                case Alignment.Right:\n                    this.alignRight(elements);\n                    break;\n                case Alignment.Top:\n                    this.alignTop(elements);\n                    break;\n                case Alignment.Middle:\n                    this.alignMiddle(elements);\n                    break;\n                case Alignment.Bottom:\n                    this.alignBottom(elements);\n                    break;\n            }\n        }\n        return context.root;\n    }\n\n    alignLeft(elements: BoundsAwareModelElement[]) {\n        const calculationElements = this.action.selectionFunction(elements);\n        const minX = calculationElements.map(element => element.bounds.x).reduce((a, b) => Math.min(a, b));\n        this.dispatchAlignActions(elements, (_, move) => move.toPosition.x = minX);\n    }\n\n    alignCenter(elements: BoundsAwareModelElement[]) {\n        const calculationElements = this.action.selectionFunction(elements);\n        const minX = calculationElements.map(element => element.bounds.x).reduce((a, b) => Math.min(a, b));\n        const maxX = calculationElements.map(element => element.bounds.x + element.bounds.width).reduce((a, b) => Math.max(a, b));\n        const diffX = maxX - minX;\n        const centerX = minX + 0.5 * diffX;\n        this.dispatchAlignActions(elements, (element, move) => move.toPosition.x = centerX - 0.5 * element.bounds.width);\n    }\n\n    alignRight(elements: BoundsAwareModelElement[]) {\n        const calculationElements = this.action.selectionFunction(elements);\n        const maxX = calculationElements.map(element => element.bounds.x + element.bounds.width).reduce((a, b) => Math.max(a, b));\n        this.dispatchAlignActions(elements, (element, move) => move.toPosition.x = maxX - element.bounds.width);\n    }\n\n    alignTop(elements: BoundsAwareModelElement[]) {\n        const calculationElements = this.action.selectionFunction(elements);\n        const minY = calculationElements.map(element => element.bounds.y).reduce((a, b) => Math.min(a, b));\n        this.dispatchAlignActions(elements, (_, move) => move.toPosition.y = minY);\n    }\n\n    alignMiddle(elements: BoundsAwareModelElement[]) {\n        const calculationElements = this.action.selectionFunction(elements);\n        const minY = calculationElements.map(element => element.bounds.y).reduce((a, b) => Math.min(a, b));\n        const maxY = calculationElements.map(element => element.bounds.y + element.bounds.height).reduce((a, b) => Math.max(a, b));\n        const diffY = maxY - minY;\n        const middleY = minY + 0.5 * diffY;\n        this.dispatchAlignActions(elements, (element, move) => move.toPosition.y = middleY - 0.5 * element.bounds.height);\n    }\n\n    alignBottom(elements: BoundsAwareModelElement[]) {\n        const calculationElements = this.action.selectionFunction(elements);\n        const maxY = calculationElements.map(element => element.bounds.y + element.bounds.height).reduce((a, b) => Math.max(a, b));\n        this.dispatchAlignActions(elements, (element, move) => move.toPosition.y = maxY - element.bounds.height);\n    }\n\n    dispatchAlignActions(elements: BoundsAwareModelElement[], change: (element: BoundsAwareModelElement, move: WriteableElementMove) => void) {\n        const moves: ElementMove[] = []; // client-side move\n        const elementAndBounds: ElementAndBounds[] = []; // server-side move\n        elements.forEach(element => {\n            const move = this.createElementMove(element, change);\n            if (move) {\n                // simply skip invalid changes\n                moves.push(move);\n                const elementAndBound = this.createElementAndBounds(element, move);\n                elementAndBounds.push(elementAndBound);\n            }\n        });\n        this.dispatchActions([new MoveAction(moves), new ChangeBoundsOperation(elementAndBounds)]);\n    }\n\n    createElementMove(element: BoundsAwareModelElement, change: (element: BoundsAwareModelElement, move: WriteableElementMove) => void) {\n        const move: WriteableElementMove = {\n            elementId: element.id,\n            fromPosition: {\n                x: element.bounds.x,\n                y: element.bounds.y\n            },\n            toPosition: {\n                x: element.bounds.x,\n                y: element.bounds.y\n            }\n        };\n        change(element, move);\n        return toValidElementMove(element, move, this.movementRestrictor);\n    }\n\n    createElementAndBounds(element: BoundsAwareModelElement, move: ElementMove): ElementAndBounds {\n        return {\n            elementId: element.id,\n            newPosition: {\n                x: move.toPosition.x,\n                y: move.toPosition.y\n            },\n            newSize: {\n                width: element.bounds.width,\n                height: element.bounds.height\n            }\n        };\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        // we dispatch another action which can be undone, so no explicit implementation necessary\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        // we dispatch another action which can be redone, so no explicit implementation necessary\n        return context.root;\n    }\n}\n\nexport class LayoutKeyboardListener extends KeyListener {\n    keyDown(element: SModelElement, event: KeyboardEvent): Action[] {\n        if (matchesKeystroke(event, 'KeyW', 'shift')) {\n            return [new ResizeElementsAction([], ResizeDimension.Width, Reduce.max)];\n        }\n        if (matchesKeystroke(event, 'KeyH', 'shift')) {\n            return [new ResizeElementsAction([], ResizeDimension.Height, Reduce.max)];\n        }\n        return [];\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ContainerModule } from \"inversify\";\nimport { MouseTool } from \"sprotty\";\n\nimport { GLSP_TYPES } from \"../../base/types\";\nimport { RankingMouseTool } from \"./mouse-tool\";\n\nconst glspMouseToolModule = new ContainerModule((bind, _unbind, _isBound, rebind) => {\n    bind(RankingMouseTool).toSelf().inSingletonScope();\n    bind(GLSP_TYPES.MouseTool).toService(RankingMouseTool);\n    rebind(MouseTool).toService(RankingMouseTool);\n});\n\nexport default glspMouseToolModule;\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { injectable, multiInject, optional } from \"inversify\";\nimport { VNode } from \"snabbdom/vnode\";\nimport { Action, isAction, MouseListener, MouseTool, SModelElement, SModelRoot, TYPES } from \"sprotty\";\n\nimport { getRank } from \"../rank/model\";\n\nexport interface IMouseTool {\n    register(mouseListener: MouseListener): void;\n    deregister(mouseListener: MouseListener): void;\n}\n\n@injectable()\nexport class RankingMouseTool extends MouseTool implements IMouseTool {\n    protected rankedMouseListeners: Map<number, MouseListener[]>;\n\n    constructor(@multiInject(TYPES.MouseListener) @optional() protected mouseListeners: MouseListener[] = []) {\n        super(mouseListeners);\n        this.rankedMouseListeners = groupBy(mouseListeners, listener => getRank(listener));\n    }\n\n    register(mouseListener: MouseListener) {\n        super.register(mouseListener);\n        this.rankedMouseListeners = groupBy(this.mouseListeners, listener => getRank(listener));\n    }\n\n    deregister(mouseListener: MouseListener) {\n        super.deregister(mouseListener);\n        this.rankedMouseListeners = groupBy(this.mouseListeners, listener => getRank(listener));\n    }\n\n    decorate(vnode: VNode, element: SModelElement) {\n        // we need to overwrite the existing event handlers registered by the original mouse tool\n        if (element instanceof SModelRoot) {\n            overwriteOn(vnode, 'mouseover', this.mouseOver.bind(this), element);\n            overwriteOn(vnode, 'mouseout', this.mouseOut.bind(this), element);\n            overwriteOn(vnode, 'mouseenter', this.mouseEnter.bind(this), element);\n            overwriteOn(vnode, 'mouseleave', this.mouseLeave.bind(this), element);\n            overwriteOn(vnode, 'mousedown', this.mouseDown.bind(this), element);\n            overwriteOn(vnode, 'mouseup', this.mouseUp.bind(this), element);\n            overwriteOn(vnode, 'mousemove', this.mouseMove.bind(this), element);\n            overwriteOn(vnode, 'wheel', this.wheel.bind(this), element);\n            overwriteOn(vnode, 'contextmenu', (target: SModelElement, event: any) => {\n                event.preventDefault();\n            }, element);\n            overwriteOn(vnode, 'dblclick', this.doubleClick.bind(this), element);\n        }\n        vnode = this.mouseListeners.reduce(\n            (n: VNode, listener: MouseListener) => listener.decorate(n, element),\n            vnode);\n        return vnode;\n    }\n\n    protected handleEvent<K extends keyof MouseListener>(methodName: K, model: SModelRoot, event: MouseEvent) {\n        this.focusOnMouseEvent(methodName, model);\n        const element = this.getTargetElement(model, event);\n        if (!element) {\n            return;\n        }\n        this.notifyListenersByRank(element, methodName, model, event);\n    }\n\n    async notifyListenersByRank<K extends keyof MouseListener>(element: SModelElement, methodName: K, model: SModelRoot, event: MouseEvent) {\n        for (const rank of this.rankedMouseListeners) {\n            await this.dispatchActions(rank[1], methodName, element, event);\n        }\n    }\n\n    async dispatchActions<K extends keyof MouseListener>(mouseListeners: MouseListener[], methodName: K, element: SModelElement, event: MouseEvent): Promise<void> {\n        const actions = mouseListeners\n            .map(listener => listener[methodName].apply(listener, [element, event]))\n            .reduce((a, b) => a.concat(b));\n        if (actions.length > 0) {\n            event.preventDefault();\n            for (const actionOrPromise of actions) {\n                if (isAction(actionOrPromise)) {\n                    await this.actionDispatcher.dispatch(actionOrPromise);\n                } else {\n                    actionOrPromise.then((action: Action) => {\n                        this.actionDispatcher.dispatch(action);\n                    });\n                }\n            }\n        }\n    }\n}\n\nfunction groupBy<K, T>(array: Array<T>, keyFunction: (x: T) => K): Map<K, T[]> {\n    const unsortedMap = array.reduce((result: Map<K, T[]>, item: T) => {\n        const key = keyFunction(item);\n        if (!result.has(key)) {\n            result.set(key, [item]);\n        } else {\n            const entries = result.get(key);\n            if (entries) {\n                entries.push(item);\n            }\n        }\n        return result;\n    }, new Map<K, T[]>());\n    return new Map<K, T[]>([...unsortedMap.entries()].sort());\n}\n\nfunction overwriteOn(vnode: VNode, event: string, listener: (model: SModelElement, event: Event) => void, element: SModelElement) {\n    const val = getOn(vnode);\n    // ignore any previous val[event] registrations\n    (val as any)[event] = [listener, element];\n}\n\nfunction getOn(vnode: VNode) {\n    const data = getData(vnode);\n    if (!data.on)\n        data.on = {};\n    return data.on;\n}\n\nfunction getData(vnode: VNode) {\n    if (!vnode.data)\n        vnode.data = {};\n    return vnode.data;\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport const DEFAULT_RANK: number = 0;\n\nexport interface Ranked {\n    rank: number;\n}\n\nexport function isRanked(arg: any): arg is Ranked {\n    return arg !== undefined && arg.rank !== undefined && typeof (arg.rank) === 'number';\n}\n\nexport function getRank(arg: any): number {\n    return isRanked(arg) ? arg.rank : DEFAULT_RANK;\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport {\n    edgeInProgressID,\n    edgeInProgressTargetHandleID,\n    RoutingHandleKind,\n    selectFeature,\n    SModelElement,\n    SModelExtension,\n    SRoutableElement,\n    SRoutingHandle\n} from \"sprotty\";\n\nexport const reconnectFeature = Symbol(\"reconnectFeature\");\nexport interface Reconnectable extends SModelExtension {\n}\n\nexport function isReconnectable(element: SModelElement): element is SRoutableElement & Reconnectable {\n    return element instanceof SRoutableElement && element.hasFeature(reconnectFeature);\n}\n\nconst ROUTING_HANDLE_SOURCE_INDEX: number = -2;\n\nexport function isReconnectHandle(element: SModelElement | undefined): element is SReconnectHandle {\n    return element !== undefined && element instanceof SReconnectHandle;\n}\n\n\nexport function addReconnectHandles(element: SRoutableElement) {\n    removeReconnectHandles(element);\n    createReconnectHandle(element, 'source', ROUTING_HANDLE_SOURCE_INDEX);\n    createReconnectHandle(element, 'target', element.routingPoints.length);\n}\n\nexport function removeReconnectHandles(element: SRoutableElement) {\n    element.removeAll(child => child instanceof SReconnectHandle);\n}\n\nexport function isSourceRoutingHandle(edge: SRoutableElement, routingHandle: SReconnectHandle) {\n    return routingHandle.pointIndex === ROUTING_HANDLE_SOURCE_INDEX;\n}\n\nexport function isTargetRoutingHandle(edge: SRoutableElement, routingHandle: SReconnectHandle) {\n    return routingHandle.pointIndex === edge.routingPoints.length;\n}\n\nexport function createReconnectHandle(edge: SRoutableElement, kind: RoutingHandleKind, routingPointIndex: number): SReconnectHandle {\n    const handle = new SReconnectHandle();\n    handle.kind = kind;\n    handle.pointIndex = routingPointIndex;\n    handle.type = 'routing-point';\n    if (kind === 'target' && edge.id === edgeInProgressID) {\n        handle.id = edgeInProgressTargetHandleID;\n    }\n    edge.add(handle);\n    return handle;\n}\n\nexport class SReconnectHandle extends SRoutingHandle {\n    hasFeature(feature: symbol): boolean {\n        return feature !== selectFeature && super.hasFeature(feature);\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"sprotty\";\n\nimport { GLSPActionDispatcher } from \"./glsp-action-dispatcher\";\n\nconst requestResponseModule = new ContainerModule((bind, unbind, isBound, rebind) => {\n    rebind(TYPES.IActionDispatcher).to(GLSPActionDispatcher).inSingletonScope();\n});\n\nexport default requestResponseModule;\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { Action, ActionDispatcher, isResponseAction, RequestAction, ResponseAction } from \"sprotty\";\n\nexport class GLSPActionDispatcher extends ActionDispatcher {\n\n    protected readonly timeouts: Map<string, NodeJS.Timeout> = new Map();\n\n    protected handleAction(action: Action): Promise<void> {\n        if (isResponseAction(action)) {\n            // clear timeout\n            const timeout = this.timeouts.get(action.responseId);\n            if (timeout !== undefined) {\n                clearTimeout(timeout);\n                this.timeouts.delete(action.responseId);\n            }\n\n            // we might have reached a timeout, so we simply drop the response\n            const deferred = this.requests.get(action.responseId);\n            if (deferred === undefined) {\n                this.logger.log(this, 'No matching request for response', action);\n                return Promise.resolve();\n            }\n        }\n        return super.handleAction(action);\n    }\n\n    /**\n     * Dispatch a request and waits for a response until the timeout given in `timeoutMs` has\n     * been reached. The returned promise is resolved when a response with matching identifier\n     * is dispatched or when the timeout has been reached. That response is _not_ passed to the\n     * registered action handlers. Instead, it is the responsibility of the caller of this method\n     * to handle the response properly. For example, it can be sent to the registered handlers by\n     * passing it again to the `dispatch` method.\n     * If `rejectOnTimeout` is set to false (default) the returned promise will be resolved with\n     * no value, otherwise it will be rejected.\n     */\n    requestUntil<Res extends ResponseAction>(action: RequestAction<Res>, timeoutMs: number = 2000, rejectOnTimeout: boolean = false): Promise<Res> {\n        if (!action.requestId) {\n            return Promise.reject(new Error('Request without requestId'));\n        }\n\n        const requestId = action.requestId;\n        const timeout = setTimeout(() => {\n            const deferred = this.requests.get(requestId);\n            if (deferred !== undefined) {\n                // cleanup\n                clearTimeout(timeout);\n                this.requests.delete(requestId);\n\n                const notification = 'Request ' + requestId + ' (' + action + ') time out after ' + timeoutMs + 'ms.';\n                if (rejectOnTimeout) {\n                    deferred.reject(notification);\n                } else {\n                    this.logger.info(this, notification);\n                    deferred.resolve();\n                }\n            }\n        }, timeoutMs);\n        this.timeouts.set(requestId, timeout);\n\n        return super.request(action);\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"sprotty\";\n\nimport { SaveModelKeyboardListener } from \"./save\";\n\nconst saveModule = new ContainerModule(bind => {\n    bind(TYPES.KeyListener).to(SaveModelKeyboardListener);\n\n});\n\nexport default saveModule;\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { SModelElement, SModelExtension, SModelRoot } from \"sprotty\";\n\nexport const saveFeature = Symbol.for('saveFeature');\n\nexport interface Saveable extends SModelExtension {\n    dirty: boolean;\n}\n\nexport function isSaveable(element: SModelElement): element is SModelRoot & Saveable {\n    return element.hasFeature(saveFeature);\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { Action, KeyListener, SModelRoot } from \"sprotty\";\nimport { matchesKeystroke } from \"sprotty/lib/utils/keyboard\";\n\nexport class SaveModelAction implements Action {\n    static readonly KIND = \"saveModel\";\n    readonly kind = SaveModelAction.KIND;\n    constructor() { }\n}\n\nexport class SaveModelKeyboardListener extends KeyListener {\n    keyDown(element: SModelRoot, event: KeyboardEvent): Action[] {\n        if (matchesKeystroke(event, 'KeyS', 'ctrlCmd')) {\n            return [new SaveModelAction()];\n        }\n        return [];\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport {\n    Command,\n    CommandExecutionContext,\n    isSelectable,\n    SChildElement,\n    SelectAction,\n    SelectAllAction,\n    SelectAllCommand as SprottySelectAllCommand,\n    SelectCommand as SprottySelectCommand,\n    SModelElement,\n    SModelRoot,\n    SParentElement,\n    TYPES\n} from \"sprotty\";\n\nimport { GLSP_TYPES } from \"../../base/types\";\nimport { SelectionService } from \"./selection-service\";\n\nexport class SelectFeedbackAction {\n    kind = SelectFeedbackCommand.KIND;\n\n    constructor(public readonly selectedElementsIDs: string[] = [],\n        public readonly deselectedElementsIDs: string[] = []) {\n    }\n}\n\nexport class SelectAllFeedbackAction {\n    kind = SelectAllFeedbackCommand.KIND;\n\n    /**\n     * If `select` is true, all elements are selected, othewise they are deselected.\n     */\n    constructor(public readonly select: boolean = true) {\n    }\n}\n\n@injectable()\nexport class SelectFeedbackCommand extends Command {\n    static readonly KIND = 'elementSelectedFeedback';\n    private sprottySelectCommand: SprottySelectCommand;\n\n    constructor(@inject(TYPES.Action) public action: SelectFeedbackAction) {\n        super();\n        this.sprottySelectCommand = new SprottySelectCommand(action);\n    }\n\n    execute(context: CommandExecutionContext): SModelRoot {\n        return this.sprottySelectCommand.execute(context);\n    }\n\n    undo(context: CommandExecutionContext): SModelRoot {\n        return this.sprottySelectCommand.undo(context);\n    }\n\n    redo(context: CommandExecutionContext): SModelRoot {\n        return this.sprottySelectCommand.redo(context);\n    }\n}\n\n@injectable()\nexport class SelectAllFeedbackCommand extends Command {\n    static readonly KIND = 'allSelectedFeedback';\n    private sprottySelectAllCommand: SprottySelectAllCommand;\n\n    constructor(@inject(TYPES.Action) public action: SelectAllFeedbackAction) {\n        super();\n        this.sprottySelectAllCommand = new SprottySelectAllCommand(action);\n    }\n\n    execute(context: CommandExecutionContext): SModelRoot {\n        return this.sprottySelectAllCommand.execute(context);\n    }\n\n    undo(context: CommandExecutionContext): SModelRoot {\n        return this.sprottySelectAllCommand.undo(context);\n    }\n\n    redo(context: CommandExecutionContext): SModelRoot {\n        return this.sprottySelectAllCommand.redo(context);\n    }\n}\n\n@injectable()\nexport class SelectCommand extends Command {\n    static readonly KIND = SprottySelectCommand.KIND;\n\n    protected selected: SModelElement[] = [];\n    protected deselected: SModelElement[] = [];\n\n    constructor(@inject(TYPES.Action) public action: SelectAction, @inject(GLSP_TYPES.SelectionService) public selectionService: SelectionService) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): SModelRoot {\n        const model = context.root;\n        this.action.selectedElementsIDs.forEach(id => {\n            const element = model.index.getById(id);\n            if (element instanceof SChildElement && isSelectable(element)) {\n                this.selected.push(element);\n            }\n        });\n        this.action.deselectedElementsIDs.forEach(id => {\n            const element = model.index.getById(id);\n            if (element instanceof SChildElement && isSelectable(element)) {\n                this.deselected.push(element);\n            }\n        });\n        return this.redo(context);\n    }\n\n    undo(context: CommandExecutionContext): SModelRoot {\n        const select = this.deselected.map(element => element.id);\n        const deselect = this.selected.map(element => element.id);\n        this.selectionService.updateSelection(context.root, select, deselect);\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): SModelRoot {\n        const select = this.selected.map(element => element.id);\n        const deselect = this.deselected.map(element => element.id);\n        this.selectionService.updateSelection(context.root, select, deselect);\n        return context.root;\n    }\n}\n\n@injectable()\nexport class SelectAllCommand extends Command {\n    static readonly KIND = SprottySelectAllCommand.KIND;\n    protected previousSelection: Map<string, boolean> = new Map<string, boolean>();\n\n    constructor(@inject(TYPES.Action) public action: SelectAllAction, @inject(GLSP_TYPES.SelectionService) public selectionService: SelectionService) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): SModelRoot {\n        return this.redo(context);\n    }\n\n    undo(context: CommandExecutionContext): SModelRoot {\n        const index = context.root.index;\n        for (const previousState of this.previousSelection) {\n            const element = index.getById(previousState[0]);\n            if (element !== undefined && isSelectable(element)) {\n                element.selected = previousState[1];\n            }\n        }\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): SModelRoot {\n        const selectables: string[] = [];\n        this.selectAll(context.root, this.action.select, selectables);\n        if (this.action.select) {\n            this.selectionService.updateSelection(context.root, selectables, []);\n        } else {\n            this.selectionService.updateSelection(context.root, [], selectables);\n        }\n        return context.root;\n    }\n\n    protected selectAll(element: SParentElement, newState: boolean, selected: string[]): void {\n        if (isSelectable(element)) {\n            this.previousSelection.set(element.id, element.selected);\n            selected.push(element.id);\n        }\n        for (const child of element.children) {\n            this.selectAll(child, newState, selected);\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ContainerModule } from \"inversify\";\nimport { configureCommand, SelectKeyboardListener, TYPES } from \"sprotty\";\n\nimport { GLSP_TYPES } from \"../../base/types\";\nimport { SelectAllCommand, SelectAllFeedbackCommand, SelectCommand, SelectFeedbackCommand } from \"./action-definitions\";\nimport { RankedSelectMouseListener } from \"./select-mouse-listener\";\nimport { SelectionService } from \"./selection-service\";\n\n\nconst glspSelectModule = new ContainerModule((bind, _unbind, isBound) => {\n    bind(SelectionService).toSelf().inSingletonScope();\n    bind(GLSP_TYPES.SelectionService).toService(SelectionService);\n    configureCommand({ bind, isBound }, SelectCommand);\n    configureCommand({ bind, isBound }, SelectAllCommand);\n    configureCommand({ bind, isBound }, SelectFeedbackCommand);\n    configureCommand({ bind, isBound }, SelectAllFeedbackCommand);\n    bind(TYPES.KeyListener).to(SelectKeyboardListener);\n    bind(TYPES.MouseListener).to(RankedSelectMouseListener);\n    bind(GLSP_TYPES.SModelRootListener).toService(SelectionService);\n});\n\nexport default glspSelectModule;\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { SelectMouseListener } from \"sprotty\";\n\nimport { DEFAULT_RANK, Ranked } from \"../rank/model\";\n\n/**\n * Ranked select mouse listener that is executed before default mouse listeners when using the RankedMouseTool.\n * This ensures that default mouse listeners are working on a model that has selection changes already applied.\n */\nexport class RankedSelectMouseListener extends SelectMouseListener implements Ranked {\n    rank: number = DEFAULT_RANK - 1; /* we want to be executed before all default mouse listeners */\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable, multiInject, optional } from \"inversify\";\nimport { Action, ILogger, SModelRoot, TYPES } from \"sprotty\";\n\nimport { SModelRootListener } from \"../../base/model/update-model-command\";\nimport { GLSP_TYPES } from \"../../base/types\";\nimport { distinctAdd, remove } from \"../../utils/array-utils\";\nimport { IFeedbackActionDispatcher } from \"../tool-feedback/feedback-action-dispatcher\";\nimport { SelectFeedbackAction } from \"./action-definitions\";\n\nexport interface SelectionListener {\n    selectionChanged(root: Readonly<SModelRoot>, selectedElements: string[]): void;\n}\n\n@injectable()\nexport class SelectionService implements SModelRootListener {\n    private root: Readonly<SModelRoot>;\n    private selectedElementIDs: Set<string> = new Set();\n\n    @inject(GLSP_TYPES.IFeedbackActionDispatcher) protected feedbackDispatcher: IFeedbackActionDispatcher;\n    @inject(TYPES.ILogger) protected logger: ILogger;\n\n    constructor(@multiInject(GLSP_TYPES.SelectionListener) @optional() protected selectionListeners: SelectionListener[] = []) { }\n\n    register(selectionListener: SelectionListener) {\n        distinctAdd(this.selectionListeners, selectionListener);\n    }\n\n    deregister(selectionListener: SelectionListener) {\n        remove(this.selectionListeners, selectionListener);\n    }\n\n    modelRootChanged(root: Readonly<SModelRoot>): void {\n        this.updateSelection(root, [], []);\n    }\n\n    updateSelection(root: Readonly<SModelRoot>, select: string[], deselect: string[]) {\n        if (root === undefined && select.length === 0 && deselect.length === 0) {\n            return;\n        }\n        const prevRoot = this.root;\n        const prevSelectedElementIDs = new Set(this.selectedElementIDs);\n\n        // update root\n        this.root = root;\n\n        // update selected element IDs and collect deselected elements\n        // - select all elements that are not deselected at the same time (no-op)\n        // - deselect all elements that are not selected at the same time (no-op) but was selected\n        const toSelect = [...select].filter(selectId => deselect.indexOf(selectId) === -1);\n        const toDeselect = [...deselect].filter(deselectId => select.indexOf(deselectId) === -1 && this.selectedElementIDs.has(deselectId));\n        for (const id of toDeselect) {\n            this.selectedElementIDs.delete(id);\n        }\n        for (const id of toSelect) {\n            this.selectedElementIDs.add(id);\n        }\n\n        const deselectedElementIDs = new Set(toDeselect);\n        // see if selected elements still exist in the updated root\n        for (const id of this.selectedElementIDs) {\n            const element = root.index.getById(id);\n            if (element === undefined) {\n                this.selectedElementIDs.delete(id);\n                if (prevRoot !== undefined && prevRoot.index.getById(id)) {\n                    deselectedElementIDs.add(id);\n                }\n            }\n        }\n\n        // only send out changes if there actually are changes, i.e., the root or the selected elements changed\n        const selectionChanged = prevSelectedElementIDs.size !== this.selectedElementIDs.size || ![...prevSelectedElementIDs].every(value => this.selectedElementIDs.has(value));\n        if (selectionChanged) {\n            // aggregate to feedback action handling all elements as only the last feedback is restored\n            this.dispatchFeedback([new SelectFeedbackAction([...this.selectedElementIDs], [...deselectedElementIDs])]);\n        }\n\n        const rootChanged = prevRoot !== root;\n        if (rootChanged || selectionChanged) {\n            // notify listeners after the feedback action\n            this.notifyListeners(this.root, this.selectedElementIDs);\n        }\n    }\n\n    dispatchFeedback(actions: Action[]) {\n        this.feedbackDispatcher.registerFeedback(this, actions);\n    }\n\n    notifyListeners(root: SModelRoot, selectedElementIDs: Set<string>) {\n        this.selectionListeners.forEach(listener => listener.selectionChanged(root, Array.from(selectedElementIDs)));\n    }\n\n    /**\n     * QUERY METHODS\n     */\n\n    getSelectedElementIDs(): Set<string> {\n        return this.selectedElementIDs;\n    }\n\n    hasSelectedElements(): boolean {\n        return this.selectedElementIDs.size > 0;\n    }\n\n    isSingleSelection(): boolean {\n        return this.selectedElementIDs.size === 1;\n    }\n\n    isMultiSelection(): boolean {\n        return this.selectedElementIDs.size > 1;\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport { VNode } from \"snabbdom/vnode\";\nimport {\n    Action,\n    CommandExecutionContext,\n    CommandReturn,\n    ElementMove,\n    findParentByFeature,\n    isMoveable,\n    isSelectable,\n    isViewport,\n    MouseListener,\n    MoveAction,\n    Point,\n    SModelElement,\n    SModelRoot,\n    TYPES\n} from \"sprotty\";\n\nimport { isNotUndefined } from \"../../utils/smodel-util\";\nimport { addResizeHandles, isResizable, removeResizeHandles, SResizeHandle } from \"../change-bounds/model\";\nimport { createMovementRestrictionFeedback, removeMovementRestrictionFeedback } from \"../change-bounds/movement-restrictor\";\nimport { ChangeBoundsTool } from \"../tools/change-bounds-tool\";\nimport { FeedbackCommand } from \"./model\";\n\nexport class ShowChangeBoundsToolResizeFeedbackAction implements Action {\n    kind = ShowChangeBoundsToolResizeFeedbackCommand.KIND;\n    constructor(readonly elementId?: string) { }\n}\n\nexport class HideChangeBoundsToolResizeFeedbackAction implements Action {\n    kind = HideChangeBoundsToolResizeFeedbackCommand.KIND;\n    constructor() { }\n}\n\n@injectable()\nexport class ShowChangeBoundsToolResizeFeedbackCommand extends FeedbackCommand {\n    static readonly KIND = \"showChangeBoundsToolResizeFeedback\";\n\n    constructor(\n        @inject(TYPES.Action)\n        protected action: ShowChangeBoundsToolResizeFeedbackAction\n    ) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const index = context.root.index;\n        index\n            .all()\n            .filter(isResizable)\n            .forEach(removeResizeHandles);\n\n        if (isNotUndefined(this.action.elementId)) {\n            const resizeElement = index.getById(this.action.elementId);\n            if (isNotUndefined(resizeElement) && isResizable(resizeElement)) {\n                addResizeHandles(resizeElement);\n            }\n        }\n        return context.root;\n    }\n}\n\n@injectable()\nexport class HideChangeBoundsToolResizeFeedbackCommand extends FeedbackCommand {\n    static readonly KIND = \"hideChangeBoundsToolResizeFeedback\";\n\n    constructor(\n        @inject(TYPES.Action)\n        protected action: HideChangeBoundsToolResizeFeedbackAction\n    ) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const index = context.root.index;\n        index\n            .all()\n            .filter(isResizable)\n            .forEach(removeResizeHandles);\n        return context.root;\n    }\n}\n\n/**\n * This mouse listener provides visual feedback for moving by sending client-side\n * `MoveAction`s while elements are selected and dragged. This will also update\n * their bounds, which is important, as it is not only required for rendering\n * the visual feedback but also the basis for sending the change to the server\n * (see also `tools/MoveTool`).\n */\nexport class FeedbackMoveMouseListener extends MouseListener {\n    hasDragged = false;\n    startDragPosition: Point | undefined;\n    elementId2startPos = new Map<string, Point>();\n\n    constructor(protected tool: ChangeBoundsTool) {\n        super();\n    }\n    mouseDown(target: SModelElement, event: MouseEvent): Action[] {\n        if (event.button === 0 && !(target instanceof SResizeHandle)) {\n            const moveable = findParentByFeature(target, isMoveable);\n            if (moveable !== undefined) {\n                this.startDragPosition = { x: event.pageX, y: event.pageY };\n            } else {\n                this.startDragPosition = undefined;\n            }\n            this.hasDragged = false;\n        }\n        return [];\n    }\n\n    mouseMove(target: SModelElement, event: MouseEvent): Action[] {\n        const result: Action[] = [];\n        if (event.buttons === 0) this.mouseUp(target, event);\n        else if (this.startDragPosition) {\n            if (this.elementId2startPos.size === 0) {\n                this.collectStartPositions(target.root);\n            }\n            this.hasDragged = true;\n            const moveAction = this.getElementMoves(target, event, false);\n            if (moveAction) result.push(moveAction);\n        }\n        return result;\n    }\n\n    protected collectStartPositions(root: SModelRoot) {\n        root.index\n            .all()\n            .filter(element => isSelectable(element) && element.selected)\n            .forEach(element => {\n                if (isMoveable(element)) {\n                    this.elementId2startPos.set(element.id, element.position);\n                }\n            });\n    }\n\n    protected getElementMoves(target: SModelElement, event: MouseEvent, isFinished: boolean): MoveAction | undefined {\n        if (!this.startDragPosition) return undefined;\n        const elementMoves: ElementMove[] = [];\n        const viewport = findParentByFeature(target, isViewport);\n        const zoom = viewport ? viewport.zoom : 1;\n        const delta = {\n            x: (event.pageX - this.startDragPosition.x) / zoom,\n            y: (event.pageY - this.startDragPosition.y) / zoom\n        };\n        this.elementId2startPos.forEach((startPosition, elementId) => {\n            const element = target.root.index.getById(elementId);\n            if (element) {\n                let toPosition = this.snap(\n                    {\n                        x: startPosition.x + delta.x,\n                        y: startPosition.y + delta.y\n                    },\n                    element,\n                    !event.shiftKey\n                );\n\n                if (isMoveable(element)) {\n                    toPosition = this.validateMove(startPosition, toPosition, element, isFinished);\n                    elementMoves.push({\n                        elementId: element.id,\n                        fromPosition: {\n                            x: element.position.x,\n                            y: element.position.y\n                        },\n                        toPosition\n                    });\n                }\n            }\n        });\n        if (elementMoves.length > 0)\n            return new MoveAction(elementMoves, false, isFinished);\n        else return undefined;\n    }\n\n    protected validateMove(startPostion: Point, toPosition: Point, element: SModelElement, isFinished: boolean) {\n        let newPosition = toPosition;\n        if (this.tool.movementRestrictor) {\n            const valid = this.tool.movementRestrictor.validate(toPosition, element);\n            let action;\n            if (!valid) {\n                action = createMovementRestrictionFeedback(element, this.tool.movementRestrictor);\n\n                if (isFinished) {\n                    newPosition = startPostion;\n                }\n            } else {\n                action = removeMovementRestrictionFeedback(element, this.tool.movementRestrictor);\n            }\n\n            this.tool.dispatchFeedback(this, [action]);\n        }\n        return newPosition;\n    }\n    protected snap(position: Point, element: SModelElement, isSnap: boolean): Point {\n        if (isSnap && this.tool.snapper) return this.tool.snapper.snap(position, element);\n        else return position;\n    }\n\n    mouseEnter(target: SModelElement, event: MouseEvent): Action[] {\n        if (target instanceof SModelRoot && event.buttons === 0)\n            this.mouseUp(target, event);\n        return [];\n    }\n\n    mouseUp(target: SModelElement, event: MouseEvent): Action[] {\n        const result: Action[] = [];\n        if (this.startDragPosition) {\n            const moveAction = this.getElementMoves(target, event, true);\n            if (moveAction) {\n                result.push(moveAction);\n            }\n            if (this.tool.movementRestrictor) {\n                result.push(removeMovementRestrictionFeedback(target, this.tool.movementRestrictor));\n            }\n\n        }\n        this.hasDragged = false;\n        this.startDragPosition = undefined;\n        this.elementId2startPos.clear();\n        return result;\n    }\n\n    decorate(vnode: VNode, element: SModelElement): VNode {\n        return vnode;\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport {\n    Action,\n    AnchorComputerRegistry,\n    center,\n    CommandExecutionContext,\n    CommandReturn,\n    euclideanDistance,\n    findChildrenAtPosition,\n    findParentByFeature,\n    isBoundsAware,\n    isConnectable,\n    MouseListener,\n    MoveAction,\n    PolylineEdgeRouter,\n    SChildElement,\n    SConnectableElement,\n    SDanglingAnchor,\n    SEdgeSchema,\n    SModelElement,\n    SModelRoot,\n    SRoutableElement,\n    TYPES\n} from \"sprotty\";\n\nimport { isRoutable } from \"../../utils/smodel-util\";\nimport { getAbsolutePosition, toAbsolutePosition } from \"../../utils/viewpoint-util\";\nimport { FeedbackCommand } from \"./model\";\n\nexport class DrawFeedbackEdgeAction implements Action {\n    kind = DrawFeedbackEdgeCommand.KIND;\n    constructor(readonly elementTypeId: string, readonly sourceId: string, readonly edgeSchema?: SEdgeSchema) { }\n}\n\n@injectable()\nexport class DrawFeedbackEdgeCommand extends FeedbackCommand {\n    static readonly KIND = 'drawFeedbackEdge';\n\n    constructor(@inject(TYPES.Action) protected action: DrawFeedbackEdgeAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const feedbackEdgeSchema = this.action.edgeSchema ? this.action.edgeSchema : defaultFeedbackEdgeSchema;\n        drawFeedbackEdge(context, this.action.sourceId, this.action.elementTypeId, feedbackEdgeSchema);\n        return context.root;\n    }\n}\n\nexport class RemoveFeedbackEdgeAction implements Action {\n    kind = RemoveFeedbackEdgeCommand.KIND;\n    constructor() { }\n}\n\n@injectable()\nexport class RemoveFeedbackEdgeCommand extends FeedbackCommand {\n    static readonly KIND = 'removeFeedbackEdgeCommand';\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        removeFeedbackEdge(context.root);\n        return context.root;\n    }\n}\n\nexport class FeedbackEdgeEnd extends SDanglingAnchor {\n    static readonly TYPE = 'feedback-edge-end';\n    type = FeedbackEdgeEnd.TYPE;\n    constructor(readonly sourceId: string,\n        readonly elementTypeId: string,\n        public feedbackEdge: SRoutableElement | undefined = undefined) {\n        super();\n    }\n}\n\nexport class FeedbackEdgeEndMovingMouseListener extends MouseListener {\n    constructor(protected anchorRegistry: AnchorComputerRegistry) {\n        super();\n    }\n\n    mouseMove(target: SModelElement, event: MouseEvent): Action[] {\n        const root = target.root;\n        const edgeEnd = root.index.getById(feedbackEdgeEndId(root));\n        if (!(edgeEnd instanceof FeedbackEdgeEnd) || !edgeEnd.feedbackEdge) {\n            return [];\n        }\n\n        const edge = edgeEnd.feedbackEdge;\n        const position = getAbsolutePosition(edgeEnd, event);\n        const endAtMousePosition = findChildrenAtPosition(target.root, position)\n            .find(e => isConnectable(e) && e.canConnect(edge, 'target'));\n\n        if (endAtMousePosition instanceof SConnectableElement && edge.source && isBoundsAware(edge.source)) {\n            const anchorComputer = this.anchorRegistry.get(PolylineEdgeRouter.KIND, endAtMousePosition.anchorKind);\n            const anchor = anchorComputer.getAnchor(endAtMousePosition, center(edge.source.bounds));\n            if (euclideanDistance(anchor, edgeEnd.position) > 1) {\n                return [new MoveAction([{ elementId: edgeEnd.id, toPosition: anchor }], false)];\n            }\n        } else {\n            return [new MoveAction([{ elementId: edgeEnd.id, toPosition: position }], false)];\n        }\n\n        return [];\n    }\n}\n\nexport function feedbackEdgeId(root: SModelRoot): string {\n    return root.id + '_feedback_edge';\n}\n\nexport function feedbackEdgeEndId(root: SModelRoot): string {\n    return root.id + '_feedback_anchor';\n}\n\nexport const defaultFeedbackEdgeSchema: SEdgeSchema = <SEdgeSchema>{\n    cssClasses: [\"feedback-edge\"],\n    opacity: 0.3\n};\n\nexport function drawFeedbackEdge(context: CommandExecutionContext, sourceId: string, elementTypeId: string, feedbackEdgeSchema: SEdgeSchema) {\n    const root = context.root;\n    const sourceChild = root.index.getById(sourceId);\n    if (!sourceChild) {\n        return;\n    }\n\n    const source = findParentByFeature(sourceChild, isConnectable);\n    if (!source || !isBoundsAware(source)) {\n        return;\n    }\n\n    const edgeEnd = new FeedbackEdgeEnd(source.id, elementTypeId);\n    edgeEnd.id = feedbackEdgeEndId(root);\n    edgeEnd.position = toAbsolutePosition(source);\n\n    feedbackEdgeSchema.id = feedbackEdgeId(root);\n    feedbackEdgeSchema.type = elementTypeId;\n    feedbackEdgeSchema.sourceId = source.id;\n    feedbackEdgeSchema.targetId = edgeEnd.id;\n\n    const feedbackEdge = context.modelFactory.createElement(feedbackEdgeSchema);\n    if (isRoutable(feedbackEdge)) {\n        edgeEnd.feedbackEdge = feedbackEdge;\n        root.add(edgeEnd);\n        root.add(feedbackEdge);\n    }\n}\n\nexport function removeFeedbackEdge(root: SModelRoot) {\n    const feedbackEdge = root.index.getById(feedbackEdgeId(root));\n    const feedbackEdgeEnd = root.index.getById(feedbackEdgeEndId(root));\n    if (feedbackEdge instanceof SChildElement)\n        root.remove(feedbackEdge);\n    if (feedbackEdgeEnd instanceof SChildElement)\n        root.remove(feedbackEdgeEnd);\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport { Action, CommandExecutionContext, SModelElement, SModelRoot, TYPES } from \"sprotty\";\n\nimport { addCssClasses, removeCssClasses } from \"../../utils/smodel-util\";\nimport { FeedbackCommand } from \"./model\";\n\nexport class ModifyCSSFeedbackAction implements Action {\n    kind = ModifyCssFeedbackCommand.KIND;\n    constructor(readonly elements?: SModelElement[], readonly addClasses?: string[], readonly removeClasses?: string[]) { }\n}\n\n@injectable()\nexport class ModifyCssFeedbackCommand extends FeedbackCommand {\n    static readonly KIND = 'modifyCSSFeedback';\n\n    constructor(@inject(TYPES.Action) readonly action: ModifyCSSFeedbackAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): SModelRoot {\n        const elements: SModelElement[] = [];\n        if (this.action.elements) {\n            elements.push(...this.action.elements);\n        } else {\n            elements.push(context.root);\n        }\n\n        elements.forEach(e => {\n            if (this.action.removeClasses) {\n                removeCssClasses(e, this.action.removeClasses);\n            }\n\n            if (this.action.addClasses) {\n                addCssClasses(e, this.action.addClasses);\n            }\n        });\n\n        return context.root;\n    }\n}\n\nexport enum CursorCSS {\n    DEFAULT = 'default-mode',\n    OVERLAP_FORBIDDEN = 'overlap-forbidden-mode',\n    NODE_CREATION = 'node-creation-mode',\n    EDGE_CREATION_SOURCE = 'edge-creation-select-source-mode',\n    EDGE_CREATION_TARGET = 'edge-creation-select-target-mode',\n    EDGE_RECONNECT = 'edge-reconnect-select-target-mode',\n    OPERATION_NOT_ALLOWED = 'edge-modification-not-allowed-mode',\n    ELEMENT_DELETION = \"element-deletion-mode\"\n}\n\nexport function cursorFeedbackAction(cursorCss?: CursorCSS): ModifyCSSFeedbackAction {\n    const addCss = [];\n    if (cursorCss) {\n        addCss.push(cursorCss);\n    }\n    return new ModifyCSSFeedbackAction(undefined, addCss, Object.values(CursorCSS));\n}\n\n\n\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ContainerModule } from \"inversify\";\nimport { configureCommand, configureView, LocationPostprocessor, MoveCommand, TYPES } from \"sprotty\";\n\nimport { GLSP_TYPES } from \"../../base/types\";\nimport { SResizeHandle } from \"../change-bounds/model\";\nimport {\n    HideChangeBoundsToolResizeFeedbackCommand,\n    ShowChangeBoundsToolResizeFeedbackCommand\n} from \"./change-bounds-tool-feedback\";\nimport { DrawFeedbackEdgeCommand, FeedbackEdgeEnd, RemoveFeedbackEdgeCommand } from \"./creation-tool-feedback\";\nimport { ModifyCssFeedbackCommand } from \"./css-feedback\";\nimport {\n    DrawFeedbackEdgeSourceCommand,\n    HideEdgeReconnectHandlesFeedbackCommand,\n    ShowEdgeReconnectHandlesFeedbackCommand,\n    SwitchRoutingModeCommand\n} from \"./edge-edit-tool-feedback\";\nimport { FeedbackActionDispatcher } from \"./feedback-action-dispatcher\";\nimport { FeedbackEdgeEndView, SResizeHandleView } from \"./view\";\n\nconst toolFeedbackModule = new ContainerModule((bind, _unbind, isBound) => {\n    bind(GLSP_TYPES.IFeedbackActionDispatcher).to(FeedbackActionDispatcher).inSingletonScope();\n\n    configureCommand({ bind, isBound }, ModifyCssFeedbackCommand);\n\n    // create node and edge tool feedback\n    configureCommand({ bind, isBound }, DrawFeedbackEdgeCommand);\n    configureCommand({ bind, isBound }, RemoveFeedbackEdgeCommand);\n\n    configureView({ bind, isBound }, FeedbackEdgeEnd.TYPE, FeedbackEdgeEndView);\n    // move tool feedback: we use sprotties MoveCommand as client-side visual feedback\n    configureCommand({ bind, isBound }, MoveCommand);\n\n    // resize tool feedback\n    configureCommand({ bind, isBound }, ShowChangeBoundsToolResizeFeedbackCommand);\n    configureCommand({ bind, isBound }, HideChangeBoundsToolResizeFeedbackCommand);\n    configureView({ bind, isBound }, SResizeHandle.TYPE, SResizeHandleView);\n\n    // reconnect edge tool feedback\n    configureCommand({ bind, isBound }, ShowEdgeReconnectHandlesFeedbackCommand);\n    configureCommand({ bind, isBound }, HideEdgeReconnectHandlesFeedbackCommand);\n    configureCommand({ bind, isBound }, DrawFeedbackEdgeSourceCommand);\n\n    configureCommand({ bind, isBound }, SwitchRoutingModeCommand);\n\n    bind(TYPES.IVNodePostprocessor).to(LocationPostprocessor);\n    bind(TYPES.HiddenVNodePostprocessor).to(LocationPostprocessor);\n});\n\nexport default toolFeedbackModule;\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport { VNode } from \"snabbdom/vnode\";\nimport {\n    Action,\n    AnchorComputerRegistry,\n    center,\n    CommandExecutionContext,\n    CommandReturn,\n    EdgeRouterRegistry,\n    ElementMove,\n    euclideanDistance,\n    findChildrenAtPosition,\n    findParentByFeature,\n    isBoundsAware,\n    isConnectable,\n    isSelected,\n    isViewport,\n    MouseListener,\n    MoveAction,\n    Point,\n    PolylineEdgeRouter,\n    SConnectableElement,\n    SModelElement,\n    SModelRoot,\n    SRoutingHandle,\n    SwitchEditModeAction,\n    SwitchEditModeCommand,\n    TYPES\n} from \"sprotty\";\n\nimport { isNotUndefined, isRoutable, isRoutingHandle } from \"../../utils/smodel-util\";\nimport { getAbsolutePosition } from \"../../utils/viewpoint-util\";\nimport { addReconnectHandles, removeReconnectHandles } from \"../reconnect/model\";\nimport {\n    FeedbackEdgeEnd,\n    feedbackEdgeEndId,\n    FeedbackEdgeEndMovingMouseListener,\n    feedbackEdgeId\n} from \"./creation-tool-feedback\";\nimport { FeedbackCommand } from \"./model\";\n\n/**\n * RECONNECT HANDLES FEEDBACK\n */\n\nexport class ShowEdgeReconnectHandlesFeedbackAction implements Action {\n    kind = ShowEdgeReconnectHandlesFeedbackCommand.KIND;\n    constructor(readonly elementId?: string) { }\n}\n\nexport class HideEdgeReconnectHandlesFeedbackAction implements Action {\n    kind = HideEdgeReconnectHandlesFeedbackCommand.KIND;\n    constructor() { }\n}\n\n@injectable()\nexport class ShowEdgeReconnectHandlesFeedbackCommand extends FeedbackCommand {\n    static readonly KIND = 'showReconnectHandlesFeedback';\n\n    constructor(@inject(TYPES.Action) protected action: ShowEdgeReconnectHandlesFeedbackAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const index = context.root.index;\n        index.all().filter(isRoutable).forEach(removeReconnectHandles);\n\n        if (isNotUndefined(this.action.elementId)) {\n            const routableElement = index.getById(this.action.elementId);\n            if (isNotUndefined(routableElement) && isRoutable(routableElement)) {\n                addReconnectHandles(routableElement);\n            }\n        }\n        return context.root;\n    }\n}\n\n@injectable()\nexport class HideEdgeReconnectHandlesFeedbackCommand extends FeedbackCommand {\n    static readonly KIND = 'hideReconnectHandlesFeedback';\n\n    constructor(@inject(TYPES.Action) protected action: HideEdgeReconnectHandlesFeedbackAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const index = context.root.index;\n        index.all().filter(isRoutable).forEach(removeReconnectHandles);\n        return context.root;\n    }\n}\n/**\n * ROUTING FEEDBACK\n */\n\nexport class SwitchRoutingModeAction extends SwitchEditModeAction {\n    readonly kind = SwitchRoutingModeCommand.KIND;\n}\n@injectable()\nexport class SwitchRoutingModeCommand extends SwitchEditModeCommand {\n    static KIND = \"switchRoutingMode\";\n    constructor(@inject(TYPES.Action) action: SwitchRoutingModeAction) { super(action); }\n}\n\n/**\n * SOURCE AND TARGET EDGE FEEDBACK\n */\n\nexport class DrawFeedbackEdgeSourceAction implements Action {\n    kind = DrawFeedbackEdgeSourceCommand.KIND;\n    constructor(readonly elementTypeId: string, readonly targetId: string) { }\n}\n\n\n@injectable()\nexport class DrawFeedbackEdgeSourceCommand extends FeedbackCommand {\n    static readonly KIND = 'drawFeedbackEdgeSource';\n\n    constructor(@inject(TYPES.Action) protected action: DrawFeedbackEdgeSourceAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        drawFeedbackEdgeSource(context, this.action.targetId, this.action.elementTypeId);\n        return context.root;\n    }\n}\n\n/**\n * SOURCE AND TARGET MOUSE MOVE LISTENER\n */\n\nexport class FeedbackEdgeTargetMovingMouseListener extends FeedbackEdgeEndMovingMouseListener {\n    constructor(protected anchorRegistry: AnchorComputerRegistry) {\n        super(anchorRegistry);\n    }\n}\n\nexport class FeedbackEdgeSourceMovingMouseListener extends MouseListener {\n    constructor(protected anchorRegistry: AnchorComputerRegistry) {\n        super();\n    }\n\n    mouseMove(target: SModelElement, event: MouseEvent): Action[] {\n        const root = target.root;\n        const edgeEnd = root.index.getById(feedbackEdgeEndId(root));\n        if (!(edgeEnd instanceof FeedbackEdgeEnd) || !edgeEnd.feedbackEdge) {\n            return [];\n        }\n\n        const edge = edgeEnd.feedbackEdge;\n        const position = getAbsolutePosition(edgeEnd, event);\n        const endAtMousePosition = findChildrenAtPosition(target.root, position)\n            .find(e => isConnectable(e) && e.canConnect(edge, 'source'));\n\n        if (endAtMousePosition instanceof SConnectableElement && edge.target && isBoundsAware(edge.target)) {\n            const anchorComputer = this.anchorRegistry.get(PolylineEdgeRouter.KIND, endAtMousePosition.anchorKind);\n            const anchor = anchorComputer.getAnchor(endAtMousePosition, center(edge.target.bounds));\n            if (euclideanDistance(anchor, edgeEnd.position) > 1) {\n                return [new MoveAction([{ elementId: edgeEnd.id, toPosition: anchor }], false)];\n            }\n        } else {\n            return [new MoveAction([{ elementId: edgeEnd.id, toPosition: position }], false)];\n        }\n\n        return [];\n    }\n}\n\nexport class FeedbackEdgeRouteMovingMouseListener extends MouseListener {\n    hasDragged = false;\n    lastDragPosition: Point | undefined;\n\n    constructor(protected edgeRouterRegistry?: EdgeRouterRegistry) {\n        super();\n    }\n\n    mouseDown(target: SModelElement, event: MouseEvent): Action[] {\n        const result: Action[] = [];\n        if (event.button === 0) {\n            const routingHandle = findParentByFeature(target, isRoutingHandle);\n            if (routingHandle !== undefined) {\n                result.push(new SwitchRoutingModeAction([target.id], []));\n                this.lastDragPosition = { x: event.pageX, y: event.pageY };\n            } else {\n                this.lastDragPosition = undefined;\n            }\n            this.hasDragged = false;\n        }\n        return result;\n    }\n\n    mouseMove(target: SModelElement, event: MouseEvent): Action[] {\n        const result: Action[] = [];\n        if (event.buttons === 0)\n            this.mouseUp(target, event);\n        else if (this.lastDragPosition) {\n            const viewport = findParentByFeature(target, isViewport);\n            this.hasDragged = true;\n            const zoom = viewport ? viewport.zoom : 1;\n            const dx = (event.pageX - this.lastDragPosition.x) / zoom;\n            const dy = (event.pageY - this.lastDragPosition.y) / zoom;\n            const handleMoves: ElementMove[] = [];\n            target.root.index.all()\n                .filter(element => isSelected(element))\n                .forEach(element => {\n                    if (isRoutingHandle(element)) {\n                        const point = this.getHandlePosition(element);\n                        if (point !== undefined) {\n                            handleMoves.push({\n                                elementId: element.id,\n                                fromPosition: point,\n                                toPosition: {\n                                    x: point.x + dx,\n                                    y: point.y + dy\n                                }\n                            });\n                        }\n                    }\n                });\n            this.lastDragPosition = { x: event.pageX, y: event.pageY };\n            if (handleMoves.length > 0)\n                result.push(new MoveAction(handleMoves, false));\n        }\n        return result;\n    }\n\n    protected getHandlePosition(handle: SRoutingHandle): Point | undefined {\n        if (this.edgeRouterRegistry) {\n            const parent = handle.parent;\n            if (!isRoutable(parent))\n                return undefined;\n            const router = this.edgeRouterRegistry.get(parent.routerKind);\n            const route = router.route(parent);\n            return router.getHandlePosition(parent, route, handle);\n        }\n        return undefined;\n    }\n\n    mouseEnter(target: SModelElement, event: MouseEvent): Action[] {\n        if (target instanceof SModelRoot && event.buttons === 0)\n            this.mouseUp(target, event);\n        return [];\n    }\n\n    mouseUp(target: SModelElement, event: MouseEvent): Action[] {\n        this.hasDragged = false;\n        this.lastDragPosition = undefined;\n        return [];\n    }\n\n    decorate(vnode: VNode, element: SModelElement): VNode {\n        return vnode;\n    }\n}\n\n/**\n * UTILITY FUNCTIONS\n */\n\nfunction drawFeedbackEdgeSource(context: CommandExecutionContext, targetId: string, elementTypeId: string) {\n    const root = context.root;\n    const targetChild = root.index.getById(targetId);\n    if (!targetChild) {\n        return;\n    }\n\n    const target = findParentByFeature(targetChild, isConnectable);\n    if (!target || !isBoundsAware(target)) {\n        return;\n    }\n\n    const edgeEnd = new FeedbackEdgeEnd(target.id, elementTypeId);\n    edgeEnd.id = feedbackEdgeEndId(root);\n    edgeEnd.position = { x: target.bounds.x, y: target.bounds.y };\n\n    const feedbackEdgeSchema = {\n        type: 'edge',\n        id: feedbackEdgeId(root),\n        sourceId: edgeEnd.id,\n        targetId: target.id,\n        opacity: 0.3\n    };\n\n    const feedbackEdge = context.modelFactory.createElement(feedbackEdgeSchema);\n    if (isRoutable(feedbackEdge)) {\n        edgeEnd.feedbackEdge = feedbackEdge;\n        root.add(edgeEnd);\n        root.add(feedbackEdge);\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport { Action, IActionDispatcher, ILogger, TYPES } from \"sprotty\";\n\nexport interface IFeedbackEmitter { }\n\n/**\n * Dispatcher for actions that are meant to show visual feedback on\n * the diagram that is not part of the diagram sent from the server\n * after a model update.\n *\n * The purpose of this dispatcher is to re-establish the feedback\n * after the model has been updated or reset by the server, as this would\n * overwrite the already established feedback, in case it is drawn by\n * extending the `SModelRoot`. Therefore, tools can register themselves\n * as feedback emitters with actions they want to place for showing\n * feedback. This dispatcher will then re-establish all feedback actions\n * of the registered tools, whenever the `SModelRoot` has been set or updated.\n */\nexport interface IFeedbackActionDispatcher {\n    /**\n     * Registers `actions` to be sent out by a `feedbackEmitter`.\n     * @param feedbackEmitter the emitter sending out feedback actions.\n     * @param actions the actions to be sent out.\n     */\n    registerFeedback(feedbackEmitter: IFeedbackEmitter, actions: Action[]): void;\n\n    /**\n     * Deregisters a `feedbackEmitter` from this dispatcher and thereafter\n     * dispatches the provided `actions`.\n     * @param feedbackEmitter the emitter to be deregistered.\n     * @param actions the actions to be dispatched right after the deregistration.\n     * These actions do not have to be related to the actions sent out by the\n     * deregistered `feedbackEmitter`. The purpose of these actions typically is\n     * to reset the normal state of the diagram without the feedback (e.g., reset a\n     * CSS class that was set by a feedbackEmitter).\n     */\n    deregisterFeedback(feedbackEmitter: IFeedbackEmitter, actions: Action[]): void;\n\n    /**\n    * Retrieve all `actions` sent out by currently registered `feedbackEmitter`.\n    */\n    getRegisteredFeedback(): Action[]\n}\n\n@injectable()\nexport class FeedbackActionDispatcher implements IFeedbackActionDispatcher {\n    protected feedbackEmitters: Map<IFeedbackEmitter, Action[]> = new Map;\n\n    constructor(\n        @inject(TYPES.IActionDispatcherProvider) protected actionDispatcher: () => Promise<IActionDispatcher>,\n        @inject(TYPES.ILogger) protected logger: ILogger) {\n    }\n\n    registerFeedback(feedbackEmitter: IFeedbackEmitter, actions: Action[]): void {\n        this.feedbackEmitters.set(feedbackEmitter, actions);\n        this.dispatch(actions, feedbackEmitter);\n    }\n\n    deregisterFeedback(feedbackEmitter: IFeedbackEmitter, actions: Action[]): void {\n        this.feedbackEmitters.delete(feedbackEmitter);\n        this.dispatch(actions, feedbackEmitter);\n    }\n\n    private dispatch(actions: Action[], feedbackEmitter: IFeedbackEmitter) {\n        this.actionDispatcher()\n            .then(dispatcher => dispatcher.dispatchAll(actions))\n            .then(() => this.logger.info(this, `Dispatched feedback actions for ${feedbackEmitter}`))\n            .catch(reason => this.logger.error(this, 'Failed to dispatch feedback actions', reason));\n    }\n\n    getRegisteredFeedback() {\n        const result: Action[] = [];\n        this.feedbackEmitters.forEach((value, key) => result.push(...value));\n        return result;\n    }\n\n    getRegisteredFeedbackEmitters(action: Action) {\n        const result: IFeedbackEmitter[] = [];\n        this.feedbackEmitters.forEach((value, key) => {\n            if (value.find(a => a === action)) {\n                result.push(key);\n            }\n        }\n        );\n        return result;\n    }\n\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { Command, CommandExecutionContext, CommandReturn } from \"sprotty\";\n\nexport abstract class FeedbackCommand extends Command {\n    // used by the `FeedbackAwareUpdateModelCommand`\n    readonly priority: number = 0;\n\n    abstract execute(context: CommandExecutionContext): CommandReturn;\n    undo(context: CommandExecutionContext): CommandReturn {\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        return context.root;\n    }\n}\n\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { injectable } from \"inversify\";\nimport * as snabbdom from \"snabbdom-jsx\";\nimport { VNode } from \"snabbdom/vnode\";\nimport { IView, ORIGIN_POINT, Point, RenderingContext, setAttr, SModelElement } from \"sprotty\";\n\nimport { isResizable, ResizeHandleLocation, SResizeHandle } from \"../change-bounds/model\";\n\nconst JSX = { createElement: snabbdom.svg };\n\n/**\n* This view is used for the invisible end of the feedback edge.\n* A feedback edge is shown as a visual feedback when creating edges.\n*/\n@injectable()\nexport class FeedbackEdgeEndView implements IView {\n    render(model: Readonly<SModelElement>, context: RenderingContext): VNode {\n        const position: Point = (model as any).position || ORIGIN_POINT;\n        return <g x={position.x} y={position.y} />;\n    }\n}\n\n@injectable()\nexport class SResizeHandleView implements IView {\n    render(handle: SResizeHandle, context: RenderingContext): VNode {\n        const position = this.getPosition(handle);\n        if (position !== undefined) {\n            const node = <circle class-sprotty-resize-handle={true} class-mouseover={handle.hoverFeedback}\n                cx={position.x} cy={position.y} r={this.getRadius()} />;\n            setAttr(node, 'data-kind', handle.location);\n            return node;\n        }\n        // Fallback: Create an empty group\n        return <g />;\n    }\n\n    protected getPosition(handle: SResizeHandle): Point | undefined {\n        const parent = handle.parent;\n        if (isResizable(parent)) {\n            if (handle.location === ResizeHandleLocation.TopLeft) {\n                return { x: 0, y: 0 };\n            } else if (handle.location === ResizeHandleLocation.TopRight) {\n                return { x: parent.bounds.width, y: 0 };\n            } else if (handle.location === ResizeHandleLocation.BottomLeft) {\n                return { x: 0, y: parent.bounds.height };\n            } else if (handle.location === ResizeHandleLocation.BottomRight) {\n                return { x: parent.bounds.width, y: parent.bounds.height };\n            }\n        }\n        return undefined;\n    }\n\n    getRadius(): number {\n        return 7;\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport \"../../../css/tool-palette.css\";\n\nimport { ContainerModule } from \"inversify\";\nimport { configureActionHandler, EnableDefaultToolsAction, TYPES } from \"sprotty\";\n\nimport { EnableToolPaletteAction, ToolPalette } from \"./tool-palette\";\n\nconst toolPaletteModule = new ContainerModule((bind, _unbind, isBound) => {\n    bind(ToolPalette).toSelf().inSingletonScope();\n    bind(TYPES.IUIExtension).toService(ToolPalette);\n    configureActionHandler({ bind, isBound }, EnableToolPaletteAction.KIND, ToolPalette);\n    configureActionHandler({ bind, isBound }, EnableDefaultToolsAction.KIND, ToolPalette);\n});\n\nexport default toolPaletteModule;\n","/********************************************************************************\n * Copyright (c) 2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { isLabeledAction, LabeledAction } from \"sprotty\";\n\nimport { isTriggerElementTypeCreationAction, TriggerElementCreationAction } from \"../../base/operations/operation\";\n\nexport interface PaletteItem extends LabeledAction {\n    readonly id: string;\n    readonly sortString: string;\n    readonly children?: PaletteItem[];\n}\n\nexport function isPaletteItem(object?: any): object is PaletteItem {\n    return isLabeledAction(object) && \"id\" in object && \"sortString\" in object;\n}\n\nexport namespace PaletteItem {\n    export function getTriggerAction(item?: PaletteItem): TriggerElementCreationAction | undefined {\n        if (item) {\n            const initiAction = item.actions.filter(a => isTriggerElementTypeCreationAction(a))\n                .map(a => a as TriggerElementCreationAction);\n            return initiAction.length > 0 ? initiAction[0] : undefined;\n        }\n        return undefined;\n    }\n}\n\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport {\n    AbstractUIExtension,\n    Action,\n    EnableDefaultToolsAction,\n    EnableToolsAction,\n    IActionHandler,\n    ICommand,\n    IToolManager,\n    SetUIExtensionVisibilityAction,\n    SModelRoot,\n    TYPES\n} from \"sprotty\";\n\nimport { isSetContextActionsAction, RequestContextActions } from \"../../base/actions/context-actions\";\nimport { GLSPActionDispatcher } from \"../request-response/glsp-action-dispatcher\";\nimport { MouseDeleteTool } from \"../tools/delete-tool\";\nimport { RequestMarkersAction } from \"../validation/validate\";\nimport { PaletteItem } from \"./palette-item\";\n\nconst CLICKED_CSS_CLASS = \"clicked\";\n\n@injectable()\nexport class EnableToolPaletteAction implements Action {\n    static readonly KIND = \"enableToolPalette\";\n    readonly kind = EnableToolPaletteAction.KIND;\n}\n\n@injectable()\nexport class ToolPalette extends AbstractUIExtension implements IActionHandler {\n\n    @inject(TYPES.IActionDispatcher) protected readonly actionDispatcher: GLSPActionDispatcher;\n    @inject(TYPES.IToolManager) protected readonly toolManager: IToolManager;\n    static readonly ID = \"tool-palette\";\n\n    protected paletteItems: PaletteItem[];\n    protected lastActivebutton?: HTMLElement;\n    protected defaultToolsButton: HTMLElement;\n    modelRootId: string;\n\n    id() { return ToolPalette.ID; }\n    containerClass() { return ToolPalette.ID; }\n\n    initialize() {\n        if (!this.paletteItems) {\n            return false;\n        }\n        return super.initialize();\n    }\n\n    protected initializeContents(containerElement: HTMLElement): void {\n        this.createHeader();\n        this.createBody();\n    }\n\n    protected onBeforeShow(containerElement: HTMLElement, root: Readonly<SModelRoot>) {\n        this.modelRootId = root.id;\n    }\n\n    protected createBody(): void {\n        const bodyDiv = document.createElement(\"div\");\n        bodyDiv.classList.add(\"palette-body\");\n        this.paletteItems.sort(compare)\n            .forEach(item => {\n                if (item.children) {\n                    const group = createToolGroup(item);\n                    item.children.sort(compare).forEach(child => group.appendChild(this.createToolButton(child)));\n                    bodyDiv.appendChild(group);\n                } else {\n                    bodyDiv.appendChild(this.createToolButton(item));\n                }\n            });\n        this.containerElement.appendChild(bodyDiv);\n    }\n\n    protected createHeader(): void {\n        const headerCompartment = document.createElement(\"div\");\n        headerCompartment.classList.add(\"palette-header\");\n\n        // Title header\n        const header = document.createElement(\"div\");\n        header.classList.add(\"header-icon\");\n        header.appendChild(createIcon([\"fa\", \"fa-palette\"]));\n        header.insertAdjacentText(\"beforeend\", \"Palette\");\n        headerCompartment.append(header);\n        // Header Tools Compartment\n        const headerTools = document.createElement(\"div\");\n        headerTools.classList.add(\"header-tools\");\n\n        // Create button for DefaultTools\n        this.defaultToolsButton = createIcon([\"fas\", \"fa-mouse-pointer\", \"fa-xs\", \"clicked\"]);\n        this.defaultToolsButton.id = \"btn_default_tools\";\n        this.defaultToolsButton.onclick = this.onClickStaticToolButton(this.defaultToolsButton);\n        headerTools.appendChild(this.defaultToolsButton);\n        this.lastActivebutton = this.defaultToolsButton;\n\n        // Create button for MouseDeleteTool\n        const deleteToolButton = createIcon([\"fas\", \"fa-eraser\", \"fa-xs\"]);\n        deleteToolButton.onclick = this.onClickStaticToolButton(deleteToolButton, MouseDeleteTool.ID);\n        headerTools.appendChild(deleteToolButton);\n\n        // Create button for ValidationTool\n        const validateActionButton = createIcon([\"fas\", \"fa-check-square\", \"fa-xs\"]);\n        validateActionButton.onclick = (ev: MouseEvent) => {\n            const modelIds: string[] = [this.modelRootId];\n            this.actionDispatcher.dispatch(new RequestMarkersAction(modelIds));\n        };\n        headerTools.appendChild(validateActionButton);\n\n        headerCompartment.appendChild(headerTools);\n        this.containerElement.appendChild(headerCompartment);\n    }\n\n    protected createToolButton(item: PaletteItem): HTMLElement {\n        const button = document.createElement(\"div\");\n        button.classList.add(\"tool-button\");\n        button.innerHTML = item.label;\n        button.onclick = this.onClickCreateToolButton(button, item);\n        return button;\n    }\n\n    protected onClickCreateToolButton(button: HTMLElement, item: PaletteItem) {\n        return (ev: MouseEvent) => {\n            this.actionDispatcher.dispatchAll(item.actions);\n            this.changeActiveButton(button);\n            this.restoreFocus();\n        };\n    }\n\n    protected onClickStaticToolButton(button: HTMLElement, toolId?: string) {\n        return (ev: MouseEvent) => {\n            const action = toolId ? new EnableToolsAction([toolId]) : new EnableDefaultToolsAction();\n            this.actionDispatcher.dispatch(action);\n            this.changeActiveButton(button);\n            this.restoreFocus();\n        };\n    }\n\n    changeActiveButton(button?: HTMLElement) {\n        if (this.lastActivebutton) {\n            this.lastActivebutton.classList.remove(CLICKED_CSS_CLASS);\n        }\n        if (button) {\n            button.classList.add(CLICKED_CSS_CLASS);\n            this.lastActivebutton = button;\n        } else {\n            this.defaultToolsButton.classList.add(CLICKED_CSS_CLASS);\n            this.lastActivebutton = this.defaultToolsButton;\n        }\n    }\n\n    handle(action: Action): ICommand | Action | void {\n        if (action.kind === EnableToolPaletteAction.KIND) {\n            const requestAction = new RequestContextActions(ToolPalette.ID, {\n                selectedElementIds: []\n            });\n            this.actionDispatcher.requestUntil(requestAction).then(response => {\n                if (isSetContextActionsAction(response)) {\n                    this.paletteItems = response.actions.map(e => e as PaletteItem);\n                    this.actionDispatcher.dispatch(new SetUIExtensionVisibilityAction(ToolPalette.ID, true));\n                }\n            });\n        } else if (action instanceof EnableToolsAction && action.toolIds.includes(ToolPalette.ID)) {\n            this.changeActiveButton();\n        }\n    }\n}\n\nexport function compare(a: PaletteItem, b: PaletteItem): number {\n    const sortStringBased = a.sortString.localeCompare(b.sortString);\n    if (sortStringBased !== 0) {\n        return sortStringBased;\n    }\n    return a.label.localeCompare(b.label);\n}\n\nexport function createIcon(cssClasses: string[]) {\n    const icon = document.createElement(\"i\");\n    icon.classList.add(...cssClasses);\n    return icon;\n}\n\nexport function createToolGroup(item: PaletteItem): HTMLElement {\n    const group = document.createElement(\"div\");\n    group.classList.add(\"tool-group\");\n    group.id = item.id;\n    const header = document.createElement(\"div\");\n    header.classList.add(\"group-header\");\n    if (item.icon) {\n        header.appendChild(createIcon([\"fas\", item.icon]));\n    }\n    header.insertAdjacentText('beforeend', item.label);\n    header.ondblclick = (ev) => {\n        const css = \"collapsed\";\n        changeCSSClass(group, css);\n        Array.from(group.children).forEach(child => changeCSSClass(child, css));\n        window!.getSelection()!.removeAllRanges();\n    };\n\n    group.appendChild(header);\n    return group;\n}\n\nexport function changeCSSClass(element: Element, css: string) {\n    element.classList.contains(css) ? element.classList.remove(css) :\n        element.classList.add(css);\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable, optional } from \"inversify\";\nimport {\n    Action,\n    Bounds,\n    BoundsAware,\n    Dimension,\n    EdgeRouterRegistry,\n    ElementAndBounds,\n    findParentByFeature,\n    ISnapper,\n    isSelected,\n    isViewport,\n    KeyTool,\n    MouseListener,\n    Point,\n    SConnectableElement,\n    SetBoundsAction,\n    SModelElement,\n    SModelRoot,\n    SParentElement,\n    Tool,\n    TYPES\n} from \"sprotty\";\n\nimport {\n    ChangeBoundsOperation,\n    ChangeRoutingPointsOperation,\n    ElementAndRoutingPoints\n} from \"../../base/operations/operation\";\nimport { GLSP_TYPES } from \"../../base/types\";\nimport { isValidMove, isValidSize } from \"../../utils/layout-utils\";\nimport {\n    forEachElement,\n    isNonRoutableSelectedMovableBoundsAware,\n    toElementAndBounds,\n    toElementAndRoutingPoints\n} from \"../../utils/smodel-util\";\nimport { isBoundsAwareMoveable, isResizable, Resizable, ResizeHandleLocation, SResizeHandle } from \"../change-bounds/model\";\nimport {\n    createMovementRestrictionFeedback,\n    IMovementRestrictor,\n    removeMovementRestrictionFeedback\n} from \"../change-bounds/movement-restrictor\";\nimport { IMouseTool } from \"../mouse-tool/mouse-tool\";\nimport { SelectionListener, SelectionService } from \"../select/selection-service\";\nimport {\n    FeedbackMoveMouseListener,\n    HideChangeBoundsToolResizeFeedbackAction,\n    ShowChangeBoundsToolResizeFeedbackAction\n} from \"../tool-feedback/change-bounds-tool-feedback\";\nimport { IFeedbackActionDispatcher, IFeedbackEmitter } from \"../tool-feedback/feedback-action-dispatcher\";\nimport { DragAwareMouseListener } from \"./drag-aware-mouse-listener\";\n\n\n/**\n * The change bounds tool has the license to move multiple elements or resize a single element by implementing the ChangeBounds operation.\n * In contrast to Sprotty's implementation this tool only sends a `ChangeBoundsOperationAction` when an operation has finished and does not\n * provide client-side live updates to improve performance.\n *\n * | Operation | Client Update    | Server Update\n * +-----------+------------------+----------------------------\n * | Move      | MoveAction       | ChangeBoundsOperationAction\n * | Resize    | SetBoundsAction  | ChangeBoundsOperationAction\n *\n * To provide a visual client updates during move we install the `FeedbackMoveMouseListener` and to provide visual client updates during resize\n * and send the server updates we install the `ChangeBoundsListener`.\n */\n@injectable()\nexport class ChangeBoundsTool implements Tool {\n    static ID = \"glsp.change-bounds-tool\";\n    readonly id = ChangeBoundsTool.ID;\n\n    protected feedbackMoveMouseListener: MouseListener;\n    protected changeBoundsListener: MouseListener & SelectionListener;\n\n    constructor(@inject(GLSP_TYPES.SelectionService) protected selectionService: SelectionService,\n        @inject(GLSP_TYPES.MouseTool) protected mouseTool: IMouseTool,\n        @inject(KeyTool) protected keyTool: KeyTool,\n        @inject(GLSP_TYPES.IFeedbackActionDispatcher) protected feedbackDispatcher: IFeedbackActionDispatcher,\n        @inject(EdgeRouterRegistry) @optional() readonly edgeRouterRegistry?: EdgeRouterRegistry,\n        @inject(TYPES.ISnapper) @optional() readonly snapper?: ISnapper,\n        @inject(GLSP_TYPES.IMovementRestrictor) @optional() readonly movementRestrictor?: IMovementRestrictor) { }\n\n    enable() {\n        // install feedback move mouse listener for client-side move updates\n        this.feedbackMoveMouseListener = this.createMoveMouseListener();\n        this.mouseTool.register(this.feedbackMoveMouseListener);\n\n        // install change bounds listener for client-side resize updates and server-side updates\n        this.changeBoundsListener = this.createChangeBoundsListener();\n        this.mouseTool.register(this.changeBoundsListener);\n        this.selectionService.register(this.changeBoundsListener);\n\n        // register feedback\n        this.feedbackDispatcher.registerFeedback(this, [new ShowChangeBoundsToolResizeFeedbackAction]);\n    }\n\n    protected createMoveMouseListener(): MouseListener {\n        return new FeedbackMoveMouseListener(this);\n    }\n\n    protected createChangeBoundsListener(): MouseListener & SelectionListener {\n        return new ChangeBoundsListener(this);\n    }\n\n    disable() {\n        this.mouseTool.deregister(this.changeBoundsListener);\n        this.selectionService.deregister(this.changeBoundsListener);\n        this.mouseTool.deregister(this.feedbackMoveMouseListener);\n        this.feedbackDispatcher.deregisterFeedback(this.feedbackMoveMouseListener, []);\n        this.feedbackDispatcher.deregisterFeedback(this.changeBoundsListener, [new HideChangeBoundsToolResizeFeedbackAction]);\n    }\n\n    dispatchFeedback(feedbackEmmmiter: IFeedbackEmitter, actions: Action[]) {\n        this.feedbackDispatcher.registerFeedback(feedbackEmmmiter, actions);\n    }\n}\n\nexport class ChangeBoundsListener extends DragAwareMouseListener implements SelectionListener {\n    // members for calculating the correct position change\n    protected lastDragPosition?: Point;\n    protected positionDelta: Point = { x: 0, y: 0 };\n    protected initialPositon: Point | undefined = undefined;\n    protected initialBounds: Bounds | undefined;\n\n    // members for resize mode\n    protected activeResizeElementId?: string;\n    protected activeResizeHandle?: SResizeHandle;\n\n    constructor(protected tool: ChangeBoundsTool) {\n        super();\n    }\n\n    mouseDown(target: SModelElement, event: MouseEvent): Action[] {\n        super.mouseDown(target, event);\n        if (event.button !== 0) {\n            return [];\n        }\n        // check if we have a resize handle (only single-selection)\n        if (this.activeResizeElementId && target instanceof SResizeHandle) {\n            this.activeResizeHandle = target;\n        } else {\n            this.setActiveResizeElement(target);\n        }\n        if (this.activeResizeElementId) {\n            this.initPosition(event);\n        } else {\n            this.reset();\n        }\n        return [];\n    }\n\n    mouseMove(target: SModelElement, event: MouseEvent): Action[] {\n        super.mouseMove(target, event);\n        if (this.updatePosition(target, event) && this.activeResizeHandle) {\n            // rely on the FeedbackMoveMouseListener to update the element bounds of selected elements\n            // consider resize handles ourselves\n            return this.handleElementResize();\n        }\n        return [];\n    }\n\n    draggingMouseUp(target: SModelElement, event: MouseEvent): Action[] {\n        if (this.lastDragPosition === undefined) {\n            this.resetPosition();\n            return [];\n        }\n\n        const actions: Action[] = [];\n        if (this.activeResizeHandle) {\n            // Resize, not move\n            const resizeElement = findParentByFeature(this.activeResizeHandle, isResizable);\n            if (this.isActiveResizeElement(resizeElement)) {\n                this.createChangeBoundsAction(resizeElement).forEach(action => actions.push(action));\n            }\n        } else {\n            // Move\n            const newBounds: ElementAndBounds[] = [];\n            const newRoutingPoints: ElementAndRoutingPoints[] = [];\n            forEachElement(target, isNonRoutableSelectedMovableBoundsAware, element => {\n                this.createElementAndBounds(element).forEach(bounds => newBounds.push(bounds));\n                //  If client routing is enabled -> delegate routingpoints of connected edges to server\n                if (this.tool.edgeRouterRegistry && element instanceof SConnectableElement) {\n                    element.incomingEdges.map(toElementAndRoutingPoints).forEach(ear => newRoutingPoints.push(ear));\n                    element.outgoingEdges.map(toElementAndRoutingPoints).forEach(ear => newRoutingPoints.push(ear));\n                }\n            });\n\n            if (newBounds.length > 0) {\n                actions.push(new ChangeBoundsOperation(newBounds));\n            }\n            if (newRoutingPoints.length > 0) {\n                actions.push(new ChangeRoutingPointsOperation(newRoutingPoints));\n            }\n        }\n        this.resetPosition();\n        return actions;\n    }\n\n    selectionChanged(root: SModelRoot, selectedElements: string[]): void {\n        if (this.activeResizeElementId) {\n            if (selectedElements.includes(this.activeResizeElementId)) {\n                // our active element is still selected, nothing to do\n                return;\n            }\n\n            // try to find some other selected element and mark that active\n            for (const elementId of selectedElements.reverse()) {\n                const element = root.index.getById(elementId);\n                if (element && this.setActiveResizeElement(element)) {\n                    return;\n                }\n            }\n            this.reset();\n        }\n    }\n\n    protected setActiveResizeElement(target: SModelElement): boolean {\n        // check if we have a selected, moveable element (multi-selection allowed)\n        const moveableElement = findParentByFeature(target, isBoundsAwareMoveable);\n        if (isSelected(moveableElement)) {\n            // only allow one element to have the element resize handles\n            this.activeResizeElementId = moveableElement.id;\n            this.tool.dispatchFeedback(this, [new ShowChangeBoundsToolResizeFeedbackAction(this.activeResizeElementId)]);\n            return true;\n        }\n        return false;\n    }\n\n    protected isActiveResizeElement(element?: SModelElement): element is SParentElement & BoundsAware {\n        return element !== undefined && element.id === this.activeResizeElementId;\n    }\n\n    protected initPosition(event: MouseEvent) {\n        this.initialPositon = { x: event.pageX, y: event.pageY };\n        this.lastDragPosition = { x: event.pageX, y: event.pageY };\n        if (this.activeResizeHandle) {\n            const resizeElement = findParentByFeature(this.activeResizeHandle, isResizable);\n            this.initialBounds = { x: resizeElement!.bounds.x, y: resizeElement!.bounds.y, width: resizeElement!.bounds.width, height: resizeElement!.bounds.height };\n        }\n\n    }\n\n    protected updatePosition(target: SModelElement, event: MouseEvent): boolean {\n        if (this.lastDragPosition) {\n            const viewport = findParentByFeature(target, isViewport);\n            const zoom = viewport ? viewport.zoom : 1;\n            const dx = (event.pageX - this.lastDragPosition.x) / zoom;\n            const dy = (event.pageY - this.lastDragPosition.y) / zoom;\n\n            this.positionDelta = { x: dx, y: dy };\n            this.lastDragPosition = { x: event.pageX, y: event.pageY };\n            return true;\n        }\n        return false;\n    }\n\n    protected reset() {\n        this.tool.dispatchFeedback(this, [new HideChangeBoundsToolResizeFeedbackAction()]);\n        this.resetPosition();\n    }\n\n    protected resetPosition() {\n        this.activeResizeHandle = undefined;\n        this.lastDragPosition = undefined;\n        this.initialPositon = undefined;\n        this.positionDelta = { x: 0, y: 0 };\n    }\n\n    protected handleElementResize(): Action[] {\n        if (!this.activeResizeHandle) {\n            return [];\n        }\n\n        const resizeElement = findParentByFeature(this.activeResizeHandle, isResizable);\n        if (this.isActiveResizeElement(resizeElement)) {\n            switch (this.activeResizeHandle.location) {\n                case ResizeHandleLocation.TopLeft:\n                    return this.handleTopLeftResize(resizeElement);\n                case ResizeHandleLocation.TopRight:\n                    return this.handleTopRightResize(resizeElement);\n                case ResizeHandleLocation.BottomLeft:\n                    return this.handleBottomLeftResize(resizeElement);\n                case ResizeHandleLocation.BottomRight:\n                    return this.handleBottomRightResize(resizeElement);\n            }\n        }\n        return [];\n    }\n\n    protected handleTopLeftResize(resizeElement: SParentElement & Resizable): Action[] {\n        return this.createSetBoundsAction(resizeElement,\n            resizeElement.bounds.x + this.positionDelta.x,\n            resizeElement.bounds.y + this.positionDelta.y,\n            resizeElement.bounds.width - this.positionDelta.x,\n            resizeElement.bounds.height - this.positionDelta.y);\n    }\n\n    protected handleTopRightResize(resizeElement: SParentElement & Resizable): Action[] {\n        return this.createSetBoundsAction(resizeElement,\n            resizeElement.bounds.x,\n            resizeElement.bounds.y + this.positionDelta.y,\n            resizeElement.bounds.width + this.positionDelta.x,\n            resizeElement.bounds.height - this.positionDelta.y);\n    }\n\n    protected handleBottomLeftResize(resizeElement: SParentElement & Resizable): Action[] {\n        return this.createSetBoundsAction(resizeElement,\n            resizeElement.bounds.x + this.positionDelta.x,\n            resizeElement.bounds.y,\n            resizeElement.bounds.width - this.positionDelta.x,\n            resizeElement.bounds.height + this.positionDelta.y);\n    }\n\n    protected handleBottomRightResize(resizeElement: SParentElement & Resizable): Action[] {\n        return this.createSetBoundsAction(resizeElement,\n            resizeElement.bounds.x,\n            resizeElement.bounds.y,\n            resizeElement.bounds.width + this.positionDelta.x,\n            resizeElement.bounds.height + this.positionDelta.y);\n    }\n\n    protected createChangeBoundsAction(element: SModelElement & BoundsAware): Action[] {\n        if (this.isValidBoundChange(element, element.bounds, element.bounds)) {\n            return [new ChangeBoundsOperation([toElementAndBounds(element)])];\n        } else if (this.initialBounds) {\n            const actions: Action[] = [];\n            if (this.tool.movementRestrictor) {\n                actions.push(removeMovementRestrictionFeedback(element, this.tool.movementRestrictor));\n            }\n            actions.push(new SetBoundsAction([{ elementId: element.id, newPosition: this.initialBounds, newSize: this.initialBounds }]));\n            return actions;\n        }\n        return [];\n    }\n\n    protected createElementAndBounds(element: SModelElement & BoundsAware): ElementAndBounds[] {\n        if (this.isValidBoundChange(element, element.bounds, element.bounds)) {\n            return [toElementAndBounds(element)];\n        }\n        return [];\n    }\n\n    protected createSetBoundsAction(element: SModelElement & BoundsAware, x: number, y: number, width: number, height: number): Action[] {\n        const newPosition = { x, y };\n        const newSize = { width, height };\n        const result: Action[] = [];\n        if (this.isValidBoundChange(element, newPosition, newSize)) {\n            if (this.tool.movementRestrictor) {\n                result.push(removeMovementRestrictionFeedback(element, this.tool.movementRestrictor));\n            }\n\n            result.push(new SetBoundsAction([{ elementId: element.id, newPosition, newSize }]));\n\n        } else if (this.isValidSize(element, newSize)) {\n            if (this.tool.movementRestrictor) {\n                result.push(createMovementRestrictionFeedback(element, this.tool.movementRestrictor));\n            }\n            result.push(new SetBoundsAction([{ elementId: element.id, newPosition, newSize }]));\n        }\n        return result;\n\n    }\n\n    protected isValidBoundChange(element: SModelElement & BoundsAware, newPosition: Point, newSize: Dimension): boolean {\n        return this.isValidSize(element, newSize) && this.isValidMove(element, newPosition);\n    }\n\n    protected isValidSize(element: SModelElement & BoundsAware, size: Dimension) {\n        return isValidSize(element, size);\n    }\n\n    protected isValidMove(element: SModelElement & BoundsAware, newPosition: Point) {\n        return isValidMove(element, newPosition, this.tool.movementRestrictor);\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport {\n    Action,\n    AnchorComputerRegistry,\n    EnableDefaultToolsAction,\n    EnableToolsAction,\n    findParentByFeature,\n    IActionHandler,\n    isConnectable,\n    isCtrlOrCmd,\n    SEdge,\n    SModelElement,\n    Tool\n} from \"sprotty\";\n\nimport {\n    CreateEdgeOperation,\n    CreateNodeOperation,\n    isTriggerElementTypeCreationAction,\n    isTriggerNodeCreationAction,\n    TriggerEdgeCreationAction,\n    TriggerNodeCreationAction\n} from \"../../base/operations/operation\";\nimport { GLSP_TYPES } from \"../../base/types\";\nimport { getAbsolutePosition } from \"../../utils/viewpoint-util\";\nimport { Containable, isContainable } from \"../hints/model\";\nimport { IMouseTool } from \"../mouse-tool/mouse-tool\";\nimport {\n    DrawFeedbackEdgeAction,\n    FeedbackEdgeEndMovingMouseListener,\n    RemoveFeedbackEdgeAction\n} from \"../tool-feedback/creation-tool-feedback\";\nimport { CursorCSS, cursorFeedbackAction } from \"../tool-feedback/css-feedback\";\nimport { IFeedbackActionDispatcher } from \"../tool-feedback/feedback-action-dispatcher\";\nimport { DragAwareMouseListener } from \"./drag-aware-mouse-listener\";\n\n@injectable()\nexport class NodeCreationTool implements Tool, IActionHandler {\n    static ID = \"tool_create_node\";\n    readonly id = NodeCreationTool.ID = \"unknown\";\n    protected creationToolMouseListener: NodeCreationToolMouseListener;\n    protected triggerAction: TriggerNodeCreationAction;\n\n    constructor(@inject(GLSP_TYPES.MouseTool) protected mouseTool: IMouseTool,\n        @inject(GLSP_TYPES.IFeedbackActionDispatcher) protected feedbackDispatcher: IFeedbackActionDispatcher) { }\n\n    enable() {\n        if (this.triggerAction === undefined) {\n            throw new TypeError(`Could not enable tool ${this.id}.The triggerAction cannot be undefined.`);\n        }\n        this.creationToolMouseListener = new NodeCreationToolMouseListener(this.triggerAction, this);\n        this.mouseTool.register(this.creationToolMouseListener);\n        this.feedbackDispatcher.registerFeedback(this, [cursorFeedbackAction(CursorCSS.NODE_CREATION)]);\n    }\n\n    disable() {\n        this.mouseTool.deregister(this.creationToolMouseListener);\n        this.feedbackDispatcher.deregisterFeedback(this, [cursorFeedbackAction()]);\n    }\n\n    dispatchFeedback(actions: Action[]) {\n        this.feedbackDispatcher.registerFeedback(this, actions);\n    }\n\n    handle(action: Action): Action | void {\n        if (isTriggerNodeCreationAction(action)) {\n            this.triggerAction = action;\n            return new EnableToolsAction([this.id]);\n        }\n    }\n}\n\n@injectable()\nexport class NodeCreationToolMouseListener extends DragAwareMouseListener {\n    protected container?: SModelElement & Containable;\n    constructor(protected triggerAction: TriggerNodeCreationAction, protected tool: NodeCreationTool) {\n        super();\n    }\n\n    protected creationAllowed(elementTypeId: string) {\n        return this.container && this.container.isContainableElement(this.elementTypeId);\n    }\n\n    get elementTypeId() {\n        return this.triggerAction.elementTypeId;\n    }\n    nonDraggingMouseUp(target: SModelElement, event: MouseEvent): Action[] {\n        const result: Action[] = [];\n        if (this.creationAllowed(this.elementTypeId)) {\n            const containerId = this.container ? this.container.id : undefined;\n            const location = getAbsolutePosition(target, event);\n            result.push(new CreateNodeOperation(this.elementTypeId, location, containerId, this.triggerAction.args));\n            if (!isCtrlOrCmd(event)) {\n                result.push(new EnableDefaultToolsAction());\n            }\n        }\n        return result;\n    }\n\n    mouseOver(target: SModelElement, event: MouseEvent): Action[] {\n        const currentContainer = findParentByFeature(target, isContainable);\n        if (!this.container || currentContainer !== this.container) {\n            this.container = currentContainer;\n            const feedback = this.creationAllowed(this.elementTypeId)\n                ? cursorFeedbackAction(CursorCSS.NODE_CREATION) :\n                cursorFeedbackAction(CursorCSS.OPERATION_NOT_ALLOWED);\n            this.tool.dispatchFeedback([feedback]);\n        }\n        return [];\n    }\n}\n\n/**\n * Tool to create connections in a Diagram, by selecting a source and target node.\n */\n@injectable()\nexport class EdgeCreationTool implements Tool, IActionHandler {\n    static ID = \"tool_create_edge\";\n    readonly id = EdgeCreationTool.ID;\n    protected triggerAction: TriggerEdgeCreationAction;\n\n    protected creationToolMouseListener: EdgeCreationToolMouseListener;\n    protected feedbackEndMovingMouseListener: FeedbackEdgeEndMovingMouseListener;\n\n    constructor(@inject(GLSP_TYPES.MouseTool) protected mouseTool: IMouseTool,\n        @inject(GLSP_TYPES.IFeedbackActionDispatcher) protected feedbackDispatcher: IFeedbackActionDispatcher,\n        @inject(AnchorComputerRegistry) protected anchorRegistry: AnchorComputerRegistry) { }\n\n    enable() {\n        if (this.triggerAction === undefined) {\n            throw new TypeError(`Could not enable tool ${this.id}.The triggerAction cannot be undefined.`);\n        }\n        this.creationToolMouseListener = new EdgeCreationToolMouseListener(this.triggerAction, this);\n        this.mouseTool.register(this.creationToolMouseListener);\n        this.feedbackEndMovingMouseListener = new FeedbackEdgeEndMovingMouseListener(this.anchorRegistry);\n        this.mouseTool.register(this.feedbackEndMovingMouseListener);\n        this.dispatchFeedback([cursorFeedbackAction(CursorCSS.OPERATION_NOT_ALLOWED)]);\n    }\n\n    disable() {\n        this.mouseTool.deregister(this.creationToolMouseListener);\n        this.mouseTool.deregister(this.feedbackEndMovingMouseListener);\n        this.feedbackDispatcher.deregisterFeedback(this, [new RemoveFeedbackEdgeAction(), cursorFeedbackAction()]);\n    }\n\n    dispatchFeedback(actions: Action[]) {\n        this.feedbackDispatcher.registerFeedback(this, actions);\n    }\n\n    handle(action: Action): Action | void {\n        if (isTriggerElementTypeCreationAction(action)) {\n            this.triggerAction = action;\n            return new EnableToolsAction([this.id]);\n        }\n    }\n}\n\n@injectable()\nexport class EdgeCreationToolMouseListener extends DragAwareMouseListener {\n    protected source?: string;\n    protected target?: string;\n    protected currentTarget?: SModelElement;\n    protected allowedTarget: boolean = false;\n    protected proxyEdge: SEdge;\n    constructor(protected triggerAction: TriggerEdgeCreationAction, protected tool: EdgeCreationTool) {\n        super();\n        this.proxyEdge = new SEdge();\n        this.proxyEdge.type = triggerAction.elementTypeId;\n    }\n\n    protected reinitialize() {\n        this.source = undefined;\n        this.target = undefined;\n        this.currentTarget = undefined;\n        this.allowedTarget = false;\n        this.tool.dispatchFeedback([new RemoveFeedbackEdgeAction()]);\n    }\n\n    nonDraggingMouseUp(element: SModelElement, event: MouseEvent): Action[] {\n        const result: Action[] = [];\n        if (event.button === 0) {\n            if (!this.isSourceSelected()) {\n                if (this.currentTarget && this.allowedTarget) {\n                    this.source = this.currentTarget.id;\n                    this.tool.dispatchFeedback([new DrawFeedbackEdgeAction(this.triggerAction.elementTypeId, this.source)]);\n                }\n            } else {\n                if (this.currentTarget && this.allowedTarget) {\n                    this.target = this.currentTarget.id;\n                }\n            }\n            if (this.isSourceSelected() && this.isTargetSelected()) {\n                result.push(new CreateEdgeOperation(this.triggerAction.elementTypeId, this.source, this.target, this.triggerAction.args));\n                if (!isCtrlOrCmd(event)) {\n                    result.push(new EnableDefaultToolsAction());\n                } else {\n                    this.reinitialize();\n                }\n            }\n        } else if (event.button === 2) {\n            result.push(new EnableDefaultToolsAction());\n        }\n        return result;\n    }\n\n    protected isSourceSelected() {\n        return this.source !== undefined;\n    }\n\n    protected isTargetSelected() {\n        return this.target !== undefined;\n    }\n\n    mouseOver(target: SModelElement, event: MouseEvent): Action[] {\n        const newCurrentTarget = findParentByFeature(target, isConnectable);\n        if (newCurrentTarget !== this.currentTarget) {\n            this.currentTarget = newCurrentTarget;\n            if (this.currentTarget) {\n                if (!this.isSourceSelected()) {\n                    this.allowedTarget = this.isAllowedSource(newCurrentTarget);\n                } else if (!this.isTargetSelected()) {\n                    this.allowedTarget = this.isAllowedTarget(newCurrentTarget);\n                }\n                if (this.allowedTarget) {\n                    const action = !this.isSourceSelected() ? cursorFeedbackAction(CursorCSS.EDGE_CREATION_SOURCE) :\n                        cursorFeedbackAction(CursorCSS.EDGE_CREATION_TARGET);\n                    return [action];\n                }\n            }\n            return [cursorFeedbackAction(CursorCSS.OPERATION_NOT_ALLOWED)];\n        }\n        return [];\n    }\n\n    protected isAllowedSource(element: SModelElement | undefined): boolean {\n        return element !== undefined && isConnectable(element) && element.canConnect(this.proxyEdge, \"source\");\n    }\n\n    protected isAllowedTarget(element: SModelElement | undefined): boolean {\n        return element !== undefined && isConnectable(element) && element.canConnect(this.proxyEdge, \"target\");\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport {\n    Action,\n    EnableDefaultToolsAction,\n    isCtrlOrCmd,\n    isDeletable,\n    isSelectable,\n    KeyListener,\n    KeyTool,\n    MouseListener,\n    SModelElement,\n    Tool\n} from \"sprotty\";\nimport { matchesKeystroke } from \"sprotty/lib/utils/keyboard\";\n\nimport { DeleteElementOperation } from \"../../base/operations/operation\";\nimport { GLSP_TYPES } from \"../../base/types\";\nimport { IMouseTool } from \"../mouse-tool/mouse-tool\";\nimport { CursorCSS, cursorFeedbackAction } from \"../tool-feedback/css-feedback\";\nimport { IFeedbackActionDispatcher } from \"../tool-feedback/feedback-action-dispatcher\";\n\n/**\n * Deletes selected elements when hitting the `Del` key.\n */\n@injectable()\nexport class DelKeyDeleteTool implements Tool {\n    static ID = \"glsp.delete-keyboard\";\n    readonly id = DelKeyDeleteTool.ID;\n\n    protected deleteKeyListener: DeleteKeyListener = new DeleteKeyListener();\n\n    constructor(@inject(KeyTool) protected readonly keytool: KeyTool) { }\n\n    enable() {\n        this.keytool.register(this.deleteKeyListener);\n    }\n\n    disable() {\n        this.keytool.deregister(this.deleteKeyListener);\n    }\n}\n\n@injectable()\nexport class DeleteKeyListener extends KeyListener {\n    keyDown(element: SModelElement, event: KeyboardEvent): Action[] {\n        if (matchesKeystroke(event, 'Delete')) {\n            const deleteElementIds = Array.from(element.root.index.all().filter(e => isDeletable(e) && isSelectable(e) && e.selected)\n                .filter(e => e.id !== e.root.id).map(e => e.id));\n            return [new DeleteElementOperation(deleteElementIds)];\n        }\n        return [];\n    }\n}\n\n/**\n * Deletes selected elements when clicking on them.\n */\n@injectable()\nexport class MouseDeleteTool implements Tool {\n\n    static ID = \"glsp.delete-mouse\";\n    readonly id = MouseDeleteTool.ID;\n\n    protected deleteToolMouseListener: DeleteToolMouseListener = new DeleteToolMouseListener();\n\n    constructor(@inject(GLSP_TYPES.MouseTool) protected mouseTool: IMouseTool,\n        @inject(GLSP_TYPES.IFeedbackActionDispatcher) protected readonly feedbackDispatcher: IFeedbackActionDispatcher) { }\n\n    enable() {\n        this.mouseTool.register(this.deleteToolMouseListener);\n        this.feedbackDispatcher.registerFeedback(this, [cursorFeedbackAction(CursorCSS.ELEMENT_DELETION)]);\n    }\n\n    disable() {\n        this.mouseTool.deregister(this.deleteToolMouseListener);\n        this.feedbackDispatcher.registerFeedback(this, [cursorFeedbackAction()]);\n    }\n}\n\n@injectable()\nexport class DeleteToolMouseListener extends MouseListener {\n    mouseUp(target: SModelElement, event: MouseEvent): Action[] {\n        if (!isDeletable(target)) {\n            return [];\n        }\n\n        const result: Action[] = [];\n        result.push(new DeleteElementOperation([target.id]));\n        if (!isCtrlOrCmd(event)) {\n            result.push(new EnableDefaultToolsAction());\n        }\n        return result;\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ContainerModule } from \"inversify\";\nimport { configureActionHandler } from \"sprotty\";\n\nimport { TriggerEdgeCreationAction, TriggerNodeCreationAction } from \"../../base/operations/operation\";\nimport { GLSP_TYPES } from \"../../base/types\";\nimport { ChangeBoundsTool } from \"./change-bounds-tool\";\nimport { EdgeCreationTool, NodeCreationTool } from \"./creation-tool\";\nimport { DelKeyDeleteTool, MouseDeleteTool } from \"./delete-tool\";\nimport { EdgeEditTool } from \"./edge-edit-tool\";\n\nconst toolsModule = new ContainerModule((bind, _unbind, isBound) => {\n    // Register default tools\n    bind(GLSP_TYPES.IDefaultTool).to(ChangeBoundsTool);\n    bind(GLSP_TYPES.IDefaultTool).to(EdgeEditTool);\n    bind(GLSP_TYPES.IDefaultTool).to(DelKeyDeleteTool);\n\n    // Register  tools\n    bind(GLSP_TYPES.ITool).to(MouseDeleteTool);\n    bind(NodeCreationTool).toSelf().inSingletonScope();\n    bind(EdgeCreationTool).toSelf().inSingletonScope();\n    bind(GLSP_TYPES.ITool).toService(EdgeCreationTool);\n    bind(GLSP_TYPES.ITool).toService(NodeCreationTool);\n\n    configureActionHandler({ bind, isBound }, TriggerNodeCreationAction.KIND, NodeCreationTool);\n    configureActionHandler({ bind, isBound }, TriggerEdgeCreationAction.KIND, EdgeCreationTool);\n});\n\nexport default toolsModule;\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { Action, MouseListener, SModelElement } from \"sprotty\";\n\n/**\n * A mouse listener that is aware of prior mouse dragging.\n *\n * Therefore, this listener distinguishes between mouse up events after dragging and\n * mouse up events without prior dragging. Subclasses may override the methods\n * `draggingMouseUp` and/or `nonDraggingMouseUp` to react to only these specific kinds\n * of mouse up events.\n */\nexport class DragAwareMouseListener extends MouseListener {\n\n    private _isMouseDown: boolean = false;\n    private _isMouseDrag: boolean = false;\n\n    mouseDown(target: SModelElement, event: MouseEvent): Action[] {\n        this._isMouseDown = true;\n        return [];\n    }\n\n    mouseMove(target: SModelElement, event: MouseEvent): Action[] {\n        if (this._isMouseDown) {\n            this._isMouseDrag = true;\n        }\n        return [];\n    }\n\n    mouseUp(element: SModelElement, event: MouseEvent): Action[] {\n        this._isMouseDown = false;\n        if (this._isMouseDrag) {\n            this._isMouseDrag = false;\n            return this.draggingMouseUp(element, event);\n        }\n\n        return this.nonDraggingMouseUp(element, event);\n    }\n\n    nonDraggingMouseUp(element: SModelElement, event: MouseEvent): Action[] {\n        return [];\n    }\n\n    draggingMouseUp(element: SModelElement, event: MouseEvent): Action[] {\n        return [];\n    }\n\n    get isMouseDrag() {\n        return this._isMouseDrag;\n    }\n\n    get isMouseDown() {\n        return this._isMouseDown;\n    }\n\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable, optional } from \"inversify\";\nimport {\n    Action,\n    AnchorComputerRegistry,\n    canEditRouting,\n    Connectable,\n    EdgeRouterRegistry,\n    findParentByFeature,\n    isConnectable,\n    isSelected,\n    SModelElement,\n    SModelRoot,\n    SRoutableElement,\n    SRoutingHandle,\n    Tool\n} from \"sprotty\";\n\nimport { ChangeRoutingPointsOperation, ReconnectEdgeOperation } from \"../../base/operations/operation\";\nimport { GLSP_TYPES } from \"../../base/types\";\nimport { isRoutable, isRoutingHandle } from \"../../utils/smodel-util\";\nimport { IMouseTool } from \"../mouse-tool/mouse-tool\";\nimport {\n    isReconnectable,\n    isReconnectHandle,\n    isSourceRoutingHandle,\n    isTargetRoutingHandle,\n    SReconnectHandle\n} from \"../reconnect/model\";\nimport { SelectionListener, SelectionService } from \"../select/selection-service\";\nimport { DrawFeedbackEdgeAction, feedbackEdgeId, RemoveFeedbackEdgeAction } from \"../tool-feedback/creation-tool-feedback\";\nimport { CursorCSS, cursorFeedbackAction } from \"../tool-feedback/css-feedback\";\nimport {\n    DrawFeedbackEdgeSourceAction,\n    FeedbackEdgeRouteMovingMouseListener,\n    FeedbackEdgeSourceMovingMouseListener,\n    FeedbackEdgeTargetMovingMouseListener,\n    HideEdgeReconnectHandlesFeedbackAction,\n    ShowEdgeReconnectHandlesFeedbackAction,\n    SwitchRoutingModeAction\n} from \"../tool-feedback/edge-edit-tool-feedback\";\nimport { IFeedbackActionDispatcher } from \"../tool-feedback/feedback-action-dispatcher\";\nimport { DragAwareMouseListener } from \"./drag-aware-mouse-listener\";\n\n@injectable()\nexport class EdgeEditTool implements Tool {\n    static ID = \"glsp.edge-edit-tool\";\n    readonly id = EdgeEditTool.ID;\n\n    protected feedbackEdgeSourceMovingListener: FeedbackEdgeSourceMovingMouseListener;\n    protected feedbackEdgeTargetMovingListener: FeedbackEdgeTargetMovingMouseListener;\n    protected feedbackMovingListener: FeedbackEdgeRouteMovingMouseListener;\n    protected edgeEditListener: EdgeEditListener;\n\n    constructor(@inject(GLSP_TYPES.SelectionService) protected selectionService: SelectionService,\n        @inject(GLSP_TYPES.MouseTool) protected mouseTool: IMouseTool,\n        @inject(GLSP_TYPES.IFeedbackActionDispatcher) protected feedbackDispatcher: IFeedbackActionDispatcher,\n        @inject(AnchorComputerRegistry) protected anchorRegistry: AnchorComputerRegistry,\n        @inject(EdgeRouterRegistry) @optional() protected edgeRouterRegistry?: EdgeRouterRegistry) {\n    }\n\n    enable(): void {\n        this.edgeEditListener = new EdgeEditListener(this);\n        this.mouseTool.register(this.edgeEditListener);\n        this.selectionService.register(this.edgeEditListener);\n\n        // install feedback move mouse listener for client-side move updates\n        this.feedbackEdgeSourceMovingListener = new FeedbackEdgeSourceMovingMouseListener(this.anchorRegistry);\n        this.feedbackEdgeTargetMovingListener = new FeedbackEdgeTargetMovingMouseListener(this.anchorRegistry);\n        this.feedbackMovingListener = new FeedbackEdgeRouteMovingMouseListener(this.edgeRouterRegistry);\n    }\n\n    registerFeedbackListeners(): void {\n        this.mouseTool.register(this.feedbackMovingListener);\n        this.mouseTool.register(this.feedbackEdgeSourceMovingListener);\n        this.mouseTool.register(this.feedbackEdgeTargetMovingListener);\n    }\n\n    deregisterFeedbackListeners(): void {\n        this.mouseTool.deregister(this.feedbackEdgeSourceMovingListener);\n        this.mouseTool.deregister(this.feedbackEdgeTargetMovingListener);\n        this.mouseTool.deregister(this.feedbackMovingListener);\n    }\n\n    disable(): void {\n        this.edgeEditListener.reset();\n        this.selectionService.deregister(this.edgeEditListener);\n        this.deregisterFeedbackListeners();\n        this.mouseTool.deregister(this.edgeEditListener);\n    }\n\n    dispatchFeedback(actions: Action[]) {\n        this.feedbackDispatcher.registerFeedback(this, actions);\n    }\n}\n\nclass EdgeEditListener extends DragAwareMouseListener implements SelectionListener {\n    // active selection data\n    protected edge?: SRoutableElement;\n    protected routingHandle?: SRoutingHandle;\n\n    // new connectable (source or target) for edge\n    protected newConnectable?: SModelElement & Connectable;\n\n    // active reconnect handle data\n    protected reconnectMode?: 'NEW_SOURCE' | 'NEW_TARGET';\n\n    constructor(protected tool: EdgeEditTool) {\n        super();\n    }\n\n    protected isValidEdge(edge?: SRoutableElement): edge is SRoutableElement {\n        return edge !== undefined && edge.id !== feedbackEdgeId(edge.root) && isSelected(edge);\n    }\n\n    protected setEdgeSelected(edge: SRoutableElement) {\n        if (this.edge && this.edge.id !== edge.id) {\n            // reset from a previously selected edge\n            this.reset();\n        }\n\n        this.edge = edge;\n        // note: order is important here as we want the reconnect handles to cover the routing handles\n        const feedbackActions = [];\n        if (canEditRouting(edge)) {\n            feedbackActions.push(new SwitchRoutingModeAction([this.edge.id], []));\n        }\n        if (isReconnectable(edge)) {\n            feedbackActions.push(new ShowEdgeReconnectHandlesFeedbackAction(this.edge.id));\n        }\n        this.tool.dispatchFeedback(feedbackActions);\n    }\n\n    protected isEdgeSelected(): boolean {\n        return this.edge !== undefined && isSelected(this.edge);\n    }\n\n    protected setReconnectHandleSelected(edge: SRoutableElement, reconnectHandle: SReconnectHandle) {\n        if (this.edge && this.edge.target && this.edge.source) {\n            if (isSourceRoutingHandle(edge, reconnectHandle)) {\n                this.tool.dispatchFeedback([new HideEdgeReconnectHandlesFeedbackAction(),\n                cursorFeedbackAction(CursorCSS.EDGE_RECONNECT),\n                new DrawFeedbackEdgeSourceAction(this.edge.type, this.edge.targetId)]);\n                this.reconnectMode = \"NEW_SOURCE\";\n            } else if (isTargetRoutingHandle(edge, reconnectHandle)) {\n                this.tool.dispatchFeedback([new HideEdgeReconnectHandlesFeedbackAction(),\n                cursorFeedbackAction(CursorCSS.EDGE_CREATION_TARGET),\n                new DrawFeedbackEdgeAction(this.edge.type, this.edge.sourceId)]);\n                this.reconnectMode = \"NEW_TARGET\";\n            }\n        }\n    }\n\n    protected isReconnecting(): boolean {\n        return this.reconnectMode !== undefined;\n    }\n\n    protected isReconnectingNewSource(): boolean {\n        return this.reconnectMode === \"NEW_SOURCE\";\n    }\n\n    protected setRoutingHandleSelected(edge: SRoutableElement, routingHandle: SRoutingHandle) {\n        if (this.edge && this.edge.target && this.edge.source) {\n            this.routingHandle = routingHandle;\n        }\n    }\n\n    protected requiresReconnect(sourceId: string, targetId: string): boolean {\n        return this.edge !== undefined && (this.edge.sourceId !== sourceId || this.edge.targetId !== targetId);\n    }\n\n    protected setNewConnectable(connectable?: SModelElement & Connectable) {\n        this.newConnectable = connectable;\n    }\n\n    protected isReadyToReconnect() {\n        return this.edge && this.isReconnecting() && this.newConnectable !== undefined;\n    }\n\n    protected isReadyToReroute() {\n        return this.routingHandle !== undefined;\n    }\n\n    mouseDown(target: SModelElement, event: MouseEvent): Action[] {\n        const result: Action[] = super.mouseDown(target, event);\n        if (event.button === 0) {\n            const reconnectHandle = findParentByFeature(target, isReconnectHandle);\n            const routingHandle = !reconnectHandle ? findParentByFeature(target, isRoutingHandle) : undefined;\n            const edge = findParentByFeature(target, isRoutable);\n            if (this.isEdgeSelected() && edge && reconnectHandle) {\n                // PHASE 2 Reconnect: Select reconnect handle on selected edge\n                this.setReconnectHandleSelected(edge, reconnectHandle);\n            } else if (this.isEdgeSelected() && edge && routingHandle) {\n                // PHASE 2 Reroute: Select routing handle on selected edge\n                this.setRoutingHandleSelected(edge, routingHandle);\n            } else if (this.isValidEdge(edge)) {\n                // PHASE 1: Select edge\n                this.tool.registerFeedbackListeners();\n                this.setEdgeSelected(edge);\n            }\n        } else if (event.button === 2) {\n            this.reset();\n        }\n        return result;\n    }\n\n    mouseMove(target: SModelElement, event: MouseEvent): Action[] {\n        const result = super.mouseMove(target, event);\n        if (this.isMouseDrag) {\n            // reset any selected connectables when we are dragging, maybe the user is just panning\n            this.setNewConnectable(undefined);\n        }\n        return result;\n    }\n\n    mouseUp(target: SModelElement, event: MouseEvent): Action[] {\n        const result = super.mouseUp(target, event);\n        if (!this.isReadyToReconnect() && !this.isReadyToReroute()) {\n            return result;\n        }\n\n        if (this.edge && this.newConnectable) {\n            const sourceId = this.isReconnectingNewSource() ? this.newConnectable.id : this.edge.sourceId;\n            const targetId = this.isReconnectingNewSource() ? this.edge.targetId : this.newConnectable.id;\n            if (this.requiresReconnect(sourceId, targetId)) {\n                result.push(new ReconnectEdgeOperation(this.edge.id, sourceId, targetId));\n            }\n            this.reset();\n        } else if (this.edge && this.routingHandle) {\n            // we need to re-retrieve the edge as it might have changed due to a server udpate since we do not reset the state between reroute actions\n            const latestEdge = target.index.getById(this.edge.id);\n            if (latestEdge && isRoutable(latestEdge)) {\n                result.push(new ChangeRoutingPointsOperation([{ elementId: latestEdge.id, newRoutingPoints: latestEdge.routingPoints }]));\n                this.routingHandle = undefined;\n            }\n        }\n        return result;\n    }\n\n    mouseOver(target: SModelElement, event: MouseEvent): Action[] {\n        if (this.edge && this.isReconnecting()) {\n            const currentTarget = findParentByFeature(target, isConnectable);\n            if (!this.newConnectable || currentTarget !== this.newConnectable) {\n                this.setNewConnectable(currentTarget);\n                if (currentTarget) {\n                    if ((this.reconnectMode === 'NEW_SOURCE' && currentTarget.canConnect(this.edge, \"source\")) ||\n                        (this.reconnectMode === 'NEW_TARGET' && currentTarget.canConnect(this.edge, \"target\"))) {\n\n                        this.tool.dispatchFeedback([cursorFeedbackAction(CursorCSS.EDGE_RECONNECT)]);\n                        return [];\n                    }\n                }\n                this.tool.dispatchFeedback([cursorFeedbackAction(CursorCSS.OPERATION_NOT_ALLOWED)]);\n            }\n        }\n        return [];\n    }\n\n    selectionChanged(root: Readonly<SModelRoot>, selectedElements: string[]): void {\n        if (this.edge) {\n            if (selectedElements.indexOf(this.edge.id) > -1) {\n                // our active edge is still selected, nothing to do\n                return;\n            }\n\n            if (this.isReconnecting()) {\n                // we are reconnecting, so we may have clicked on a potential target\n                return;\n            }\n\n            // try to find some other selected element and mark that active\n            for (const elementId of selectedElements.reverse()) {\n                const element = root.index.getById(elementId);\n                if (element) {\n                    const edge = findParentByFeature(element, isRoutable);\n                    if (this.isValidEdge(edge)) {\n                        // PHASE 1: Select edge\n                        this.setEdgeSelected(edge);\n                        return;\n                    }\n                }\n            }\n\n            this.reset();\n        }\n    }\n\n    public reset() {\n        this.resetFeedback();\n        this.resetData();\n    }\n\n    protected resetData() {\n        this.edge = undefined;\n        this.reconnectMode = undefined;\n        this.newConnectable = undefined;\n        this.routingHandle = undefined;\n    }\n\n    protected resetFeedback() {\n        const result: Action[] = [];\n        if (this.edge) {\n            result.push(new SwitchRoutingModeAction([], [this.edge.id]));\n        }\n        result.push(...[new HideEdgeReconnectHandlesFeedbackAction(),\n        cursorFeedbackAction(), new RemoveFeedbackEdgeAction()]);\n        this.tool.dispatchFeedback(result);\n        this.tool.deregisterFeedbackListeners();\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { Action } from \"sprotty\";\n\nexport class GlspUndoAction implements Action {\n    static readonly KIND = 'glspUndo';\n    readonly kind = GlspUndoAction.KIND;\n}\n\nexport class GlspRedoAction implements Action {\n    static readonly KIND = 'glspRedo';\n    readonly kind = GlspRedoAction.KIND;\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ContainerModule } from \"inversify\";\nimport { configureCommand } from \"sprotty\";\n\nimport { ApplyMarkersCommand, ClearMarkersCommand, SetMarkersCommand, ValidationFeedbackEmitter } from \"./validate\";\n\nconst validationModule = new ContainerModule((bind, _unbind, isBound) => {\n    configureCommand({ bind, isBound }, SetMarkersCommand);\n    configureCommand({ bind, isBound }, ApplyMarkersCommand);\n    configureCommand({ bind, isBound }, ClearMarkersCommand);\n    bind(ValidationFeedbackEmitter).toSelf().inSingletonScope();\n});\n\nexport default validationModule;\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport {\n    Action,\n    Command,\n    CommandExecutionContext,\n    CommandReturn,\n    IActionDispatcher,\n    SDecoration,\n    SIssue,\n    SIssueMarker,\n    SModelElement,\n    SParentElement,\n    TYPES\n} from \"sprotty\";\n\nimport { GLSP_TYPES } from \"../../base/types\";\nimport { Marker, MarkerKind } from \"../../utils/marker\";\nimport { addCssClasses, removeCssClasses } from \"../../utils/smodel-util\";\nimport { getSeverity } from \"../hover/hover\";\nimport { IFeedbackActionDispatcher, IFeedbackEmitter } from \"../tool-feedback/feedback-action-dispatcher\";\nimport { FeedbackCommand } from \"../tool-feedback/model\";\n\n/**\n* Action to retrieve markers for a model\n*/\nexport class RequestMarkersAction implements Action {\n\n    static readonly KIND = 'requestMarkers';\n    readonly kind = RequestMarkersAction.KIND;\n\n    constructor(public readonly elementsIDs: string[] = []) { }\n}\n\n/**\n * Feedback emitter sending actions for visualizing model validation feedback and\n * re-establishing this feedback visualization after the model has been updated.\n */\n@injectable()\nexport class ValidationFeedbackEmitter implements IFeedbackEmitter {\n\n    @inject(GLSP_TYPES.IFeedbackActionDispatcher) protected feedbackActionDispatcher: IFeedbackActionDispatcher;\n\n    @inject(TYPES.IActionDispatcherProvider) protected actionDispatcher: () => Promise<IActionDispatcher>;\n\n    private registeredAction: MarkersAction;\n\n    private constructor() { }\n\n    /**\n     * Register the action that should be emitted for visualizing validation feedback.\n     * @param action the action that should be emitted when the model is updated and that will visualize the model validation feedback.\n     */\n    registerValidationFeedbackAction(action: MarkersAction) {\n        // De-register old action responsible for applying markers and re-applying them when the model is updated\n        this.feedbackActionDispatcher.deregisterFeedback(this, []);\n\n        // Clear existing markers\n        if (this.registeredAction !== undefined) {\n            const clearMarkersAction = new ClearMarkersAction(this.registeredAction.markers);\n            this.actionDispatcher().then(dispatcher => dispatcher.dispatch(clearMarkersAction));\n        }\n\n        // Register new action responsible for applying markers and re-applying them when the model is updated\n        this.feedbackActionDispatcher.registerFeedback(this, [action]);\n        this.registeredAction = action;\n    }\n\n}\n\n/**\n * Interface for actions processing markers\n */\nexport interface MarkersAction extends Action {\n    readonly markers: Marker[];\n}\n\n/**\n * Action to set markers for a model\n */\nexport class SetMarkersAction implements MarkersAction {\n    readonly kind = SetMarkersCommand.KIND;\n    constructor(public readonly markers: Marker[]) { }\n}\n\n/**\n * Command for handling `SetMarkersAction`\n */\n@injectable()\nexport class SetMarkersCommand extends Command {\n\n    @inject(ValidationFeedbackEmitter) protected validationFeedbackEmitter: ValidationFeedbackEmitter;\n\n    static readonly KIND = 'setMarkers';\n\n    constructor(@inject(TYPES.Action) public action: SetMarkersAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const markers: Marker[] = this.action.markers;\n        const applyMarkersAction: ApplyMarkersAction = new ApplyMarkersAction(markers);\n        this.validationFeedbackEmitter.registerValidationFeedbackAction(applyMarkersAction);\n        return context.root;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        return this.execute(context);\n    }\n}\n\n/**\n * Action for applying makers to a model\n */\n@injectable()\nexport class ApplyMarkersAction implements MarkersAction {\n    readonly kind = ApplyMarkersCommand.KIND;\n    constructor(public readonly markers: Marker[]) { }\n}\n\n/**\n * Command for handling `ApplyMarkersAction`\n */\n@injectable()\nexport class ApplyMarkersCommand extends FeedbackCommand {\n\n    static KIND = \"applyMarkers\";\n    readonly priority = 0;\n\n    constructor(@inject(TYPES.Action) protected action: ApplyMarkersAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const markers: Marker[] = this.action.markers;\n        for (const marker of markers) {\n            const modelElement: SModelElement | undefined = context.root.index.getById(marker.elementId);\n            if (modelElement instanceof SParentElement) {\n                const issueMarker: SIssueMarker = getOrCreateSIssueMarker(modelElement);\n                const issue: SIssue = createSIssue(marker);\n                issueMarker.issues.push(issue);\n                addCSSClassToIssueParent(modelElement, issueMarker);\n            }\n        }\n        return context.root;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        return this.execute(context);\n    }\n}\n\nfunction addCSSClassToIssueParent(modelElement: SParentElement, issueMarker: SIssueMarker) {\n    addCssClasses(modelElement, [getSeverity(issueMarker)]);\n}\n\nfunction removeCSSClassFromIssueParent(modelElement: SParentElement, issueMarker: SIssueMarker) {\n    removeCssClasses(modelElement, [getSeverity(issueMarker)]);\n}\n\n/**\n * Retrieves the `SIssueMarker` contained by the provided model element as\n * direct child or a newly instantiated `SIssueMarker` if no child\n * `SIssueMarker` exists.\n * @param modelElement for which the `SIssueMarker` should be retrieved or created.\n * @returns the child `SIssueMarker` or a new `SIssueMarker` if no such child exists.\n */\nfunction getOrCreateSIssueMarker(modelElement: SParentElement): SIssueMarker {\n    let issueMarker: SIssueMarker | undefined;\n\n    issueMarker = getSIssueMarker(modelElement);\n\n    if (issueMarker === undefined) {\n        issueMarker = new GIssueMarker();\n        issueMarker.type = \"marker\";\n        issueMarker.issues = new Array<SIssue>();\n        modelElement.add(issueMarker);\n    }\n\n    return issueMarker;\n}\n\n/**\n * Retrieves the `SIssueMarker` contained by the provided model element as\n * direct child or `undefined` if such an `SIssueMarker` does not exist.\n * @param modelElement for which the `SIssueMarker` should be retrieved.\n * @returns the child `SIssueMarker` or `undefined` if no such child exists.\n */\nfunction getSIssueMarker(modelElement: SParentElement): SIssueMarker | undefined {\n    let issueMarker: SIssueMarker | undefined;\n\n    for (const child of modelElement.children) {\n        if (child instanceof SIssueMarker) {\n            issueMarker = child;\n        }\n    }\n\n    return issueMarker;\n}\n\n/**\n * Creates an `SIssue` with `severity` and `message` set according to\n * the `kind` and `description` of the provided `Marker`.\n * @param marker `Marker` for that an `SIssue` should be created.\n * @returns the created `SIssue`.\n */\nfunction createSIssue(marker: Marker): SIssue {\n    const issue: SIssue = new SIssue();\n    issue.message = marker.description;\n\n    switch (marker.kind) {\n        case MarkerKind.ERROR: {\n            issue.severity = 'error';\n            break;\n        }\n        case MarkerKind.INFO: {\n            issue.severity = 'info';\n            break;\n        }\n        case MarkerKind.WARNING: {\n            issue.severity = 'warning';\n            break;\n        }\n    }\n\n    return issue;\n}\n\n/**\n * Action for clearing makers of a model\n */\n@injectable()\nexport class ClearMarkersAction implements MarkersAction {\n    readonly kind = ClearMarkersCommand.KIND;\n    constructor(public readonly markers: Marker[]) { }\n}\n\n/**\n * Command for handling `ClearMarkersAction`\n */\n@injectable()\nexport class ClearMarkersCommand extends Command {\n    static KIND = \"clearMarkers\";\n\n    constructor(@inject(TYPES.Action) protected action: ClearMarkersAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const markers: Marker[] = this.action.markers;\n        for (const marker of markers) {\n            const modelElement: SModelElement | undefined = context.root.index.getById(marker.elementId);\n            if (modelElement instanceof SParentElement) {\n                const issueMarker: SIssueMarker | undefined = getSIssueMarker(modelElement);\n                if (issueMarker !== undefined) {\n                    removeCSSClassFromIssueParent(modelElement, issueMarker);\n                    for (let index = 0; index < issueMarker.issues.length; ++index) {\n                        const issue: SIssue = issueMarker.issues[index];\n                        if (issue.message === marker.description) {\n                            issueMarker.issues.splice(index--, 1);\n                        }\n                    }\n                    if (issueMarker.issues.length === 0) {\n                        modelElement.remove(issueMarker);\n                    } else {\n                        addCSSClassToIssueParent(modelElement, issueMarker);\n                    }\n                }\n            }\n        }\n        return context.root;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        return this.execute(context);\n    }\n}\n\nexport class GIssueMarker extends SIssueMarker {\n    constructor() {\n        super();\n        this.features = new Set<symbol>(SDecoration.DEFAULT_FEATURES);\n    }\n}\n\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport defaultGLSPModule from \"./base/di.config\";\nimport glspCommandPaletteModule from \"./features/command-palette/di.config\";\nimport glspContextMenuModule from \"./features/context-menu/di.config\";\nimport { copyPasteContextMenuModule, glspServerCopyPasteModule } from \"./features/copy-paste/di.config\";\nimport glspEditLabelValidationModule from \"./features/edit-label-validation/di.config\";\nimport executeCommandModule from \"./features/execute/di.config\";\nimport modelHintsModule from \"./features/hints/di.config\";\nimport glspHoverModule from \"./features/hover/di.config\";\nimport layoutCommandsModule from \"./features/layout/di.config\";\nimport glspMouseToolModule from \"./features/mouse-tool/di.config\";\nimport requestResponseModule from \"./features/request-response/di.config\";\nimport saveModule from \"./features/save/di.config\";\nimport glspSelectModule from \"./features/select/di.config\";\nimport toolFeedbackModule from \"./features/tool-feedback/di.config\";\nimport paletteModule from \"./features/tool-palette/di.config\";\nimport toolsModule from \"./features/tools/di.config\";\nimport validationModule from \"./features/validation/di.config\";\n\nexport * from 'sprotty';\n\nexport * from './base/model/update-model-command';\nexport * from './base/operations/operation';\nexport * from './base/command-stack';\nexport * from './base/editor-context';\nexport * from './base/selection-clearing-mouse-listener';\nexport * from './features/change-bounds/model';\nexport * from './features/change-bounds/movement-restrictor';\nexport * from './features/change-bounds/snap';\nexport * from './features/tool-palette/palette-item';\nexport * from './base/actions/context-actions';\nexport * from './features/context-menu/delete-element-context-menu';\nexport * from './features/command-palette/server-command-palette-provider';\nexport * from './features/copy-paste/copy-paste-handler';\nexport * from './features/edit-label-validation/edit-label-validator';\nexport * from './features/execute/execute-command';\nexport * from './features/execute/model';\nexport * from './features/hints/request-type-hints-action';\nexport * from './features/hints/type-hints';\nexport * from './features/hints/model';\nexport * from './features/hover/hover';\nexport * from './features/layout/layout-commands';\nexport * from './features/mouse-tool/mouse-tool';\nexport * from './features/rank/model';\nexport * from './features/reconnect/model';\nexport * from './features/request-response/glsp-action-dispatcher';\nexport * from './features/save/model';\nexport * from './features/save/save';\nexport * from './features/tool-feedback/change-bounds-tool-feedback';\nexport * from './features/tool-feedback/creation-tool-feedback';\nexport * from './features/tool-feedback/css-feedback';\nexport * from './features/tool-feedback/edge-edit-tool-feedback';\nexport * from './features/tool-feedback/feedback-action-dispatcher';\nexport * from './features/tool-feedback/model';\nexport * from './features/tool-feedback/model';\nexport * from './features/tool-palette/tool-palette';\nexport * from './features/tools/change-bounds-tool';\nexport * from './features/tools/creation-tool';\nexport * from './features/tools/delete-tool';\nexport * from './features/tools/drag-aware-mouse-listener';\nexport * from './features/tools/edge-edit-tool';\n\nexport * from './features/undo-redo/model';\nexport * from './features/validation/validate';\nexport * from './lib/model';\nexport * from './base/auto-complete/auto-complete-actions';\nexport * from './base/auto-complete/auto-complete-widget';\nexport * from './base/auto-complete/validation-decorator';\nexport * from './base/actions/edit-validation-actions';\nexport * from './base/types';\nexport * from './utils/array-utils';\nexport * from './utils/marker';\nexport * from './utils/smodel-util';\nexport * from './utils/viewpoint-util';\nexport * from './model-source/websocket-diagram-server';\nexport * from './model-source/glsp-server-status';\nexport {\n    validationModule, saveModule, executeCommandModule, paletteModule, toolFeedbackModule, defaultGLSPModule, modelHintsModule, glspCommandPaletteModule, requestResponseModule, //\n    glspContextMenuModule, glspServerCopyPasteModule, copyPasteContextMenuModule, glspSelectModule, glspMouseToolModule, layoutCommandsModule, glspEditLabelValidationModule, //\n    glspHoverModule, toolsModule\n};\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { exportFeature, SGraph, SModelElement, SModelElementSchema, viewportFeature } from \"sprotty/lib\";\n\nimport { Containable, containerFeature } from \"../features/hints/model\";\nimport { Saveable, saveFeature } from \"../features/save/model\";\n\nexport class GLSPGraph extends SGraph implements Saveable, Containable {\n    static readonly DEFAULT_FEATURES = [viewportFeature, exportFeature, saveFeature, containerFeature];\n    dirty: boolean = false;\n    isContainableElement(input: string | SModelElement | SModelElementSchema): boolean {\n        return true;\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ServerStatusAction } from \"sprotty\";\n\nimport { Action } from \"../\";\n\nexport class GLSPServerStatusAction extends ServerStatusAction {\n    timeout: number = -1;\n}\n\nexport function isGLSPServerStatusAction(serverStatusAction: ServerStatusAction): serverStatusAction is GLSPServerStatusAction {\n    return (<GLSPServerStatusAction>serverStatusAction).timeout !== undefined;\n}\n\nexport class ServerMessageAction implements Action {\n    static KIND = 'serverMessage';\n\n    kind = ServerMessageAction.KIND;\n    severity: 'NONE' | 'INFO' | 'WARNING' | 'ERROR' | 'FATAL';\n    message: string;\n    details: string = '';\n    timeout: number = -1;\n}\n\nexport function isServerMessageAction(action: Action): action is ServerMessageAction {\n    return ServerMessageAction.KIND === action.kind && 'severity' in action && 'message' in action;\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { injectable } from \"inversify\";\nimport {\n    Action, ActionHandlerRegistry, ActionMessage,\n    ApplyLabelEditAction, CollapseExpandAction, CollapseExpandAllAction,\n    ComputedBoundsAction, DiagramServer, ExportSvgAction, ICommand, LayoutAction,\n    OpenAction, RequestBoundsCommand, RequestModelAction, RequestPopupModelAction,\n    ServerStatusAction, SwitchEditModeCommand\n} from \"sprotty\";\nimport * as rpc from \"vscode-ws-jsonrpc\";\nimport { NotificationType } from \"vscode-ws-jsonrpc\";\nimport { RequestContextActions } from \"../base/actions/context-actions\";\nimport { ExecuteServerCommandAction } from \"../features/execute/execute-command\";\nimport { RequestTypeHintsAction } from \"../features/hints/request-type-hints-action\";\nimport {\n    CreateEdgeOperation, ReconnectEdgeOperation,\n    ChangeRoutingPointsOperation, CreateNodeOperation, ChangeBoundsOperation,\n    DeleteElementOperation\n} from \"../base/operations/operation\";\nimport { SaveModelAction } from \"../features/save/save\";\nimport { GlspRedoAction, GlspUndoAction } from \"../features/undo-redo/model\";\nimport { RequestMarkersAction } from \"../features/validation/validate\";\nimport { ValidateLabelEditAction } from \"../features/edit-label-validation/edit-label-validator\";\nimport { RequestClipboardDataAction, PasteOperationAction, CutOperationAction } from \"../features/copy-paste/copy-paste-actions\";\nimport { RequestEditValidationAction } from \"../base/actions/edit-validation-actions\";\n\n@injectable()\nexport class GLSPWebsocketDiagramServer extends DiagramServer {\n    protected _sourceUri: string;\n    protected connection: rpc.MessageConnection;\n\n    listen(webSocket: WebSocket): void {\n        rpc.listen({\n            webSocket,\n            onConnection: (connection: rpc.MessageConnection) => {\n                connection.listen();\n                connection.onNotification(ActionMessageNotification.type, (message: ActionMessage) => this.messageReceived(message));\n                this.connection = connection;\n            }\n        });\n    }\n\n    protected sendMessage(message: ActionMessage): void {\n        if (this.connection) {\n            this.connection.sendNotification(ActionMessageNotification.type, message);\n        } else {\n            throw new Error('WebSocket is not connected');\n        }\n    }\n\n    initialize(registry: ActionHandlerRegistry): void {\n        registerDefaultGLSPServerActions(registry, this);\n        this.clientId = this.viewerOptions.baseDiv;\n    }\n\n    handle(action: Action): void | ICommand | Action {\n        if (action instanceof RequestModelAction && action.options !== undefined)\n            this._sourceUri = <string>action.options.sourceUri;\n        return super.handle(action);\n    }\n\n    public getSourceURI(): string {\n        return this._sourceUri;\n    }\n\n    protected handleComputedBounds(action: ComputedBoundsAction): boolean {\n        return true;\n    }\n}\n\nexport function registerDefaultGLSPServerActions(registry: ActionHandlerRegistry, diagramServer: DiagramServer) {\n    registry.register(SaveModelAction.KIND, diagramServer);\n    registry.register(GlspUndoAction.KIND, diagramServer);\n    registry.register(GlspRedoAction.KIND, diagramServer);\n    registry.register(CreateEdgeOperation.KIND, diagramServer);\n    registry.register(ReconnectEdgeOperation.KIND, diagramServer);\n    registry.register(ChangeRoutingPointsOperation.KIND, diagramServer);\n    registry.register(CreateNodeOperation.KIND, diagramServer);\n    registry.register(ChangeBoundsOperation.KIND, diagramServer);\n    registry.register(DeleteElementOperation.KIND, diagramServer);\n    registry.register(ExecuteServerCommandAction.KIND, diagramServer);\n    registry.register(RequestTypeHintsAction.KIND, diagramServer);\n    registry.register(ComputedBoundsAction.KIND, diagramServer);\n    registry.register(RequestBoundsCommand.KIND, diagramServer);\n    registry.register(RequestPopupModelAction.KIND, diagramServer);\n    registry.register(CollapseExpandAction.KIND, diagramServer);\n    registry.register(CollapseExpandAllAction.KIND, diagramServer);\n    registry.register(OpenAction.KIND, diagramServer);\n    registry.register(ServerStatusAction.KIND, diagramServer);\n    registry.register(RequestModelAction.KIND, diagramServer);\n    registry.register(ExportSvgAction.KIND, diagramServer);\n    registry.register(RequestContextActions.KIND, diagramServer);\n    registry.register(ValidateLabelEditAction.KIND, diagramServer);\n    registry.register(RequestMarkersAction.KIND, diagramServer);\n    registry.register(LayoutAction.KIND, diagramServer);\n    registry.register(ApplyLabelEditAction.KIND, diagramServer);\n    registry.register(RequestClipboardDataAction.KIND, diagramServer);\n    registry.register(PasteOperationAction.KIND, diagramServer);\n    registry.register(CutOperationAction.KIND, diagramServer);\n    registry.register(RequestEditValidationAction.KIND, diagramServer);\n\n    // Register an empty handler for SwitchEditMode, to avoid runtime exceptions.\n    // We don't want to support SwitchEditMode, but sprotty still sends some corresponding\n    // actions.\n    registry.register(SwitchEditModeCommand.KIND, { handle: action => undefined });\n}\n\nnamespace ActionMessageNotification {\n    export const type = new NotificationType<ActionMessage, void>('process');\n}\n\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport function remove<T>(array: T[], value: T): boolean {\n    const index = array.indexOf(value);\n    if (index >= 0) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n\nexport function distinctAdd<T>(array: T[], value: T): boolean {\n    if (!array.includes(value)) {\n        array.push(value);\n        return true;\n    }\n    return false;\n}\n\n\n","/********************************************************************************\n * Copyright (c) 2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { BoundsAware, Dimension, ElementAndBounds, ElementMove, ModelLayoutOptions, Point, SModelElement } from \"sprotty\";\n\nimport { IMovementRestrictor } from \"../features/change-bounds/movement-restrictor\";\n\nexport function minWidth(element: SModelElement & BoundsAware): number {\n    const layoutOptions = getLayoutOptions(element);\n    if (layoutOptions !== undefined && typeof layoutOptions.minWidth === 'number') {\n        return layoutOptions.minWidth;\n    }\n    return 1;\n}\n\nexport function minHeight(element: SModelElement & BoundsAware): number {\n    const layoutOptions = getLayoutOptions(element);\n    if (layoutOptions !== undefined && typeof layoutOptions.minHeight === 'number') {\n        return layoutOptions.minHeight;\n    }\n    return 1;\n}\n\nexport function getLayoutOptions(element: SModelElement): ModelLayoutOptions | undefined {\n    const layoutOptions = (element as any).layoutOptions;\n    if (layoutOptions !== undefined) {\n        return layoutOptions as ModelLayoutOptions;\n    }\n    return undefined;\n}\n\nexport function isValidSize(element: SModelElement & BoundsAware, size: Dimension) {\n    return size.width >= minWidth(element) && size.height >= minHeight(element);\n}\n\nexport function isValidMove(element: SModelElement & BoundsAware, newPosition: Point, movementRestrictor?: IMovementRestrictor) {\n    if (movementRestrictor) {\n        return movementRestrictor.validate(newPosition, element);\n    }\n    return true;\n}\n\nexport function toValidElementMove(element: SModelElement & BoundsAware, move: WriteableElementMove, movementRestrictor?: IMovementRestrictor) {\n    if (!isValidMove(element, move.toPosition, movementRestrictor)) {\n        return;\n    }\n    return move;\n}\n\nexport function toValidElementAndBounds(element: SModelElement & BoundsAware, bounds: WriteableElementAndBounds, movementRestrictor?: IMovementRestrictor) {\n    if (!isValidMove(element, bounds.newPosition, movementRestrictor)) {\n        return;\n    }\n    const elementMinWidth = minWidth(element);\n    if (bounds.newSize.width < elementMinWidth) {\n        bounds.newSize.width = elementMinWidth;\n    }\n    const elementMinHeight = minHeight(element);\n    if (bounds.newSize.height < elementMinHeight) {\n        bounds.newSize.height = elementMinHeight;\n    }\n    return bounds;\n}\n\nexport interface WriteablePoint extends Point {\n    x: number;\n    y: number;\n}\n\nexport interface WriteableElementMove extends ElementMove {\n    fromPosition?: WriteablePoint;\n    toPosition: WriteablePoint;\n}\n\nexport interface WriteableDimension extends Dimension {\n    width: number\n    height: number\n}\n\nexport interface WriteableElementAndBounds extends ElementAndBounds {\n    newPosition: WriteablePoint;\n    newSize: WriteableDimension\n}\n","/********************************************************************************\r\n * Copyright (c) 2019 EclipseSource and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nexport namespace MarkerKind {\r\n    export const INFO = \"info\";\r\n    export const WARNING = \"warning\";\r\n    export const ERROR = \"error\";\r\n}\r\n\r\nexport interface Marker {\r\n\r\n    readonly label: string;\r\n\r\n    readonly description: string;\r\n\r\n    readonly elementId: string;\r\n\r\n    readonly kind: string;\r\n}\r\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport {\n    BoundsAware,\n    isBoundsAware,\n    isMoveable,\n    isSelected,\n    Selectable,\n    SModelElement,\n    SRoutableElement,\n    SRoutingHandle\n} from \"sprotty\";\n\nimport { ElementAndRoutingPoints } from \"../base/operations/operation\";\n\n\nexport function getIndex(element: SModelElement) {\n    return element.root.index;\n}\n\nexport function forEachElement<T>(element: SModelElement, predicate: (element: SModelElement) => element is SModelElement & T, runnable: (element: SModelElement & T) => void) {\n    getIndex(element).all()\n        .filter(predicate)\n        .forEach(runnable);\n}\n\nexport function getMatchingElements<T>(element: SModelElement, predicate: (element: SModelElement) => element is SModelElement & T): (SModelElement & T)[] {\n    const matching: (SModelElement & T)[] = [];\n    forEachElement(element, predicate, item => matching.push(item));\n    return matching;\n}\n\nexport function hasSelectedElements(element: SModelElement) {\n    return getSelectedElementCount(element) > 0;\n}\n\nexport function getSelectedElementCount(element: SModelElement): number {\n    let selected = 0;\n    getIndex(element).all()\n        .filter(isSelected)\n        .forEach(e => selected = selected + 1);\n    return selected;\n}\n\nexport function isNotUndefined<T>(element: T | undefined): element is T {\n    return element !== undefined;\n}\n\nexport function addCssClasses(root: SModelElement, cssClasses: string[]) {\n    if (root.cssClasses === undefined) {\n        root.cssClasses = [];\n    }\n    for (const cssClass of cssClasses) {\n        if (root.cssClasses.indexOf(cssClass) < 0) {\n            root.cssClasses.push(cssClass);\n        }\n    }\n}\n\nexport function removeCssClasses(root: SModelElement, cssClasses: string[]) {\n    if (root.cssClasses === undefined || root.cssClasses.length === 0) {\n        return;\n    }\n    for (const cssClass of cssClasses) {\n        const index = root.cssClasses.indexOf(cssClass);\n        if (index !== -1) {\n            root.cssClasses.splice(root.cssClasses.indexOf(cssClass), 1);\n        }\n    }\n}\n\nexport function isNonRoutableSelectedMovableBoundsAware(element: SModelElement): element is SelectableBoundsAware {\n    return isNonRoutableSelectedBoundsAware(element) && isMoveable(element);\n}\n\nexport function isNonRoutableSelectedBoundsAware(element: SModelElement): element is SelectableBoundsAware {\n    return isBoundsAware(element) && isSelected(element) && !isRoutable(element);\n}\n\nexport function isRoutable<T extends SModelElement>(element: T): element is T & SRoutableElement {\n    return element instanceof SRoutableElement && (element as any).routingPoints !== undefined;\n}\n\nexport function isRoutingHandle(element: SModelElement | undefined): element is SRoutingHandle {\n    return element !== undefined && element instanceof SRoutingHandle;\n}\n\nexport type SelectableBoundsAware = SModelElement & BoundsAware & Selectable;\n\nexport type BoundsAwareModelElement = SModelElement & BoundsAware;\n\nexport function toElementAndBounds(element: SModelElement & BoundsAware) {\n    return {\n        elementId: element.id,\n        newPosition: {\n            x: element.bounds.x,\n            y: element.bounds.y\n        },\n        newSize: {\n            width: element.bounds.width,\n            height: element.bounds.height\n        }\n    };\n}\n\nexport function toElementAndRoutingPoints(element: SRoutableElement): ElementAndRoutingPoints {\n    return {\n        elementId: element.id,\n        newRoutingPoints: element.routingPoints\n    };\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport {\n    Bounds,\n    BoundsAware,\n    Dimension,\n    findParentByFeature,\n    isAlignable,\n    isViewport,\n    ORIGIN_POINT,\n    Point,\n    SModelElement,\n    translateBounds,\n    Viewport\n} from \"sprotty\";\n\n/**\n * Return the position corresponding to this mouse event (Browser coordinates)\n * in the diagram coordinates system (i.e. relative to the Diagram's 0;0 point)\n *\n * This functions takes into account the following transformations:\n * - Location of the Diagram Canvas inside of the browser's page\n * - Current viewport Scroll and Zoom\n *\n * @param target\n *  An element from the diagram\n * @param mouseEvent\n *  A mouseEvent\n */\nexport function getAbsolutePosition(target: SModelElement, mouseEvent: MouseEvent): Point {\n    let xPos = mouseEvent.pageX, yPos = mouseEvent.pageY;\n    const canvasBounds = target.root.canvasBounds;\n    xPos -= canvasBounds.x;\n    yPos -= canvasBounds.y;\n\n    const viewport: Viewport | undefined = findParentByFeature(target, isViewport);\n    const zoom = viewport ? viewport.zoom : 1;\n    if (viewport) {\n        const scroll: Point = { x: viewport.scroll.x, y: viewport.scroll.y };\n        xPos += scroll.x * zoom;\n        yPos += scroll.y * zoom;\n\n        xPos /= zoom;\n        yPos /= zoom;\n    }\n    xPos;\n\n    return {\n        x: xPos,\n        y: yPos\n    };\n}\n\n/**\n * Translates the bounds of the diagram element (local coordinates) into the diagram coordinates system\n * (i.e. relative to the Diagram's 0;0 point)\n *\n * @param target  A bounds-aware element from the diagram\n */\nexport function toAbsoluteBounds(element: SModelElement & BoundsAware): Bounds {\n    const location = isAlignable(element) ? element.alignment : ORIGIN_POINT;\n    const x = location.x;\n    const y = location.y;\n    const width = element.bounds.width;\n    const height = element.bounds.height;\n    return translateBounds({ x, y, width, height }, element, element.root);\n}\n\n/**\n * Translates the position of the diagram element (local coordinates) into the diagram coordinates system\n * (i.e. relative to the Diagram's 0;0 point)\n *\n * @param target  A bounds-aware element from the diagram\n */\nexport function toAbsolutePosition(target: SModelElement & BoundsAware): Point {\n    return toAbsoluteBounds(target);\n}\n\n/**\n * Translates the size of the diagram element (local coordinates) into the diagram coordinates system\n * (i.e. relative to the Diagram's 0;0 point)\n *\n * @param target  A bounds-aware element from the diagram\n */\nexport function toAbsoluteSize(target: SModelElement & BoundsAware): Dimension {\n    return toAbsoluteBounds(target);\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nexport default bytesToUuid;","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes == 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Array(msg.length);\n\n    for (var i = 0; i < msg.length; i++) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var i;\n  var x;\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n  var hex;\n\n  for (i = 0; i < length32; i += 8) {\n    x = input[i >> 5] >>> i % 32 & 0xff;\n    hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[(len + 64 >>> 9 << 4) + 14] = len;\n  var i;\n  var olda;\n  var oldb;\n  var oldc;\n  var oldd;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (i = 0; i < x.length; i += 16) {\n    olda = a;\n    oldb = b;\n    oldc = c;\n    oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  var i;\n  var output = [];\n  output[(input.length >> 2) - 1] = undefined;\n\n  for (i = 0; i < output.length; i += 1) {\n    output[i] = 0;\n  }\n\n  var length8 = input.length * 8;\n\n  for (i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes == 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Array(msg.length);\n\n    for (var i = 0; i < msg.length; i++) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var i = 0; i < N; i++) {\n    M[i] = new Array(16);\n\n    for (var j = 0; j < 16; j++) {\n      M[i][j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var i = 0; i < N; i++) {\n    var W = new Array(80);\n\n    for (var t = 0; t < 16; t++) {\n      W[t] = M[i][t];\n    }\n\n    for (var t = 16; t < 80; t++) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var t = 0; t < 80; t++) {\n      var s = Math.floor(t / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nexport default v1;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import bytesToUuid from './bytesToUuid.js';\n\nfunction uuidToBytes(uuid) {\n  // Note: We assume we're being passed a valid uuid string\n  var bytes = [];\n  uuid.replace(/[a-fA-F0-9]{2}/g, function (hex) {\n    bytes.push(parseInt(hex, 16));\n  });\n  return bytes;\n}\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = new Array(str.length);\n\n  for (var i = 0; i < str.length; i++) {\n    bytes[i] = str.charCodeAt(i);\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  var generateUUID = function generateUUID(value, namespace, buf, offset) {\n    var off = buf && offset || 0;\n    if (typeof value == 'string') value = stringToBytes(value);\n    if (typeof namespace == 'string') namespace = uuidToBytes(namespace);\n    if (!Array.isArray(value)) throw TypeError('value must be an array of bytes');\n    if (!Array.isArray(namespace) || namespace.length !== 16) throw TypeError('namespace must be uuid string or an Array of 16 byte values'); // Per 4.3\n\n    var bytes = hashfunc(namespace.concat(value));\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      for (var idx = 0; idx < 16; ++idx) {\n        buf[off + idx] = bytes[idx];\n      }\n    }\n\n    return buf || bytesToUuid(bytes);\n  }; // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name;\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nexport default v4;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","\nvar content = require(\"!!../../../css-loader/index.js!./diagram.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../css-loader/index.js!./diagram.css\", function() {\n\t\tvar newContent = require(\"!!../../../css-loader/index.js!./diagram.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../css-loader/index.js!./tool-palette.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../css-loader/index.js!./tool-palette.css\", function() {\n\t\tvar newContent = require(\"!!../../../css-loader/index.js!./tool-palette.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/********************************************************************************\n * Copyright (c) 2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { Message, MessageOptions } from \"@theia/core/lib/common\";\nimport { NotificationManager } from \"@theia/messages/lib/browser/notifications-manager\";\nimport { Md5 } from \"ts-md5\";\n\nexport class GLSPNotificationManager extends NotificationManager {\n    public getMessageId(message: Message): string {\n        const options = message.options;\n        if (isGLSPMessageOptions(options)) {\n            return String(Md5.hashStr(`[${message.type} @ ${options.uri}] ${message.text} : ${(message.actions || []).join(' | ')};`));\n        }\n        return super.getMessageId(message);\n    }\n}\n\nexport interface GLSPMessageOptions extends MessageOptions {\n    uri: string;\n}\n\nfunction isGLSPMessageOptions(options?: MessageOptions): options is GLSPMessageOptions {\n    return options !== undefined && 'uri' in options;\n}\n","/********************************************************************************\n * Copyright (c) 2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { GLSP_TYPES, IActionDispatcher, TYPES } from \"@eclipse-glsp/client\";\nimport { Container } from \"inversify\";\nimport { TheiaContextMenuService } from \"sprotty-theia/lib/sprotty/theia-sprotty-context-menu-service\";\n\nexport const TheiaContextMenuServiceFactory = Symbol('TheiaContextMenuServiceFactory');\n\nexport function connectTheiaDiagramService(container: Container, contextMenuServiceFactory: () => TheiaContextMenuService) {\n    const contextMenuService = contextMenuServiceFactory();\n    container.bind(GLSP_TYPES.IContextMenuService).toConstantValue(contextMenuService);\n    if (contextMenuService instanceof TheiaContextMenuService) {\n        contextMenuService.connect(container.get<IActionDispatcher>(TYPES.IActionDispatcher));\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport {\n    ActionMessage,\n    ExportSvgAction,\n    isGLSPServerStatusAction,\n    remove,\n    ServerMessageAction,\n    ServerStatusAction\n} from \"@eclipse-glsp/client\";\nimport { MessageService } from \"@theia/core\";\nimport { ConfirmDialog, WidgetManager } from \"@theia/core/lib/browser\";\nimport { Message, MessageType } from \"@theia/core/lib/common\";\nimport { EditorManager } from \"@theia/editor/lib/browser\";\nimport { DiagramManager, DiagramWidget, TheiaDiagramServer, TheiaFileSaver, TheiaSprottyConnector } from \"sprotty-theia\";\n\nimport { GLSPClient } from \"../language/glsp-client-services\";\nimport { GLSPDiagramClient } from \"./glsp-diagram-client\";\nimport { GLSPMessageOptions, GLSPNotificationManager } from \"./glsp-notification-manager\";\n\nexport interface GLSPTheiaSprottyConnectorServices {\n    readonly diagramClient: GLSPDiagramClient,\n    readonly fileSaver: TheiaFileSaver,\n    readonly editorManager: EditorManager,\n    readonly widgetManager: WidgetManager,\n    readonly diagramManager: DiagramManager,\n    readonly messageService: MessageService,\n    readonly notificationManager: GLSPNotificationManager\n}\n\nconst SHOW_DETAILS_LABEL = 'Show details';\n\nexport class GLSPTheiaSprottyConnector implements TheiaSprottyConnector, GLSPTheiaSprottyConnectorServices {\n    private servers: Map<String, TheiaDiagramServer> = new Map;\n    private widgetMessages: Map<string, string[]> = new Map;\n    private widgetStatusTimeouts: Map<string, number> = new Map;\n\n    readonly diagramClient: GLSPDiagramClient;\n    readonly fileSaver: TheiaFileSaver;\n    readonly editorManager: EditorManager;\n    readonly widgetManager: WidgetManager;\n    readonly diagramManager: DiagramManager;\n    readonly messageService: MessageService;\n    readonly notificationManager: GLSPNotificationManager;\n\n    constructor(services: GLSPTheiaSprottyConnectorServices) {\n        Object.assign(this, services);\n        this.diagramClient.connect(this);\n    }\n\n    connect(diagramServer: TheiaDiagramServer) {\n        this.servers.set(diagramServer.clientId, diagramServer);\n        diagramServer.connect(this);\n    }\n\n    disconnect(diagramServer: TheiaDiagramServer) {\n        this.servers.delete(diagramServer.clientId);\n        diagramServer.disconnect();\n        this.diagramClient.didClose(diagramServer.clientId);\n    }\n\n    save(uri: string, action: ExportSvgAction): void {\n        this.fileSaver.save(uri, action);\n    }\n\n    // Status\n\n    showStatus(widgetId: string, action: ServerStatusAction): void {\n        if (this.isClear(action.severity)) {\n            this.clearWidgetStatus(widgetId);\n        } else {\n            this.showWidgetStatus(widgetId, action);\n        }\n    }\n\n    clearWidgetStatus(widgetId: string) {\n        // any status but FATAL, ERROR, WARNING or INFO will lead to a clear of the status\n        this.showWidgetStatus(widgetId, { kind: ServerStatusAction.KIND, message: '', severity: 'CLEAR' });\n    }\n\n    showWidgetStatus(widgetId: string, status: ServerStatusAction): void {\n        // remove any pending timeout\n        const pendingTimeout = this.widgetStatusTimeouts.get(widgetId);\n        if (pendingTimeout) {\n            window.clearTimeout(pendingTimeout);\n            this.widgetStatusTimeouts.delete(widgetId);\n        }\n\n        // update status\n        const widget = this.widgetManager.getWidgets(this.diagramManager.id).find(w => w.id === widgetId);\n        if (widget instanceof DiagramWidget) {\n            widget.setStatus(status);\n        }\n\n        // check for any timeouts\n        const statusTimeout = isGLSPServerStatusAction(status) ? status.timeout : -1;\n        if (statusTimeout > 0) {\n            const newTimeout = window.setTimeout(() => this.clearWidgetStatus(widgetId), statusTimeout);\n            this.widgetStatusTimeouts.set(widgetId, newTimeout);\n        }\n    }\n\n    // Message\n\n    showMessage(widgetId: string, action: ServerMessageAction): void {\n        if (this.isClear(action.severity)) {\n            this.clearServerMessages(widgetId);\n        } else {\n            this.showServerMessage(widgetId, action);\n        }\n    }\n\n    clearServerMessages(widgetId: string) {\n        const widgetMessages = Array.from(this.widgetMessages.get(widgetId) || []);\n        widgetMessages.forEach(messageId => this.clearServerMessage(widgetId, messageId));\n    }\n\n    clearServerMessage(widgetId: string, messageId: string) {\n        remove(this.widgetMessages.get(widgetId) || [], messageId);\n        this.notificationManager.clear(messageId);\n    }\n\n    showServerMessage(widgetId: string, action: ServerMessageAction) {\n        const widget = this.widgetManager.getWidgets(this.diagramManager.id).find(w => w.id === widgetId);\n        const uri = widget instanceof DiagramWidget ? widget.uri.toString() : '';\n\n        const type = this.toMessageType(action.severity);\n        const text = action.message;\n        const details = action.details;\n        const timeout = action.timeout;\n        const options = { timeout, uri } as GLSPMessageOptions;\n        const actions = details ? [SHOW_DETAILS_LABEL] : [];\n        const message: Message = { type, text, actions, options };\n        const messageId = this.createMessageId(message);\n\n        const clearMessageOnClose: (value?: string) => void = result => this.clearServerMessage(widgetId, messageId);\n\n        const onClose: (value?: string) => void = details\n            ? result => this.showDetailsOrClearMessage(result, text, details, clearMessageOnClose)\n            : clearMessageOnClose;\n        switch (message.type) {\n            case MessageType.Error:\n                this.addServerMessage(widgetId, messageId);\n                this.messageService.error(message.text, message.options, ...message.actions).then(onClose);\n                break;\n            case MessageType.Warning:\n                this.addServerMessage(widgetId, messageId);\n                this.messageService.warn(message.text, message.options, ...message.actions).then(onClose);\n                break;\n            case MessageType.Info:\n                this.addServerMessage(widgetId, messageId);\n                this.messageService.info(message.text, message.options, ...message.actions).then(onClose);\n                break;\n        }\n    }\n\n    addServerMessage(widgetId: string, messageId: string) {\n        const widgetMessages = this.widgetMessages.get(widgetId) || [];\n        widgetMessages.push(messageId);\n        this.widgetMessages.set(widgetId, widgetMessages);\n    }\n\n    protected showDetailsOrClearMessage(result: string | undefined, text: string, details: string, onClose: (value?: string) => void) {\n        if (result === SHOW_DETAILS_LABEL) {\n            showDialog(text, details).then(() => onClose());\n        } else {\n            onClose();\n        }\n    }\n\n    toMessageType(severity: string) {\n        switch (severity) {\n            case 'ERROR':\n                return MessageType.Error;\n            case 'WARNING':\n                return MessageType.Warning;\n            case 'INFO':\n                return MessageType.Info;\n        }\n        return MessageType.Log;\n    }\n\n    isClear(severity: string) {\n        return severity === 'NONE';\n    }\n\n    createMessageId(message: Message) {\n        return this.notificationManager.getMessageId(message);\n    }\n\n    sendMessage(message: ActionMessage) {\n        this.diagramClient.sendThroughLsp(message);\n    }\n\n    getGLSPClient(): Promise<GLSPClient> {\n        return this.diagramClient.glspClient;\n    }\n\n    onMessageReceived(message: ActionMessage): void {\n        const diagramServer = this.servers.get(message.clientId);\n        if (diagramServer) {\n            diagramServer.messageReceived(message);\n        }\n    }\n}\n\nexport function showDialog(title: string, msg: string) {\n    return new ConfirmDialog({ title, msg }).open();\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport \"../../../css/diagram.css\";\nimport \"../../../css/tool-palette.css\";\n\nimport { CommandRegistry, DisposableCollection, MaybePromise, MessageService } from \"@theia/core\";\nimport { FrontendApplication, WebSocketConnectionProvider, WebSocketOptions } from \"@theia/core/lib/browser\";\nimport { Deferred } from \"@theia/core/lib/common/promise-util\";\nimport { EditorManager } from \"@theia/editor/lib/browser\";\nimport { Commands, Disposable, InitializeParams, State } from \"@theia/languages/lib/browser\";\nimport { LanguageContribution } from \"@theia/languages/lib/common\";\nimport { WorkspaceService } from \"@theia/workspace/lib/browser\";\nimport { inject, injectable, multiInject } from \"inversify\";\nimport { DiagramManagerProvider } from \"sprotty-theia\";\nimport { MessageConnection, ResponseError } from \"vscode-jsonrpc\";\n\nimport { InitializeParameters } from \"../../common\";\nimport { GLSPClientFactory } from \"./glsp-client\";\nimport { GLSPClient, GLSPClientOptions } from \"./glsp-client-services\";\n\nexport const GLSPClientContribution = Symbol.for('GLSPClientContribution');\n\nexport interface GLSPClientContribution extends LanguageContribution {\n    readonly running: boolean;\n    readonly glspClient: Promise<GLSPClient>;\n    waitForActivation(app: FrontendApplication): Promise<void>;\n    activate(app: FrontendApplication): Disposable;\n    deactivate(): void;\n    restart(): void;\n}\n\n@injectable()\nexport abstract class BaseGLSPClientContribution implements GLSPClientContribution, Commands {\n\n    abstract readonly id: string;\n    abstract readonly name: string;\n    abstract readonly fileExtensions: string[];\n\n    protected _glspClient: GLSPClient | undefined;\n\n    protected resolveReady: (glspClient: GLSPClient) => void;\n    protected ready: Promise<GLSPClient>;\n\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(MessageService) protected readonly messageService: MessageService;\n    @inject(WebSocketConnectionProvider) protected readonly connectionProvider: WebSocketConnectionProvider;\n    @inject(GLSPClientFactory) protected readonly languageClientFactory: GLSPClientFactory;\n    @inject(CommandRegistry) protected readonly registry: CommandRegistry;\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n    @multiInject(DiagramManagerProvider) protected diagramManagerProviders: DiagramManagerProvider[];\n\n    constructor() {\n        this.waitForReady();\n    }\n\n    get glspClient(): Promise<GLSPClient> {\n        return this._glspClient ? Promise.resolve(this._glspClient) : this.ready;\n    }\n\n    waitForActivation(app: FrontendApplication): Promise<any> {\n        const activationPromises: Promise<any>[] = [];\n        const workspaceContains = this.workspaceContains;\n        if (workspaceContains.length !== 0) {\n            activationPromises.push(this.waitForItemInWorkspace());\n        }\n        const fileExtensions = this.fileExtensions;\n        if (fileExtensions) {\n            activationPromises.push(this.waitForOpenDocument(fileExtensions));\n        }\n        activationPromises.push(this.waitForOpenDiagrams());\n        if (activationPromises.length !== 0) {\n            return Promise.all([\n                this.ready,\n                Promise.race(activationPromises.map(p => new Promise(async resolve => {\n                    try {\n                        await p;\n                        resolve();\n                    } catch (e) {\n                        console.error(e);\n                    }\n                })))\n            ]);\n        }\n        return this.ready;\n    }\n\n    protected waitForOpenDiagrams(): Promise<any> {\n        return Promise.race(this.diagramManagerProviders.map(diagramManagerProvider => {\n            return diagramManagerProvider().then(diagramManager => {\n                return new Promise<void>((resolve) => {\n                    const disposable = diagramManager.onCreated((widget) => {\n                        disposable.dispose();\n                        resolve();\n                    });\n                });\n            });\n        }));\n    }\n\n    protected readonly toDeactivate = new DisposableCollection();\n\n    activate(): Disposable {\n        if (this.toDeactivate.disposed) {\n            this.doActivate(this.toDeactivate)\n                .then(() => this.initialize());\n        }\n        return this.toDeactivate;\n    }\n\n    deactivate(): void {\n        this.toDeactivate.dispose();\n    }\n\n    protected async createInitializeParameters(): Promise<InitializeParameters> {\n        const options = await this.createInitializeOptions();\n        return { options };\n    }\n\n    protected createInitializeOptions(): MaybePromise<any> {\n        return undefined;\n    }\n\n    async initialize(): Promise<void> {\n        const parameters = await this.createInitializeParameters();\n        this.glspClient.then(client => client.initialize(parameters)\n            .then(success => {\n                if (!success) {\n                    this.messageService.error(`Failed to initialize ${this.name} glsp server with ${JSON.stringify(parameters)}`, 'Retry')\n                        .then(retry => {\n                            if (retry) {\n                                this.initialize();\n                            }\n                        });\n                }\n            })\n        );\n    }\n\n    protected async doActivate(toDeactivate: DisposableCollection): Promise<void> {\n        const options: WebSocketOptions = {};\n        toDeactivate.push(Disposable.create(() => options.reconnecting = false));\n        this.connectionProvider.listen({\n            path: LanguageContribution.getPath(this),\n            onConnection: messageConnection => {\n                if (toDeactivate.disposed) {\n                    messageConnection.dispose();\n                    return;\n                }\n                const languageClient = this.createLanguageClient(messageConnection);\n                this.onWillStart(languageClient);\n                toDeactivate.pushAll([\n                    messageConnection,\n                    this.toRestart.push(Disposable.create(async () => {\n                        await languageClient.onReady();\n                        languageClient.stop();\n                    })),\n                    languageClient.start()\n                ]);\n            }\n        }, options);\n    }\n\n    protected state: State | undefined;\n\n    get running(): boolean {\n        return !this.toDeactivate.disposed && this.state === State.Running;\n    }\n\n    restart(): void {\n        this.deactivate();\n        this.activate();\n    }\n\n    protected onWillStart(languageClient: GLSPClient): void {\n        languageClient.onReady().then(() => this.onReady(languageClient));\n    }\n\n    protected onReady(languageClient: GLSPClient): void {\n        this._glspClient = languageClient;\n        this.resolveReady(this._glspClient);\n        this.waitForReady();\n    }\n\n    protected readonly toRestart = new DisposableCollection();\n\n    protected waitForReady(): void {\n        this.ready = new Promise<GLSPClient>(resolve =>\n            this.resolveReady = resolve\n        );\n    }\n\n    protected createLanguageClient(connection: MessageConnection | (() => MaybePromise<MessageConnection>)): GLSPClient {\n        const clientOptions = this.createOptions();\n        return this.languageClientFactory.get(this, clientOptions, connection);\n    }\n\n    protected createOptions(): GLSPClientOptions {\n        return {\n            initializationFailedHandler: err => this.handleInitializationFailed(err),\n        };\n    }\n\n    protected handleInitializationFailed(err: ResponseError<InitializeParams> | Error | any): boolean {\n        this.deactivate();\n        const detail = err instanceof Error ? `: ${err.message}` : '.';\n        this.messageService.error(`Failed to start ${this.name} glsp server${detail}`, 'Retry').then(result => {\n            if (result) {\n                this.activate();\n            }\n        });\n        return false;\n    }\n\n    protected deferredConnection = new Deferred<MessageConnection>();\n\n    protected get workspaceContains(): string[] {\n        return [];\n    }\n\n    protected async waitForOpenDocument(fileExtensions: string[]): Promise<any> {\n        const currentEditor = this.editorManager.currentEditor;\n        if (currentEditor) {\n            const uri = currentEditor.editor.uri.toString();\n            for (const extension of fileExtensions) {\n                if (uri.endsWith(extension)) {\n                    return Promise.resolve();\n                }\n            }\n        }\n    }\n\n    protected async waitForItemInWorkspace(): Promise<any> {\n        const doesContain = await this.workspaceService.containsSome(this.workspaceContains);\n        if (!doesContain) {\n            return new Promise(resolve => { });\n        }\n        return doesContain;\n    }\n\n    protected stop = Promise.resolve();\n\n    registerCommand(id: string, callback: (...args: any[]) => any, thisArg?: any): Disposable {\n        const execute = callback.bind(thisArg);\n        return this.registry.registerCommand({ id }, { execute });\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ContributionProvider } from \"@theia/core\";\nimport { inject, injectable, named } from \"inversify\";\n\nimport { GLSPClientContribution } from \"./glsp-client-contribution\";\nimport { GLSPClient } from \"./glsp-client-services\";\n\nexport const GLSPClientProvider = Symbol.for('GLSPClientProvider');\n\nexport interface GLSPClientProvider {\n    getLanguageClient(languageId: string): Promise<GLSPClient | undefined>\n}\n\n@injectable()\nexport class GLSPClientProviderImpl implements GLSPClientProvider {\n    @inject(ContributionProvider) @named(GLSPClientContribution)\n    private readonly contributions: ContributionProvider<GLSPClientContribution>;\n\n    async getLanguageClient(languageId: string): Promise<GLSPClient | undefined> {\n        const contribution = this.getLanguageContribution(languageId);\n        if (contribution) {\n            return contribution.glspClient;\n        }\n        return undefined;\n    }\n\n    protected getLanguageContribution(languageId: string): GLSPClientContribution | undefined {\n        const contributions = this.contributions.getContributions();\n        if (contributions) {\n            for (const contribution of contributions) {\n                if (contribution.id === languageId) {\n                    return contribution;\n                }\n            }\n        }\n        return undefined;\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport {\n    Commands,\n    ConnectionCloseHandler,\n    ConnectionErrorHandler,\n    ErrorHandler,\n    InitializationFailedHandler,\n    OutputChannel\n} from \"@theia/languages/lib/browser\";\nimport { Disposable, Message, MessageConnection, NotificationHandler, NotificationType } from \"vscode-jsonrpc\";\n\nimport { ExitNotification, InitializeParameters, InitializeRequest, ShutdownRequest } from \"../../common\";\n\n\nexport const GLSPClient = Symbol.for('GLSPClient');\n\nexport interface GLSPClient {\n    onReady(): Promise<void>\n    start(): Disposable;\n    initialize(params: InitializeParameters): Thenable<Boolean>;\n    stop(): Thenable<void> | undefined\n    onNotification<P, RO>(type: NotificationType<P, RO>, handler: NotificationHandler<P>): void;\n    sendNotification<P, RO>(type: NotificationType<P, RO>, params?: P): void;\n\n}\nexport namespace GLSPClient {\n    export interface Options {\n        name: string,\n        id: string,\n        clientOptions: GLSPClientOptions,\n        connectionProvider: ConnectionProvider\n    }\n}\n\nexport interface GLSPClientOptions {\n    commands?: Commands\n    initializationFailedHandler?: InitializationFailedHandler;\n    errorHandler?: ErrorHandler;\n}\n\nexport const Connection = Symbol.for('Connection');\n\nexport interface Connection {\n    listen(): void\n    onNotification<P, RO>(type: NotificationType<P, RO>, handler: NotificationHandler<P>): void;\n    sendNotification<P, RO>(type: NotificationType<P, RO>, params?: P): void;\n    initialize(params: InitializeParameters): Thenable<Boolean>;\n    shutdown(): Thenable<void>;\n    exit(): void;\n    dispose(): void;\n}\n\nexport const ConnectionProvider = Symbol.for(\"ConnectionProvider\");\n\nexport interface ConnectionProvider {\n    get(errorHandler: ConnectionErrorHandler, closeHandler: ConnectionCloseHandler, outputChannel: OutputChannel | undefined): Thenable<Connection>;\n}\n\nexport function createConnection(connection: MessageConnection, errorHandler: ConnectionErrorHandler, closeHandler: ConnectionCloseHandler) {\n    connection.onError((data: [Error, Message, number]) => { errorHandler(data[0], data[1], data[2]); });\n    connection.onClose(closeHandler);\n    connection.onNotification;\n    const result: Connection = {\n        listen: () => connection.listen(),\n        sendNotification: <P, RO>(type: NotificationType<P, RO>, params?: P): void => connection.sendNotification(type, params),\n        onNotification: <P, RO>(type: NotificationType<P, RO>, handler: NotificationHandler<P>): void => connection.onNotification(type, handler),\n        initialize: (params: InitializeParameters) => connection.sendRequest(InitializeRequest.type, params),\n        shutdown: () => connection.sendRequest(ShutdownRequest.type, undefined),\n        exit: () => connection.sendNotification(ExitNotification.type),\n        dispose: () => connection.dispose()\n    };\n    return result;\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { MaybePromise } from \"@theia/core\";\nimport { WebSocketConnectionProvider } from \"@theia/core/lib/browser\";\nimport { Disposable } from \"@theia/core/lib/common/disposable\";\nimport { CloseAction, ErrorAction, Message, NotificationHandler } from \"@theia/languages/lib/browser\";\nimport { LanguageContribution } from \"@theia/languages/lib/common\";\nimport { inject, injectable } from \"inversify\";\nimport { MessageConnection, NotificationType } from \"vscode-jsonrpc\";\n\nimport { InitializeParameters } from \"../../common\";\nimport { Connection, ConnectionProvider, createConnection, GLSPClient, GLSPClientOptions } from \"./glsp-client-services\";\n\nenum ClientState {\n    Initial,\n    Starting,\n    StartFailed,\n    Running,\n    Stopping,\n    Stopped\n}\nexport class BaseGLSPClient implements GLSPClient {\n    protected id: string;\n    protected name: string;\n    protected readonly connectionProvider: ConnectionProvider;\n    protected connectionPromise: Thenable<Connection> | undefined;\n    protected resolvedConnection: Connection | undefined;\n    protected state: ClientState;\n\n    protected clientOptions: GLSPClientOptions;\n    protected onStop: Thenable<void> | undefined;\n    protected _onReady: Promise<void>;\n\n    constructor({ id, name, clientOptions, connectionProvider }: GLSPClient.Options) {\n        this.connectionProvider = connectionProvider;\n        this.id = id;\n        this.name = name;\n        this.clientOptions = clientOptions;\n        this.onStop = undefined;\n        this._onReady = Promise.resolve();\n        this.state = ClientState.Initial;\n    }\n\n    start(): Disposable {\n        this.state = ClientState.Starting;\n        this.resolveConnection().then((connection) => {\n            connection.listen();\n            this.resolvedConnection = connection;\n            this.state = ClientState.Running;\n        }).then(undefined, (error) => {\n            this.state = ClientState.StartFailed;\n        });\n        return {\n            dispose: () => this.stop()\n        };\n\n    }\n\n    initialize(params: InitializeParameters): Thenable<Boolean> {\n        if (this.connectionPromise && this.resolvedConnection) {\n            return this.resolvedConnection.initialize(params);\n        }\n        return Promise.resolve(false);\n    }\n\n    public stop(): Thenable<void> | undefined {\n        if (!this.connectionPromise) {\n            this.state = ClientState.Stopped;\n            return Promise.resolve();\n        }\n        if (this.state === ClientState.Stopping && this.onStop) {\n            return this.onStop;\n        }\n        this.state = ClientState.Stopping;\n        return this.onStop = this.resolveConnection().then(connection => {\n            return connection.shutdown().then(() => {\n                connection.exit();\n                connection.dispose();\n                this.state = ClientState.Stopped;\n                this.onStop = undefined;\n                this.connectionPromise = undefined;\n                this.resolvedConnection = undefined;\n            });\n        });\n\n    }\n    onReady(): Promise<void> {\n        return this._onReady;\n    }\n\n    private resolveConnection(): Thenable<Connection> {\n        if (!this.connectionPromise) {\n            this.connectionPromise = this.doCreateConnection();\n        }\n        return this.connectionPromise;\n    }\n\n    protected doCreateConnection(): Thenable<Connection> {\n        const errorHandler = this.handleConnectionError.bind(this);\n        const closeHandler = this.handleConnectionClosed.bind(this);\n        return this.connectionProvider.get(errorHandler, closeHandler, undefined);\n    }\n\n    protected handleConnectionError(error: Error, message: Message, count: number) {\n        const action = this.clientOptions.errorHandler!.error(error, message, count);\n        if (action === ErrorAction.Shutdown) {\n            console.error('Connection to server is erroring. Shutting down server.');\n            this.stop();\n        }\n    }\n\n    protected handleConnectionClosed() {\n        if (this.state === ClientState.Stopping || this.state === ClientState.Stopped) {\n            return;\n        }\n    }\n\n    onNotification<P, RO>(type: NotificationType<P, RO>, handler: NotificationHandler<P>): void {\n        if (!this.isConnectionActive()) {\n            throw new Error('GLSP client is not ready yet');\n        }\n        this.resolvedConnection!.onNotification(type, handler);\n    }\n\n    sendNotification<P, RO>(type: NotificationType<P, RO>, params?: P): void {\n        if (!this.isConnectionActive()) {\n            throw new Error('GLSP client is not ready yet');\n        }\n        this.resolvedConnection!.sendNotification(type, params);\n    }\n\n    private isConnectionActive(): boolean {\n        return this.state === ClientState.Running && !!this.resolvedConnection;\n    }\n}\n\n@injectable()\nexport class GLSPClientFactory {\n    constructor(\n        @inject(WebSocketConnectionProvider) protected readonly connectionProvider: WebSocketConnectionProvider) { }\n\n    get(contribution: LanguageContribution, clientOptions: GLSPClientOptions, connectionProvider: MessageConnection | (() => MaybePromise<MessageConnection>)): GLSPClient {\n\n        if (!clientOptions.errorHandler) {\n            clientOptions.errorHandler = {\n                error: () => ErrorAction.Continue,\n                closed: () => CloseAction.DoNotRestart\n            };\n        }\n\n        return new BaseGLSPClient({\n            name: contribution.name,\n            id: contribution.id,\n            clientOptions: clientOptions,\n            connectionProvider: {\n                get: async (errorHandler, closeHandler) => {\n                    const connection = typeof connectionProvider === 'function' ? await connectionProvider() : connectionProvider;\n                    return createConnection(connection, errorHandler, closeHandler);\n                }\n            }\n        });\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ContributionProvider } from \"@theia/core\";\nimport { FrontendApplication, FrontendApplicationContribution } from \"@theia/core/lib/browser\";\nimport { inject, injectable, named } from \"inversify\";\n\nimport { GLSPClientContribution } from \"./glsp-client-contribution\";\n\n\n@injectable()\nexport class GLSPFrontendContribution implements FrontendApplicationContribution {\n    @inject(FrontendApplication)\n    protected readonly app: FrontendApplication;\n\n    constructor(\n        @inject(ContributionProvider) @named(GLSPClientContribution)\n        protected readonly contributions: ContributionProvider<GLSPClientContribution>\n    ) { }\n\n    onStart(app: FrontendApplication): void {\n        for (const contribution of this.contributions.getContributions()) {\n            contribution.activate(app);\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nexport * from \"./protocol\";\n\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ActionMessage } from \"@eclipse-glsp/client\";\nimport { NotificationType, NotificationType0, RequestType, RequestType0 } from \"vscode-jsonrpc\";\n\n\nexport interface InitializeParameters {\n    options?: any\n}\n\nexport namespace ActionMessageNotification {\n    export const type = new NotificationType<ActionMessage, void>('process');\n}\n\nexport namespace InitializeRequest {\n    export const type = new RequestType<InitializeParameters, Boolean, void, void>('initialize');\n}\n\nexport namespace ShutdownRequest {\n    export const type = new RequestType0<void, void, void>('shutdown');\n}\n\nexport namespace ExitNotification {\n    export const type = new NotificationType0<void>('exit');\n}\n","exports = module.exports = require(\"../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (c) 2019 EclipseSource and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.command-palette {\\n    transition: opacity 0.3s linear;\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n}\\n\\n.command-palette-suggestions {\\n    background: white;\\n    z-index: 1000;\\n    overflow: auto;\\n    box-sizing: border-box;\\n    border: 1px solid rgba(60, 60, 60, 0.6);\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n}\\n\\n.command-palette-suggestions .icon {\\n    padding-right: 0.3em;\\n}\\n\\n.command-palette-suggestions em {\\n    font-weight: bold;\\n    font-style: normal;\\n}\\n\\n.command-palette-suggestions>div {\\n    padding: 0 4px;\\n}\\n\\n.command-palette-suggestions .group {\\n    background: #eee;\\n}\\n\\n.command-palette-suggestions>div:hover:not(.group), .command-palette-suggestions>div.selected {\\n    cursor: pointer;\\n}\\n\\n.command-palette-suggestions>div:hover:not(.group) {\\n    background: #e0e0e0;\\n}\\n\\n.command-palette-suggestions>div.selected {\\n    background: #bbdefb;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (c) 2019 EclipseSource and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.sprotty {\\n    padding: 0px;\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n}\\n\\n.sprotty svg text::selection {\\n    background: none;\\n}\\n\\n.sprotty-hidden {\\n    display: block;\\n    position: absolute;\\n    width: 0px;\\n    height: 0px;\\n}\\n\\n.sprotty-popup {\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n    position: absolute;\\n    background: white;\\n    border-radius: 5px;\\n    border: 1px solid;\\n    max-width: 400px;\\n    min-width: 100px;\\n}\\n\\n.sprotty-popup>div {\\n    margin: 10px;\\n}\\n\\n.sprotty-popup-closed {\\n    display: none;\\n}\\n\\n.sprotty-resize-handle {\\n    /* radius does not work in Firefox */\\n    r: 7px;\\n    fill: #884;\\n    stroke: none;\\n    z-index: 1000;\\n}\\n\\n.sprotty-resize-handle.selected {\\n    fill: #66a;\\n}\\n\\n.sprotty-resize-handle.mouseover {\\n    stroke: #112;\\n    stroke-width: 1;\\n}\\n\\n.node-creation-mode {\\n    cursor: copy;\\n}\\n\\n.overlap-forbidden-mode {\\n    cursor: not-allowed;\\n}\\n\\n.default-mode {\\n    cursor: default;\\n}\\n\\n.edge-modification-not-allowed-mode {\\n    cursor: no-drop;\\n}\\n\\n.edge-creation-select-source-mode {\\n    cursor: pointer;\\n}\\n\\n.edge-creation-select-target-mode, .edge-reconnect-select-target-mode {\\n    cursor: crosshair;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../css-loader/lib/css-base.js\")(false);\n// imports\nexports.push([module.id, \"@import url(https://use.fontawesome.com/releases/v5.6.3/css/all.css);\", \"\"]);\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (c) 2019 EclipseSource and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n/* Css for main container */\\n\\n.tool-palette {\\n    position: absolute;\\n    right: 25px;\\n    top: 25px;\\n    text-align: center;\\n    width: 150px;\\n    display: block;\\n    z-index: 1000;\\n    border-style: solid;\\n    border-width: 0px;\\n    border-color: #bbb;\\n    border-radius: 5px;\\n    color: black;\\n}\\n\\n/* Css for header compartment */\\n\\n.palette-header {\\n    padding: 0.4em;\\n    text-align: left;\\n    font-size: 1.15em;\\n    font-weight: bold;\\n    background: #CCCCCC;\\n    border: 1px solid rgba(60, 60, 60, 0.6);\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n}\\n\\n.header-icon i {\\n    margin-right: 0.2em\\n}\\n\\n.header-tools i {\\n    border: 1px solid #CCCCCC;\\n    padding: 0.2em;\\n    margin-right: 0.2em;\\n}\\n\\n.header-tools i:hover {\\n    background: #DFDFDF;\\n}\\n\\n.header-tools .clicked {\\n    background: #BDDAEF;\\n    border: 1px solid rgba(60, 60, 60, 0.6);\\n}\\n\\n/*Css for palette body compartment */\\n\\n.palette-body {\\n    background: rgba(100, 100, 100, 0.2);\\n    border: 1px solid rgba(60, 60, 60, 0.6);\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n}\\n\\n.tool-group {\\n    text-align: left;\\n    background: #EDEDEE;\\n}\\n\\n.group-header {\\n    font-weight: bold;\\n    background: #CCCCCC;\\n}\\n\\n.group-header:hover {\\n    background: #AAAAAA;\\n}\\n\\n.group-header i {\\n    padding: 0.4em;\\n}\\n\\n.tool-button {\\n    background: #EDEDEE;\\n    padding: 0.4em;\\n}\\n\\n.tool-button:hover {\\n    background: #DFDFDF;\\n}\\n\\n.tool-button.clicked {\\n    background: #BDDAEF;\\n}\\n\\n.tool-button.collapsed {\\n    display: none;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (c) 2020 EclipseSource and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.sprotty-graph {\\n    background: var(--theia-editor-background);\\n}\\n\\n.sprotty-node {\\n    stroke: var(--theia-editor-foreground);\\n    fill: var(--theia-editor-foreground);\\n}\\n\\n.sprotty-edge {\\n    fill: none;\\n    stroke: var(--theia-editor-foreground);\\n}\\n\\n.sprotty-edge.arrow {\\n    fill: var(--theia-editor-foreground);\\n}\\n\\n.sprotty-node.selected {\\n    stroke: var(--theia-menu-selectionBackground);\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (c) 2020 EclipseSource and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.tool-palette {\\n    box-shadow: 0px 1px 6px var(--theia-widget-shadow);\\n}\\n\\n.tool-palette .palette-header {\\n    background: var(--theia-titleBar-activeBackground);\\n    color: var(--theia-titleBar-activeForeground);\\n    border: 0;\\n    font-weight: normal;\\n    overflow: hidden;\\n    padding: 0.2em;\\n    line-height: 1.5em;\\n    box-shadow: none;\\n    border-top: 2px solid var(--theia-focusBorder);\\n}\\n\\n.tool-palette .palette-header .header-icon {\\n    font-size: var(--theia-ui-font-size1);\\n    float: left;\\n    padding: 0.2em;\\n}\\n\\n.tool-palette .palette-header .header-tools {\\n    font-size: var(--theia-ui-font-size3);\\n    float: right;\\n}\\n\\n.tool-palette .palette-header .header-tools i {\\n    border: none;\\n    width: 1em;\\n    text-align: center;\\n}\\n\\n.tool-palette .palette-header .header-tools i:hover:not(.clicked) {\\n    background: var(--theia-menubar-selectionBackground);\\n}\\n\\n.tool-palette .palette-header .header-tools .clicked {\\n    background: var(--theia-inputOption-activeBackground);\\n}\\n\\n.tool-palette .palette-body {\\n    border: 0;\\n    box-shadow: none;\\n}\\n\\n.tool-palette .palette-body .group-header {\\n    font-size: var(--theia-ui-font-size1);\\n    font-weight: normal;\\n    background: var(--theia-activityBar-background);\\n    color: var(--theia-titleBar-activeForeground);\\n    border: 0;\\n}\\n\\n.tool-palette .palette-body .tool-button {\\n    background: var(--theia-menu-background);\\n    color: var(--theia-titleBar-activeForeground);\\n}\\n\\n.tool-palette .palette-body .tool-button:hover:not(.clicked) {\\n    background: var(--theia-list-hoverBackground);\\n}\\n\\n.tool-palette .tool-button.clicked {\\n    background: var(--theia-menu-selectionBackground);\\n    color: var(--theia-menu-selectionForeground);\\n}\\n\", \"\"]);\n\n// exports\n","/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './sprotty/theia-diagram-server';\nexport * from './sprotty/theia-file-saver';\nexport * from './sprotty/theia-key-tool';\nexport * from './sprotty/theia-sprotty-connector';\nexport * from './sprotty/theia-sprotty-selection-forwarder';\nexport * from './sprotty/theia-sprotty-context-menu-service';\nexport * from './sprotty/languageserver/index';\n\nexport * from './theia/diagram-commands';\nexport * from './theia/diagram-configuration';\nexport * from './theia/diagram-keybinding';\nexport * from './theia/diagram-manager';\nexport * from './theia/diagram-module';\nexport * from './theia/diagram-widget';\nexport * from './theia/languageserver/index';\n","/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { CodeAction, CodeActionParams, CodeActionRequest, Range } from '@theia/languages/lib/browser';\nimport { inject, injectable } from \"inversify\";\nimport { Action, EMPTY_ROOT, HtmlRootSchema, PopupHoverMouseListener, RequestPopupModelAction,\n    SButton, SButtonSchema, SetPopupModelAction, SModelElement, SModelElementSchema,\n    SModelRootSchema } from \"sprotty\";\nimport { IRootPopupModelProvider } from '../theia-diagram-server';\nimport { LSTheiaDiagramServerProvider } from './ls-theia-diagram-server';\nimport { getRange } from \"./traceable\";\nimport { WorkspaceEditAction } from \"./workspace-edit-command\";\nimport { EditDiagramLocker } from './edit-diagram-locker';\n\n@injectable()\nexport class CodeActionProvider {\n\n    @inject(LSTheiaDiagramServerProvider) diagramServerProvider: LSTheiaDiagramServerProvider;\n\n    async getCodeActions(range: Range, codeActionKind: string) {\n        const diagramServer = await this.diagramServerProvider();\n        const connector = diagramServer.connector;\n        const languageClient = await connector.getLanguageClient();\n        return languageClient.sendRequest(CodeActionRequest.type, <CodeActionParams>{\n            textDocument: {\n                uri: diagramServer.sourceUri\n            },\n            range,\n            context: {\n                diagnostics: [],\n                only: [codeActionKind]\n            }\n        });\n    }\n}\n\n/**\n * A popup-palette based on code actions.\n */\n@injectable()\nexport class CodeActionPalettePopupProvider implements IRootPopupModelProvider {\n\n    @inject(CodeActionProvider) codeActionProvider: CodeActionProvider;\n    @inject(EditDiagramLocker) editDiagramLocker: EditDiagramLocker;\n\n    async getPopupModel(action: RequestPopupModelAction, rootElement: SModelRootSchema): Promise<SModelElementSchema | undefined> {\n        const range = getRange(rootElement);\n        if (this.editDiagramLocker.allowEdit && range !== undefined) {\n            const codeActions = await this.codeActionProvider.getCodeActions(range, 'sprotty.create');\n            if (codeActions) {\n                const buttons: PaletteButtonSchema[] = [];\n                codeActions.forEach(codeAction => {\n                    if (CodeAction.is(codeAction)) {\n                        buttons.push(<PaletteButtonSchema>{\n                            id: codeAction.title,\n                            type: 'button:create',\n                            codeActionKind: codeAction.kind,\n                            range\n                        });\n                    }\n                });\n                return <HtmlRootSchema>{\n                    id: \"palette\",\n                    type: \"palette\",\n                    classes: ['sprotty-palette'],\n                    children: buttons,\n                    canvasBounds: action.bounds\n                };\n            }\n        }\n        return undefined;\n    }\n}\n\nexport interface PaletteButtonSchema extends SButtonSchema {\n    codeActionKind: string;\n    range: Range;\n}\n\nexport class PaletteButton extends SButton {\n    codeActionKind: string;\n    range: Range;\n}\n\n@injectable()\nexport class PaletteMouseListener extends PopupHoverMouseListener {\n\n    @inject(CodeActionProvider) codeActionProvider: CodeActionProvider;\n    @inject(LSTheiaDiagramServerProvider) diagramServerProvider: LSTheiaDiagramServerProvider;\n\n    mouseDown(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[] {\n        if (target instanceof PaletteButton) {\n            return [this.getWorkspaceEditAction(target)];\n        }\n        return [];\n    }\n\n    async getWorkspaceEditAction(target: PaletteButton): Promise<Action> {\n        const diagramServer = await this.diagramServerProvider();\n        const workspace = diagramServer.connector.workspace;\n        if (workspace) {\n            const codeActions = await this.codeActionProvider.getCodeActions(target.range, target.codeActionKind);\n            if (codeActions) {\n                for (const codeAction of codeActions) {\n                    if (CodeAction.is(codeAction) && codeAction.edit)\n                        return new WorkspaceEditAction(codeAction.edit);\n                }\n            }\n        }\n        return new SetPopupModelAction(EMPTY_ROOT);\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SLabel } from \"sprotty\";\nimport { inject, injectable } from \"inversify\";\nimport { LSTheiaDiagramServerProvider } from \"./ls-theia-diagram-server\";\nimport { CompletionRequest, CompletionList, CompletionItem, TextEdit, CompletionItemKind } from '@theia/languages/lib/browser';\nimport { Traceable, getRange } from \"./traceable\";\n\n@injectable()\nexport class CompletionLabelEditor {\n\n    @inject(LSTheiaDiagramServerProvider) diagramServerProvider: LSTheiaDiagramServerProvider;\n\n    async edit(element: SLabel & Traceable) {\n        const range = getRange(element);\n        const diagramServer = await this.diagramServerProvider();\n        const connector = diagramServer.connector;\n        if (connector.quickPickService && connector.workspace) {\n            const languageClient = await connector.getLanguageClient();\n            const uri = diagramServer.sourceUri;\n            const completions = await languageClient.sendRequest(CompletionRequest.type, {\n                textDocument: { uri },\n                position: range.start\n            });\n            if (completions) {\n                const completionItems = ((completions as any)[\"items\"])\n                    ? (completions as CompletionList).items\n                    : completions as CompletionItem[];\n                const quickPickItems = this.filterCompletionItems(completionItems)\n                    .map(i => { return {\n                        label: i.textEdit!.newText,\n                        value: i\n                    };\n                });\n                const pick = await connector.quickPickService.show(quickPickItems);\n                if (pick && pick.textEdit) {\n                    const changes: { [uri: string]: TextEdit[] } = {};\n                    changes[uri] = [ {\n                        ...pick.textEdit, ...{ range }\n                    }];\n                    await connector.workspace.applyEdit({\n                        changes\n                    });\n                }\n            }\n        }\n    }\n\n    protected filterCompletionItems(items: CompletionItem[]): CompletionItem[] {\n        return items.filter(item => item.kind === CompletionItemKind.Reference);\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { TextEdit, Workspace, WorkspaceEdit } from \"@theia/languages/lib/browser\";\nimport { Action, CommandExecutionContext, isSelectable, SEdge, Selectable, SModelElement, SChildElement, TYPES } from \"sprotty\";\nimport { AbstractWorkspaceEditCommand } from \"./workspace-edit-command\";\nimport { getRange, Traceable, isTraceable, getURI } from \"./traceable\";\nimport { Range } from \"@theia/languages/lib/browser\";\nimport { injectable, inject } from \"inversify\";\n\nexport class DeleteWithWorkspaceEditAction implements Action {\n    static readonly KIND = 'deleteWithWorkspaceEdit';\n    readonly kind = DeleteWithWorkspaceEditAction.KIND;\n\n    // TODO: consider URIs from individual element traces\n    constructor(readonly workspace: Workspace, readonly sourceUri: string) {}\n}\n\n@injectable()\nexport class DeleteWithWorkspaceEditCommand extends AbstractWorkspaceEditCommand {\n    static readonly KIND = DeleteWithWorkspaceEditAction.KIND;\n\n    constructor(@inject(TYPES.Action) readonly action: DeleteWithWorkspaceEditAction) {\n        super();\n    }\n\n    createWorkspaceEdit(context: CommandExecutionContext): WorkspaceEdit {\n        const elements = new Set<SModelElement & Traceable>();\n        const index = context.root.index;\n        index.all().forEach(e => {\n            if (e && this.shouldDelete(e))\n                elements.add(e);\n            else if (e instanceof SEdge && isTraceable(e)) {\n                const source = index.getById(e.sourceId);\n                const target = index.getById(e.targetId);\n                if (this.shouldDeleteParent(source)\n                    || this.shouldDeleteParent(target))\n                    elements.add(e);\n            }\n        });\n        const uri2ranges: Map<string, Range[]> = new Map();\n        elements.forEach(element => {\n            const uri = getURI(element).withoutFragment().toString(true);\n            const range = getRange(element);\n            let ranges = uri2ranges.get(uri);\n            if (!ranges) {\n                ranges = [];\n                uri2ranges.set(uri, ranges);\n            }\n            let mustAdd = true;\n            for (let i = 0; i < ranges.length; ++i) {\n                const r = ranges[i];\n                if (this.containsRange(r, range)) {\n                    mustAdd = false;\n                    break;\n                } else if (this.containsRange(range, r)) {\n                    mustAdd = false;\n                    ranges[i] = range;\n                    break;\n                }\n            }\n            if (mustAdd)\n                ranges.push(range);\n        });\n        const changes = {};\n        uri2ranges.forEach((ranges, uri) => {\n            (changes as any)[uri] = ranges.map(range => {\n                return <TextEdit> {\n                    range,\n                    newText: ''\n                };\n            });\n        });\n        const workspaceEdit: WorkspaceEdit = {\n            changes\n        };\n        return workspaceEdit;\n    }\n\n    private containsRange(range: Range, otherRange: Range): boolean {\n        if (otherRange.start.line < range.start.line || otherRange.end.line < range.start.line) {\n            return false;\n        }\n        if (otherRange.start.line > range.end.line || otherRange.end.line > range.end.line) {\n            return false;\n        }\n        if (otherRange.start.line === range.start.line && otherRange.start.character < range.start.character) {\n            return false;\n        }\n        if (otherRange.end.line === range.end.line && otherRange.end.character > range.end.character) {\n            return false;\n        }\n        return true;\n    }\n\n    private shouldDelete<T extends SModelElement>(e: T): e is (Traceable & Selectable & T) {\n        return isSelectable(e) && e.selected && isTraceable(e);\n    }\n\n    private shouldDeleteParent(source: SModelElement | undefined): boolean {\n        while (source) {\n            if (this.shouldDelete(source)) {\n                return true;\n            }\n            source = (source instanceof SChildElement) ? source.parent : undefined;\n        }\n        return false;\n    }\n}\n\n","/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Action, CenterAction, FitToScreenAction, IDiagramLocker, SetViewportAction,\n    HoverFeedbackAction, RequestPopupModelAction, SetPopupModelAction, SelectAction,\n    SelectAllAction, ServerStatusAction, SetModelAction, UpdateModelAction } from \"sprotty\";\nimport { injectable } from \"inversify\";\n\n/**\n * An `IDiagramLocker` for language-server based editable diagrams.\n *\n * Prevents displatching of edit actions when editing is disallowed, e.g.\n * because the LS's status is fatal.\n */\n@injectable()\nexport class EditDiagramLocker implements IDiagramLocker {\n\n    protected nonEditActions = [\n        SetModelAction.KIND, UpdateModelAction.KIND,\n        CenterAction.KIND, FitToScreenAction.KIND, SetViewportAction.KIND,\n        SelectAction.KIND, SelectAllAction.KIND,\n        HoverFeedbackAction.KIND, RequestPopupModelAction.KIND, SetPopupModelAction.KIND,\n        ServerStatusAction.KIND\n    ];\n\n    allowEdit = true;\n\n    isAllowed(action: Action): boolean {\n        return this.allowEdit || this.nonEditActions.indexOf(action.kind) >= 0;\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './code-action-palette';\nexport * from './completion-label-edit';\nexport * from './delete';\nexport * from './edit-diagram-locker';\nexport * from './ls-theia-sprotty-connector';\nexport * from './ls-theia-diagram-server';\nexport * from './rename-label-edit';\nexport * from './traceable';\nexport * from './workspace-edit-command';\n","/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { ServerStatusAction } from \"sprotty\";\nimport { TheiaDiagramServer } from \"../theia-diagram-server\";\nimport { EditDiagramLocker } from \"./edit-diagram-locker\";\nimport { LSTheiaSprottyConnector } from \"./ls-theia-sprotty-connector\";\n\nexport const LSTheiaDiagramServerProvider = Symbol('LSTheiaDiagramServerProvider');\n\nexport type LSTheiaDiagramServerProvider = () => Promise<LSTheiaDiagramServer>;\n\n@injectable()\nexport class LSTheiaDiagramServer extends TheiaDiagramServer {\n\n    @inject(EditDiagramLocker) diagramLocker: EditDiagramLocker;\n\n    connect(connector: LSTheiaSprottyConnector): void {\n        super.connect(connector);\n    }\n\n    get workspace() {\n        if (this.connector)\n            return this.connector.workspace;\n        else\n            return undefined;\n    }\n\n    get connector(): LSTheiaSprottyConnector {\n        return this._connector as LSTheiaSprottyConnector;\n    }\n\n    handleServerStateAction(action: ServerStatusAction) {\n        this.diagramLocker.allowEdit = action.severity !== 'FATAL';\n        return super.handleServerStateAction(action);\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { QuickPickService, WidgetManager } from '@theia/core/lib/browser';\nimport { ILanguageClient } from '@theia/languages/lib/browser';\nimport { MonacoWorkspace } from \"@theia/monaco/lib/browser/monaco-workspace\";\nimport { ActionMessage, ExportSvgAction, ServerStatusAction } from 'sprotty';\nimport { DiagramManager } from '../../theia/diagram-manager';\nimport { DiagramWidget } from '../../theia/diagram-widget';\nimport { ActionMessageReceiver, DiagramLanguageClient } from '../../theia/languageserver';\nimport { TheiaDiagramServer } from '../theia-diagram-server';\nimport { TheiaFileSaver } from '../theia-file-saver';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport { TheiaSprottyConnector, TheiaSprottyConnectorServices } from '../theia-sprotty-connector';\n\n/**\n * Connects sprotty DiagramServers to a Theia LanguageClientContribution.\n *\n * Used to tunnel sprotty actions to and from the sprotty server through\n * the LSP.\n *\n * Instances bridge the gap between the sprotty DI containers (one per\n * diagram) and a specific language client from the Theia DI container\n * (one per application).\n */\nexport class LSTheiaSprottyConnector implements TheiaSprottyConnector, TheiaSprottyConnectorServices, ActionMessageReceiver {\n    private servers: TheiaDiagramServer[] = [];\n\n    readonly diagramLanguageClient: DiagramLanguageClient;\n    readonly fileSaver: TheiaFileSaver;\n    readonly editorManager: EditorManager;\n    readonly widgetManager: WidgetManager;\n    readonly diagramManager: DiagramManager;\n    readonly workspace?: MonacoWorkspace;\n    readonly quickPickService?: QuickPickService;\n\n    constructor(services: TheiaSprottyConnectorServices) {\n        Object.assign(this, services);\n        this.diagramLanguageClient.connect(this);\n    }\n\n    connect(diagramServer: TheiaDiagramServer) {\n        this.servers.push(diagramServer);\n        diagramServer.connect(this);\n    }\n\n    disconnect(diagramServer: TheiaDiagramServer) {\n        const index = this.servers.indexOf(diagramServer);\n        if (index >= 0)\n            this.servers.splice(index, 1);\n        diagramServer.disconnect();\n        this.diagramLanguageClient.didClose(diagramServer.clientId);\n    }\n\n    save(uri: string, action: ExportSvgAction) {\n        this.fileSaver.save(uri, action);\n    }\n\n    showStatus(clientId: string, status: ServerStatusAction): void {\n        const widget = this.widgetManager\n            .getWidgets(this.diagramManager.id)\n            .find(w => w instanceof DiagramWidget && w.clientId === clientId);\n        if (widget instanceof DiagramWidget)\n            widget.setStatus(status);\n    }\n\n    sendMessage(message: ActionMessage) {\n        this.diagramLanguageClient.sendThroughLsp(message);\n    }\n\n    getLanguageClient(): Promise<ILanguageClient> {\n        return this.diagramLanguageClient.languageClient;\n    }\n\n    onMessageReceived(message: ActionMessage): void {\n        this.servers.forEach(element => {\n            element.messageReceived(message);\n        });\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { RenameRequest } from '@theia/languages/lib/browser';\nimport { SingleTextInputDialog } from '@theia/core/lib/browser';\nimport { inject, injectable } from \"inversify\";\nimport { SLabel } from \"sprotty\";\nimport { LSTheiaDiagramServerProvider } from \"./ls-theia-diagram-server\";\nimport { Traceable, getRange } from './traceable';\n\n@injectable()\nexport class RenameLabelEditor {\n\n    @inject(LSTheiaDiagramServerProvider) diagramServerProvider: LSTheiaDiagramServerProvider;\n\n    async edit(element: SLabel & Traceable) {\n        const range = getRange(element);\n        const diagramServer = await this.diagramServerProvider();\n        const connector = diagramServer.connector;\n        if (connector.workspace) {\n            const initialValue = element.text;\n            const dialog = new SingleTextInputDialog({\n                title: 'Rename Element',\n                initialValue,\n                initialSelectionRange: {\n                    start: 0,\n                    end: element.text.length\n                },\n                validate: (name, mode) => {\n                    if (initialValue === name && mode === 'preview') {\n                        return false;\n                    }\n                    return true;\n                }\n            });\n            const newName = await dialog.open();\n            if (newName) {\n                const languageClient = await connector.getLanguageClient();\n                const workspaceEdit = await languageClient.sendRequest(RenameRequest.type, {\n                    textDocument: { uri: diagramServer.sourceUri },\n                    position: range.start,\n                    newName\n                });\n                if (workspaceEdit) {\n                    await connector.workspace.applyEdit(workspaceEdit);\n                }\n            }\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelElement, SModelExtension, MouseListener, Action, findParent, OpenAction } from \"sprotty\";\nimport { Range } from \"@theia/languages/lib/browser\";\nimport URI from \"@theia/core/lib/common/uri\";\n\nexport interface Traceable extends SModelExtension {\n    trace: string\n}\n\nexport function isTraceable<T extends SModelElement>(element: T): element is Traceable & T {\n   return !!(element as any).trace && !!getRange((element as any).trace);\n}\n\nexport function getRange(traceable: Traceable): Range;\nexport function getRange(trace: string): Range | undefined;\nexport function getRange(trace: object): Range | undefined;\nexport function getRange(thing: string | Traceable | object): Range | undefined {\n    const trace = typeof thing === 'string'\n        ? thing\n        : (thing as any).trace;\n    if (!trace)\n        return undefined;\n    const query = new URI(trace).query;\n    const numbers = query.split(/[:-]/).map(s => parseInt(s, 10));\n    if (numbers.length !== 4 || numbers.find(isNaN) !== undefined)\n        return undefined;\n    return <Range> {\n        start: {\n            line: numbers[0],\n            character: numbers[1]\n        },\n        end: {\n            line: numbers[2],\n            character: numbers[3]\n        }\n    };\n}\n\nexport function getURI(traceable: Traceable): URI {\n    return new URI(traceable.trace).withoutQuery();\n}\n\nexport class TraceableMouseListener extends MouseListener {\n    doubleClick(target: SModelElement, event: WheelEvent): (Action | Promise<Action>)[] {\n        const traceable = findParent(target, (element) => isTraceable(element));\n        if (traceable)\n            return [ new OpenAction(traceable.id) ];\n        else\n            return [];\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { WorkspaceEdit } from \"@theia/languages/lib/browser\";\nimport { MonacoWorkspace } from \"@theia/monaco/lib/browser/monaco-workspace\";\nimport { inject, injectable } from \"inversify\";\nimport { Action, Command, CommandExecutionContext, TYPES, CommandReturn } from \"sprotty\";\nimport { LSTheiaDiagramServer } from \"./ls-theia-diagram-server\";\n\n@injectable()\nexport abstract class AbstractWorkspaceEditCommand extends Command {\n\n    @inject(LSTheiaDiagramServer) diagramServer: LSTheiaDiagramServer;\n\n    abstract createWorkspaceEdit(context: CommandExecutionContext): WorkspaceEdit;\n\n    get workspace(): MonacoWorkspace {\n        return this.diagramServer.connector.workspace!;\n    }\n\n    protected workspaceEdit: WorkspaceEdit | undefined;\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        this.workspaceEdit = this.createWorkspaceEdit(context);\n        this.workspace.applyEdit(this.workspaceEdit, { mode: 'open' });\n        return context.root;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        // TODO implement revert workspace edit\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        // TODO implement revert workspace edit\n        return context.root;\n    }\n}\n\n/**\n * This is a client only action, so it does not have to be serializable\n */\nexport class WorkspaceEditAction implements Action {\n    static readonly KIND = 'workspaceEdit';\n\n    readonly kind = WorkspaceEditAction.KIND;\n    constructor(readonly workspaceEdit: WorkspaceEdit) {}\n}\n\n@injectable()\nexport class WorkspaceEditCommand extends AbstractWorkspaceEditCommand {\n    static readonly KIND = WorkspaceEditAction.KIND;\n\n    constructor(@inject(TYPES.Action) readonly action: WorkspaceEditAction) {\n        super();\n    }\n\n    createWorkspaceEdit(context: CommandExecutionContext) {\n        return this.action.workspaceEdit;\n    }\n}\n\n","/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, multiInject, optional } from 'inversify';\nimport { VNode } from 'snabbdom/vnode';\nimport { KeyListener, KeyTool, SModelElement, TYPES } from 'sprotty';\n\n@injectable()\nexport class TheiaKeyTool extends KeyTool {\n\n    constructor(@multiInject(TYPES.KeyListener)@optional() protected keyListeners: KeyListener[] = []) {\n        super([]);\n    }\n\n    decorate(vnode: VNode, element: SModelElement): VNode {\n        return vnode;\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { Command, CommandHandler, CommandRegistry, Disposable, MenuAction, MenuModelRegistry, MenuPath } from \"@theia/core\";\nimport { ContextMenuRenderer } from \"@theia/core/lib/browser\";\nimport { inject, injectable } from \"inversify\";\nimport { IActionDispatcher, IContextMenuService, MenuItem, Anchor } from \"sprotty\";\n\nexport namespace TheiaSprottyContextMenu {\n    export const CONTEXT_MENU: MenuPath = ['theia-sprotty-context-menu'];\n}\n\n@injectable()\nexport class TheiaContextMenuService implements IContextMenuService {\n\n    protected timeout?: number;\n    protected disposables?: DisposableItem[];\n\n    @inject(ContextMenuRenderer)\n    protected readonly contextMenuRenderer: ContextMenuRenderer;\n\n    @inject(MenuModelRegistry)\n    protected readonly menuProvider: MenuModelRegistry;\n\n    @inject(CommandRegistry)\n    protected readonly commandRegistry: CommandRegistry;\n\n    protected actionDispatcher?: IActionDispatcher;\n\n    connect(actionDispatcher: IActionDispatcher) {\n        this.actionDispatcher = actionDispatcher;\n    }\n\n    show(items: MenuItem[], anchor: Anchor, onHide?: () => void): void {\n        this.cleanUpNow();\n        this.disposables = this.register(TheiaSprottyContextMenu.CONTEXT_MENU, items);\n        const renderOptions = {\n            menuPath: TheiaSprottyContextMenu.CONTEXT_MENU, anchor: anchor,\n            onHide: () => { if (onHide) onHide(); this.scheduleCleanup(); }\n        };\n        this.contextMenuRenderer.render(renderOptions);\n    }\n\n    protected register(menuPath: string[], items: MenuItem[]): DisposableItem[] {\n        const disposables: DisposableItem[] = [];\n        for (const item of items) {\n            if (item.children && item.children.length > 0) {\n                const menuPathOfItem = item.group ? [...menuPath, item.group] : menuPath;\n                disposables.push(this.registerSubmenu(menuPathOfItem, item));\n                disposables.push(...this.register([...menuPathOfItem, item.id], item.children));\n            } else {\n                disposables.push(this.registerCommand(menuPath, item));\n                disposables.push(this.registerMenuAction(menuPath, item));\n            }\n        }\n        return disposables;\n    }\n\n    protected registerSubmenu(menuPath: string[], item: MenuItem): DisposableItem {\n        return this.menuProvider.registerSubmenu([...menuPath, item.id], item.label);\n    }\n\n    protected registerCommand(menuPath: string[], item: MenuItem): DisposableItem {\n        const command: Command = { id: commandId(menuPath, item), label: item.label, iconClass: item.icon };\n        const disposable = this.commandRegistry.registerCommand(command, new SprottyCommandHandler(item, this.actionDispatcher));\n        return new DisposableCommand(command, disposable);\n    }\n\n    protected registerMenuAction(menuPath: string[], item: MenuItem): DisposableItem {\n        const menuAction = { label: item.label, order: item.sortString, commandId: commandId(menuPath, item) };\n        const menuPathOfItem = item.group ? [...menuPath, item.group] : menuPath;\n        const disposable = this.menuProvider.registerMenuAction(menuPathOfItem, menuAction);\n        return new DisposableMenuAction(menuAction, disposable);\n    }\n\n    protected cleanUpNow() {\n        window.clearTimeout(this.timeout);\n        this.cleanUp();\n    }\n\n    protected scheduleCleanup() {\n        this.timeout = window.setTimeout(() => {\n            this.cleanUp();\n        }, 200);\n    }\n\n    protected cleanUp() {\n        if (this.disposables) {\n            this.disposables.forEach(disposable => disposable.dispose(this.menuProvider, this.commandRegistry));\n            this.disposables = undefined;\n        }\n    }\n}\n\nclass SprottyCommandHandler implements CommandHandler {\n\n    constructor(readonly menuItem: MenuItem, readonly actionDispatcher?: IActionDispatcher) { }\n\n    execute(...args: any[]) {\n        if (this.actionDispatcher && this.menuItem.actions) {\n            this.actionDispatcher.dispatchAll(this.menuItem.actions);\n        }\n    }\n\n    isEnabled(...args: any[]): boolean {\n        return getBooleanValue(this.menuItem.isEnabled, true);\n    }\n\n    isVisible(...args: any[]): boolean {\n        return getBooleanValue(this.menuItem.isVisible, true);\n    }\n\n    isToggled(...args: any[]): boolean {\n        return getBooleanValue(this.menuItem.isToggled, false);\n    }\n}\n\ninterface DisposableItem {\n    dispose(menuProvider: MenuModelRegistry, commandRegistry: CommandRegistry): void;\n}\n\nclass DisposableMenuAction implements DisposableItem {\n    constructor(protected readonly menuAction: MenuAction, protected readonly disposable: Disposable) { }\n    dispose(menuProvider: MenuModelRegistry, commandRegistry: CommandRegistry): void {\n        menuProvider.unregisterMenuAction(this.menuAction);\n        this.disposable.dispose();\n    }\n}\n\nclass DisposableCommand implements DisposableItem {\n    constructor(protected readonly command: Command, protected readonly disposable: Disposable) { }\n    dispose(menuProvider: MenuModelRegistry, commandRegistry: CommandRegistry): void {\n        commandRegistry.unregisterCommand(this.command);\n        this.disposable.dispose();\n    }\n}\n\nfunction commandId(menuPath: string[], item: any): string {\n    return menuPath.join(\".\") + \".\" + item.id;\n}\n\nfunction getBooleanValue(value: any, defaultValue: boolean) {\n    let returnVal = defaultValue;\n    if (isFunction(value)) {\n        returnVal = value();\n    } else if (isBoolean(value)) {\n        returnVal = value;\n    }\n    return returnVal;\n}\n\nfunction isFunction(value: () => boolean | boolean): value is () => boolean {\n    return !!(value && value.constructor && value.call && value.apply);\n}\n\nfunction isBoolean(value: () => boolean | boolean): boolean {\n    return typeof value === \"boolean\";\n}\n","/********************************************************************************\n * Copyright (c) 2018 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable, } from \"inversify\";\nimport {\n    Action, ActionHandlerRegistry, IActionHandler, SelectAction, TYPES, ViewerOptions,\n    RequestModelAction, IActionHandlerInitializer\n} from \"sprotty\";\nimport { SelectionService } from \"@theia/core\";\n\n\nexport interface SprottySelection {\n    selectedElementsIDs: string[]\n    widgetId: string\n    sourceUri?: string\n}\n\nexport function isSprottySelection(object?: any): object is SprottySelection {\n    return object !== undefined && (<SprottySelection>object).selectedElementsIDs !== undefined\n        && (<SprottySelection>object).widgetId !== undefined;\n}\n\n@injectable()\nexport class TheiaSprottySelectionForwarder implements IActionHandlerInitializer, IActionHandler {\n\n    @inject(TYPES.ViewerOptions) protected viewerOptions: ViewerOptions;\n    @inject(SelectionService) protected selectionService: SelectionService;\n\n    protected sourceUri?: string;\n\n    initialize(registry: ActionHandlerRegistry): any {\n        registry.register(RequestModelAction.KIND, this);\n        registry.register(SelectAction.KIND, this);\n    }\n\n    handle(action: Action): void {\n        if (action instanceof SelectAction) {\n            this.selectionService.selection = <SprottySelection>{\n                selectedElementsIDs: action.selectedElementsIDs,\n                widgetId: this.viewerOptions.baseDiv,\n                sourceUri: this.sourceUri\n            };\n        } else if (action instanceof RequestModelAction && action.options !== undefined) {\n            this.sourceUri = action.options.sourceUri as string;\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { FrontendApplication } from '@theia/core/lib/browser';\nimport { BaseLanguageClientContribution, LanguageClientFactory, Languages, Workspace } from '@theia/languages/lib/browser';\nimport { inject, injectable, multiInject } from 'inversify';\nimport { DiagramManagerProvider } from '../diagram-manager';\n\n@injectable()\nexport abstract class DiagramLanguageClientContribution extends BaseLanguageClientContribution {\n\n    constructor(\n        @inject(Workspace) workspace: Workspace,\n        @inject(Languages) languages: Languages,\n        @inject(LanguageClientFactory) languageClientFactory: LanguageClientFactory,\n        @multiInject(DiagramManagerProvider) protected diagramManagerProviders: DiagramManagerProvider[]) {\n        super(workspace, languages, languageClientFactory);\n    }\n\n    waitForActivation(app: FrontendApplication): Promise<any> {\n        return Promise.race([\n            super.waitForActivation(app),\n            this.waitForOpenDiagrams()\n        ]);\n    }\n\n    protected waitForOpenDiagrams(): Promise<any> {\n        return Promise.race(this.diagramManagerProviders.map(diagramManagerProvider => {\n            return diagramManagerProvider().then(diagramManager => {\n                return new Promise<void>((resolve) => {\n                    const disposable = diagramManager.onCreated((widget) => {\n                        disposable.dispose();\n                        resolve();\n                    });\n                });\n            });\n        }));\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ApplicationShell } from '@theia/core/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport { ILanguageClient, LanguageClientContribution, Location, NotificationType } from '@theia/languages/lib/browser';\nimport { inject, injectable } from 'inversify';\nimport { ActionMessage } from 'sprotty';\nimport { DiagramWidget } from '../diagram-widget';\n\nexport interface ActionMessageReceiver {\n    onMessageReceived(message: ActionMessage): void\n}\n\nexport interface OpenInTextEditorMessage {\n    location: Location\n    forceOpen: boolean\n}\n\nconst acceptMessageType = new NotificationType<ActionMessage, void>('diagram/accept');\nconst didCloseMessageType = new NotificationType<string, void>('diagram/didClose');\nconst openInTextEditorMessageType = new NotificationType<OpenInTextEditorMessage, void>('diagram/openInTextEditor');\n\n@injectable()\nexport class DiagramLanguageClient {\n\n    actionMessageReceivers: ActionMessageReceiver[] = [];\n\n    @inject(ApplicationShell) readonly shell: ApplicationShell;\n\n    constructor(readonly languageClientContribution: LanguageClientContribution,\n                readonly editorManager: EditorManager) {\n        this.languageClientContribution.languageClient.then(\n            lc => {\n                lc.onNotification(acceptMessageType, this.onMessageReceived.bind(this));\n                lc.onNotification(openInTextEditorMessageType, this.openInTextEditor.bind(this));\n            }\n        ).catch(\n            err => console.error(err)\n        );\n    }\n\n    openInTextEditor(message: OpenInTextEditorMessage) {\n        const uri = new URI(message.location.uri);\n        if (!message.forceOpen) {\n            this.editorManager.all.forEach(editorWidget => {\n                const currentTextEditor = editorWidget.editor;\n                if (editorWidget.isVisible && uri.toString(true) === currentTextEditor.uri.toString(true)) {\n                    currentTextEditor.cursor = message.location.range.start;\n                    currentTextEditor.revealRange(message.location.range);\n                    currentTextEditor.selection = message.location.range;\n                }\n            });\n        } else {\n            const widgetOptions: ApplicationShell.WidgetOptions = {\n                area: 'main'\n            };\n            const activeWidget = this.shell.activeWidget;\n            if (activeWidget instanceof DiagramWidget) {\n                widgetOptions.ref = activeWidget;\n                widgetOptions.mode = 'open-to-left';\n            }\n            this.editorManager.open(uri, { widgetOptions }).then(\n                editorWidget => {\n                    const editor = editorWidget.editor;\n                    editor.cursor = message.location.range.start;\n                    editor.revealRange(message.location.range);\n                    editor.selection = message.location.range;\n                });\n        }\n    }\n\n    sendThroughLsp(message: ActionMessage) {\n        this.languageClientContribution.languageClient.then(lc =>\n            lc.onReady().then(() =>\n                lc.sendNotification(acceptMessageType, message)\n            )\n        );\n    }\n\n    onMessageReceived(message: ActionMessage) {\n        this.actionMessageReceivers.forEach(client => {\n            client.onMessageReceived(message);\n        });\n    }\n\n    get languageClient(): Promise<ILanguageClient> {\n        return this.languageClientContribution.languageClient;\n    }\n\n    didClose(clientId: string) {\n        this.languageClientContribution.languageClient.then(lc => lc.sendNotification(didCloseMessageType, clientId));\n    }\n\n    connect(client: ActionMessageReceiver) {\n        this.actionMessageReceivers.push(client);\n    }\n\n    disconnect(client: ActionMessageReceiver) {\n        const index = this.actionMessageReceivers.indexOf(client);\n        if (index >= 0) {\n            this.actionMessageReceivers.splice(index);\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './diagram-language-client';\nexport * from './diagram-language-client-contribution';\nexport * from './ls-diagram-contributions';\nexport * from './ls-diagram-module';\n","/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { CommandContribution, CommandRegistry } from \"@theia/core\";\nimport { ApplicationShell, KeybindingContribution, KeybindingRegistry } from \"@theia/core/lib/browser\";\nimport { inject, injectable } from \"inversify\";\nimport { DeleteWithWorkspaceEditAction } from \"../../sprotty/languageserver/delete\";\nimport { DiagramCommandHandler, DiagramCommands } from \"../diagram-commands\";\nimport { DiagramKeybindingContext } from \"../diagram-keybinding\";\nimport { DiagramWidget } from \"../diagram-widget\";\nimport { LSTheiaSprottyConnector } from \"../../sprotty/languageserver/ls-theia-sprotty-connector\";\n\n@injectable()\nexport class LSDiagramCommandContribution implements CommandContribution {\n\n    @inject(ApplicationShell) protected readonly shell: ApplicationShell;\n\n    registerCommands(registry: CommandRegistry): void {\n        registry.registerCommand({\n            id: DiagramCommands.DELETE,\n            label: 'Delete selected'\n        });\n        registry.registerHandler(\n            DiagramCommands.DELETE,\n            new DiagramCommandHandler(this.shell, widget => {\n                if (widget instanceof DiagramWidget) {\n                    const workspace = widget.connector instanceof LSTheiaSprottyConnector ? widget.connector.workspace : undefined;\n                    if (workspace) {\n                        const action = new DeleteWithWorkspaceEditAction(workspace, widget.uri.toString(true));\n                        widget.actionDispatcher.dispatch(action);\n                    }\n                }\n            })\n        );\n    }\n}\n\n@injectable()\nexport class LSDiagramKeybindingContribution implements KeybindingContribution {\n\n    @inject(DiagramKeybindingContext) protected readonly diagramKeybindingContext: DiagramKeybindingContext;\n\n    registerKeybindings(registry: KeybindingRegistry): void {\n        registry.registerKeybinding({\n            command: DiagramCommands.DELETE,\n            context: this.diagramKeybindingContext.id,\n            keybinding: 'del'\n        });\n        registry.registerKeybinding({\n            command: DiagramCommands.DELETE,\n            context: this.diagramKeybindingContext.id,\n            keybinding: 'backspace'\n        });\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { KeybindingContribution } from '@theia/core/lib/browser';\nimport { CommandContribution } from '@theia/core/lib/common';\nimport { ContainerModule } from 'inversify';\nimport { LSDiagramCommandContribution, LSDiagramKeybindingContribution } from './ls-diagram-contributions';\n\n/**\n * Standard DI config for languageserver aware diagrams.\n */\nexport default new ContainerModule(bind => {\n    bind(CommandContribution).to(LSDiagramCommandContribution).inSingletonScope();\n    bind(KeybindingContribution).to(LSDiagramKeybindingContribution).inSingletonScope();\n});\n"],"sourceRoot":""}
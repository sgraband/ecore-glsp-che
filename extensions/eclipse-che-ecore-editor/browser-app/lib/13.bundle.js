(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[13],{

/***/ "../node_modules/autocompleter/autocomplete.js":
/*!*****************************************************!*\
  !*** ../node_modules/autocompleter/autocomplete.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

(function (global, factory) {
   true ? module.exports = factory() :
  undefined;
}(this, function () { 'use strict';

  /*
   * https://github.com/kraaden/autocomplete
   * Copyright (c) 2016 Denys Krasnoshchok
   * MIT License
   */
  function autocomplete(settings) {
      // just an alias to minimize JS file size
      var doc = document;
      var container = doc.createElement("div");
      var containerStyle = container.style;
      var userAgent = navigator.userAgent;
      var mobileFirefox = userAgent.indexOf("Firefox") !== -1 && userAgent.indexOf("Mobile") !== -1;
      var debounceWaitMs = settings.debounceWaitMs || 0;
      var preventSubmit = settings.preventSubmit || false;
      // 'keyup' event will not be fired on Mobile Firefox, so we have to use 'input' event instead
      var keyUpEventName = mobileFirefox ? "input" : "keyup";
      var items = [];
      var inputValue = "";
      var minLen = 2;
      var showOnFocus = settings.showOnFocus;
      var selected;
      var keypressCounter = 0;
      var debounceTimer;
      if (settings.minLength !== undefined) {
          minLen = settings.minLength;
      }
      if (!settings.input) {
          throw new Error("input undefined");
      }
      var input = settings.input;
      container.className = "autocomplete " + (settings.className || "");
      containerStyle.position = "fixed";
      /**
       * Detach the container from DOM
       */
      function detach() {
          var parent = container.parentNode;
          if (parent) {
              parent.removeChild(container);
          }
      }
      /**
       * Clear debouncing timer if assigned
       */
      function clearDebounceTimer() {
          if (debounceTimer) {
              window.clearTimeout(debounceTimer);
          }
      }
      /**
       * Attach the container to DOM
       */
      function attach() {
          if (!container.parentNode) {
              doc.body.appendChild(container);
          }
      }
      /**
       * Check if container for autocomplete is displayed
       */
      function containerDisplayed() {
          return !!container.parentNode;
      }
      /**
       * Clear autocomplete state and hide container
       */
      function clear() {
          keypressCounter++;
          items = [];
          inputValue = "";
          selected = undefined;
          detach();
      }
      /**
       * Update autocomplete position
       */
      function updatePosition() {
          if (!containerDisplayed()) {
              return;
          }
          containerStyle.height = "auto";
          containerStyle.width = input.offsetWidth + "px";
          var inputRect = input.getBoundingClientRect();
          var top = inputRect.top + input.offsetHeight;
          var maxHeight = window.innerHeight - top;
          if (maxHeight < 0) {
              maxHeight = 0;
          }
          containerStyle.top = top + "px";
          containerStyle.bottom = "";
          containerStyle.left = inputRect.left + "px";
          containerStyle.maxHeight = maxHeight + "px";
          if (settings.customize) {
              settings.customize(input, inputRect, container, maxHeight);
          }
      }
      /**
       * Redraw the autocomplete div element with suggestions
       */
      function update() {
          // delete all children from autocomplete DOM container
          while (container.firstChild) {
              container.removeChild(container.firstChild);
          }
          // function for rendering autocomplete suggestions
          var render = function (item, currentValue) {
              var itemElement = doc.createElement("div");
              itemElement.textContent = item.label || "";
              return itemElement;
          };
          if (settings.render) {
              render = settings.render;
          }
          // function to render autocomplete groups
          var renderGroup = function (groupName, currentValue) {
              var groupDiv = doc.createElement("div");
              groupDiv.textContent = groupName;
              return groupDiv;
          };
          if (settings.renderGroup) {
              renderGroup = settings.renderGroup;
          }
          var fragment = doc.createDocumentFragment();
          var prevGroup = "#9?$";
          items.forEach(function (item) {
              if (item.group && item.group !== prevGroup) {
                  prevGroup = item.group;
                  var groupDiv = renderGroup(item.group, inputValue);
                  if (groupDiv) {
                      groupDiv.className += " group";
                      fragment.appendChild(groupDiv);
                  }
              }
              var div = render(item, inputValue);
              if (div) {
                  div.addEventListener("click", function (ev) {
                      settings.onSelect(item, input);
                      clear();
                      ev.preventDefault();
                      ev.stopPropagation();
                  });
                  if (item === selected) {
                      div.className += " selected";
                  }
                  fragment.appendChild(div);
              }
          });
          container.appendChild(fragment);
          if (items.length < 1) {
              if (settings.emptyMsg) {
                  var empty = doc.createElement("div");
                  empty.className = "empty";
                  empty.textContent = settings.emptyMsg;
                  container.appendChild(empty);
              }
              else {
                  clear();
                  return;
              }
          }
          attach();
          updatePosition();
          updateScroll();
      }
      function updateIfDisplayed() {
          if (containerDisplayed()) {
              update();
          }
      }
      function resizeEventHandler() {
          updateIfDisplayed();
      }
      function scrollEventHandler(e) {
          if (e.target !== container) {
              updateIfDisplayed();
          }
          else {
              e.preventDefault();
          }
      }
      function keyupEventHandler(ev) {
          var keyCode = ev.which || ev.keyCode || 0;
          var ignore = [38 /* Up */, 13 /* Enter */, 27 /* Esc */, 39 /* Right */, 37 /* Left */, 16 /* Shift */, 17 /* Ctrl */, 18 /* Alt */, 20 /* CapsLock */, 91 /* WindowsKey */, 9 /* Tab */];
          for (var _i = 0, ignore_1 = ignore; _i < ignore_1.length; _i++) {
              var key = ignore_1[_i];
              if (keyCode === key) {
                  return;
              }
          }
          // the down key is used to open autocomplete
          if (keyCode === 40 /* Down */ && containerDisplayed()) {
              return;
          }
          startFetch(0 /* Keyboard */);
      }
      /**
       * Automatically move scroll bar if selected item is not visible
       */
      function updateScroll() {
          var elements = container.getElementsByClassName("selected");
          if (elements.length > 0) {
              var element = elements[0];
              // make group visible
              var previous = element.previousElementSibling;
              if (previous && previous.className.indexOf("group") !== -1 && !previous.previousElementSibling) {
                  element = previous;
              }
              if (element.offsetTop < container.scrollTop) {
                  container.scrollTop = element.offsetTop;
              }
              else {
                  var selectBottom = element.offsetTop + element.offsetHeight;
                  var containerBottom = container.scrollTop + container.offsetHeight;
                  if (selectBottom > containerBottom) {
                      container.scrollTop += selectBottom - containerBottom;
                  }
              }
          }
      }
      /**
       * Select the previous item in suggestions
       */
      function selectPrev() {
          if (items.length < 1) {
              selected = undefined;
          }
          else {
              if (selected === items[0]) {
                  selected = items[items.length - 1];
              }
              else {
                  for (var i = items.length - 1; i > 0; i--) {
                      if (selected === items[i] || i === 1) {
                          selected = items[i - 1];
                          break;
                      }
                  }
              }
          }
      }
      /**
       * Select the next item in suggestions
       */
      function selectNext() {
          if (items.length < 1) {
              selected = undefined;
          }
          if (!selected || selected === items[items.length - 1]) {
              selected = items[0];
              return;
          }
          for (var i = 0; i < (items.length - 1); i++) {
              if (selected === items[i]) {
                  selected = items[i + 1];
                  break;
              }
          }
      }
      function keydownEventHandler(ev) {
          var keyCode = ev.which || ev.keyCode || 0;
          if (keyCode === 38 /* Up */ || keyCode === 40 /* Down */ || keyCode === 27 /* Esc */) {
              var containerIsDisplayed = containerDisplayed();
              if (keyCode === 27 /* Esc */) {
                  clear();
              }
              else {
                  if (!containerDisplayed || items.length < 1) {
                      return;
                  }
                  keyCode === 38 /* Up */
                      ? selectPrev()
                      : selectNext();
                  update();
              }
              ev.preventDefault();
              if (containerIsDisplayed) {
                  ev.stopPropagation();
              }
              return;
          }
          if (keyCode === 13 /* Enter */) {
              if (selected) {
                  settings.onSelect(selected, input);
                  clear();
              }
              if (preventSubmit) {
                  ev.preventDefault();
              }
          }
      }
      function focusEventHandler() {
          if (showOnFocus) {
              startFetch(1 /* Focus */);
          }
      }
      function startFetch(trigger) {
          // if multiple keys were pressed, before we get update from server,
          // this may cause redrawing our autocomplete multiple times after the last key press.
          // to avoid this, the number of times keyboard was pressed will be
          // saved and checked before redraw our autocomplete box.
          var savedKeypressCounter = ++keypressCounter;
          var val = input.value;
          if (val.length >= minLen || trigger === 1 /* Focus */) {
              clearDebounceTimer();
              debounceTimer = window.setTimeout(function () {
                  settings.fetch(val, function (elements) {
                      if (keypressCounter === savedKeypressCounter && elements) {
                          items = elements;
                          inputValue = val;
                          selected = items.length > 0 ? items[0] : undefined;
                          update();
                      }
                  }, 0 /* Keyboard */);
              }, trigger === 0 /* Keyboard */ ? debounceWaitMs : 0);
          }
          else {
              clear();
          }
      }
      function blurEventHandler() {
          // we need to delay clear, because when we click on an item, blur will be called before click and remove items from DOM
          setTimeout(function () {
              if (doc.activeElement !== input) {
                  clear();
              }
          }, 200);
      }
      /**
       * Fixes #26: on long clicks focus will be lost and onSelect method will not be called
       */
      container.addEventListener("mousedown", function (evt) {
          evt.stopPropagation();
          evt.preventDefault();
      });
      /**
       * This function will remove DOM elements and clear event handlers
       */
      function destroy() {
          input.removeEventListener("focus", focusEventHandler);
          input.removeEventListener("keydown", keydownEventHandler);
          input.removeEventListener(keyUpEventName, keyupEventHandler);
          input.removeEventListener("blur", blurEventHandler);
          window.removeEventListener("resize", resizeEventHandler);
          doc.removeEventListener("scroll", scrollEventHandler, true);
          clearDebounceTimer();
          clear();
          // prevent the update call if there are pending AJAX requests
          keypressCounter++;
      }
      // setup event handlers
      input.addEventListener("keydown", keydownEventHandler);
      input.addEventListener(keyUpEventName, keyupEventHandler);
      input.addEventListener("blur", blurEventHandler);
      input.addEventListener("focus", focusEventHandler);
      window.addEventListener("resize", resizeEventHandler);
      doc.addEventListener("scroll", scrollEventHandler, true);
      return {
          destroy: destroy
      };
  }

  return autocomplete;

}));


/***/ }),

/***/ "../node_modules/file-saver/dist/FileSaver.min.js":
/*!********************************************************!*\
  !*** ../node_modules/file-saver/dist/FileSaver.min.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(a,b){if(true)!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (b),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}})(this,function(){"use strict";function b(a,b){return"undefined"==typeof b?b={autoBom:!1}:"object"!=typeof b&&(console.warn("Deprecated: Expected third argument to be a object"),b={autoBom:!b}),b.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(a.type)?new Blob(["\uFEFF",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open("GET",b),e.responseType="blob",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error("could not download file")},e.send()}function d(a){var b=new XMLHttpRequest;b.open("HEAD",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent("click"))}catch(c){var b=document.createEvent("MouseEvents");b.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f="object"==typeof window&&window.window===window?window:"object"==typeof self&&self.self===self?self:"object"==typeof global&&global.global===global?global:void 0,a=f.saveAs||("object"!=typeof window||window!==f?function(){}:"download"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement("a");g=g||b.name||"download",j.download=g,j.rel="noopener","string"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target="_blank")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:"msSaveOrOpenBlob"in navigator?function(f,g,h){if(g=g||f.name||"download","string"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement("a");i.href=f,i.target="_blank",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open("","_blank"),e&&(e.document.title=e.document.body.innerText="downloading..."),"string"==typeof a)return c(a,b,d);var g="application/octet-stream"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\/[\d]+/.test(navigator.userAgent);if((i||g&&h)&&"object"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,"data:attachment/file;"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a, true&&(module.exports=a)});


/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../node_modules/html-parse-stringify2/lib/parse-tag.js":
/*!**************************************************************!*\
  !*** ../node_modules/html-parse-stringify2/lib/parse-tag.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var attrRE = /([\w-]+)|=|(['"])([.\s\S]*?)\2/g;
var voidElements = __webpack_require__(/*! void-elements */ "../node_modules/void-elements/index.js");

module.exports = function (tag) {
    var i = 0;
    var key;
    var expectingValueAfterEquals = true;
    var res = {
        type: 'tag',
        name: '',
        voidElement: false,
        attrs: {},
        children: []
    };

    tag.replace(attrRE, function (match) {
        if (match === '=') {
            expectingValueAfterEquals = true;
            i++;
            return;
        }

        if (!expectingValueAfterEquals) {
            if (key) {
                res.attrs[key] = key; // boolean attribute
            }
            key=match;
        } else {
            if (i === 0) {
                if (voidElements[match] || tag.charAt(tag.length - 2) === '/') {
                    res.voidElement = true;
                }
                res.name = match;
            } else {
                res.attrs[key] = match.replace(/^['"]|['"]$/g, '');
                key=undefined;
            }
        }
        i++;
        expectingValueAfterEquals = false;
    });

    return res;
};


/***/ }),

/***/ "../node_modules/html-parse-stringify2/lib/parse.js":
/*!**********************************************************!*\
  !*** ../node_modules/html-parse-stringify2/lib/parse.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*jshint -W030 */
var tagRE = /(?:<!--[\S\s]*?-->|<(?:"[^"]*"['"]*|'[^']*'['"]*|[^'">])+>)/g;
var parseTag = __webpack_require__(/*! ./parse-tag */ "../node_modules/html-parse-stringify2/lib/parse-tag.js");
// re-used obj for quick lookups of components
var empty = Object.create ? Object.create(null) : {};
// common logic for pushing a child node onto a list
function pushTextNode(list, html, level, start, ignoreWhitespace) {
    // calculate correct end of the content slice in case there's
    // no tag after the text node.
    var end = html.indexOf('<', start);
    var content = html.slice(start, end === -1 ? undefined : end);
    // if a node is nothing but whitespace, collapse it as the spec states:
    // https://www.w3.org/TR/html4/struct/text.html#h-9.1
    if (/^\s*$/.test(content)) {
        content = ' ';
    }
    // don't add whitespace-only text nodes if they would be trailing text nodes
    // or if they would be leading whitespace-only text nodes:
    //  * end > -1 indicates this is not a trailing text node
    //  * leading node is when level is -1 and list has length 0
    if ((!ignoreWhitespace && end > -1 && level + list.length >= 0) || content !== ' ') {
        list.push({
            type: 'text',
            content: content
        });
    }
}

module.exports = function parse(html, options) {
    options || (options = {});
    options.components || (options.components = empty);
    var result = [];
    var current;
    var level = -1;
    var arr = [];
    var byTag = {};
    var inComponent = false;

    html.replace(tagRE, function (tag, index) {
        if (inComponent) {
            if (tag !== ('</' + current.name + '>')) {
                return;
            } else {
                inComponent = false;
            }
        }

        var isOpen = tag.charAt(1) !== '/';
        var isComment = tag.indexOf('<!--') === 0;
        var start = index + tag.length;
        var nextChar = html.charAt(start);
        var parent;

        if (isOpen && !isComment) {
            level++;

            current = parseTag(tag);
            if (current.type === 'tag' && options.components[current.name]) {
                current.type = 'component';
                inComponent = true;
            }

            if (!current.voidElement && !inComponent && nextChar && nextChar !== '<') {
                pushTextNode(current.children, html, level, start, options.ignoreWhitespace);
            }

            byTag[current.tagName] = current;

            // if we're at root, push new base node
            if (level === 0) {
                result.push(current);
            }

            parent = arr[level - 1];

            if (parent) {
                parent.children.push(current);
            }

            arr[level] = current;
        }

        if (isComment || !isOpen || current.voidElement) {
            if (!isComment) {
                level--;
            }
            if (!inComponent && nextChar !== '<' && nextChar) {
                // trailing text node
                // if we're at the root, push a base text node. otherwise add as
                // a child to the current node.
                parent = level === -1 ? result : arr[level].children;
                pushTextNode(parent, html, level, start, options.ignoreWhitespace);
            }
        }
    });

    // If the "html" passed isn't actually html, add it as a text node.
    if (!result.length && html.length) {
        pushTextNode(result, html, 0, 0, options.ignoreWhitespace);
    }

    return result;
};


/***/ }),

/***/ "../node_modules/snabbdom-jsx/snabbdom-jsx.js":
/*!****************************************************!*\
  !*** ../node_modules/snabbdom-jsx/snabbdom-jsx.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var SVGNS = 'http://www.w3.org/2000/svg';
var modulesNS = ['hook', 'on', 'style', 'class', 'props', 'attrs', 'dataset'];
var slice = Array.prototype.slice;

function isPrimitive(val) {
  return  typeof val === 'string'   ||
          typeof val === 'number'   ||
          typeof val === 'boolean'  ||
          typeof val === 'symbol'   ||
          val === null              ||
          val === undefined;
}

function normalizeAttrs(attrs, nsURI, defNS, modules) {
  var map = { ns: nsURI };
  for (var i = 0, len = modules.length; i < len; i++) {
    var mod = modules[i];
    if(attrs[mod])
      map[mod] = attrs[mod];
  }
  for(var key in attrs) {
    if(key !== 'key' && key !== 'classNames' && key !== 'selector') {
      var idx = key.indexOf('-');
      if(idx > 0)
        addAttr(key.slice(0, idx), key.slice(idx+1), attrs[key]);
      else if(!map[key])
        addAttr(defNS, key, attrs[key]);
    }
  }
  return map;

  function addAttr(namespace, key, val) {
    var ns = map[namespace] || (map[namespace] = {});
    ns[key] = val;
  }
}

function buildFromStringTag(nsURI, defNS, modules, tag, attrs, children) {

  if(attrs.selector) {
    tag = tag + attrs.selector;
  }
  if(attrs.classNames) {
    var cns = attrs.classNames;
    tag = tag + '.' + (
      Array.isArray(cns) ? cns.join('.') : cns.replace(/\s+/g, '.')
    );
  }

  return {
    sel       : tag,
    data      : normalizeAttrs(attrs, nsURI, defNS, modules),
    children  : children.map( function(c) {
      return isPrimitive(c) ? {text: c} : c;
    }),
    key: attrs.key
  };
}

function buildFromComponent(nsURI, defNS, modules, tag, attrs, children) {
  var res;
  if(typeof tag === 'function')
    res = tag(attrs, children);
  else if(tag && typeof tag.view === 'function')
    res = tag.view(attrs, children);
  else if(tag && typeof tag.render === 'function')
    res = tag.render(attrs, children);
  else
    throw "JSX tag must be either a string, a function or an object with 'view' or 'render' methods";
  res.key = attrs.key;
  return res;
}

function flatten(nested, start, flat) {
  for (var i = start, len = nested.length; i < len; i++) {
    var item = nested[i];
    if (Array.isArray(item)) {
      flatten(item, 0, flat);
    } else {
      flat.push(item);
    }
  }
}

function maybeFlatten(array) {
  if (array) {
    for (var i = 0, len = array.length; i < len; i++) {
      if (Array.isArray(array[i])) {
        var flat = array.slice(0, i);
        flatten(array, i, flat);
        array = flat;
        break;
      }
    }
  }
  return array;
}

function buildVnode(nsURI, defNS, modules, tag, attrs, children) {
  attrs = attrs || {};
  children = maybeFlatten(children);
  if(typeof tag === 'string') {
    return buildFromStringTag(nsURI, defNS, modules, tag, attrs, children)
  } else {
    return buildFromComponent(nsURI, defNS, modules, tag, attrs, children)
  }
}

function JSX(nsURI, defNS, modules) {
  return function jsxWithCustomNS(tag, attrs, children) {
    if(arguments.length > 3 || !Array.isArray(children))
      children = slice.call(arguments, 2);
    return buildVnode(nsURI, defNS || 'props', modules || modulesNS, tag, attrs, children);
  };
}

module.exports = {
  html: JSX(undefined),
  svg: JSX(SVGNS, 'attrs'),
  JSX: JSX
};


/***/ }),

/***/ "../node_modules/snabbdom-virtualize/lib/strings.js":
/*!**********************************************************!*\
  !*** ../node_modules/snabbdom-virtualize/lib/strings.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (html) {
    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];


    var context = options.context || document;

    // If there's nothing here, return null;
    if (!html) {
        return null;
    }

    // Maintain a list of created vnodes so we can call the create hook.
    var createdVNodes = [];

    // Parse the string into the AST and convert to VNodes.
    var vnodes = convertNodes((0, _parse2.default)(html), createdVNodes, context);

    var res = void 0;
    if (!vnodes) {
        // If there are no vnodes but there is string content, then the string
        // must be just text or at least invalid HTML that we should treat as
        // text (since the AST parser didn't find any well-formed HTML).
        res = toVNode({ type: 'text', content: html }, createdVNodes, context);
    } else if (vnodes.length === 1) {
        // If there's only one root node, just return it as opposed to an array.
        res = vnodes[0];
    } else {
        // Otherwise we have an array of VNodes, which we should return.
        res = vnodes;
    }

    // Call the 'create' hook for each created node.
    options.hooks && options.hooks.create && createdVNodes.forEach(function (node) {
        options.hooks.create(node);
    });
    return res;
};

var _parse = __webpack_require__(/*! html-parse-stringify2/lib/parse */ "../node_modules/html-parse-stringify2/lib/parse.js");

var _parse2 = _interopRequireDefault(_parse);

var _h = __webpack_require__(/*! snabbdom/h */ "../node_modules/snabbdom/h.js");

var _h2 = _interopRequireDefault(_h);

var _utils = __webpack_require__(/*! ./utils */ "../node_modules/snabbdom-virtualize/lib/utils.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function convertNodes(nodes, createdVNodes, context) {
    if (nodes instanceof Array && nodes.length > 0) {
        return nodes.map(function (node) {
            return toVNode(node, createdVNodes, context);
        });
    } else {
        return undefined;
    }
}

function toVNode(node, createdVNodes, context) {
    var newNode = void 0;
    if (node.type === 'text') {
        newNode = (0, _utils.createTextVNode)(node.content, context);
    } else {
        newNode = (0, _h2.default)(node.name, buildVNodeData(node, context), convertNodes(node.children, createdVNodes, context));
    }
    createdVNodes.push(newNode);
    return newNode;
}

function buildVNodeData(node, context) {
    var data = {};
    if (!node.attrs) {
        return data;
    }

    var attrs = Object.keys(node.attrs).reduce(function (memo, name) {
        if (name !== 'style' && name !== 'class') {
            var val = (0, _utils.unescapeEntities)(node.attrs[name], context);
            memo ? memo[name] = val : memo = _defineProperty({}, name, val);
        }
        return memo;
    }, null);
    if (attrs) {
        data.attrs = attrs;
    }

    var style = parseStyle(node);
    if (style) {
        data.style = style;
    }

    var classes = parseClass(node);
    if (classes) {
        data.class = classes;
    }

    return data;
}

function parseStyle(node) {
    try {
        return node.attrs.style.split(';').reduce(function (memo, styleProp) {
            var res = styleProp.split(':');
            var name = (0, _utils.transformName)(res[0].trim());
            if (name) {
                var val = res[1].replace('!important', '').trim();
                memo ? memo[name] = val : memo = _defineProperty({}, name, val);
            }
            return memo;
        }, null);
    } catch (e) {
        return null;
    }
}

function parseClass(node) {
    try {
        return node.attrs.class.split(' ').reduce(function (memo, className) {
            className = className.trim();
            if (className) {
                memo ? memo[className] = true : memo = _defineProperty({}, className, true);
            }
            return memo;
        }, null);
    } catch (e) {
        return null;
    }
}

/***/ }),

/***/ "../node_modules/snabbdom-virtualize/lib/utils.js":
/*!********************************************************!*\
  !*** ../node_modules/snabbdom-virtualize/lib/utils.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createTextVNode = createTextVNode;
exports.transformName = transformName;
exports.unescapeEntities = unescapeEntities;

var _vnode = __webpack_require__(/*! snabbdom/vnode */ "../node_modules/snabbdom/vnode.js");

var _vnode2 = _interopRequireDefault(_vnode);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createTextVNode(text, context) {
    return (0, _vnode2.default)(undefined, undefined, undefined, unescapeEntities(text, context));
}

function transformName(name) {
    // Replace -a with A to help camel case style property names.
    name = name.replace(/-(\w)/g, function _replace($1, $2) {
        return $2.toUpperCase();
    });
    // Handle properties that start with a -.
    var firstChar = name.charAt(0).toLowerCase();
    return '' + firstChar + name.substring(1);
}

// Regex for matching HTML entities.
var entityRegex = new RegExp('&[a-z0-9#]+;', 'gi');
// Element for setting innerHTML for transforming entities.
var el = null;

function unescapeEntities(text, context) {
    // Create the element using the context if it doesn't exist.
    if (!el) {
        el = context.createElement('div');
    }
    return text.replace(entityRegex, function (entity) {
        el.innerHTML = entity;
        return el.textContent;
    });
}

/***/ }),

/***/ "../node_modules/snabbdom-virtualize/strings.js":
/*!******************************************************!*\
  !*** ../node_modules/snabbdom-virtualize/strings.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./lib/strings */ "../node_modules/snabbdom-virtualize/lib/strings.js");


/***/ }),

/***/ "../node_modules/snabbdom/es/h.js":
/*!****************************************!*\
  !*** ../node_modules/snabbdom/es/h.js ***!
  \****************************************/
/*! exports provided: h, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return h; });
/* harmony import */ var _vnode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vnode */ "../node_modules/snabbdom/es/vnode.js");
/* harmony import */ var _is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is */ "../node_modules/snabbdom/es/is.js");


function addNS(data, children, sel) {
    data.ns = 'http://www.w3.org/2000/svg';
    if (sel !== 'foreignObject' && children !== undefined) {
        for (var i = 0; i < children.length; ++i) {
            var childData = children[i].data;
            if (childData !== undefined) {
                addNS(childData, children[i].children, children[i].sel);
            }
        }
    }
}
function h(sel, b, c) {
    var data = {}, children, text, i;
    if (c !== undefined) {
        data = b;
        if (_is__WEBPACK_IMPORTED_MODULE_1__["array"](c)) {
            children = c;
        }
        else if (_is__WEBPACK_IMPORTED_MODULE_1__["primitive"](c)) {
            text = c;
        }
        else if (c && c.sel) {
            children = [c];
        }
    }
    else if (b !== undefined) {
        if (_is__WEBPACK_IMPORTED_MODULE_1__["array"](b)) {
            children = b;
        }
        else if (_is__WEBPACK_IMPORTED_MODULE_1__["primitive"](b)) {
            text = b;
        }
        else if (b && b.sel) {
            children = [b];
        }
        else {
            data = b;
        }
    }
    if (children !== undefined) {
        for (i = 0; i < children.length; ++i) {
            if (_is__WEBPACK_IMPORTED_MODULE_1__["primitive"](children[i]))
                children[i] = Object(_vnode__WEBPACK_IMPORTED_MODULE_0__["vnode"])(undefined, undefined, undefined, children[i], undefined);
        }
    }
    if (sel[0] === 's' && sel[1] === 'v' && sel[2] === 'g' &&
        (sel.length === 3 || sel[3] === '.' || sel[3] === '#')) {
        addNS(data, children, sel);
    }
    return Object(_vnode__WEBPACK_IMPORTED_MODULE_0__["vnode"])(sel, data, children, text, undefined);
}
;
/* harmony default export */ __webpack_exports__["default"] = (h);


/***/ }),

/***/ "../node_modules/snabbdom/es/htmldomapi.js":
/*!*************************************************!*\
  !*** ../node_modules/snabbdom/es/htmldomapi.js ***!
  \*************************************************/
/*! exports provided: htmlDomApi, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "htmlDomApi", function() { return htmlDomApi; });
function createElement(tagName) {
    return document.createElement(tagName);
}
function createElementNS(namespaceURI, qualifiedName) {
    return document.createElementNS(namespaceURI, qualifiedName);
}
function createTextNode(text) {
    return document.createTextNode(text);
}
function createComment(text) {
    return document.createComment(text);
}
function insertBefore(parentNode, newNode, referenceNode) {
    parentNode.insertBefore(newNode, referenceNode);
}
function removeChild(node, child) {
    node.removeChild(child);
}
function appendChild(node, child) {
    node.appendChild(child);
}
function parentNode(node) {
    return node.parentNode;
}
function nextSibling(node) {
    return node.nextSibling;
}
function tagName(elm) {
    return elm.tagName;
}
function setTextContent(node, text) {
    node.textContent = text;
}
function getTextContent(node) {
    return node.textContent;
}
function isElement(node) {
    return node.nodeType === 1;
}
function isText(node) {
    return node.nodeType === 3;
}
function isComment(node) {
    return node.nodeType === 8;
}
var htmlDomApi = {
    createElement: createElement,
    createElementNS: createElementNS,
    createTextNode: createTextNode,
    createComment: createComment,
    insertBefore: insertBefore,
    removeChild: removeChild,
    appendChild: appendChild,
    parentNode: parentNode,
    nextSibling: nextSibling,
    tagName: tagName,
    setTextContent: setTextContent,
    getTextContent: getTextContent,
    isElement: isElement,
    isText: isText,
    isComment: isComment,
};
/* harmony default export */ __webpack_exports__["default"] = (htmlDomApi);


/***/ }),

/***/ "../node_modules/snabbdom/es/is.js":
/*!*****************************************!*\
  !*** ../node_modules/snabbdom/es/is.js ***!
  \*****************************************/
/*! exports provided: array, primitive */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "array", function() { return array; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "primitive", function() { return primitive; });
var array = Array.isArray;
function primitive(s) {
    return typeof s === 'string' || typeof s === 'number';
}


/***/ }),

/***/ "../node_modules/snabbdom/es/snabbdom.js":
/*!***********************************************!*\
  !*** ../node_modules/snabbdom/es/snabbdom.js ***!
  \***********************************************/
/*! exports provided: h, thunk, init */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony import */ var _vnode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vnode */ "../node_modules/snabbdom/es/vnode.js");
/* harmony import */ var _is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is */ "../node_modules/snabbdom/es/is.js");
/* harmony import */ var _htmldomapi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./htmldomapi */ "../node_modules/snabbdom/es/htmldomapi.js");
/* harmony import */ var _h__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./h */ "../node_modules/snabbdom/es/h.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "h", function() { return _h__WEBPACK_IMPORTED_MODULE_3__["h"]; });

/* harmony import */ var _thunk__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./thunk */ "../node_modules/snabbdom/es/thunk.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thunk", function() { return _thunk__WEBPACK_IMPORTED_MODULE_4__["thunk"]; });




function isUndef(s) { return s === undefined; }
function isDef(s) { return s !== undefined; }
var emptyNode = Object(_vnode__WEBPACK_IMPORTED_MODULE_0__["default"])('', {}, [], undefined, undefined);
function sameVnode(vnode1, vnode2) {
    return vnode1.key === vnode2.key && vnode1.sel === vnode2.sel;
}
function isVnode(vnode) {
    return vnode.sel !== undefined;
}
function createKeyToOldIdx(children, beginIdx, endIdx) {
    var i, map = {}, key, ch;
    for (i = beginIdx; i <= endIdx; ++i) {
        ch = children[i];
        if (ch != null) {
            key = ch.key;
            if (key !== undefined)
                map[key] = i;
        }
    }
    return map;
}
var hooks = ['create', 'update', 'remove', 'destroy', 'pre', 'post'];


function init(modules, domApi) {
    var i, j, cbs = {};
    var api = domApi !== undefined ? domApi : _htmldomapi__WEBPACK_IMPORTED_MODULE_2__["default"];
    for (i = 0; i < hooks.length; ++i) {
        cbs[hooks[i]] = [];
        for (j = 0; j < modules.length; ++j) {
            var hook = modules[j][hooks[i]];
            if (hook !== undefined) {
                cbs[hooks[i]].push(hook);
            }
        }
    }
    function emptyNodeAt(elm) {
        var id = elm.id ? '#' + elm.id : '';
        var c = elm.className ? '.' + elm.className.split(' ').join('.') : '';
        return Object(_vnode__WEBPACK_IMPORTED_MODULE_0__["default"])(api.tagName(elm).toLowerCase() + id + c, {}, [], undefined, elm);
    }
    function createRmCb(childElm, listeners) {
        return function rmCb() {
            if (--listeners === 0) {
                var parent_1 = api.parentNode(childElm);
                api.removeChild(parent_1, childElm);
            }
        };
    }
    function createElm(vnode, insertedVnodeQueue) {
        var i, data = vnode.data;
        if (data !== undefined) {
            if (isDef(i = data.hook) && isDef(i = i.init)) {
                i(vnode);
                data = vnode.data;
            }
        }
        var children = vnode.children, sel = vnode.sel;
        if (sel === '!') {
            if (isUndef(vnode.text)) {
                vnode.text = '';
            }
            vnode.elm = api.createComment(vnode.text);
        }
        else if (sel !== undefined) {
            // Parse selector
            var hashIdx = sel.indexOf('#');
            var dotIdx = sel.indexOf('.', hashIdx);
            var hash = hashIdx > 0 ? hashIdx : sel.length;
            var dot = dotIdx > 0 ? dotIdx : sel.length;
            var tag = hashIdx !== -1 || dotIdx !== -1 ? sel.slice(0, Math.min(hash, dot)) : sel;
            var elm = vnode.elm = isDef(data) && isDef(i = data.ns) ? api.createElementNS(i, tag)
                : api.createElement(tag);
            if (hash < dot)
                elm.setAttribute('id', sel.slice(hash + 1, dot));
            if (dotIdx > 0)
                elm.setAttribute('class', sel.slice(dot + 1).replace(/\./g, ' '));
            for (i = 0; i < cbs.create.length; ++i)
                cbs.create[i](emptyNode, vnode);
            if (_is__WEBPACK_IMPORTED_MODULE_1__["array"](children)) {
                for (i = 0; i < children.length; ++i) {
                    var ch = children[i];
                    if (ch != null) {
                        api.appendChild(elm, createElm(ch, insertedVnodeQueue));
                    }
                }
            }
            else if (_is__WEBPACK_IMPORTED_MODULE_1__["primitive"](vnode.text)) {
                api.appendChild(elm, api.createTextNode(vnode.text));
            }
            i = vnode.data.hook; // Reuse variable
            if (isDef(i)) {
                if (i.create)
                    i.create(emptyNode, vnode);
                if (i.insert)
                    insertedVnodeQueue.push(vnode);
            }
        }
        else {
            vnode.elm = api.createTextNode(vnode.text);
        }
        return vnode.elm;
    }
    function addVnodes(parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {
        for (; startIdx <= endIdx; ++startIdx) {
            var ch = vnodes[startIdx];
            if (ch != null) {
                api.insertBefore(parentElm, createElm(ch, insertedVnodeQueue), before);
            }
        }
    }
    function invokeDestroyHook(vnode) {
        var i, j, data = vnode.data;
        if (data !== undefined) {
            if (isDef(i = data.hook) && isDef(i = i.destroy))
                i(vnode);
            for (i = 0; i < cbs.destroy.length; ++i)
                cbs.destroy[i](vnode);
            if (vnode.children !== undefined) {
                for (j = 0; j < vnode.children.length; ++j) {
                    i = vnode.children[j];
                    if (i != null && typeof i !== "string") {
                        invokeDestroyHook(i);
                    }
                }
            }
        }
    }
    function removeVnodes(parentElm, vnodes, startIdx, endIdx) {
        for (; startIdx <= endIdx; ++startIdx) {
            var i_1 = void 0, listeners = void 0, rm = void 0, ch = vnodes[startIdx];
            if (ch != null) {
                if (isDef(ch.sel)) {
                    invokeDestroyHook(ch);
                    listeners = cbs.remove.length + 1;
                    rm = createRmCb(ch.elm, listeners);
                    for (i_1 = 0; i_1 < cbs.remove.length; ++i_1)
                        cbs.remove[i_1](ch, rm);
                    if (isDef(i_1 = ch.data) && isDef(i_1 = i_1.hook) && isDef(i_1 = i_1.remove)) {
                        i_1(ch, rm);
                    }
                    else {
                        rm();
                    }
                }
                else {
                    api.removeChild(parentElm, ch.elm);
                }
            }
        }
    }
    function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue) {
        var oldStartIdx = 0, newStartIdx = 0;
        var oldEndIdx = oldCh.length - 1;
        var oldStartVnode = oldCh[0];
        var oldEndVnode = oldCh[oldEndIdx];
        var newEndIdx = newCh.length - 1;
        var newStartVnode = newCh[0];
        var newEndVnode = newCh[newEndIdx];
        var oldKeyToIdx;
        var idxInOld;
        var elmToMove;
        var before;
        while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
            if (oldStartVnode == null) {
                oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left
            }
            else if (oldEndVnode == null) {
                oldEndVnode = oldCh[--oldEndIdx];
            }
            else if (newStartVnode == null) {
                newStartVnode = newCh[++newStartIdx];
            }
            else if (newEndVnode == null) {
                newEndVnode = newCh[--newEndIdx];
            }
            else if (sameVnode(oldStartVnode, newStartVnode)) {
                patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
                oldStartVnode = oldCh[++oldStartIdx];
                newStartVnode = newCh[++newStartIdx];
            }
            else if (sameVnode(oldEndVnode, newEndVnode)) {
                patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
                oldEndVnode = oldCh[--oldEndIdx];
                newEndVnode = newCh[--newEndIdx];
            }
            else if (sameVnode(oldStartVnode, newEndVnode)) {
                patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
                api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));
                oldStartVnode = oldCh[++oldStartIdx];
                newEndVnode = newCh[--newEndIdx];
            }
            else if (sameVnode(oldEndVnode, newStartVnode)) {
                patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
                api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
                oldEndVnode = oldCh[--oldEndIdx];
                newStartVnode = newCh[++newStartIdx];
            }
            else {
                if (oldKeyToIdx === undefined) {
                    oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);
                }
                idxInOld = oldKeyToIdx[newStartVnode.key];
                if (isUndef(idxInOld)) {
                    api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);
                    newStartVnode = newCh[++newStartIdx];
                }
                else {
                    elmToMove = oldCh[idxInOld];
                    if (elmToMove.sel !== newStartVnode.sel) {
                        api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);
                    }
                    else {
                        patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);
                        oldCh[idxInOld] = undefined;
                        api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);
                    }
                    newStartVnode = newCh[++newStartIdx];
                }
            }
        }
        if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {
            if (oldStartIdx > oldEndIdx) {
                before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;
                addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
            }
            else {
                removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
            }
        }
    }
    function patchVnode(oldVnode, vnode, insertedVnodeQueue) {
        var i, hook;
        if (isDef(i = vnode.data) && isDef(hook = i.hook) && isDef(i = hook.prepatch)) {
            i(oldVnode, vnode);
        }
        var elm = vnode.elm = oldVnode.elm;
        var oldCh = oldVnode.children;
        var ch = vnode.children;
        if (oldVnode === vnode)
            return;
        if (vnode.data !== undefined) {
            for (i = 0; i < cbs.update.length; ++i)
                cbs.update[i](oldVnode, vnode);
            i = vnode.data.hook;
            if (isDef(i) && isDef(i = i.update))
                i(oldVnode, vnode);
        }
        if (isUndef(vnode.text)) {
            if (isDef(oldCh) && isDef(ch)) {
                if (oldCh !== ch)
                    updateChildren(elm, oldCh, ch, insertedVnodeQueue);
            }
            else if (isDef(ch)) {
                if (isDef(oldVnode.text))
                    api.setTextContent(elm, '');
                addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
            }
            else if (isDef(oldCh)) {
                removeVnodes(elm, oldCh, 0, oldCh.length - 1);
            }
            else if (isDef(oldVnode.text)) {
                api.setTextContent(elm, '');
            }
        }
        else if (oldVnode.text !== vnode.text) {
            if (isDef(oldCh)) {
                removeVnodes(elm, oldCh, 0, oldCh.length - 1);
            }
            api.setTextContent(elm, vnode.text);
        }
        if (isDef(hook) && isDef(i = hook.postpatch)) {
            i(oldVnode, vnode);
        }
    }
    return function patch(oldVnode, vnode) {
        var i, elm, parent;
        var insertedVnodeQueue = [];
        for (i = 0; i < cbs.pre.length; ++i)
            cbs.pre[i]();
        if (!isVnode(oldVnode)) {
            oldVnode = emptyNodeAt(oldVnode);
        }
        if (sameVnode(oldVnode, vnode)) {
            patchVnode(oldVnode, vnode, insertedVnodeQueue);
        }
        else {
            elm = oldVnode.elm;
            parent = api.parentNode(elm);
            createElm(vnode, insertedVnodeQueue);
            if (parent !== null) {
                api.insertBefore(parent, vnode.elm, api.nextSibling(elm));
                removeVnodes(parent, [oldVnode], 0, 0);
            }
        }
        for (i = 0; i < insertedVnodeQueue.length; ++i) {
            insertedVnodeQueue[i].data.hook.insert(insertedVnodeQueue[i]);
        }
        for (i = 0; i < cbs.post.length; ++i)
            cbs.post[i]();
        return vnode;
    };
}


/***/ }),

/***/ "../node_modules/snabbdom/es/thunk.js":
/*!********************************************!*\
  !*** ../node_modules/snabbdom/es/thunk.js ***!
  \********************************************/
/*! exports provided: thunk, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "thunk", function() { return thunk; });
/* harmony import */ var _h__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./h */ "../node_modules/snabbdom/es/h.js");

function copyToThunk(vnode, thunk) {
    thunk.elm = vnode.elm;
    vnode.data.fn = thunk.data.fn;
    vnode.data.args = thunk.data.args;
    thunk.data = vnode.data;
    thunk.children = vnode.children;
    thunk.text = vnode.text;
    thunk.elm = vnode.elm;
}
function init(thunk) {
    var cur = thunk.data;
    var vnode = cur.fn.apply(undefined, cur.args);
    copyToThunk(vnode, thunk);
}
function prepatch(oldVnode, thunk) {
    var i, old = oldVnode.data, cur = thunk.data;
    var oldArgs = old.args, args = cur.args;
    if (old.fn !== cur.fn || oldArgs.length !== args.length) {
        copyToThunk(cur.fn.apply(undefined, args), thunk);
        return;
    }
    for (i = 0; i < args.length; ++i) {
        if (oldArgs[i] !== args[i]) {
            copyToThunk(cur.fn.apply(undefined, args), thunk);
            return;
        }
    }
    copyToThunk(oldVnode, thunk);
}
var thunk = function thunk(sel, key, fn, args) {
    if (args === undefined) {
        args = fn;
        fn = key;
        key = undefined;
    }
    return Object(_h__WEBPACK_IMPORTED_MODULE_0__["h"])(sel, {
        key: key,
        hook: { init: init, prepatch: prepatch },
        fn: fn,
        args: args
    });
};
/* harmony default export */ __webpack_exports__["default"] = (thunk);


/***/ }),

/***/ "../node_modules/snabbdom/es/vnode.js":
/*!********************************************!*\
  !*** ../node_modules/snabbdom/es/vnode.js ***!
  \********************************************/
/*! exports provided: vnode, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vnode", function() { return vnode; });
function vnode(sel, data, children, text, elm) {
    var key = data === undefined ? undefined : data.key;
    return { sel: sel, data: data, children: children,
        text: text, elm: elm, key: key };
}
/* harmony default export */ __webpack_exports__["default"] = (vnode);


/***/ }),

/***/ "../node_modules/snabbdom/h.js":
/*!*************************************!*\
  !*** ../node_modules/snabbdom/h.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var vnode_1 = __webpack_require__(/*! ./vnode */ "../node_modules/snabbdom/vnode.js");
var is = __webpack_require__(/*! ./is */ "../node_modules/snabbdom/is.js");
function addNS(data, children, sel) {
    data.ns = 'http://www.w3.org/2000/svg';
    if (sel !== 'foreignObject' && children !== undefined) {
        for (var i = 0; i < children.length; ++i) {
            var childData = children[i].data;
            if (childData !== undefined) {
                addNS(childData, children[i].children, children[i].sel);
            }
        }
    }
}
function h(sel, b, c) {
    var data = {}, children, text, i;
    if (c !== undefined) {
        data = b;
        if (is.array(c)) {
            children = c;
        }
        else if (is.primitive(c)) {
            text = c;
        }
        else if (c && c.sel) {
            children = [c];
        }
    }
    else if (b !== undefined) {
        if (is.array(b)) {
            children = b;
        }
        else if (is.primitive(b)) {
            text = b;
        }
        else if (b && b.sel) {
            children = [b];
        }
        else {
            data = b;
        }
    }
    if (children !== undefined) {
        for (i = 0; i < children.length; ++i) {
            if (is.primitive(children[i]))
                children[i] = vnode_1.vnode(undefined, undefined, undefined, children[i], undefined);
        }
    }
    if (sel[0] === 's' && sel[1] === 'v' && sel[2] === 'g' &&
        (sel.length === 3 || sel[3] === '.' || sel[3] === '#')) {
        addNS(data, children, sel);
    }
    return vnode_1.vnode(sel, data, children, text, undefined);
}
exports.h = h;
;
exports.default = h;


/***/ }),

/***/ "../node_modules/snabbdom/is.js":
/*!**************************************!*\
  !*** ../node_modules/snabbdom/is.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.array = Array.isArray;
function primitive(s) {
    return typeof s === 'string' || typeof s === 'number';
}
exports.primitive = primitive;


/***/ }),

/***/ "../node_modules/snabbdom/modules/attributes.js":
/*!******************************************************!*\
  !*** ../node_modules/snabbdom/modules/attributes.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var xlinkNS = 'http://www.w3.org/1999/xlink';
var xmlNS = 'http://www.w3.org/XML/1998/namespace';
var colonChar = 58;
var xChar = 120;
function updateAttrs(oldVnode, vnode) {
    var key, elm = vnode.elm, oldAttrs = oldVnode.data.attrs, attrs = vnode.data.attrs;
    if (!oldAttrs && !attrs)
        return;
    if (oldAttrs === attrs)
        return;
    oldAttrs = oldAttrs || {};
    attrs = attrs || {};
    // update modified attributes, add new attributes
    for (key in attrs) {
        var cur = attrs[key];
        var old = oldAttrs[key];
        if (old !== cur) {
            if (cur === true) {
                elm.setAttribute(key, "");
            }
            else if (cur === false) {
                elm.removeAttribute(key);
            }
            else {
                if (key.charCodeAt(0) !== xChar) {
                    elm.setAttribute(key, cur);
                }
                else if (key.charCodeAt(3) === colonChar) {
                    // Assume xml namespace
                    elm.setAttributeNS(xmlNS, key, cur);
                }
                else if (key.charCodeAt(5) === colonChar) {
                    // Assume xlink namespace
                    elm.setAttributeNS(xlinkNS, key, cur);
                }
                else {
                    elm.setAttribute(key, cur);
                }
            }
        }
    }
    // remove removed attributes
    // use `in` operator since the previous `for` iteration uses it (.i.e. add even attributes with undefined value)
    // the other option is to remove all attributes with value == undefined
    for (key in oldAttrs) {
        if (!(key in attrs)) {
            elm.removeAttribute(key);
        }
    }
}
exports.attributesModule = { create: updateAttrs, update: updateAttrs };
exports.default = exports.attributesModule;


/***/ }),

/***/ "../node_modules/snabbdom/modules/class.js":
/*!*************************************************!*\
  !*** ../node_modules/snabbdom/modules/class.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function updateClass(oldVnode, vnode) {
    var cur, name, elm = vnode.elm, oldClass = oldVnode.data.class, klass = vnode.data.class;
    if (!oldClass && !klass)
        return;
    if (oldClass === klass)
        return;
    oldClass = oldClass || {};
    klass = klass || {};
    for (name in oldClass) {
        if (!klass[name]) {
            elm.classList.remove(name);
        }
    }
    for (name in klass) {
        cur = klass[name];
        if (cur !== oldClass[name]) {
            elm.classList[cur ? 'add' : 'remove'](name);
        }
    }
}
exports.classModule = { create: updateClass, update: updateClass };
exports.default = exports.classModule;


/***/ }),

/***/ "../node_modules/snabbdom/modules/eventlisteners.js":
/*!**********************************************************!*\
  !*** ../node_modules/snabbdom/modules/eventlisteners.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function invokeHandler(handler, vnode, event) {
    if (typeof handler === "function") {
        // call function handler
        handler.call(vnode, event, vnode);
    }
    else if (typeof handler === "object") {
        // call handler with arguments
        if (typeof handler[0] === "function") {
            // special case for single argument for performance
            if (handler.length === 2) {
                handler[0].call(vnode, handler[1], event, vnode);
            }
            else {
                var args = handler.slice(1);
                args.push(event);
                args.push(vnode);
                handler[0].apply(vnode, args);
            }
        }
        else {
            // call multiple handlers
            for (var i = 0; i < handler.length; i++) {
                invokeHandler(handler[i], vnode, event);
            }
        }
    }
}
function handleEvent(event, vnode) {
    var name = event.type, on = vnode.data.on;
    // call event handler(s) if exists
    if (on && on[name]) {
        invokeHandler(on[name], vnode, event);
    }
}
function createListener() {
    return function handler(event) {
        handleEvent(event, handler.vnode);
    };
}
function updateEventListeners(oldVnode, vnode) {
    var oldOn = oldVnode.data.on, oldListener = oldVnode.listener, oldElm = oldVnode.elm, on = vnode && vnode.data.on, elm = (vnode && vnode.elm), name;
    // optimization for reused immutable handlers
    if (oldOn === on) {
        return;
    }
    // remove existing listeners which no longer used
    if (oldOn && oldListener) {
        // if element changed or deleted we remove all existing listeners unconditionally
        if (!on) {
            for (name in oldOn) {
                // remove listener if element was changed or existing listeners removed
                oldElm.removeEventListener(name, oldListener, false);
            }
        }
        else {
            for (name in oldOn) {
                // remove listener if existing listener removed
                if (!on[name]) {
                    oldElm.removeEventListener(name, oldListener, false);
                }
            }
        }
    }
    // add new listeners which has not already attached
    if (on) {
        // reuse existing listener or create new
        var listener = vnode.listener = oldVnode.listener || createListener();
        // update vnode for listener
        listener.vnode = vnode;
        // if element changed or added we add all needed listeners unconditionally
        if (!oldOn) {
            for (name in on) {
                // add listener if element was changed or new listeners added
                elm.addEventListener(name, listener, false);
            }
        }
        else {
            for (name in on) {
                // add listener if new listener added
                if (!oldOn[name]) {
                    elm.addEventListener(name, listener, false);
                }
            }
        }
    }
}
exports.eventListenersModule = {
    create: updateEventListeners,
    update: updateEventListeners,
    destroy: updateEventListeners
};
exports.default = exports.eventListenersModule;


/***/ }),

/***/ "../node_modules/snabbdom/modules/props.js":
/*!*************************************************!*\
  !*** ../node_modules/snabbdom/modules/props.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function updateProps(oldVnode, vnode) {
    var key, cur, old, elm = vnode.elm, oldProps = oldVnode.data.props, props = vnode.data.props;
    if (!oldProps && !props)
        return;
    if (oldProps === props)
        return;
    oldProps = oldProps || {};
    props = props || {};
    for (key in oldProps) {
        if (!props[key]) {
            delete elm[key];
        }
    }
    for (key in props) {
        cur = props[key];
        old = oldProps[key];
        if (old !== cur && (key !== 'value' || elm[key] !== cur)) {
            elm[key] = cur;
        }
    }
}
exports.propsModule = { create: updateProps, update: updateProps };
exports.default = exports.propsModule;


/***/ }),

/***/ "../node_modules/snabbdom/modules/style.js":
/*!*************************************************!*\
  !*** ../node_modules/snabbdom/modules/style.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Bindig `requestAnimationFrame` like this fixes a bug in IE/Edge. See #360 and #409.
var raf = (typeof window !== 'undefined' && (window.requestAnimationFrame).bind(window)) || setTimeout;
var nextFrame = function (fn) { raf(function () { raf(fn); }); };
var reflowForced = false;
function setNextFrame(obj, prop, val) {
    nextFrame(function () { obj[prop] = val; });
}
function updateStyle(oldVnode, vnode) {
    var cur, name, elm = vnode.elm, oldStyle = oldVnode.data.style, style = vnode.data.style;
    if (!oldStyle && !style)
        return;
    if (oldStyle === style)
        return;
    oldStyle = oldStyle || {};
    style = style || {};
    var oldHasDel = 'delayed' in oldStyle;
    for (name in oldStyle) {
        if (!style[name]) {
            if (name[0] === '-' && name[1] === '-') {
                elm.style.removeProperty(name);
            }
            else {
                elm.style[name] = '';
            }
        }
    }
    for (name in style) {
        cur = style[name];
        if (name === 'delayed' && style.delayed) {
            for (var name2 in style.delayed) {
                cur = style.delayed[name2];
                if (!oldHasDel || cur !== oldStyle.delayed[name2]) {
                    setNextFrame(elm.style, name2, cur);
                }
            }
        }
        else if (name !== 'remove' && cur !== oldStyle[name]) {
            if (name[0] === '-' && name[1] === '-') {
                elm.style.setProperty(name, cur);
            }
            else {
                elm.style[name] = cur;
            }
        }
    }
}
function applyDestroyStyle(vnode) {
    var style, name, elm = vnode.elm, s = vnode.data.style;
    if (!s || !(style = s.destroy))
        return;
    for (name in style) {
        elm.style[name] = style[name];
    }
}
function applyRemoveStyle(vnode, rm) {
    var s = vnode.data.style;
    if (!s || !s.remove) {
        rm();
        return;
    }
    if (!reflowForced) {
        getComputedStyle(document.body).transform;
        reflowForced = true;
    }
    var name, elm = vnode.elm, i = 0, compStyle, style = s.remove, amount = 0, applied = [];
    for (name in style) {
        applied.push(name);
        elm.style[name] = style[name];
    }
    compStyle = getComputedStyle(elm);
    var props = compStyle['transition-property'].split(', ');
    for (; i < props.length; ++i) {
        if (applied.indexOf(props[i]) !== -1)
            amount++;
    }
    elm.addEventListener('transitionend', function (ev) {
        if (ev.target === elm)
            --amount;
        if (amount === 0)
            rm();
    });
}
function forceReflow() {
    reflowForced = false;
}
exports.styleModule = {
    pre: forceReflow,
    create: updateStyle,
    update: updateStyle,
    destroy: applyDestroyStyle,
    remove: applyRemoveStyle
};
exports.default = exports.styleModule;


/***/ }),

/***/ "../node_modules/snabbdom/vnode.js":
/*!*****************************************!*\
  !*** ../node_modules/snabbdom/vnode.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function vnode(sel, data, children, text, elm) {
    var key = data === undefined ? undefined : data.key;
    return { sel: sel, data: data, children: children,
        text: text, elm: elm, key: key };
}
exports.vnode = vnode;
exports.default = vnode;


/***/ }),

/***/ "../node_modules/sprotty-theia/lib/sprotty/theia-diagram-server.js":
/*!*************************************************************************!*\
  !*** ../node_modules/sprotty-theia/lib/sprotty/theia-diagram-server.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../node_modules/sprotty/lib/index.js");
exports.IRootPopupModelProvider = Symbol('IRootPopupModelProvider');
/**
 * A sprotty DiagramServer that integrates with the Theia workbench.
 *
 * This class is the sprotty side of the Theia/sprotty integration. It
 * is instantiated with the DI container of the sprotty diagram. Theia
 * services are available via the TheiaDiagramServerConnector.
 */
var TheiaDiagramServer = /** @class */ (function (_super) {
    __extends(TheiaDiagramServer, _super);
    function TheiaDiagramServer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TheiaDiagramServer.prototype.connect = function (connector) {
        this._connector = connector;
    };
    TheiaDiagramServer.prototype.disconnect = function () {
    };
    Object.defineProperty(TheiaDiagramServer.prototype, "connector", {
        get: function () {
            if (!this._connector) {
                throw Error("TheiaDiagramServer is not connected.");
            }
            return this._connector;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TheiaDiagramServer.prototype, "sourceUri", {
        get: function () {
            return this._sourceUri;
        },
        enumerable: true,
        configurable: true
    });
    TheiaDiagramServer.prototype.initialize = function (registry) {
        _super.prototype.initialize.call(this, registry);
        registry.register(sprotty_1.SelectAction.KIND, this);
    };
    TheiaDiagramServer.prototype.handle = function (action) {
        if (action instanceof sprotty_1.RequestModelAction && action.options !== undefined)
            this._sourceUri = action.options.sourceUri;
        return _super.prototype.handle.call(this, action);
    };
    TheiaDiagramServer.prototype.handleLocally = function (action) {
        if (action instanceof sprotty_1.RequestPopupModelAction) {
            return this.handleRequestPopupModel(action);
        }
        else {
            return _super.prototype.handleLocally.call(this, action);
        }
    };
    TheiaDiagramServer.prototype.handleExportSvgAction = function (action) {
        this.connector.save(this.sourceUri, action);
        return true;
    };
    TheiaDiagramServer.prototype.handleRequestPopupModel = function (action) {
        var _this = this;
        if (action.elementId === this.currentRoot.id) {
            this.rootPopupModelProvider.getPopupModel(action, this.currentRoot).then(function (model) {
                if (model)
                    _this.actionDispatcher.dispatch(new sprotty_1.SetPopupModelAction(model));
            });
            return false;
        }
        else {
            return true;
        }
    };
    TheiaDiagramServer.prototype.handleServerStateAction = function (status) {
        this.connector.showStatus(this.clientId, status);
        return false;
    };
    TheiaDiagramServer.prototype.sendMessage = function (message) {
        this.connector.sendMessage(message);
    };
    /**
     * made public
     */
    TheiaDiagramServer.prototype.messageReceived = function (message) {
        _super.prototype.messageReceived.call(this, message);
    };
    __decorate([
        inversify_1.inject(exports.IRootPopupModelProvider), inversify_1.optional(),
        __metadata("design:type", Object)
    ], TheiaDiagramServer.prototype, "rootPopupModelProvider", void 0);
    TheiaDiagramServer = __decorate([
        inversify_1.injectable()
    ], TheiaDiagramServer);
    return TheiaDiagramServer;
}(sprotty_1.DiagramServer));
exports.TheiaDiagramServer = TheiaDiagramServer;


/***/ }),

/***/ "../node_modules/sprotty-theia/lib/sprotty/theia-file-saver.js":
/*!*********************************************************************!*\
  !*** ../node_modules/sprotty-theia/lib/sprotty/theia-file-saver.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var common_1 = __webpack_require__(/*! @theia/filesystem/lib/common */ "../node_modules/@theia/filesystem/lib/common/index.js");
var common_2 = __webpack_require__(/*! @theia/core/lib/common */ "../node_modules/@theia/core/lib/common/index.js");
var TheiaFileSaver = /** @class */ (function () {
    function TheiaFileSaver() {
    }
    TheiaFileSaver.prototype.save = function (sourceUri, action) {
        var _this = this;
        this.getNextFileName(sourceUri).then(function (fileName) {
            return _this.fileSystem.createFile(fileName, { content: action.svg })
                .then(function () {
                return _this.messageService.info("Diagram exported to '" + fileName + "'");
            })
                .catch(function (error) {
                return _this.messageService.error("Error exporting diagram '" + error);
            });
        });
    };
    TheiaFileSaver.prototype.getNextFileName = function (sourceUri) {
        var _this = this;
        return new Promise(function (resolve) { return _this.tryNextFileName(sourceUri, 0, resolve); });
    };
    TheiaFileSaver.prototype.tryNextFileName = function (sourceURI, count, resolve) {
        var _this = this;
        var currentName = sourceURI + (count === 0 ? '' : count) + '.svg';
        this.fileSystem.exists(currentName).then(function (exists) {
            if (!exists)
                resolve(currentName);
            else
                _this.tryNextFileName(sourceURI, ++count, resolve);
        });
    };
    __decorate([
        inversify_1.inject(common_1.FileSystem),
        __metadata("design:type", Object)
    ], TheiaFileSaver.prototype, "fileSystem", void 0);
    __decorate([
        inversify_1.inject(common_2.MessageService),
        __metadata("design:type", common_2.MessageService)
    ], TheiaFileSaver.prototype, "messageService", void 0);
    TheiaFileSaver = __decorate([
        inversify_1.injectable()
    ], TheiaFileSaver);
    return TheiaFileSaver;
}());
exports.TheiaFileSaver = TheiaFileSaver;


/***/ }),

/***/ "../node_modules/sprotty-theia/lib/theia/diagram-commands.js":
/*!*******************************************************************!*\
  !*** ../node_modules/sprotty-theia/lib/theia/diagram-commands.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var sprotty_1 = __webpack_require__(/*! sprotty */ "../node_modules/sprotty/lib/index.js");
var diagram_widget_1 = __webpack_require__(/*! ./diagram-widget */ "../node_modules/sprotty-theia/lib/theia/diagram-widget.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var common_1 = __webpack_require__(/*! @theia/core/lib/common */ "../node_modules/@theia/core/lib/common/index.js");
var browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "../node_modules/@theia/core/lib/browser/index.js");
var browser_2 = __webpack_require__(/*! @theia/editor/lib/browser */ "../node_modules/@theia/editor/lib/browser/index.js");
var diagram_manager_1 = __webpack_require__(/*! ./diagram-manager */ "../node_modules/sprotty-theia/lib/theia/diagram-manager.js");
var DiagramCommands;
(function (DiagramCommands) {
    DiagramCommands.CENTER = 'diagram:center';
    DiagramCommands.FIT = 'diagram:fit';
    DiagramCommands.EXPORT = 'diagram:export';
    DiagramCommands.SELECT_ALL = 'diagram.selectAll';
    DiagramCommands.OPEN_IN_DIAGRAM = 'diagram.open';
    DiagramCommands.DELETE = 'diagram.delete';
    DiagramCommands.LAYOUT = 'diagram.layout';
})(DiagramCommands = exports.DiagramCommands || (exports.DiagramCommands = {}));
var DiagramMenus;
(function (DiagramMenus) {
    DiagramMenus.DIAGRAM = common_1.MAIN_MENU_BAR.concat("3_diagram");
    DiagramMenus.EDITOR_CONTEXT_DIAGRAM = browser_2.EDITOR_CONTEXT_MENU.concat("a_diagram");
})(DiagramMenus = exports.DiagramMenus || (exports.DiagramMenus = {}));
var DiagramMenuContribution = /** @class */ (function () {
    function DiagramMenuContribution() {
    }
    DiagramMenuContribution.prototype.registerMenus = function (registry) {
        registry.registerSubmenu(DiagramMenus.DIAGRAM, "Diagram");
        registry.registerMenuAction(DiagramMenus.DIAGRAM, {
            commandId: DiagramCommands.CENTER
        });
        registry.registerMenuAction(DiagramMenus.DIAGRAM, {
            commandId: DiagramCommands.FIT
        });
        registry.registerMenuAction(DiagramMenus.DIAGRAM, {
            commandId: DiagramCommands.EXPORT
        });
        registry.registerMenuAction(DiagramMenus.DIAGRAM, {
            commandId: DiagramCommands.LAYOUT
        });
        registry.registerMenuAction(DiagramMenus.EDITOR_CONTEXT_DIAGRAM, {
            commandId: DiagramCommands.OPEN_IN_DIAGRAM
        });
    };
    DiagramMenuContribution = __decorate([
        inversify_1.injectable()
    ], DiagramMenuContribution);
    return DiagramMenuContribution;
}());
exports.DiagramMenuContribution = DiagramMenuContribution;
var DiagramCommandHandler = /** @class */ (function () {
    function DiagramCommandHandler(shell, doExecute) {
        this.shell = shell;
        this.doExecute = doExecute;
    }
    DiagramCommandHandler.prototype.execute = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return this.isEnabled()
            ? this.doExecute(this.diagramWidget)
            : undefined;
    };
    DiagramCommandHandler.prototype.isEnabled = function () {
        return this.diagramWidget !== undefined;
    };
    Object.defineProperty(DiagramCommandHandler.prototype, "diagramWidget", {
        get: function () {
            var widget = (this.shell.activeWidget || this.shell.currentWidget);
            if (widget instanceof diagram_widget_1.DiagramWidget) {
                return widget;
            }
            else if (isDiagramWidgetContainer(widget)) {
                return widget.diagramWidget;
            }
            return undefined;
        },
        enumerable: true,
        configurable: true
    });
    return DiagramCommandHandler;
}());
exports.DiagramCommandHandler = DiagramCommandHandler;
function isDiagramWidgetContainer(widget) {
    return widget !== undefined && widget.diagramWidget instanceof diagram_widget_1.DiagramWidget;
}
exports.isDiagramWidgetContainer = isDiagramWidgetContainer;
var OpenInDiagramHandler = /** @class */ (function () {
    function OpenInDiagramHandler(editorManager, openerService) {
        this.editorManager = editorManager;
        this.openerService = openerService;
    }
    OpenInDiagramHandler.prototype.execute = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var editor = this.editorManager.currentEditor;
        if (editor !== undefined) {
            var uri_1 = editor.editor.uri;
            var openersPromise = this.openerService.getOpeners(uri_1);
            openersPromise.then(function (openers) {
                var opener = openers.find(function (o) { return o instanceof diagram_manager_1.DiagramManager; });
                if (opener !== undefined)
                    opener.open(uri_1);
            });
        }
    };
    OpenInDiagramHandler.prototype.isEnabled = function () {
        var editor = this.editorManager.currentEditor;
        if (editor) {
            var uri = editor.editor.uri;
            return uri.scheme !== 'diff';
        }
        return false;
    };
    return OpenInDiagramHandler;
}());
exports.OpenInDiagramHandler = OpenInDiagramHandler;
var DiagramCommandContribution = /** @class */ (function () {
    function DiagramCommandContribution() {
    }
    DiagramCommandContribution.prototype.registerCommands = function (registry) {
        registry.registerCommand({
            id: DiagramCommands.CENTER,
            label: 'Center'
        });
        registry.registerCommand({
            id: DiagramCommands.FIT,
            label: 'Fit to screen'
        });
        registry.registerCommand({
            id: DiagramCommands.EXPORT,
            label: 'Export'
        });
        registry.registerCommand({
            id: DiagramCommands.LAYOUT,
            label: 'Layout'
        });
        registry.registerCommand({
            id: DiagramCommands.SELECT_ALL,
            label: 'Select all'
        });
        registry.registerCommand({
            id: DiagramCommands.OPEN_IN_DIAGRAM,
            label: 'Open in Diagram'
        });
        registry.registerHandler(DiagramCommands.CENTER, new DiagramCommandHandler(this.shell, function (widget) {
            return widget.actionDispatcher.dispatch(new sprotty_1.CenterAction([]));
        }));
        registry.registerHandler(DiagramCommands.FIT, new DiagramCommandHandler(this.shell, function (widget) {
            return widget.actionDispatcher.dispatch(new sprotty_1.FitToScreenAction([]));
        }));
        registry.registerHandler(DiagramCommands.EXPORT, new DiagramCommandHandler(this.shell, function (widget) {
            return widget.actionDispatcher.dispatch(new sprotty_1.RequestExportSvgAction());
        }));
        registry.registerHandler(DiagramCommands.LAYOUT, new DiagramCommandHandler(this.shell, function (widget) {
            return widget.actionDispatcher.dispatch(new sprotty_1.LayoutAction());
        }));
        registry.registerHandler(DiagramCommands.SELECT_ALL, new DiagramCommandHandler(this.shell, function (widget) {
            var action = new sprotty_1.SelectAllAction(true);
            widget.actionDispatcher.dispatch(action);
        }));
        registry.registerHandler(DiagramCommands.OPEN_IN_DIAGRAM, new OpenInDiagramHandler(this.editorManager, this.openerService));
        registry.registerHandler(browser_1.CommonCommands.UNDO.id, new DiagramCommandHandler(this.shell, function (widget) {
            return widget.actionDispatcher.dispatch(new sprotty_1.UndoAction());
        }));
        registry.registerHandler(browser_1.CommonCommands.REDO.id, new DiagramCommandHandler(this.shell, function (widget) {
            return widget.actionDispatcher.dispatch(new sprotty_1.RedoAction());
        }));
    };
    __decorate([
        inversify_1.inject(browser_1.ApplicationShell),
        __metadata("design:type", browser_1.ApplicationShell)
    ], DiagramCommandContribution.prototype, "shell", void 0);
    __decorate([
        inversify_1.inject(browser_2.EditorManager),
        __metadata("design:type", browser_2.EditorManager)
    ], DiagramCommandContribution.prototype, "editorManager", void 0);
    __decorate([
        inversify_1.inject(browser_1.OpenerService),
        __metadata("design:type", Object)
    ], DiagramCommandContribution.prototype, "openerService", void 0);
    DiagramCommandContribution = __decorate([
        inversify_1.injectable()
    ], DiagramCommandContribution);
    return DiagramCommandContribution;
}());
exports.DiagramCommandContribution = DiagramCommandContribution;


/***/ }),

/***/ "../node_modules/sprotty-theia/lib/theia/diagram-configuration.js":
/*!************************************************************************!*\
  !*** ../node_modules/sprotty-theia/lib/theia/diagram-configuration.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var registry_1 = __webpack_require__(/*! sprotty/lib/utils/registry */ "../node_modules/sprotty/lib/utils/registry.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
exports.DiagramConfiguration = Symbol('DiagramConfiguration');
var DiagramConfigurationRegistry = /** @class */ (function (_super) {
    __extends(DiagramConfigurationRegistry, _super);
    function DiagramConfigurationRegistry(diagramConfigs) {
        var _this = _super.call(this) || this;
        diagramConfigs.forEach(function (c) { return _this.register(c.diagramType, c); });
        return _this;
    }
    DiagramConfigurationRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(exports.DiagramConfiguration)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], DiagramConfigurationRegistry);
    return DiagramConfigurationRegistry;
}(registry_1.InstanceRegistry));
exports.DiagramConfigurationRegistry = DiagramConfigurationRegistry;


/***/ }),

/***/ "../node_modules/sprotty-theia/lib/theia/diagram-keybinding.js":
/*!*********************************************************************!*\
  !*** ../node_modules/sprotty-theia/lib/theia/diagram-keybinding.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var diagram_commands_1 = __webpack_require__(/*! ./diagram-commands */ "../node_modules/sprotty-theia/lib/theia/diagram-commands.js");
var diagram_widget_1 = __webpack_require__(/*! ./diagram-widget */ "../node_modules/sprotty-theia/lib/theia/diagram-widget.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var frontend_application_1 = __webpack_require__(/*! @theia/core/lib/browser/frontend-application */ "../node_modules/@theia/core/lib/browser/frontend-application.js");
var browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "../node_modules/@theia/core/lib/browser/index.js");
var DiagramKeybindingContext = /** @class */ (function () {
    function DiagramKeybindingContext() {
        this.id = 'diagram.keybinding.context';
    }
    DiagramKeybindingContext.prototype.isEnabled = function (arg) {
        return this.application.shell.activeWidget instanceof diagram_widget_1.DiagramWidget;
    };
    __decorate([
        inversify_1.inject(frontend_application_1.FrontendApplication),
        __metadata("design:type", frontend_application_1.FrontendApplication)
    ], DiagramKeybindingContext.prototype, "application", void 0);
    DiagramKeybindingContext = __decorate([
        inversify_1.injectable()
    ], DiagramKeybindingContext);
    return DiagramKeybindingContext;
}());
exports.DiagramKeybindingContext = DiagramKeybindingContext;
var DiagramKeybindingContribution = /** @class */ (function () {
    function DiagramKeybindingContribution() {
    }
    DiagramKeybindingContribution.prototype.registerKeybindings = function (registry) {
        [
            {
                command: diagram_commands_1.DiagramCommands.CENTER,
                context: this.diagramKeybindingContext.id,
                keybinding: 'alt+c'
            },
            {
                command: diagram_commands_1.DiagramCommands.FIT,
                context: this.diagramKeybindingContext.id,
                keybinding: 'alt+f'
            },
            {
                command: diagram_commands_1.DiagramCommands.EXPORT,
                context: this.diagramKeybindingContext.id,
                keybinding: 'alt+e'
            },
            {
                command: diagram_commands_1.DiagramCommands.LAYOUT,
                context: this.diagramKeybindingContext.id,
                keybinding: 'alt+l'
            },
            {
                command: diagram_commands_1.DiagramCommands.SELECT_ALL,
                context: this.diagramKeybindingContext.id,
                keybinding: 'ctrlcmd+a'
            },
            {
                command: browser_1.CommonCommands.UNDO.id,
                context: this.diagramKeybindingContext.id,
                keybinding: 'ctrlcmd+z'
            },
            {
                command: browser_1.CommonCommands.REDO.id,
                context: this.diagramKeybindingContext.id,
                keybinding: 'ctrlcmd+shift+z'
            }
        ].forEach(function (binding) {
            registry.registerKeybinding(binding);
        });
    };
    __decorate([
        inversify_1.inject(DiagramKeybindingContext),
        __metadata("design:type", DiagramKeybindingContext)
    ], DiagramKeybindingContribution.prototype, "diagramKeybindingContext", void 0);
    DiagramKeybindingContribution = __decorate([
        inversify_1.injectable()
    ], DiagramKeybindingContribution);
    return DiagramKeybindingContribution;
}());
exports.DiagramKeybindingContribution = DiagramKeybindingContribution;


/***/ }),

/***/ "../node_modules/sprotty-theia/lib/theia/diagram-manager.js":
/*!******************************************************************!*\
  !*** ../node_modules/sprotty-theia/lib/theia/diagram-manager.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "../node_modules/@theia/core/lib/browser/index.js");
var diagram_widget_1 = __webpack_require__(/*! ./diagram-widget */ "../node_modules/sprotty-theia/lib/theia/diagram-widget.js");
var browser_2 = __webpack_require__(/*! @theia/editor/lib/browser */ "../node_modules/@theia/editor/lib/browser/index.js");
var diagram_configuration_1 = __webpack_require__(/*! ./diagram-configuration */ "../node_modules/sprotty-theia/lib/theia/diagram-configuration.js");
exports.DiagramManagerProvider = Symbol('DiagramManagerProvider');
var DiagramManager = /** @class */ (function (_super) {
    __extends(DiagramManager, _super);
    function DiagramManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.widgetCount = 0;
        return _this;
    }
    DiagramManager.prototype.canHandle = function (uri, options) {
        return 10;
    };
    DiagramManager.prototype.doOpen = function (widget, options) {
        return __awaiter(this, void 0, void 0, function () {
            var op, currentEditor, widgetOptions;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        op = __assign({ mode: options && options.mode ? options.mode : 'activate' }, options);
                        if (!widget.isAttached) {
                            currentEditor = this.editorManager.currentEditor;
                            widgetOptions = __assign({ area: 'main' }, (options && options.widgetOptions ? options.widgetOptions : {}));
                            if (!!currentEditor && currentEditor.editor.uri.toString(true) === widget.uri.toString(true)) {
                                widgetOptions.ref = currentEditor;
                                widgetOptions.mode = options && options.widgetOptions && options.widgetOptions.mode ? options.widgetOptions.mode : 'open-to-right';
                            }
                            this.shell.addWidget(widget, widgetOptions);
                        }
                        if (!(op.mode === 'activate')) return [3 /*break*/, 3];
                        return [4 /*yield*/, widget.getSvgElement()];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.shell.activateWidget(widget.widgetId)];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 5];
                    case 3:
                        if (!(op.mode === 'reveal')) return [3 /*break*/, 5];
                        return [4 /*yield*/, this.shell.revealWidget(widget.widgetId)];
                    case 4:
                        _a.sent();
                        _a.label = 5;
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    Object.defineProperty(DiagramManager.prototype, "id", {
        get: function () {
            return this.diagramType + "-diagram-manager";
        },
        enumerable: true,
        configurable: true
    });
    DiagramManager.prototype.createWidgetOptions = function (uri, options) {
        var widgetOptions = options && options.widgetOptions;
        return __assign(__assign({}, {
            diagramType: this.diagramType,
            uri: uri.toString(true),
            iconClass: this.iconClass,
            label: uri.path.base
        }), widgetOptions);
    };
    DiagramManager.prototype.createWidget = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            var clientId, config, diContainer, diagramWidget;
            return __generator(this, function (_a) {
                if (diagram_widget_1.DiagramWidgetOptions.is(options)) {
                    clientId = this.createClientId();
                    config = this.diagramConfigurationRegistry.get(options.diagramType);
                    diContainer = config.createContainer(clientId);
                    diagramWidget = this.widgetFactory(options, clientId + '_widget', diContainer, this.diagramConnector);
                    return [2 /*return*/, diagramWidget];
                }
                throw Error('DiagramWidgetFactory needs DiagramWidgetOptions but got ' + JSON.stringify(options));
            });
        });
    };
    DiagramManager.prototype.createClientId = function () {
        return this.diagramType + '_' + (this.widgetCount++);
    };
    Object.defineProperty(DiagramManager.prototype, "diagramConnector", {
        get: function () {
            return undefined;
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        inversify_1.inject(browser_1.WidgetManager),
        __metadata("design:type", browser_1.WidgetManager)
    ], DiagramManager.prototype, "widgetManager", void 0);
    __decorate([
        inversify_1.inject(browser_2.EditorManager),
        __metadata("design:type", browser_2.EditorManager)
    ], DiagramManager.prototype, "editorManager", void 0);
    __decorate([
        inversify_1.inject(diagram_widget_1.DiagramWidgetFactory),
        __metadata("design:type", Function)
    ], DiagramManager.prototype, "widgetFactory", void 0);
    __decorate([
        inversify_1.inject(diagram_configuration_1.DiagramConfigurationRegistry),
        __metadata("design:type", diagram_configuration_1.DiagramConfigurationRegistry)
    ], DiagramManager.prototype, "diagramConfigurationRegistry", void 0);
    DiagramManager = __decorate([
        inversify_1.injectable()
    ], DiagramManager);
    return DiagramManager;
}(browser_1.WidgetOpenHandler));
exports.DiagramManager = DiagramManager;


/***/ }),

/***/ "../node_modules/sprotty-theia/lib/theia/diagram-module.js":
/*!*****************************************************************!*\
  !*** ../node_modules/sprotty-theia/lib/theia/diagram-module.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var common_1 = __webpack_require__(/*! @theia/core/lib/common */ "../node_modules/@theia/core/lib/common/index.js");
var browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "../node_modules/@theia/core/lib/browser/index.js");
var theia_file_saver_1 = __webpack_require__(/*! ../sprotty/theia-file-saver */ "../node_modules/sprotty-theia/lib/sprotty/theia-file-saver.js");
var diagram_configuration_1 = __webpack_require__(/*! ./diagram-configuration */ "../node_modules/sprotty-theia/lib/theia/diagram-configuration.js");
var diagram_commands_1 = __webpack_require__(/*! ./diagram-commands */ "../node_modules/sprotty-theia/lib/theia/diagram-commands.js");
var diagram_keybinding_1 = __webpack_require__(/*! ./diagram-keybinding */ "../node_modules/sprotty-theia/lib/theia/diagram-keybinding.js");
var diagram_widget_1 = __webpack_require__(/*! ./diagram-widget */ "../node_modules/sprotty-theia/lib/theia/diagram-widget.js");
exports.default = new inversify_1.ContainerModule(function (bind) {
    bind(diagram_configuration_1.DiagramConfigurationRegistry).toSelf().inSingletonScope();
    bind(theia_file_saver_1.TheiaFileSaver).toSelf().inSingletonScope();
    bind(common_1.CommandContribution).to(diagram_commands_1.DiagramCommandContribution).inSingletonScope();
    bind(common_1.MenuContribution).to(diagram_commands_1.DiagramMenuContribution).inSingletonScope();
    bind(diagram_keybinding_1.DiagramKeybindingContext).toSelf().inSingletonScope();
    bind(browser_1.KeybindingContext).toService(diagram_keybinding_1.DiagramKeybindingContext);
    bind(browser_1.KeybindingContribution).to(diagram_keybinding_1.DiagramKeybindingContribution).inSingletonScope();
    bind(diagram_widget_1.DiagramWidgetFactory).toFactory(function (ctx) {
        return function (options, widgetId, diContainer, connector) {
            return new diagram_widget_1.DiagramWidget(options, widgetId, diContainer, connector);
        };
    });
});


/***/ }),

/***/ "../node_modules/sprotty-theia/lib/theia/diagram-widget.js":
/*!*****************************************************************!*\
  !*** ../node_modules/sprotty-theia/lib/theia/diagram-widget.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var sprotty_1 = __webpack_require__(/*! sprotty */ "../node_modules/sprotty/lib/index.js");
var widget_1 = __webpack_require__(/*! @theia/core/lib/browser/widgets/widget */ "../node_modules/@theia/core/lib/browser/widgets/widget.js");
var uri_1 = __webpack_require__(/*! @theia/core/lib/common/uri */ "../node_modules/@theia/core/lib/common/uri.js");
var theia_diagram_server_1 = __webpack_require__(/*! ../sprotty/theia-diagram-server */ "../node_modules/sprotty-theia/lib/sprotty/theia-diagram-server.js");
exports.DiagramWidgetFactory = Symbol('DiagramWidgetFactory');
var DiagramWidgetOptions;
(function (DiagramWidgetOptions) {
    function is(options) {
        return options.diagramType
            && options.uri
            && options.label
            && options.iconClass;
    }
    DiagramWidgetOptions.is = is;
})(DiagramWidgetOptions = exports.DiagramWidgetOptions || (exports.DiagramWidgetOptions = {}));
/**
 * The DiagramWidget is the container for Sprotty diagrams.
 */
var DiagramWidget = /** @class */ (function (_super) {
    __extends(DiagramWidget, _super);
    function DiagramWidget(options, widgetId, diContainer, connector) {
        var _this = _super.call(this) || this;
        _this.options = options;
        _this.widgetId = widgetId;
        _this.diContainer = diContainer;
        _this.connector = connector;
        _this.title.closable = true;
        _this.title.label = options.label;
        _this.title.iconClass = options.iconClass;
        return _this;
    }
    Object.defineProperty(DiagramWidget.prototype, "uri", {
        get: function () {
            return new uri_1.default(this.options.uri);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DiagramWidget.prototype, "actionDispatcher", {
        get: function () {
            return this.diContainer.get(sprotty_1.TYPES.IActionDispatcher);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DiagramWidget.prototype, "viewerOptions", {
        get: function () {
            return this.diContainer.get(sprotty_1.TYPES.ViewerOptions);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DiagramWidget.prototype, "modelSource", {
        get: function () {
            return this._modelSource;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DiagramWidget.prototype, "clientId", {
        get: function () {
            if (this._modelSource instanceof sprotty_1.DiagramServer)
                return this._modelSource.clientId;
            else
                return this.widgetId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DiagramWidget.prototype, "id", {
        get: function () {
            return this.widgetId;
        },
        enumerable: true,
        configurable: true
    });
    DiagramWidget.prototype.onAfterAttach = function (msg) {
        if (!this.diagramContainer) {
            // Create the container and initialize its content upon first attachment
            this.createContainer();
            this.initializeSprotty();
        }
        _super.prototype.onAfterAttach.call(this, msg);
    };
    DiagramWidget.prototype.createContainer = function () {
        this.diagramContainer = document.createElement('div');
        this.diagramContainer.id = this.viewerOptions.baseDiv;
        this.node.appendChild(this.diagramContainer);
        var hiddenContainer = document.createElement('div');
        hiddenContainer.id = this.viewerOptions.hiddenDiv;
        document.body.appendChild(hiddenContainer);
        var statusDiv = document.createElement('div');
        statusDiv.setAttribute('class', 'sprotty-status');
        this.node.appendChild(statusDiv);
        this.statusIconDiv = document.createElement('div');
        statusDiv.appendChild(this.statusIconDiv);
        this.statusMessageDiv = document.createElement('div');
        this.statusMessageDiv.setAttribute('class', 'sprotty-status-message');
        statusDiv.appendChild(this.statusMessageDiv);
    };
    DiagramWidget.prototype.initializeSprotty = function () {
        var _this = this;
        var modelSource = this.diContainer.get(sprotty_1.TYPES.ModelSource);
        this._modelSource = modelSource;
        if (modelSource instanceof theia_diagram_server_1.TheiaDiagramServer && this.connector)
            this.connector.connect(modelSource);
        this.disposed.connect(function () {
            if (modelSource instanceof theia_diagram_server_1.TheiaDiagramServer && _this.connector)
                _this.connector.disconnect(modelSource);
        });
        this.actionDispatcher.dispatch(new sprotty_1.RequestModelAction({
            sourceUri: this.options.uri,
            diagramType: this.options.diagramType
        }));
    };
    DiagramWidget.prototype.getBoundsInPage = function (element) {
        var bounds = element.getBoundingClientRect();
        return {
            x: bounds.left,
            y: bounds.top,
            width: bounds.width,
            height: bounds.height
        };
    };
    DiagramWidget.prototype.onResize = function (msg) {
        _super.prototype.onResize.call(this, msg);
        var newBounds = this.getBoundsInPage(this.node);
        this.actionDispatcher.dispatch(new sprotty_1.InitializeCanvasBoundsAction(newBounds));
        this.actionDispatcher.dispatch(new sprotty_1.CenterAction([], false));
    };
    DiagramWidget.prototype.onActivateRequest = function (msg) {
        _super.prototype.onActivateRequest.call(this, msg);
        var svgElement = this.node.querySelector("#" + this.viewerOptions.baseDiv + " svg");
        if (svgElement !== null) {
            svgElement.focus();
        }
        else {
            var tabindex = this.node.getAttribute('tabindex');
            if (tabindex === null)
                this.node.setAttribute('tabindex', -1);
            this.node.focus();
        }
    };
    /**
     * We cannot activate the widget before the SVG element is there, as it takes the focus.
     * This should happen within two animation frames, as the action dispatcher issues
     * a SetModelCommand in the constructor. OTOH, shell.activateWidget() is synchronous. So
     * after creating the widget and before activating it, we use this method to wait for the
     * SVG to be appended to the DOM.
     */
    DiagramWidget.prototype.getSvgElement = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        var frames = 0;
                        var waitForSvg = function () {
                            requestAnimationFrame(function () {
                                var svgElement = _this.node.querySelector("#" + _this.viewerOptions.baseDiv + " svg");
                                if (svgElement !== null)
                                    resolve(svgElement);
                                else if (++frames < 5)
                                    waitForSvg();
                                else
                                    resolve(undefined);
                            });
                        };
                        waitForSvg();
                    })];
            });
        });
    };
    DiagramWidget.prototype.setStatus = function (status) {
        if (this.statusMessageDiv) {
            this.statusMessageDiv.textContent = status.message;
            this.removeClasses(this.statusMessageDiv, 1);
            this.statusMessageDiv.classList.add(status.severity.toLowerCase());
        }
        if (this.statusIconDiv) {
            this.removeClasses(this.statusIconDiv, 0);
            var classes = this.statusIconDiv.classList;
            classes.add(status.severity.toLowerCase());
            switch (status.severity) {
                case 'FATAL':
                    classes.add('fa');
                    classes.add('fa-times-circle');
                    break;
                case 'ERROR':
                    classes.add('fa');
                    classes.add('fa-exclamation-circle');
                    break;
                case 'WARNING':
                    classes.add('fa');
                    classes.add('fa-exclamation-circle');
                    break;
                case 'INFO':
                    classes.add('fa');
                    classes.add('fa-info-circle');
                    break;
            }
        }
    };
    DiagramWidget.prototype.removeClasses = function (element, keep) {
        var classes = element.classList;
        while (classes.length > keep) {
            var item = classes.item(classes.length - 1);
            if (item)
                classes.remove(item);
        }
    };
    DiagramWidget.prototype.storeState = function () {
        return this.options;
    };
    DiagramWidget.prototype.restoreState = function (oldState) {
        if (DiagramWidgetOptions.is(oldState))
            this.options = oldState;
    };
    DiagramWidget.prototype.getResourceUri = function () {
        return this.uri;
    };
    DiagramWidget.prototype.createMoveToUri = function (resourceUri) {
        return this.uri.withPath(resourceUri.path);
    };
    return DiagramWidget;
}(widget_1.BaseWidget));
exports.DiagramWidget = DiagramWidget;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/actions/action-dispatcher.js":
/*!*********************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/actions/action-dispatcher.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../node_modules/sprotty/lib/base/types.js");
var async_1 = __webpack_require__(/*! ../../utils/async */ "../node_modules/sprotty/lib/utils/async.js");
var smodel_factory_1 = __webpack_require__(/*! ../model/smodel-factory */ "../node_modules/sprotty/lib/base/model/smodel-factory.js");
var animation_frame_syncer_1 = __webpack_require__(/*! ../animations/animation-frame-syncer */ "../node_modules/sprotty/lib/base/animations/animation-frame-syncer.js");
var set_model_1 = __webpack_require__(/*! ../features/set-model */ "../node_modules/sprotty/lib/base/features/set-model.js");
var undo_redo_1 = __webpack_require__(/*! ../../features/undo-redo/undo-redo */ "../node_modules/sprotty/lib/features/undo-redo/undo-redo.js");
var action_1 = __webpack_require__(/*! ./action */ "../node_modules/sprotty/lib/base/actions/action.js");
/**
 * Collects actions, converts them to commands and dispatches them.
 * Also acts as the proxy to model sources such as diagram servers.
 */
var ActionDispatcher = /** @class */ (function () {
    function ActionDispatcher() {
        this.postponedActions = [];
        this.requests = new Map();
    }
    ActionDispatcher.prototype.initialize = function () {
        var _this = this;
        if (!this.initialized) {
            this.initialized = this.actionHandlerRegistryProvider().then(function (registry) {
                _this.actionHandlerRegistry = registry;
                _this.handleAction(new set_model_1.SetModelAction(smodel_factory_1.EMPTY_ROOT));
            });
        }
        return this.initialized;
    };
    /**
     * Dispatch an action by querying all handlers that are registered for its kind.
     * The returned promise is resolved when all handler results (commands or actions)
     * have been processed.
     */
    ActionDispatcher.prototype.dispatch = function (action) {
        var _this = this;
        return this.initialize().then(function () {
            if (_this.blockUntil !== undefined) {
                return _this.handleBlocked(action, _this.blockUntil);
            }
            else if (_this.diagramLocker.isAllowed(action)) {
                return _this.handleAction(action);
            }
            return undefined;
        });
    };
    /**
     * Calls `dispatch` on every action in the given array. The returned promise
     * is resolved when the promises of all `dispatch` calls have been resolved.
     */
    ActionDispatcher.prototype.dispatchAll = function (actions) {
        var _this = this;
        return Promise.all(actions.map(function (action) { return _this.dispatch(action); }));
    };
    /**
     * Dispatch a request. The returned promise is resolved when a response with matching
     * identifier is dispatched. That response is _not_ passed to the registered action
     * handlers. Instead, it is the responsibility of the caller of this method to handle
     * the response properly. For example, it can be sent to the registered handlers by
     * passing it again to the `dispatch` method.
     */
    ActionDispatcher.prototype.request = function (action) {
        if (!action.requestId) {
            return Promise.reject(new Error('Request without requestId'));
        }
        var deferred = new async_1.Deferred();
        this.requests.set(action.requestId, deferred);
        this.dispatch(action);
        return deferred.promise;
    };
    ActionDispatcher.prototype.handleAction = function (action) {
        if (action.kind === undo_redo_1.UndoAction.KIND) {
            return this.commandStack.undo().then(function () { });
        }
        if (action.kind === undo_redo_1.RedoAction.KIND) {
            return this.commandStack.redo().then(function () { });
        }
        if (action_1.isResponseAction(action)) {
            var deferred = this.requests.get(action.responseId);
            if (deferred !== undefined) {
                this.requests.delete(action.responseId);
                deferred.resolve(action);
                return Promise.resolve();
            }
            this.logger.log(this, 'No matching request for response', action);
        }
        var handlers = this.actionHandlerRegistry.get(action.kind);
        if (handlers.length === 0) {
            this.logger.warn(this, 'Missing handler for action', action);
            return Promise.reject("Missing handler for action '" + action.kind + "'");
        }
        this.logger.log(this, 'Handle', action);
        var promises = [];
        for (var _i = 0, handlers_1 = handlers; _i < handlers_1.length; _i++) {
            var handler = handlers_1[_i];
            var result = handler.handle(action);
            if (action_1.isAction(result)) {
                promises.push(this.dispatch(result));
            }
            else if (result !== undefined) {
                promises.push(this.commandStack.execute(result));
                this.blockUntil = result.blockUntil;
            }
        }
        return Promise.all(promises);
    };
    ActionDispatcher.prototype.handleBlocked = function (action, predicate) {
        var _this = this;
        if (predicate(action)) {
            this.blockUntil = undefined;
            var result = this.handleAction(action);
            var actions = this.postponedActions;
            this.postponedActions = [];
            for (var _i = 0, actions_1 = actions; _i < actions_1.length; _i++) {
                var a = actions_1[_i];
                this.dispatch(a.action).then(a.resolve, a.reject);
            }
            return result;
        }
        else {
            this.logger.log(this, 'Action is postponed due to block condition', action);
            return new Promise(function (resolve, reject) {
                _this.postponedActions.push({ action: action, resolve: resolve, reject: reject });
            });
        }
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ActionHandlerRegistryProvider),
        __metadata("design:type", Function)
    ], ActionDispatcher.prototype, "actionHandlerRegistryProvider", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ICommandStack),
        __metadata("design:type", Object)
    ], ActionDispatcher.prototype, "commandStack", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], ActionDispatcher.prototype, "logger", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.AnimationFrameSyncer),
        __metadata("design:type", animation_frame_syncer_1.AnimationFrameSyncer)
    ], ActionDispatcher.prototype, "syncer", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.IDiagramLocker),
        __metadata("design:type", Object)
    ], ActionDispatcher.prototype, "diagramLocker", void 0);
    ActionDispatcher = __decorate([
        inversify_1.injectable()
    ], ActionDispatcher);
    return ActionDispatcher;
}());
exports.ActionDispatcher = ActionDispatcher;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/actions/action-handler.js":
/*!******************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/actions/action-handler.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../node_modules/sprotty/lib/base/types.js");
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "../node_modules/sprotty/lib/utils/registry.js");
var inversify_2 = __webpack_require__(/*! ../../utils/inversify */ "../node_modules/sprotty/lib/utils/inversify.js");
/**
 * The action handler registry maps actions to their handlers using the Action.kind property.
 */
var ActionHandlerRegistry = /** @class */ (function (_super) {
    __extends(ActionHandlerRegistry, _super);
    function ActionHandlerRegistry(registrations, initializers) {
        var _this = _super.call(this) || this;
        registrations.forEach(function (registration) {
            return _this.register(registration.actionKind, registration.factory());
        });
        initializers.forEach(function (initializer) {
            return _this.initializeActionHandler(initializer);
        });
        return _this;
    }
    ActionHandlerRegistry.prototype.initializeActionHandler = function (initializer) {
        initializer.initialize(this);
    };
    ActionHandlerRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.ActionHandlerRegistration)), __param(0, inversify_1.optional()),
        __param(1, inversify_1.multiInject(types_1.TYPES.IActionHandlerInitializer)), __param(1, inversify_1.optional()),
        __metadata("design:paramtypes", [Array, Array])
    ], ActionHandlerRegistry);
    return ActionHandlerRegistry;
}(registry_1.MultiInstanceRegistry));
exports.ActionHandlerRegistry = ActionHandlerRegistry;
/**
 * Utility function to register an action handler for an action kind.
 */
function configureActionHandler(context, kind, constr) {
    if (typeof constr === 'function') {
        if (!inversify_2.isInjectable(constr)) {
            throw new Error("Action handlers should be @injectable: " + constr.name);
        }
        if (!context.isBound(constr)) {
            context.bind(constr).toSelf();
        }
    }
    context.bind(types_1.TYPES.ActionHandlerRegistration).toDynamicValue(function (ctx) { return ({
        actionKind: kind,
        factory: function () { return ctx.container.get(constr); }
    }); });
}
exports.configureActionHandler = configureActionHandler;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/actions/action.js":
/*!**********************************************************!*\
  !*** ../node_modules/sprotty/lib/base/actions/action.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
function isAction(object) {
    return object !== undefined && object.hasOwnProperty('kind') && typeof (object['kind']) === 'string';
}
exports.isAction = isAction;
function isRequestAction(object) {
    return isAction(object) && object.hasOwnProperty('requestId')
        && typeof (object['requestId']) === 'string';
}
exports.isRequestAction = isRequestAction;
var nextRequestId = 1;
/**
 * Generate a unique `requestId` for a request action.
 */
function generateRequestId() {
    return (nextRequestId++).toString();
}
exports.generateRequestId = generateRequestId;
function isResponseAction(object) {
    return isAction(object) && object.hasOwnProperty('responseId')
        && typeof (object['responseId']) === 'string'
        && object['responseId'] !== '';
}
exports.isResponseAction = isResponseAction;
/**
 * A list of actions with a label.
 * Labeled actions are used to denote a group of actions in a user-interface context, e.g.,
 * to define an entry in the command palette or in the context menu.
 */
var LabeledAction = /** @class */ (function () {
    function LabeledAction(label, actions, icon) {
        this.label = label;
        this.actions = actions;
        this.icon = icon;
    }
    return LabeledAction;
}());
exports.LabeledAction = LabeledAction;
function isLabeledAction(element) {
    return element !== undefined
        && element.label !== undefined
        && element.actions !== undefined;
}
exports.isLabeledAction = isLabeledAction;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/actions/diagram-locker.js":
/*!******************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/actions/diagram-locker.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var DefaultDiagramLocker = /** @class */ (function () {
    function DefaultDiagramLocker() {
    }
    DefaultDiagramLocker.prototype.isAllowed = function (action) {
        return true;
    };
    DefaultDiagramLocker = __decorate([
        inversify_1.injectable()
    ], DefaultDiagramLocker);
    return DefaultDiagramLocker;
}());
exports.DefaultDiagramLocker = DefaultDiagramLocker;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/animations/animation-frame-syncer.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/animations/animation-frame-syncer.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var AnimationFrameSyncer = /** @class */ (function () {
    function AnimationFrameSyncer() {
        this.tasks = [];
        this.endTasks = [];
        this.triggered = false;
    }
    AnimationFrameSyncer.prototype.isAvailable = function () {
        return typeof requestAnimationFrame === "function";
    };
    AnimationFrameSyncer.prototype.onNextFrame = function (task) {
        this.tasks.push(task);
        this.trigger();
    };
    AnimationFrameSyncer.prototype.onEndOfNextFrame = function (task) {
        this.endTasks.push(task);
        this.trigger();
    };
    AnimationFrameSyncer.prototype.trigger = function () {
        var _this = this;
        if (!this.triggered) {
            this.triggered = true;
            if (this.isAvailable())
                requestAnimationFrame(function (time) { return _this.run(time); });
            else
                setTimeout(function (time) { return _this.run(time); });
        }
    };
    AnimationFrameSyncer.prototype.run = function (time) {
        var tasks = this.tasks;
        var endTasks = this.endTasks;
        this.triggered = false;
        this.tasks = [];
        this.endTasks = [];
        tasks.forEach(function (task) { return task.call(undefined, time); });
        endTasks.forEach(function (task) { return task.call(undefined, time); });
    };
    AnimationFrameSyncer = __decorate([
        inversify_1.injectable()
    ], AnimationFrameSyncer);
    return AnimationFrameSyncer;
}());
exports.AnimationFrameSyncer = AnimationFrameSyncer;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/animations/animation.js":
/*!****************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/animations/animation.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var easing_1 = __webpack_require__(/*! ./easing */ "../node_modules/sprotty/lib/base/animations/easing.js");
/**
 * An animation uses the rendering loop of the browser to smoothly
 * calculate a transition between two states of a model element.
 */
var Animation = /** @class */ (function () {
    function Animation(context, ease) {
        if (ease === void 0) { ease = easing_1.easeInOut; }
        this.context = context;
        this.ease = ease;
    }
    Animation.prototype.start = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var start = undefined;
            var frames = 0;
            var lambda = function (time) {
                frames++;
                var dtime;
                if (start === undefined) {
                    start = time;
                    dtime = 0;
                }
                else {
                    dtime = time - start;
                }
                var t = Math.min(1, dtime / _this.context.duration);
                var current = _this.tween(_this.ease(t), _this.context);
                _this.context.modelChanged.update(current);
                if (t === 1) {
                    _this.context.logger.log(_this, (frames * 1000 / _this.context.duration) + ' fps');
                    resolve(current);
                }
                else {
                    _this.context.syncer.onNextFrame(lambda);
                }
            };
            if (_this.context.syncer.isAvailable()) {
                _this.context.syncer.onNextFrame(lambda);
            }
            else {
                var finalModel = _this.tween(1, _this.context);
                resolve(finalModel);
            }
        });
    };
    return Animation;
}());
exports.Animation = Animation;
var CompoundAnimation = /** @class */ (function (_super) {
    __extends(CompoundAnimation, _super);
    function CompoundAnimation(model, context, components, ease) {
        if (components === void 0) { components = []; }
        if (ease === void 0) { ease = easing_1.easeInOut; }
        var _this = _super.call(this, context, ease) || this;
        _this.model = model;
        _this.context = context;
        _this.components = components;
        _this.ease = ease;
        return _this;
    }
    CompoundAnimation.prototype.include = function (animation) {
        this.components.push(animation);
        return this;
    };
    CompoundAnimation.prototype.tween = function (t, context) {
        for (var _i = 0, _a = this.components; _i < _a.length; _i++) {
            var a = _a[_i];
            a.tween(t, context);
        }
        return this.model;
    };
    return CompoundAnimation;
}(Animation));
exports.CompoundAnimation = CompoundAnimation;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/animations/easing.js":
/*!*************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/animations/easing.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Slows down animations towards the begin and the end.
 *
 * @param x the value between 0 (start of animation) and 1 (end of
 *     animation) linearly interpolated in time.
 * @returns {number} the eased value between 0 and 1
 */
function easeInOut(x) {
    if (x < 0.5)
        return x * x * 2;
    else
        return 1 - (1 - x) * (1 - x) * 2;
}
exports.easeInOut = easeInOut;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/commands/command-registration.js":
/*!*************************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/commands/command-registration.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var inversify_2 = __webpack_require__(/*! ../../utils/inversify */ "../node_modules/sprotty/lib/utils/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../node_modules/sprotty/lib/base/types.js");
var CommandActionHandler = /** @class */ (function () {
    function CommandActionHandler(commandRegistration) {
        this.commandRegistration = commandRegistration;
    }
    CommandActionHandler.prototype.handle = function (action) {
        return this.commandRegistration.factory(action);
    };
    return CommandActionHandler;
}());
exports.CommandActionHandler = CommandActionHandler;
var CommandActionHandlerInitializer = /** @class */ (function () {
    function CommandActionHandlerInitializer(registrations) {
        this.registrations = registrations;
    }
    CommandActionHandlerInitializer.prototype.initialize = function (registry) {
        this.registrations.forEach(function (registration) {
            return registry.register(registration.kind, new CommandActionHandler(registration));
        });
    };
    CommandActionHandlerInitializer = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.CommandRegistration)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], CommandActionHandlerInitializer);
    return CommandActionHandlerInitializer;
}());
exports.CommandActionHandlerInitializer = CommandActionHandlerInitializer;
/**
 * Use this method in your DI configuration to register a new command to the diagram.
 */
function configureCommand(context, constr) {
    if (!inversify_2.isInjectable(constr)) {
        throw new Error("Commands should be @injectable: " + constr.name);
    }
    if (!context.isBound(constr)) {
        context.bind(constr).toSelf();
    }
    context.bind(types_1.TYPES.CommandRegistration).toDynamicValue(function (ctx) { return ({
        kind: constr.KIND,
        factory: function (action) {
            var childContainer = new inversify_1.Container();
            childContainer.parent = ctx.container;
            childContainer.bind(types_1.TYPES.Action).toConstantValue(action);
            return childContainer.get(constr);
        }
    }); });
}
exports.configureCommand = configureCommand;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/commands/command-stack-options.js":
/*!**************************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/commands/command-stack-options.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var types_1 = __webpack_require__(/*! ../types */ "../node_modules/sprotty/lib/base/types.js");
function overrideCommandStackOptions(container, options) {
    var defaultOptions = container.get(types_1.TYPES.CommandStackOptions);
    for (var p in options) {
        if (options.hasOwnProperty(p))
            defaultOptions[p] = options[p];
    }
    return defaultOptions;
}
exports.overrideCommandStackOptions = overrideCommandStackOptions;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/commands/command-stack.js":
/*!******************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/commands/command-stack.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../node_modules/sprotty/lib/base/types.js");
var smodel_factory_1 = __webpack_require__(/*! ../model/smodel-factory */ "../node_modules/sprotty/lib/base/model/smodel-factory.js");
var smodel_1 = __webpack_require__(/*! ../model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var animation_frame_syncer_1 = __webpack_require__(/*! ../animations/animation-frame-syncer */ "../node_modules/sprotty/lib/base/animations/animation-frame-syncer.js");
var command_1 = __webpack_require__(/*! ./command */ "../node_modules/sprotty/lib/base/commands/command.js");
/**
 * The implementation of the ICommandStack. Clients should not use this
 * class directly.
 *
 * The command stack holds the current model as the result of the current
 * promise. When a new command is executed/undone/redone, its execution is
 * chained using <code>Promise#then()</code> to the current Promise. This
 * way we can handle long running commands without blocking the current
 * thread.
 *
 * The command stack also does the special handling for special commands:
 *
 * System commands should be transparent to the user and as such be
 * automatically undone/redone with the next plain command. Additional care
 * must be taken that system commands that are executed after undo don't
 * break the correspondence between the topmost commands on the undo and
 * redo stacks.
 *
 * Hidden commands only tell the viewer to render a hidden model such that
 * its bounds can be extracted from the DOM and forwarded as separate actions.
 * Hidden commands should not leave any trace on the undo/redo/off stacks.
 *
 * Mergeable commands should be merged with their predecessor if possible,
 * such that e.g. multiple subsequent moves of the smae element can be undone
 * in one single step.
 */
var CommandStack = /** @class */ (function () {
    function CommandStack() {
        this.undoStack = [];
        this.redoStack = [];
        /**
         * System commands should be transparent to the user in undo/redo
         * operations. When a system command is executed when the redo
         * stack is not empty, it is pushed to offStack instead.
         *
         * On redo, all commands form this stack are undone such that the
         * redo operation gets the exact same model as when it was executed
         * first.
         *
         * On undo, all commands form this stack are undone as well as
         * system ommands should be transparent to the user.
         */
        this.offStack = [];
    }
    CommandStack.prototype.initialize = function () {
        this.currentPromise = Promise.resolve({
            main: {
                model: this.modelFactory.createRoot(smodel_factory_1.EMPTY_ROOT),
                modelChanged: false,
            },
            hidden: {
                model: this.modelFactory.createRoot(smodel_factory_1.EMPTY_ROOT),
                modelChanged: false,
            },
            popup: {
                model: this.modelFactory.createRoot(smodel_factory_1.EMPTY_ROOT),
                modelChanged: false,
            }
        });
    };
    Object.defineProperty(CommandStack.prototype, "currentModel", {
        get: function () {
            return this.currentPromise.then(function (state) { return state.main.model; });
        },
        enumerable: true,
        configurable: true
    });
    CommandStack.prototype.executeAll = function (commands) {
        var _this = this;
        commands.forEach(function (command) {
            _this.logger.log(_this, 'Executing', command);
            _this.handleCommand(command, command.execute, _this.mergeOrPush);
        });
        return this.thenUpdate();
    };
    CommandStack.prototype.execute = function (command) {
        this.logger.log(this, 'Executing', command);
        this.handleCommand(command, command.execute, this.mergeOrPush);
        return this.thenUpdate();
    };
    CommandStack.prototype.undo = function () {
        var _this = this;
        this.undoOffStackSystemCommands();
        this.undoPreceedingSystemCommands();
        var command = this.undoStack[this.undoStack.length - 1];
        if (command !== undefined && !this.isBlockUndo(command)) {
            this.undoStack.pop();
            this.logger.log(this, 'Undoing', command);
            this.handleCommand(command, command.undo, function (c, context) {
                _this.redoStack.push(c);
            });
        }
        return this.thenUpdate();
    };
    CommandStack.prototype.redo = function () {
        var _this = this;
        this.undoOffStackSystemCommands();
        var command = this.redoStack.pop();
        if (command !== undefined) {
            this.logger.log(this, 'Redoing', command);
            this.handleCommand(command, command.redo, function (c, context) {
                _this.pushToUndoStack(c);
            });
        }
        this.redoFollowingSystemCommands();
        return this.thenUpdate();
    };
    /**
     * Chains the current promise with another Promise that performs the
     * given operation on the given command.
     *
     * @param beforeResolve a function that is called directly before
     *      resolving the Promise to return the new model. Usually puts the
     *      command on the appropriate stack.
     */
    CommandStack.prototype.handleCommand = function (command, operation, beforeResolve) {
        var _this = this;
        this.currentPromise = this.currentPromise.then(function (state) {
            return new Promise(function (resolve) {
                var target;
                if (command instanceof command_1.HiddenCommand)
                    target = 'hidden';
                else if (command instanceof command_1.PopupCommand)
                    target = 'popup';
                else
                    target = 'main';
                var context = _this.createContext(state.main.model);
                var commandResult;
                try {
                    commandResult = operation.call(command, context);
                }
                catch (error) {
                    _this.logger.error(_this, "Failed to execute command:", error);
                    commandResult = state[target].model;
                }
                var newState = copyState(state);
                if (commandResult instanceof Promise) {
                    commandResult.then(function (newModel) {
                        if (target === 'main')
                            beforeResolve.call(_this, command, context);
                        newState[target] = { model: newModel, modelChanged: true };
                        resolve(newState);
                    });
                }
                else if (commandResult instanceof smodel_1.SModelRoot) {
                    if (target === 'main')
                        beforeResolve.call(_this, command, context);
                    newState[target] = { model: commandResult, modelChanged: true };
                    resolve(newState);
                }
                else {
                    if (target === 'main')
                        beforeResolve.call(_this, command, context);
                    newState[target] = {
                        model: commandResult.model,
                        modelChanged: state[target].modelChanged || commandResult.modelChanged,
                        cause: commandResult.cause
                    };
                    resolve(newState);
                }
            });
        });
    };
    CommandStack.prototype.pushToUndoStack = function (command) {
        this.undoStack.push(command);
        if (this.options.undoHistoryLimit >= 0 && this.undoStack.length > this.options.undoHistoryLimit)
            this.undoStack.splice(0, this.undoStack.length - this.options.undoHistoryLimit);
    };
    /**
     * Notifies the Viewer to render the new model and/or the new hidden model
     * and returns a Promise for the new model.
     */
    CommandStack.prototype.thenUpdate = function () {
        var _this = this;
        this.currentPromise = this.currentPromise.then(function (state) {
            var newState = copyState(state);
            if (state.hidden.modelChanged) {
                _this.updateHidden(state.hidden.model, state.hidden.cause);
                newState.hidden.modelChanged = false;
                newState.hidden.cause = undefined;
            }
            if (state.main.modelChanged) {
                _this.update(state.main.model, state.main.cause);
                newState.main.modelChanged = false;
                newState.main.cause = undefined;
            }
            if (state.popup.modelChanged) {
                _this.updatePopup(state.popup.model, state.popup.cause);
                newState.popup.modelChanged = false;
                newState.popup.cause = undefined;
            }
            return newState;
        });
        return this.currentModel;
    };
    /**
     * Notify the `ModelViewer` that the model has changed.
     */
    CommandStack.prototype.update = function (model, cause) {
        if (this.modelViewer === undefined) {
            this.modelViewer = this.viewerProvider.modelViewer;
        }
        this.modelViewer.update(model, cause);
    };
    /**
     * Notify the `HiddenModelViewer` that the hidden model has changed.
     */
    CommandStack.prototype.updateHidden = function (model, cause) {
        if (this.hiddenModelViewer === undefined) {
            this.hiddenModelViewer = this.viewerProvider.hiddenModelViewer;
        }
        this.hiddenModelViewer.update(model, cause);
    };
    /**
     * Notify the `PopupModelViewer` that the popup model has changed.
     */
    CommandStack.prototype.updatePopup = function (model, cause) {
        if (this.popupModelViewer === undefined) {
            this.popupModelViewer = this.viewerProvider.popupModelViewer;
        }
        this.popupModelViewer.update(model, cause);
    };
    /**
     * Handling of commands after their execution.
     *
     * Hidden commands are not pushed to any stack.
     *
     * System commands are pushed to the <code>offStack</code> when the redo
     * stack is not empty, allowing to undo the before a redo to keep the chain
     * of commands consistent.
     *
     * Mergable commands are merged if possible.
     */
    CommandStack.prototype.mergeOrPush = function (command, context) {
        var _this = this;
        if (this.isBlockUndo(command)) {
            this.undoStack = [];
            this.redoStack = [];
            this.offStack = [];
            this.pushToUndoStack(command);
            return;
        }
        if (this.isPushToOffStack(command) && this.redoStack.length > 0) {
            if (this.offStack.length > 0) {
                var lastCommand = this.offStack[this.offStack.length - 1];
                if (lastCommand instanceof command_1.MergeableCommand && lastCommand.merge(command, context))
                    return;
            }
            this.offStack.push(command);
            return;
        }
        if (this.isPushToUndoStack(command)) {
            this.offStack.forEach(function (c) { return _this.undoStack.push(c); });
            this.offStack = [];
            this.redoStack = [];
            if (this.undoStack.length > 0) {
                var lastCommand = this.undoStack[this.undoStack.length - 1];
                if (lastCommand instanceof command_1.MergeableCommand && lastCommand.merge(command, context))
                    return;
            }
            this.pushToUndoStack(command);
        }
    };
    /**
     * Reverts all system commands on the offStack.
     */
    CommandStack.prototype.undoOffStackSystemCommands = function () {
        var command = this.offStack.pop();
        while (command !== undefined) {
            this.logger.log(this, 'Undoing off-stack', command);
            this.handleCommand(command, command.undo, function () { });
            command = this.offStack.pop();
        }
    };
    /**
     * System commands should be transparent to the user, so this method
     * is called from <code>undo()</code> to revert all system commands
     * at the top of the undoStack.
     */
    CommandStack.prototype.undoPreceedingSystemCommands = function () {
        var _this = this;
        var command = this.undoStack[this.undoStack.length - 1];
        while (command !== undefined && this.isPushToOffStack(command)) {
            this.undoStack.pop();
            this.logger.log(this, 'Undoing', command);
            this.handleCommand(command, command.undo, function (c, context) {
                _this.redoStack.push(c);
            });
            command = this.undoStack[this.undoStack.length - 1];
        }
    };
    /**
     * System commands should be transparent to the user, so this method
     * is called from <code>redo()</code> to re-execute all system commands
     * at the top of the redoStack.
     */
    CommandStack.prototype.redoFollowingSystemCommands = function () {
        var _this = this;
        var command = this.redoStack[this.redoStack.length - 1];
        while (command !== undefined && this.isPushToOffStack(command)) {
            this.redoStack.pop();
            this.logger.log(this, 'Redoing ', command);
            this.handleCommand(command, command.redo, function (c, context) {
                _this.pushToUndoStack(c);
            });
            command = this.redoStack[this.redoStack.length - 1];
        }
    };
    /**
     * Assembles the context object that is passed to the commands execution method.
     */
    CommandStack.prototype.createContext = function (currentModel) {
        return {
            root: currentModel,
            modelChanged: this,
            modelFactory: this.modelFactory,
            duration: this.options.defaultDuration,
            logger: this.logger,
            syncer: this.syncer
        };
    };
    CommandStack.prototype.isPushToOffStack = function (command) {
        return command instanceof command_1.SystemCommand;
    };
    CommandStack.prototype.isPushToUndoStack = function (command) {
        return !(command instanceof command_1.HiddenCommand);
    };
    CommandStack.prototype.isBlockUndo = function (command) {
        return command instanceof command_1.ResetCommand;
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.IModelFactory),
        __metadata("design:type", Object)
    ], CommandStack.prototype, "modelFactory", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.IViewerProvider),
        __metadata("design:type", Object)
    ], CommandStack.prototype, "viewerProvider", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], CommandStack.prototype, "logger", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.AnimationFrameSyncer),
        __metadata("design:type", animation_frame_syncer_1.AnimationFrameSyncer)
    ], CommandStack.prototype, "syncer", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.CommandStackOptions),
        __metadata("design:type", Object)
    ], CommandStack.prototype, "options", void 0);
    __decorate([
        inversify_1.postConstruct(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], CommandStack.prototype, "initialize", null);
    CommandStack = __decorate([
        inversify_1.injectable()
    ], CommandStack);
    return CommandStack;
}());
exports.CommandStack = CommandStack;
function copyState(state) {
    return {
        main: __assign({}, state.main),
        hidden: __assign({}, state.hidden),
        popup: __assign({}, state.popup)
    };
}


/***/ }),

/***/ "../node_modules/sprotty/lib/base/commands/command.js":
/*!************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/commands/command.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
/**
 * Base class for all commands.
 *
 * Command instances are created via dependency injection and should take
 * the respective action as an injected constructor parameter. They must
 * also define a static <code>KIND</code> which is used to map an
 * <code>Action#kind</code>.
 *
 * <pre>
 * export class MyCommand extends Command {
 *   static KIND = 'MyCommand'
 *   constructor(@inject(TYPES.Action) action: MyAction) {
 *   ...
 * }
 * @inject(TYPES.Action)
 * </pre>
 */
var Command = /** @class */ (function () {
    function Command() {
    }
    Command = __decorate([
        inversify_1.injectable()
    ], Command);
    return Command;
}());
exports.Command = Command;
/**
 * A mergeable command can accumulate subsequent commands of the same kind.
 *
 * For example, multiple subsequent move commands can be merged to yield a
 * single command, such that undo will roll them back altogether. Otherwise
 * the user would have to push CTRL-Z for each mouse move element that
 * resuted in a command.
 */
var MergeableCommand = /** @class */ (function (_super) {
    __extends(MergeableCommand, _super);
    function MergeableCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Tries to merge the given command with this.
     *
     * @param command
     * @param context
     */
    MergeableCommand.prototype.merge = function (command, context) {
        return false;
    };
    MergeableCommand = __decorate([
        inversify_1.injectable()
    ], MergeableCommand);
    return MergeableCommand;
}(Command));
exports.MergeableCommand = MergeableCommand;
/**
 * A hidden command is used to trigger the rendering of a model on a
 * hidden canvas.
 *
 * Some graphical elements are styled using CSS, others have bounds that
 * require to layout their children before being computed. In such cases
 * we cannot tell about the size of elements without acutally rendering
 * the DOM. We render them to an invisible canvas. This can be achieved
 * using hidden commands.
 *
 * Hidden commands do not change the model directly, and are as such
 * neither undoable nor redoable. The command stack does not push them on
 * any stack and forwards the resulting model to the invisible viewer.
 */
var HiddenCommand = /** @class */ (function (_super) {
    __extends(HiddenCommand, _super);
    function HiddenCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HiddenCommand.prototype.undo = function (context) {
        context.logger.error(this, 'Cannot undo a hidden command');
        return context.root;
    };
    HiddenCommand.prototype.redo = function (context) {
        context.logger.error(this, 'Cannot redo a hidden command');
        return context.root;
    };
    HiddenCommand = __decorate([
        inversify_1.injectable()
    ], HiddenCommand);
    return HiddenCommand;
}(Command));
exports.HiddenCommand = HiddenCommand;
var PopupCommand = /** @class */ (function (_super) {
    __extends(PopupCommand, _super);
    function PopupCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PopupCommand = __decorate([
        inversify_1.injectable()
    ], PopupCommand);
    return PopupCommand;
}(Command));
exports.PopupCommand = PopupCommand;
/**
 * A system command is triggered by the system, e.g. in order to update bounds
 * in the model with data fetched from the DOM.
 *
 * As it is automatically triggered it should not count as a single command in
 * undo/redo operations. Into the bargain, such an automatic command could occur
 * after an undo and as such make the next redo command invalid because it is
 * based on a model state that has changed. The command stack handles system
 * commands in a special way to overcome these issues.
 */
var SystemCommand = /** @class */ (function (_super) {
    __extends(SystemCommand, _super);
    function SystemCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SystemCommand = __decorate([
        inversify_1.injectable()
    ], SystemCommand);
    return SystemCommand;
}(Command));
exports.SystemCommand = SystemCommand;
/**
 * A reset command deletes all undo/redo stacks and cannot be undone.
 *
 * It marks a point of no return.
 */
var ResetCommand = /** @class */ (function (_super) {
    __extends(ResetCommand, _super);
    function ResetCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ResetCommand = __decorate([
        inversify_1.injectable()
    ], ResetCommand);
    return ResetCommand;
}(Command));
exports.ResetCommand = ResetCommand;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/commands/request-command.js":
/*!********************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/commands/request-command.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../node_modules/sprotty/lib/base/types.js");
var command_1 = __webpack_require__(/*! ./command */ "../node_modules/sprotty/lib/base/commands/command.js");
/**
 * A command that does not modify the internal model, but retrieves information
 * from it by dispatching a response action.
 */
var ModelRequestCommand = /** @class */ (function (_super) {
    __extends(ModelRequestCommand, _super);
    function ModelRequestCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ModelRequestCommand.prototype.execute = function (context) {
        var result = this.retrieveResult(context);
        this.actionDispatcher.dispatch(result);
        return { model: context.root, modelChanged: false };
    };
    ModelRequestCommand.prototype.undo = function (context) {
        return { model: context.root, modelChanged: false };
    };
    ModelRequestCommand.prototype.redo = function (context) {
        return { model: context.root, modelChanged: false };
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], ModelRequestCommand.prototype, "actionDispatcher", void 0);
    ModelRequestCommand = __decorate([
        inversify_1.injectable()
    ], ModelRequestCommand);
    return ModelRequestCommand;
}(command_1.SystemCommand));
exports.ModelRequestCommand = ModelRequestCommand;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/di.config.js":
/*!*****************************************************!*\
  !*** ../node_modules/sprotty/lib/base/di.config.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ./types */ "../node_modules/sprotty/lib/base/types.js");
var initialize_canvas_1 = __webpack_require__(/*! ./features/initialize-canvas */ "../node_modules/sprotty/lib/base/features/initialize-canvas.js");
var logging_1 = __webpack_require__(/*! ../utils/logging */ "../node_modules/sprotty/lib/utils/logging.js");
var action_dispatcher_1 = __webpack_require__(/*! ./actions/action-dispatcher */ "../node_modules/sprotty/lib/base/actions/action-dispatcher.js");
var action_handler_1 = __webpack_require__(/*! ./actions/action-handler */ "../node_modules/sprotty/lib/base/actions/action-handler.js");
var command_stack_1 = __webpack_require__(/*! ./commands/command-stack */ "../node_modules/sprotty/lib/base/commands/command-stack.js");
var smodel_factory_1 = __webpack_require__(/*! ./model/smodel-factory */ "../node_modules/sprotty/lib/base/model/smodel-factory.js");
var animation_frame_syncer_1 = __webpack_require__(/*! ./animations/animation-frame-syncer */ "../node_modules/sprotty/lib/base/animations/animation-frame-syncer.js");
var viewer_1 = __webpack_require__(/*! ./views/viewer */ "../node_modules/sprotty/lib/base/views/viewer.js");
var viewer_options_1 = __webpack_require__(/*! ./views/viewer-options */ "../node_modules/sprotty/lib/base/views/viewer-options.js");
var mouse_tool_1 = __webpack_require__(/*! ./views/mouse-tool */ "../node_modules/sprotty/lib/base/views/mouse-tool.js");
var key_tool_1 = __webpack_require__(/*! ./views/key-tool */ "../node_modules/sprotty/lib/base/views/key-tool.js");
var vnode_postprocessor_1 = __webpack_require__(/*! ./views/vnode-postprocessor */ "../node_modules/sprotty/lib/base/views/vnode-postprocessor.js");
var view_1 = __webpack_require__(/*! ./views/view */ "../node_modules/sprotty/lib/base/views/view.js");
var viewer_cache_1 = __webpack_require__(/*! ./views/viewer-cache */ "../node_modules/sprotty/lib/base/views/viewer-cache.js");
var dom_helper_1 = __webpack_require__(/*! ./views/dom-helper */ "../node_modules/sprotty/lib/base/views/dom-helper.js");
var id_postprocessor_1 = __webpack_require__(/*! ./views/id-postprocessor */ "../node_modules/sprotty/lib/base/views/id-postprocessor.js");
var command_registration_1 = __webpack_require__(/*! ./commands/command-registration */ "../node_modules/sprotty/lib/base/commands/command-registration.js");
var css_class_postprocessor_1 = __webpack_require__(/*! ./views/css-class-postprocessor */ "../node_modules/sprotty/lib/base/views/css-class-postprocessor.js");
var tool_manager_1 = __webpack_require__(/*! ./tool-manager/tool-manager */ "../node_modules/sprotty/lib/base/tool-manager/tool-manager.js");
var tool_1 = __webpack_require__(/*! ./tool-manager/tool */ "../node_modules/sprotty/lib/base/tool-manager/tool.js");
var set_model_1 = __webpack_require__(/*! ./features/set-model */ "../node_modules/sprotty/lib/base/features/set-model.js");
var ui_extension_registry_1 = __webpack_require__(/*! ./ui-extensions/ui-extension-registry */ "../node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js");
var diagram_locker_1 = __webpack_require__(/*! ./actions/diagram-locker */ "../node_modules/sprotty/lib/base/actions/diagram-locker.js");
var defaultContainerModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    // Logging ---------------------------------------------
    bind(types_1.TYPES.ILogger).to(logging_1.NullLogger).inSingletonScope();
    bind(types_1.TYPES.LogLevel).toConstantValue(logging_1.LogLevel.warn);
    // Registries ---------------------------------------------
    bind(types_1.TYPES.SModelRegistry).to(smodel_factory_1.SModelRegistry).inSingletonScope();
    bind(action_handler_1.ActionHandlerRegistry).toSelf().inSingletonScope();
    bind(types_1.TYPES.ActionHandlerRegistryProvider).toProvider(function (ctx) {
        return function () {
            return new Promise(function (resolve) {
                resolve(ctx.container.get(action_handler_1.ActionHandlerRegistry));
            });
        };
    });
    bind(types_1.TYPES.ViewRegistry).to(view_1.ViewRegistry).inSingletonScope();
    // Model Creation ---------------------------------------------
    bind(types_1.TYPES.IModelFactory).to(smodel_factory_1.SModelFactory).inSingletonScope();
    // Action Dispatcher ---------------------------------------------
    bind(types_1.TYPES.IActionDispatcher).to(action_dispatcher_1.ActionDispatcher).inSingletonScope();
    bind(types_1.TYPES.IActionDispatcherProvider).toProvider(function (ctx) {
        return function () {
            return new Promise(function (resolve) {
                resolve(ctx.container.get(types_1.TYPES.IActionDispatcher));
            });
        };
    });
    bind(types_1.TYPES.IDiagramLocker).to(diagram_locker_1.DefaultDiagramLocker).inSingletonScope();
    // Action handler
    bind(types_1.TYPES.IActionHandlerInitializer).to(command_registration_1.CommandActionHandlerInitializer);
    // Command Stack ---------------------------------------------
    bind(types_1.TYPES.ICommandStack).to(command_stack_1.CommandStack).inSingletonScope();
    bind(types_1.TYPES.ICommandStackProvider).toProvider(function (ctx) {
        return function () {
            return new Promise(function (resolve) {
                resolve(ctx.container.get(types_1.TYPES.ICommandStack));
            });
        };
    });
    bind(types_1.TYPES.CommandStackOptions).toConstantValue({
        defaultDuration: 250,
        undoHistoryLimit: 50
    });
    // Viewer ---------------------------------------------
    bind(viewer_1.ModelViewer).toSelf().inSingletonScope();
    bind(viewer_1.HiddenModelViewer).toSelf().inSingletonScope();
    bind(viewer_1.PopupModelViewer).toSelf().inSingletonScope();
    bind(types_1.TYPES.ModelViewer).toDynamicValue(function (ctx) {
        var container = ctx.container.createChild();
        container.bind(types_1.TYPES.IViewer).toService(viewer_1.ModelViewer);
        container.bind(viewer_cache_1.ViewerCache).toSelf();
        return container.get(viewer_cache_1.ViewerCache);
    }).inSingletonScope();
    bind(types_1.TYPES.PopupModelViewer).toDynamicValue(function (ctx) {
        var container = ctx.container.createChild();
        container.bind(types_1.TYPES.IViewer).toService(viewer_1.PopupModelViewer);
        container.bind(viewer_cache_1.ViewerCache).toSelf();
        return container.get(viewer_cache_1.ViewerCache);
    }).inSingletonScope();
    bind(types_1.TYPES.HiddenModelViewer).toService(viewer_1.HiddenModelViewer);
    bind(types_1.TYPES.IViewerProvider).toDynamicValue(function (ctx) {
        return {
            get modelViewer() {
                return ctx.container.get(types_1.TYPES.ModelViewer);
            },
            get hiddenModelViewer() {
                return ctx.container.get(types_1.TYPES.HiddenModelViewer);
            },
            get popupModelViewer() {
                return ctx.container.get(types_1.TYPES.PopupModelViewer);
            }
        };
    });
    bind(types_1.TYPES.ViewerOptions).toConstantValue(viewer_options_1.defaultViewerOptions());
    bind(types_1.TYPES.PatcherProvider).to(viewer_1.PatcherProvider).inSingletonScope();
    bind(types_1.TYPES.DOMHelper).to(dom_helper_1.DOMHelper).inSingletonScope();
    bind(types_1.TYPES.ModelRendererFactory).toFactory(function (ctx) {
        return function (processors) {
            var viewRegistry = ctx.container.get(types_1.TYPES.ViewRegistry);
            return new viewer_1.ModelRenderer(viewRegistry, processors);
        };
    });
    // Tools & Postprocessors --------------------------------------
    bind(id_postprocessor_1.IdPostprocessor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(id_postprocessor_1.IdPostprocessor);
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(id_postprocessor_1.IdPostprocessor);
    bind(css_class_postprocessor_1.CssClassPostprocessor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(css_class_postprocessor_1.CssClassPostprocessor);
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(css_class_postprocessor_1.CssClassPostprocessor);
    bind(mouse_tool_1.MouseTool).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(mouse_tool_1.MouseTool);
    bind(key_tool_1.KeyTool).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(key_tool_1.KeyTool);
    bind(vnode_postprocessor_1.FocusFixPostprocessor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(vnode_postprocessor_1.FocusFixPostprocessor);
    bind(types_1.TYPES.PopupVNodePostprocessor).toService(id_postprocessor_1.IdPostprocessor);
    bind(mouse_tool_1.PopupMouseTool).toSelf().inSingletonScope();
    bind(types_1.TYPES.PopupVNodePostprocessor).toService(mouse_tool_1.PopupMouseTool);
    // Animation Frame Sync ------------------------------------------
    bind(types_1.TYPES.AnimationFrameSyncer).to(animation_frame_syncer_1.AnimationFrameSyncer).inSingletonScope();
    // Canvas Initialization ---------------------------------------------
    var context = { bind: bind, isBound: isBound };
    command_registration_1.configureCommand(context, initialize_canvas_1.InitializeCanvasBoundsCommand);
    bind(initialize_canvas_1.CanvasBoundsInitializer).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(initialize_canvas_1.CanvasBoundsInitializer);
    // Model commands ---------------------------------------------
    command_registration_1.configureCommand(context, set_model_1.SetModelCommand);
    // Tool manager initialization ------------------------------------
    bind(types_1.TYPES.IToolManager).to(tool_manager_1.ToolManager).inSingletonScope();
    bind(types_1.TYPES.KeyListener).to(tool_manager_1.DefaultToolsEnablingKeyListener);
    bind(tool_manager_1.ToolManagerActionHandler).toSelf().inSingletonScope();
    action_handler_1.configureActionHandler(context, tool_1.EnableDefaultToolsAction.KIND, tool_manager_1.ToolManagerActionHandler);
    action_handler_1.configureActionHandler(context, tool_1.EnableToolsAction.KIND, tool_manager_1.ToolManagerActionHandler);
    // UIExtension registry initialization ------------------------------------
    bind(types_1.TYPES.UIExtensionRegistry).to(ui_extension_registry_1.UIExtensionRegistry).inSingletonScope();
    command_registration_1.configureCommand(context, ui_extension_registry_1.SetUIExtensionVisibilityCommand);
    // Tracker for last known mouse position on diagram ------------------------
    bind(mouse_tool_1.MousePositionTracker).toSelf().inSingletonScope();
    bind(types_1.TYPES.MouseListener).toService(mouse_tool_1.MousePositionTracker);
});
exports.default = defaultContainerModule;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/features/initialize-canvas.js":
/*!**********************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/features/initialize-canvas.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../node_modules/sprotty/lib/base/types.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var smodel_1 = __webpack_require__(/*! ../model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var command_1 = __webpack_require__(/*! ../commands/command */ "../node_modules/sprotty/lib/base/commands/command.js");
var browser_1 = __webpack_require__(/*! ../../utils/browser */ "../node_modules/sprotty/lib/utils/browser.js");
/**
 * Grabs the bounds from the root element in page coordinates and fires a
 * InitializeCanvasBoundsAction. This size is needed for other actions such
 * as FitToScreenAction.
 */
var CanvasBoundsInitializer = /** @class */ (function () {
    function CanvasBoundsInitializer() {
    }
    CanvasBoundsInitializer.prototype.decorate = function (vnode, element) {
        if (element instanceof smodel_1.SModelRoot && !geometry_1.isValidDimension(element.canvasBounds)) {
            this.rootAndVnode = [element, vnode];
        }
        return vnode;
    };
    CanvasBoundsInitializer.prototype.postUpdate = function () {
        if (this.rootAndVnode !== undefined) {
            var domElement = this.rootAndVnode[1].elm;
            var oldBounds = this.rootAndVnode[0].canvasBounds;
            if (domElement !== undefined) {
                var newBounds = this.getBoundsInPage(domElement);
                if (!(geometry_1.almostEquals(newBounds.x, oldBounds.x)
                    && geometry_1.almostEquals(newBounds.y, oldBounds.y)
                    && geometry_1.almostEquals(newBounds.width, oldBounds.width)
                    && geometry_1.almostEquals(newBounds.height, oldBounds.width)))
                    this.actionDispatcher.dispatch(new InitializeCanvasBoundsAction(newBounds));
            }
            this.rootAndVnode = undefined;
        }
    };
    CanvasBoundsInitializer.prototype.getBoundsInPage = function (element) {
        var bounds = element.getBoundingClientRect();
        var scroll = browser_1.getWindowScroll();
        return {
            x: bounds.left + scroll.x,
            y: bounds.top + scroll.y,
            width: bounds.width,
            height: bounds.height
        };
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], CanvasBoundsInitializer.prototype, "actionDispatcher", void 0);
    CanvasBoundsInitializer = __decorate([
        inversify_1.injectable()
    ], CanvasBoundsInitializer);
    return CanvasBoundsInitializer;
}());
exports.CanvasBoundsInitializer = CanvasBoundsInitializer;
var InitializeCanvasBoundsAction = /** @class */ (function () {
    function InitializeCanvasBoundsAction(newCanvasBounds) {
        this.newCanvasBounds = newCanvasBounds;
        this.kind = InitializeCanvasBoundsAction.KIND;
    }
    InitializeCanvasBoundsAction.KIND = 'initializeCanvasBounds';
    return InitializeCanvasBoundsAction;
}());
exports.InitializeCanvasBoundsAction = InitializeCanvasBoundsAction;
var InitializeCanvasBoundsCommand = /** @class */ (function (_super) {
    __extends(InitializeCanvasBoundsCommand, _super);
    function InitializeCanvasBoundsCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    InitializeCanvasBoundsCommand.prototype.execute = function (context) {
        this.newCanvasBounds = this.action.newCanvasBounds;
        context.root.canvasBounds = this.newCanvasBounds;
        return context.root;
    };
    InitializeCanvasBoundsCommand.prototype.undo = function (context) {
        return context.root;
    };
    InitializeCanvasBoundsCommand.prototype.redo = function (context) {
        return context.root;
    };
    InitializeCanvasBoundsCommand.KIND = InitializeCanvasBoundsAction.KIND;
    InitializeCanvasBoundsCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [InitializeCanvasBoundsAction])
    ], InitializeCanvasBoundsCommand);
    return InitializeCanvasBoundsCommand;
}(command_1.SystemCommand));
exports.InitializeCanvasBoundsCommand = InitializeCanvasBoundsCommand;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/features/set-model.js":
/*!**************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/features/set-model.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var action_1 = __webpack_require__(/*! ../actions/action */ "../node_modules/sprotty/lib/base/actions/action.js");
var command_1 = __webpack_require__(/*! ../commands/command */ "../node_modules/sprotty/lib/base/commands/command.js");
var types_1 = __webpack_require__(/*! ../types */ "../node_modules/sprotty/lib/base/types.js");
var initialize_canvas_1 = __webpack_require__(/*! ./initialize-canvas */ "../node_modules/sprotty/lib/base/features/initialize-canvas.js");
/**
 * Sent from the client to the model source (e.g. a DiagramServer) in order to request a model. Usually this
 * is the first message that is sent to the source, so it is also used to initiate the communication.
 * The response is a SetModelAction or an UpdateModelAction.
 */
var RequestModelAction = /** @class */ (function () {
    function RequestModelAction(options, requestId) {
        if (requestId === void 0) { requestId = ''; }
        this.options = options;
        this.requestId = requestId;
        this.kind = RequestModelAction.KIND;
    }
    /** Factory function to dispatch a request with the `IActionDispatcher` */
    RequestModelAction.create = function (options) {
        return new RequestModelAction(options, action_1.generateRequestId());
    };
    RequestModelAction.KIND = 'requestModel';
    return RequestModelAction;
}());
exports.RequestModelAction = RequestModelAction;
/**
 * Sent from the model source to the client in order to set the model. If a model is already present, it is replaced.
 */
var SetModelAction = /** @class */ (function () {
    function SetModelAction(newRoot, responseId) {
        if (responseId === void 0) { responseId = ''; }
        this.newRoot = newRoot;
        this.responseId = responseId;
        this.kind = SetModelAction.KIND;
    }
    SetModelAction.KIND = 'setModel';
    return SetModelAction;
}());
exports.SetModelAction = SetModelAction;
var SetModelCommand = /** @class */ (function (_super) {
    __extends(SetModelCommand, _super);
    function SetModelCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    SetModelCommand.prototype.execute = function (context) {
        this.oldRoot = context.modelFactory.createRoot(context.root);
        this.newRoot = context.modelFactory.createRoot(this.action.newRoot);
        return this.newRoot;
    };
    SetModelCommand.prototype.undo = function (context) {
        return this.oldRoot;
    };
    SetModelCommand.prototype.redo = function (context) {
        return this.newRoot;
    };
    Object.defineProperty(SetModelCommand.prototype, "blockUntil", {
        get: function () {
            return function (action) { return action.kind === initialize_canvas_1.InitializeCanvasBoundsCommand.KIND; };
        },
        enumerable: true,
        configurable: true
    });
    SetModelCommand.KIND = SetModelAction.KIND;
    SetModelCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [SetModelAction])
    ], SetModelCommand);
    return SetModelCommand;
}(command_1.ResetCommand));
exports.SetModelCommand = SetModelCommand;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/model/smodel-factory.js":
/*!****************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/model/smodel-factory.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../node_modules/sprotty/lib/base/types.js");
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "../node_modules/sprotty/lib/utils/registry.js");
var smodel_1 = __webpack_require__(/*! ./smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
/**
 * The default model factory creates SModelRoot for the root element and SChildElement for all other
 * model elements.
 */
var SModelFactory = /** @class */ (function () {
    function SModelFactory() {
    }
    SModelFactory.prototype.createElement = function (schema, parent) {
        var child;
        if (this.registry.hasKey(schema.type)) {
            var regElement = this.registry.get(schema.type, undefined);
            if (!(regElement instanceof smodel_1.SChildElement))
                throw new Error("Element with type " + schema.type + " was expected to be an SChildElement.");
            child = regElement;
        }
        else {
            child = new smodel_1.SChildElement();
        }
        return this.initializeChild(child, schema, parent);
    };
    SModelFactory.prototype.createRoot = function (schema) {
        var root;
        if (this.registry.hasKey(schema.type)) {
            var regElement = this.registry.get(schema.type, undefined);
            if (!(regElement instanceof smodel_1.SModelRoot))
                throw new Error("Element with type " + schema.type + " was expected to be an SModelRoot.");
            root = regElement;
        }
        else {
            root = new smodel_1.SModelRoot();
        }
        return this.initializeRoot(root, schema);
    };
    SModelFactory.prototype.createSchema = function (element) {
        var _this = this;
        var schema = {};
        for (var key in element) {
            if (!this.isReserved(element, key)) {
                var value = element[key];
                if (typeof value !== 'function')
                    schema[key] = value;
            }
        }
        if (element instanceof smodel_1.SParentElement)
            schema['children'] = element.children.map(function (child) { return _this.createSchema(child); });
        return schema;
    };
    SModelFactory.prototype.initializeElement = function (element, schema) {
        for (var key in schema) {
            if (!this.isReserved(element, key)) {
                var value = schema[key];
                if (typeof value !== 'function')
                    element[key] = value;
            }
        }
        return element;
    };
    SModelFactory.prototype.isReserved = function (element, propertyName) {
        if (['children', 'parent', 'index'].indexOf(propertyName) >= 0)
            return true;
        var obj = element;
        do {
            var descriptor = Object.getOwnPropertyDescriptor(obj, propertyName);
            if (descriptor !== undefined)
                return descriptor.get !== undefined;
            obj = Object.getPrototypeOf(obj);
        } while (obj);
        return false;
    };
    SModelFactory.prototype.initializeParent = function (parent, schema) {
        var _this = this;
        this.initializeElement(parent, schema);
        if (smodel_1.isParent(schema)) {
            parent.children = schema.children.map(function (childSchema) { return _this.createElement(childSchema, parent); });
        }
        return parent;
    };
    SModelFactory.prototype.initializeChild = function (child, schema, parent) {
        this.initializeParent(child, schema);
        if (parent !== undefined) {
            child.parent = parent;
        }
        return child;
    };
    SModelFactory.prototype.initializeRoot = function (root, schema) {
        this.initializeParent(root, schema);
        root.index.add(root);
        return root;
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.SModelRegistry),
        __metadata("design:type", SModelRegistry)
    ], SModelFactory.prototype, "registry", void 0);
    SModelFactory = __decorate([
        inversify_1.injectable()
    ], SModelFactory);
    return SModelFactory;
}());
exports.SModelFactory = SModelFactory;
exports.EMPTY_ROOT = Object.freeze({
    type: 'NONE',
    id: 'EMPTY'
});
/**
 * Model element classes registered here are considered automatically when constructring a model from its schema.
 */
var SModelRegistry = /** @class */ (function (_super) {
    __extends(SModelRegistry, _super);
    function SModelRegistry(registrations) {
        var _this = _super.call(this) || this;
        registrations.forEach(function (registration) {
            var defaultFeatures = _this.getDefaultFeatures(registration.constr);
            if (!defaultFeatures && registration.features && registration.features.enable)
                defaultFeatures = [];
            if (defaultFeatures) {
                var featureSet_1 = createFeatureSet(defaultFeatures, registration.features);
                _this.register(registration.type, function () {
                    var element = new registration.constr();
                    element.features = featureSet_1;
                    return element;
                });
            }
            else {
                _this.register(registration.type, function () { return new registration.constr(); });
            }
        });
        return _this;
    }
    SModelRegistry.prototype.getDefaultFeatures = function (constr) {
        var obj = constr;
        do {
            var defaultFeatures = obj.DEFAULT_FEATURES;
            if (defaultFeatures)
                return defaultFeatures;
            obj = Object.getPrototypeOf(obj);
        } while (obj);
        return undefined;
    };
    SModelRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.SModelElementRegistration)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], SModelRegistry);
    return SModelRegistry;
}(registry_1.FactoryRegistry));
exports.SModelRegistry = SModelRegistry;
function createFeatureSet(defaults, custom) {
    var featureSet = new Set(defaults);
    if (custom && custom.enable) {
        for (var _i = 0, _a = custom.enable; _i < _a.length; _i++) {
            var f = _a[_i];
            featureSet.add(f);
        }
    }
    if (custom && custom.disable) {
        for (var _b = 0, _c = custom.disable; _b < _c.length; _b++) {
            var f = _c[_b];
            featureSet.delete(f);
        }
    }
    return featureSet;
}
exports.createFeatureSet = createFeatureSet;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/model/smodel-utils.js":
/*!**************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/model/smodel-utils.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var types_1 = __webpack_require__(/*! ../types */ "../node_modules/sprotty/lib/base/types.js");
var smodel_1 = __webpack_require__(/*! ./smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
/**
 * Register a model element constructor for an element type.
 */
function registerModelElement(context, type, constr, features) {
    context.bind(types_1.TYPES.SModelElementRegistration).toConstantValue({
        type: type, constr: constr, features: features
    });
}
exports.registerModelElement = registerModelElement;
/**
 * Model element types can include a colon to separate the basic type and a sub-type. This function
 * extracts the basic type of a model element.
 */
function getBasicType(schema) {
    if (!schema.type)
        return '';
    var colonIndex = schema.type.indexOf(':');
    if (colonIndex >= 0)
        return schema.type.substring(0, colonIndex);
    else
        return schema.type;
}
exports.getBasicType = getBasicType;
/**
 * Model element types can include a colon to separate the basic type and a sub-type. This function
 * extracts the sub-type of a model element.
 */
function getSubType(schema) {
    if (!schema.type)
        return '';
    var colonIndex = schema.type.indexOf(':');
    if (colonIndex >= 0)
        return schema.type.substring(colonIndex + 1);
    else
        return schema.type;
}
exports.getSubType = getSubType;
/**
 * Find the element with the given identifier. If you need to find multiple elements, using an
 * SModelIndex might be more effective.
 */
function findElement(parent, elementId) {
    if (parent.id === elementId)
        return parent;
    if (parent.children !== undefined) {
        for (var _i = 0, _a = parent.children; _i < _a.length; _i++) {
            var child = _a[_i];
            var result = findElement(child, elementId);
            if (result !== undefined)
                return result;
        }
    }
    return undefined;
}
exports.findElement = findElement;
/**
 * Find a parent element that satisfies the given predicate.
 */
function findParent(element, predicate) {
    var current = element;
    while (current !== undefined) {
        if (predicate(current))
            return current;
        else if (current instanceof smodel_1.SChildElement)
            current = current.parent;
        else
            current = undefined;
    }
    return current;
}
exports.findParent = findParent;
/**
 * Find a parent element that implements the feature identified with the given predicate.
 */
function findParentByFeature(element, predicate) {
    var current = element;
    while (current !== undefined) {
        if (predicate(current))
            return current;
        else if (current instanceof smodel_1.SChildElement)
            current = current.parent;
        else
            current = undefined;
    }
    return current;
}
exports.findParentByFeature = findParentByFeature;
/**
 * Translate a point from the coordinate system of the source element to the coordinate system
 * of the target element.
 */
function translatePoint(point, source, target) {
    if (source !== target) {
        // Translate from the source to the root element
        while (source instanceof smodel_1.SChildElement) {
            point = source.localToParent(point);
            source = source.parent;
            if (source === target)
                return point;
        }
        // Translate from the root to the target element
        var targetTrace = [];
        while (target instanceof smodel_1.SChildElement) {
            targetTrace.push(target);
            target = target.parent;
        }
        if (source !== target)
            throw new Error("Incompatible source and target: " + source.id + ", " + target.id);
        for (var i = targetTrace.length - 1; i >= 0; i--) {
            point = targetTrace[i].parentToLocal(point);
        }
    }
    return point;
}
exports.translatePoint = translatePoint;
/**
 * Translate some bounds from the coordinate system of the source element to the coordinate system
 * of the target element.
 */
function translateBounds(bounds, source, target) {
    var upperLeft = translatePoint(bounds, source, target);
    var lowerRight = translatePoint({ x: bounds.x + bounds.width, y: bounds.y + bounds.height }, source, target);
    return {
        x: upperLeft.x,
        y: upperLeft.y,
        width: lowerRight.x - upperLeft.x,
        height: lowerRight.y - upperLeft.y
    };
}
exports.translateBounds = translateBounds;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/model/smodel.js":
/*!********************************************************!*\
  !*** ../node_modules/sprotty/lib/base/model/smodel.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var iterable_1 = __webpack_require__(/*! ../../utils/iterable */ "../node_modules/sprotty/lib/utils/iterable.js");
/**
 * Base class for all elements of the diagram model.
 * Each model element must have a unique ID and a type that is used to look up its view.
 */
var SModelElement = /** @class */ (function () {
    function SModelElement() {
    }
    Object.defineProperty(SModelElement.prototype, "root", {
        get: function () {
            var current = this;
            while (current) {
                if (current instanceof SModelRoot)
                    return current;
                else if (current instanceof SChildElement)
                    current = current.parent;
                else
                    current = undefined;
            }
            throw new Error("Element has no root");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SModelElement.prototype, "index", {
        get: function () {
            return this.root.index;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * A feature is a symbol identifying some functionality that can be enabled or disabled for
     * a model element. The set of supported features is determined by the `features` property.
     */
    SModelElement.prototype.hasFeature = function (feature) {
        return this.features !== undefined && this.features.has(feature);
    };
    return SModelElement;
}());
exports.SModelElement = SModelElement;
function isParent(element) {
    var children = element.children;
    return children !== undefined && children.constructor === Array;
}
exports.isParent = isParent;
/**
 * A parent element may contain child elements, thus the diagram model forms a tree.
 */
var SParentElement = /** @class */ (function (_super) {
    __extends(SParentElement, _super);
    function SParentElement() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.children = [];
        return _this;
    }
    SParentElement.prototype.add = function (child, i) {
        var children = this.children;
        if (i === undefined) {
            children.push(child);
        }
        else {
            if (i < 0 || i > this.children.length) {
                throw new Error("Child index " + i + " out of bounds (0.." + children.length + ")");
            }
            children.splice(i, 0, child);
        }
        child.parent = this;
        this.index.add(child);
    };
    SParentElement.prototype.remove = function (child) {
        var children = this.children;
        var i = children.indexOf(child);
        if (i < 0) {
            throw new Error("No such child " + child.id);
        }
        children.splice(i, 1);
        delete child.parent;
        this.index.remove(child);
    };
    SParentElement.prototype.removeAll = function (filter) {
        var _this = this;
        var children = this.children;
        if (filter !== undefined) {
            for (var i = children.length - 1; i >= 0; i--) {
                if (filter(children[i])) {
                    var child = children.splice(i, 1)[0];
                    delete child.parent;
                    this.index.remove(child);
                }
            }
        }
        else {
            children.forEach(function (child) {
                delete child.parent;
                _this.index.remove(child);
            });
            children.splice(0, children.length);
        }
    };
    SParentElement.prototype.move = function (child, newIndex) {
        var children = this.children;
        var i = children.indexOf(child);
        if (i === -1) {
            throw new Error("No such child " + child.id);
        }
        else {
            if (newIndex < 0 || newIndex > children.length - 1) {
                throw new Error("Child index " + newIndex + " out of bounds (0.." + children.length + ")");
            }
            children.splice(i, 1);
            children.splice(newIndex, 0, child);
        }
    };
    /**
     * Transform the given bounds from the local coordinate system of this element to the coordinate
     * system of its parent. This function should consider any transformation that is applied to the
     * view of this element and its contents.
     * The base implementation assumes that this element does not define a local coordinate system,
     * so it leaves the bounds unchanged.
     */
    SParentElement.prototype.localToParent = function (point) {
        return geometry_1.isBounds(point) ? point : { x: point.x, y: point.y, width: -1, height: -1 };
    };
    /**
     * Transform the given bounds from the coordinate system of this element's parent to its local
     * coordinate system. This function should consider any transformation that is applied to the
     * view of this element and its contents.
     * The base implementation assumes that this element does not define a local coordinate system,
     * so it leaves the bounds unchanged.
     */
    SParentElement.prototype.parentToLocal = function (point) {
        return geometry_1.isBounds(point) ? point : { x: point.x, y: point.y, width: -1, height: -1 };
    };
    return SParentElement;
}(SModelElement));
exports.SParentElement = SParentElement;
/**
 * A child element is contained in a parent element. All elements except the model root are child
 * elements. In order to keep the model class hierarchy simple, every child element is also a
 * parent element, although for many elements the array of children is empty (i.e. they are
 * leafs in the model element tree).
 */
var SChildElement = /** @class */ (function (_super) {
    __extends(SChildElement, _super);
    function SChildElement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SChildElement;
}(SParentElement));
exports.SChildElement = SChildElement;
/**
 * Base class for the root element of the diagram model tree.
 */
var SModelRoot = /** @class */ (function (_super) {
    __extends(SModelRoot, _super);
    function SModelRoot(index) {
        if (index === void 0) { index = new SModelIndex(); }
        var _this = _super.call(this) || this;
        _this.canvasBounds = geometry_1.EMPTY_BOUNDS;
        // Override the index property from SModelElement, which has a getter, with a data property
        Object.defineProperty(_this, 'index', {
            value: index,
            writable: false
        });
        return _this;
    }
    return SModelRoot;
}(SParentElement));
exports.SModelRoot = SModelRoot;
var ID_CHARS = "0123456789abcdefghijklmnopqrstuvwxyz";
function createRandomId(length) {
    if (length === void 0) { length = 8; }
    var id = "";
    for (var i = 0; i < length; i++) {
        id += ID_CHARS.charAt(Math.floor(Math.random() * ID_CHARS.length));
    }
    return id;
}
exports.createRandomId = createRandomId;
/**
 * Used to speed up model element lookup by id.
 */
var SModelIndex = /** @class */ (function () {
    function SModelIndex() {
        this.id2element = new Map;
    }
    SModelIndex.prototype.add = function (element) {
        if (!element.id) {
            do {
                element.id = createRandomId();
            } while (this.contains(element));
        }
        else if (this.contains(element)) {
            throw new Error("Duplicate ID in model: " + element.id);
        }
        this.id2element.set(element.id, element);
        if (element.children !== undefined && element.children.constructor === Array) {
            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
                var child = _a[_i];
                this.add(child);
            }
        }
    };
    SModelIndex.prototype.remove = function (element) {
        this.id2element.delete(element.id);
        if (element.children !== undefined && element.children.constructor === Array) {
            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
                var child = _a[_i];
                this.remove(child);
            }
        }
    };
    SModelIndex.prototype.contains = function (element) {
        return this.id2element.has(element.id);
    };
    SModelIndex.prototype.getById = function (id) {
        return this.id2element.get(id);
    };
    SModelIndex.prototype.getAttachedElements = function (element) {
        return [];
    };
    SModelIndex.prototype.all = function () {
        return iterable_1.mapIterable(this.id2element, function (_a) {
            var key = _a[0], value = _a[1];
            return value;
        });
    };
    return SModelIndex;
}());
exports.SModelIndex = SModelIndex;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/tool-manager/tool-manager.js":
/*!*********************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/tool-manager/tool-manager.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../node_modules/sprotty/lib/base/types.js");
var tool_1 = __webpack_require__(/*! ./tool */ "../node_modules/sprotty/lib/base/tool-manager/tool.js");
var key_tool_1 = __webpack_require__(/*! ../views/key-tool */ "../node_modules/sprotty/lib/base/views/key-tool.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../node_modules/sprotty/lib/utils/keyboard.js");
var ToolManager = /** @class */ (function () {
    function ToolManager() {
        this.tools = [];
        this.defaultTools = [];
        this.actives = [];
    }
    Object.defineProperty(ToolManager.prototype, "managedTools", {
        get: function () {
            return this.defaultTools.concat(this.tools);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToolManager.prototype, "activeTools", {
        get: function () {
            return this.actives;
        },
        enumerable: true,
        configurable: true
    });
    ToolManager.prototype.disableActiveTools = function () {
        this.actives.forEach(function (tool) { return tool.disable(); });
        this.actives.splice(0, this.actives.length);
    };
    ToolManager.prototype.enableDefaultTools = function () {
        this.enable(this.defaultTools.map(function (tool) { return tool.id; }));
    };
    ToolManager.prototype.enable = function (toolIds) {
        var _this = this;
        this.disableActiveTools();
        var tools = toolIds.map(function (id) { return _this.tool(id); });
        tools.forEach(function (tool) {
            if (tool !== undefined) {
                tool.enable();
                _this.actives.push(tool);
            }
        });
    };
    ToolManager.prototype.tool = function (toolId) {
        return this.managedTools.find(function (tool) { return tool.id === toolId; });
    };
    ToolManager.prototype.registerDefaultTools = function () {
        var tools = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            tools[_i] = arguments[_i];
        }
        for (var _a = 0, tools_1 = tools; _a < tools_1.length; _a++) {
            var tool = tools_1[_a];
            this.defaultTools.push(tool);
        }
    };
    ToolManager.prototype.registerTools = function () {
        var tools = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            tools[_i] = arguments[_i];
        }
        for (var _a = 0, tools_2 = tools; _a < tools_2.length; _a++) {
            var tool = tools_2[_a];
            this.tools.push(tool);
        }
    };
    ToolManager = __decorate([
        inversify_1.injectable()
    ], ToolManager);
    return ToolManager;
}());
exports.ToolManager = ToolManager;
var ToolManagerActionHandler = /** @class */ (function () {
    function ToolManagerActionHandler() {
    }
    ToolManagerActionHandler.prototype.handle = function (action) {
        switch (action.kind) {
            case tool_1.EnableDefaultToolsAction.KIND:
                this.toolManager.enableDefaultTools();
                break;
            case tool_1.EnableToolsAction.KIND:
                this.toolManager.enable(action.toolIds);
                break;
        }
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.IToolManager),
        __metadata("design:type", Object)
    ], ToolManagerActionHandler.prototype, "toolManager", void 0);
    ToolManagerActionHandler = __decorate([
        inversify_1.injectable()
    ], ToolManagerActionHandler);
    return ToolManagerActionHandler;
}());
exports.ToolManagerActionHandler = ToolManagerActionHandler;
var DefaultToolsEnablingKeyListener = /** @class */ (function (_super) {
    __extends(DefaultToolsEnablingKeyListener, _super);
    function DefaultToolsEnablingKeyListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DefaultToolsEnablingKeyListener.prototype.keyDown = function (element, event) {
        if (keyboard_1.matchesKeystroke(event, 'Escape')) {
            return [new tool_1.EnableDefaultToolsAction()];
        }
        return [];
    };
    DefaultToolsEnablingKeyListener = __decorate([
        inversify_1.injectable()
    ], DefaultToolsEnablingKeyListener);
    return DefaultToolsEnablingKeyListener;
}(key_tool_1.KeyListener));
exports.DefaultToolsEnablingKeyListener = DefaultToolsEnablingKeyListener;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/tool-manager/tool.js":
/*!*************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/tool-manager/tool.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Action to enable the tools of the specified `toolIds`.
 */
var EnableToolsAction = /** @class */ (function () {
    function EnableToolsAction(toolIds) {
        this.toolIds = toolIds;
        this.kind = EnableToolsAction.KIND;
    }
    EnableToolsAction.KIND = "enable-tools";
    return EnableToolsAction;
}());
exports.EnableToolsAction = EnableToolsAction;
/**
 * Action to disable the currently active tools and enable the default tools instead.
 */
var EnableDefaultToolsAction = /** @class */ (function () {
    function EnableDefaultToolsAction() {
        this.kind = EnableDefaultToolsAction.KIND;
    }
    EnableDefaultToolsAction.KIND = "enable-default-tools";
    return EnableDefaultToolsAction;
}());
exports.EnableDefaultToolsAction = EnableDefaultToolsAction;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/types.js":
/*!*************************************************!*\
  !*** ../node_modules/sprotty/lib/base/types.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.TYPES = {
    Action: Symbol('Action'),
    IActionDispatcher: Symbol('IActionDispatcher'),
    IActionDispatcherProvider: Symbol('IActionDispatcherProvider'),
    IActionHandlerInitializer: Symbol('IActionHandlerInitializer'),
    ActionHandlerRegistration: Symbol('ActionHandlerRegistration'),
    ActionHandlerRegistryProvider: Symbol('ActionHandlerRegistryProvider'),
    IAnchorComputer: Symbol('IAnchor'),
    AnimationFrameSyncer: Symbol('AnimationFrameSyncer'),
    IButtonHandler: Symbol('IButtonHandler'),
    ICommandPaletteActionProvider: Symbol('ICommandPaletteActionProvider'),
    ICommandPaletteActionProviderRegistry: Symbol('ICommandPaletteActionProviderRegistry'),
    CommandRegistration: Symbol('CommandRegistration'),
    ICommandStack: Symbol('ICommandStack'),
    CommandStackOptions: Symbol('CommandStackOptions'),
    ICommandStackProvider: Symbol('ICommandStackProvider'),
    IContextMenuItemProvider: Symbol.for("IContextMenuProvider"),
    IContextMenuProviderRegistry: Symbol.for("IContextMenuProviderRegistry"),
    IContextMenuService: Symbol.for("IContextMenuService"),
    IContextMenuServiceProvider: Symbol.for("IContextMenuServiceProvider"),
    DOMHelper: Symbol('DOMHelper'),
    IDiagramLocker: Symbol('IDiagramLocker'),
    IEdgeRouter: Symbol('IEdgeRouter'),
    IEditLabelValidationDecorator: Symbol('IEditLabelValidationDecorator'),
    IEditLabelValidator: Symbol('IEditLabelValidator'),
    HiddenModelViewer: Symbol('HiddenModelViewer'),
    HiddenVNodePostprocessor: Symbol('HiddenVNodeDecorator'),
    HoverState: Symbol('HoverState'),
    KeyListener: Symbol('KeyListener'),
    LayoutRegistry: Symbol('LayoutRegistry'),
    Layouter: Symbol('Layouter'),
    LogLevel: Symbol('LogLevel'),
    ILogger: Symbol('ILogger'),
    IModelFactory: Symbol('IModelFactory'),
    IModelLayoutEngine: Symbol('IModelLayoutEngine'),
    ModelRendererFactory: Symbol('ModelRendererFactory'),
    ModelSource: Symbol('ModelSource'),
    ModelSourceProvider: Symbol('ModelSourceProvider'),
    ModelViewer: Symbol('ModelViewer'),
    MouseListener: Symbol('MouseListener'),
    PatcherProvider: Symbol('PatcherProvider'),
    IPopupModelProvider: Symbol('IPopupModelProvider'),
    PopupModelViewer: Symbol('PopupModelViewer'),
    PopupMouseListener: Symbol('PopupMouseListener'),
    PopupVNodePostprocessor: Symbol('PopupVNodeDecorator'),
    SModelElementRegistration: Symbol('SModelElementRegistration'),
    SModelRegistry: Symbol('SModelRegistry'),
    ISnapper: Symbol('ISnapper'),
    SvgExporter: Symbol('SvgExporter'),
    IToolManager: Symbol('IToolManager'),
    IUIExtension: Symbol('IUIExtension'),
    UIExtensionRegistry: Symbol('UIExtensionRegistry'),
    IVNodePostprocessor: Symbol('IVNodePostprocessor'),
    ViewRegistration: Symbol('ViewRegistration'),
    ViewRegistry: Symbol('ViewRegistry'),
    IViewer: Symbol('IViewer'),
    ViewerOptions: Symbol('ViewerOptions'),
    IViewerProvider: Symbol('IViewerProvider'),
};


/***/ }),

/***/ "../node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "../node_modules/sprotty/lib/utils/registry.js");
var command_1 = __webpack_require__(/*! ../commands/command */ "../node_modules/sprotty/lib/base/commands/command.js");
var types_1 = __webpack_require__(/*! ../types */ "../node_modules/sprotty/lib/base/types.js");
/**
 * The registry maintaining UI extensions registered via `TYPES.IUIExtension`.
 */
var UIExtensionRegistry = /** @class */ (function (_super) {
    __extends(UIExtensionRegistry, _super);
    function UIExtensionRegistry(extensions) {
        if (extensions === void 0) { extensions = []; }
        var _this = _super.call(this) || this;
        extensions.forEach(function (extension) { return _this.register(extension.id(), extension); });
        return _this;
    }
    UIExtensionRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.IUIExtension)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], UIExtensionRegistry);
    return UIExtensionRegistry;
}(registry_1.InstanceRegistry));
exports.UIExtensionRegistry = UIExtensionRegistry;
/**
 * Action to set the visibility state of the UI extension with the specified `id`.
 */
var SetUIExtensionVisibilityAction = /** @class */ (function () {
    function SetUIExtensionVisibilityAction(extensionId, visible, contextElementsId) {
        if (contextElementsId === void 0) { contextElementsId = []; }
        this.extensionId = extensionId;
        this.visible = visible;
        this.contextElementsId = contextElementsId;
        this.kind = SetUIExtensionVisibilityAction.KIND;
    }
    SetUIExtensionVisibilityAction.KIND = "setUIExtensionVisibility";
    return SetUIExtensionVisibilityAction;
}());
exports.SetUIExtensionVisibilityAction = SetUIExtensionVisibilityAction;
var SetUIExtensionVisibilityCommand = /** @class */ (function (_super) {
    __extends(SetUIExtensionVisibilityCommand, _super);
    function SetUIExtensionVisibilityCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    SetUIExtensionVisibilityCommand.prototype.execute = function (context) {
        var extension = this.registry.get(this.action.extensionId);
        if (extension) {
            this.action.visible ? extension.show.apply(extension, __spreadArrays([context.root], this.action.contextElementsId)) : extension.hide();
        }
        return { model: context.root, modelChanged: false };
    };
    SetUIExtensionVisibilityCommand.prototype.undo = function (context) {
        return { model: context.root, modelChanged: false };
    };
    SetUIExtensionVisibilityCommand.prototype.redo = function (context) {
        return { model: context.root, modelChanged: false };
    };
    SetUIExtensionVisibilityCommand.KIND = SetUIExtensionVisibilityAction.KIND;
    __decorate([
        inversify_1.inject(types_1.TYPES.UIExtensionRegistry),
        __metadata("design:type", UIExtensionRegistry)
    ], SetUIExtensionVisibilityCommand.prototype, "registry", void 0);
    SetUIExtensionVisibilityCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [SetUIExtensionVisibilityAction])
    ], SetUIExtensionVisibilityCommand);
    return SetUIExtensionVisibilityCommand;
}(command_1.SystemCommand));
exports.SetUIExtensionVisibilityCommand = SetUIExtensionVisibilityCommand;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/ui-extensions/ui-extension.js":
/*!**********************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/ui-extensions/ui-extension.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../node_modules/sprotty/lib/base/types.js");
/**
 * Abstract base class for UI extensions.
 */
var AbstractUIExtension = /** @class */ (function () {
    function AbstractUIExtension() {
    }
    AbstractUIExtension.prototype.show = function (root) {
        var contextElementIds = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            contextElementIds[_i - 1] = arguments[_i];
        }
        this.activeElement = document.activeElement;
        if (!this.containerElement) {
            if (!this.initialize())
                return;
        }
        this.onBeforeShow.apply(this, __spreadArrays([this.containerElement, root], contextElementIds));
        this.setContainerVisible(true);
    };
    AbstractUIExtension.prototype.hide = function () {
        this.setContainerVisible(false);
        this.restoreFocus();
        this.activeElement = null;
    };
    AbstractUIExtension.prototype.restoreFocus = function () {
        var focusedElement = this.activeElement;
        if (focusedElement) {
            focusedElement.focus();
        }
    };
    AbstractUIExtension.prototype.initialize = function () {
        var baseDiv = document.getElementById(this.options.baseDiv);
        if (!baseDiv) {
            this.logger.warn(this, "Could not obtain sprotty base container for initializing UI extension " + this.id, this);
            return false;
        }
        this.containerElement = this.getOrCreateContainer(baseDiv.id);
        this.initializeContents(this.containerElement);
        if (baseDiv) {
            baseDiv.insertBefore(this.containerElement, baseDiv.firstChild);
        }
        return true;
    };
    AbstractUIExtension.prototype.getOrCreateContainer = function (baseDivId) {
        var container = document.getElementById(this.id());
        if (container === null) {
            container = document.createElement('div');
            container.id = baseDivId + "_" + this.id();
            container.classList.add(this.containerClass());
        }
        return container;
    };
    AbstractUIExtension.prototype.setContainerVisible = function (visible) {
        if (this.containerElement) {
            if (visible) {
                this.containerElement.style.visibility = 'visible';
                this.containerElement.style.opacity = '1';
            }
            else {
                this.containerElement.style.visibility = 'hidden';
                this.containerElement.style.opacity = '0';
            }
        }
    };
    /**
     * Updates the `containerElement` under the given `context` before it becomes visible.
     *
     * Subclasses may override this method to, for instance, modifying the position of the
     * `containerElement`, add or remove elements, etc. depending on the specified `root`
     * or `contextElementIds`.
     */
    AbstractUIExtension.prototype.onBeforeShow = function (containerElement, root) {
        var contextElementIds = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            contextElementIds[_i - 2] = arguments[_i];
        }
        // default: do nothing
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], AbstractUIExtension.prototype, "options", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], AbstractUIExtension.prototype, "logger", void 0);
    AbstractUIExtension = __decorate([
        inversify_1.injectable()
    ], AbstractUIExtension);
    return AbstractUIExtension;
}());
exports.AbstractUIExtension = AbstractUIExtension;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/views/css-class-postprocessor.js":
/*!*************************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/views/css-class-postprocessor.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "../node_modules/sprotty/lib/base/views/vnode-utils.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var smodel_utils_1 = __webpack_require__(/*! ../model/smodel-utils */ "../node_modules/sprotty/lib/base/model/smodel-utils.js");
var CssClassPostprocessor = /** @class */ (function () {
    function CssClassPostprocessor() {
    }
    CssClassPostprocessor.prototype.decorate = function (vnode, element) {
        if (element.cssClasses) {
            for (var _i = 0, _a = element.cssClasses; _i < _a.length; _i++) {
                var cssClass = _a[_i];
                vnode_utils_1.setClass(vnode, cssClass, true);
            }
        }
        // append model subtype as class
        var subType = smodel_utils_1.getSubType(element);
        if (subType && subType !== element.type) {
            vnode_utils_1.setClass(vnode, subType, true);
        }
        return vnode;
    };
    CssClassPostprocessor.prototype.postUpdate = function () {
        // empty
    };
    CssClassPostprocessor = __decorate([
        inversify_1.injectable()
    ], CssClassPostprocessor);
    return CssClassPostprocessor;
}());
exports.CssClassPostprocessor = CssClassPostprocessor;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/views/dom-helper.js":
/*!************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/views/dom-helper.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../node_modules/sprotty/lib/base/types.js");
var DOMHelper = /** @class */ (function () {
    function DOMHelper() {
    }
    DOMHelper.prototype.getPrefix = function () {
        var prefix = this.viewerOptions !== undefined && this.viewerOptions.baseDiv !== undefined ?
            this.viewerOptions.baseDiv + "_" : "";
        return prefix;
    };
    DOMHelper.prototype.createUniqueDOMElementId = function (element) {
        return this.getPrefix() + element.id;
    };
    DOMHelper.prototype.findSModelIdByDOMElement = function (element) {
        return element.id.replace(this.getPrefix(), '');
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], DOMHelper.prototype, "viewerOptions", void 0);
    DOMHelper = __decorate([
        inversify_1.injectable()
    ], DOMHelper);
    return DOMHelper;
}());
exports.DOMHelper = DOMHelper;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/views/id-postprocessor.js":
/*!******************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/views/id-postprocessor.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../node_modules/sprotty/lib/base/types.js");
var dom_helper_1 = __webpack_require__(/*! ./dom-helper */ "../node_modules/sprotty/lib/base/views/dom-helper.js");
var vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "../node_modules/sprotty/lib/base/views/vnode-utils.js");
var IdPostprocessor = /** @class */ (function () {
    function IdPostprocessor() {
    }
    IdPostprocessor.prototype.decorate = function (vnode, element) {
        var attrs = vnode_utils_1.getAttrs(vnode);
        if (attrs.id !== undefined)
            this.logger.warn(vnode, 'Overriding id of vnode (' + attrs.id + '). Make sure not to set it manually in view.');
        attrs.id = this.domHelper.createUniqueDOMElementId(element);
        if (!vnode.key)
            vnode.key = element.id;
        return vnode;
    };
    IdPostprocessor.prototype.postUpdate = function () {
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], IdPostprocessor.prototype, "logger", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.DOMHelper),
        __metadata("design:type", dom_helper_1.DOMHelper)
    ], IdPostprocessor.prototype, "domHelper", void 0);
    IdPostprocessor = __decorate([
        inversify_1.injectable()
    ], IdPostprocessor);
    return IdPostprocessor;
}());
exports.IdPostprocessor = IdPostprocessor;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/views/key-tool.js":
/*!**********************************************************!*\
  !*** ../node_modules/sprotty/lib/base/views/key-tool.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../node_modules/sprotty/lib/base/types.js");
var smodel_1 = __webpack_require__(/*! ../model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "../node_modules/sprotty/lib/base/views/vnode-utils.js");
var KeyTool = /** @class */ (function () {
    function KeyTool(keyListeners) {
        if (keyListeners === void 0) { keyListeners = []; }
        this.keyListeners = keyListeners;
    }
    KeyTool.prototype.register = function (keyListener) {
        this.keyListeners.push(keyListener);
    };
    KeyTool.prototype.deregister = function (keyListener) {
        var index = this.keyListeners.indexOf(keyListener);
        if (index >= 0)
            this.keyListeners.splice(index, 1);
    };
    KeyTool.prototype.handleEvent = function (methodName, model, event) {
        var actions = this.keyListeners
            .map(function (listener) { return listener[methodName].apply(listener, [model, event]); })
            .reduce(function (a, b) { return a.concat(b); });
        if (actions.length > 0) {
            event.preventDefault();
            this.actionDispatcher.dispatchAll(actions);
        }
    };
    KeyTool.prototype.keyDown = function (element, event) {
        this.handleEvent('keyDown', element, event);
    };
    KeyTool.prototype.keyUp = function (element, event) {
        this.handleEvent('keyUp', element, event);
    };
    KeyTool.prototype.focus = function () { };
    KeyTool.prototype.decorate = function (vnode, element) {
        if (element instanceof smodel_1.SModelRoot) {
            vnode_utils_1.on(vnode, 'focus', this.focus.bind(this), element);
            vnode_utils_1.on(vnode, 'keydown', this.keyDown.bind(this), element);
            vnode_utils_1.on(vnode, 'keyup', this.keyUp.bind(this), element);
        }
        return vnode;
    };
    KeyTool.prototype.postUpdate = function () {
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], KeyTool.prototype, "actionDispatcher", void 0);
    KeyTool = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.KeyListener)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], KeyTool);
    return KeyTool;
}());
exports.KeyTool = KeyTool;
var KeyListener = /** @class */ (function () {
    function KeyListener() {
    }
    KeyListener.prototype.keyDown = function (element, event) {
        return [];
    };
    KeyListener.prototype.keyUp = function (element, event) {
        return [];
    };
    KeyListener = __decorate([
        inversify_1.injectable()
    ], KeyListener);
    return KeyListener;
}());
exports.KeyListener = KeyListener;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/views/mouse-tool.js":
/*!************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/views/mouse-tool.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var action_1 = __webpack_require__(/*! ../actions/action */ "../node_modules/sprotty/lib/base/actions/action.js");
var smodel_1 = __webpack_require__(/*! ../model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var types_1 = __webpack_require__(/*! ../types */ "../node_modules/sprotty/lib/base/types.js");
var dom_helper_1 = __webpack_require__(/*! ./dom-helper */ "../node_modules/sprotty/lib/base/views/dom-helper.js");
var vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "../node_modules/sprotty/lib/base/views/vnode-utils.js");
var MouseTool = /** @class */ (function () {
    function MouseTool(mouseListeners) {
        if (mouseListeners === void 0) { mouseListeners = []; }
        this.mouseListeners = mouseListeners;
    }
    MouseTool.prototype.register = function (mouseListener) {
        this.mouseListeners.push(mouseListener);
    };
    MouseTool.prototype.deregister = function (mouseListener) {
        var index = this.mouseListeners.indexOf(mouseListener);
        if (index >= 0)
            this.mouseListeners.splice(index, 1);
    };
    MouseTool.prototype.getTargetElement = function (model, event) {
        var target = event.target;
        var index = model.index;
        while (target) {
            if (target.id) {
                var element = index.getById(this.domHelper.findSModelIdByDOMElement(target));
                if (element !== undefined)
                    return element;
            }
            target = target.parentNode;
        }
        return undefined;
    };
    MouseTool.prototype.handleEvent = function (methodName, model, event) {
        var _this = this;
        this.focusOnMouseEvent(methodName, model);
        var element = this.getTargetElement(model, event);
        if (!element)
            return;
        var actions = this.mouseListeners
            .map(function (listener) { return listener[methodName].apply(listener, [element, event]); })
            .reduce(function (a, b) { return a.concat(b); });
        if (actions.length > 0) {
            event.preventDefault();
            for (var _i = 0, actions_1 = actions; _i < actions_1.length; _i++) {
                var actionOrPromise = actions_1[_i];
                if (action_1.isAction(actionOrPromise)) {
                    this.actionDispatcher.dispatch(actionOrPromise);
                }
                else {
                    actionOrPromise.then(function (action) {
                        _this.actionDispatcher.dispatch(action);
                    });
                }
            }
        }
    };
    MouseTool.prototype.focusOnMouseEvent = function (methodName, model) {
        if (document) {
            var domElement = document.getElementById(this.domHelper.createUniqueDOMElementId(model));
            if (methodName === 'mouseDown' && domElement !== null && typeof domElement.focus === 'function')
                domElement.focus();
        }
    };
    MouseTool.prototype.mouseOver = function (model, event) {
        this.handleEvent('mouseOver', model, event);
    };
    MouseTool.prototype.mouseOut = function (model, event) {
        this.handleEvent('mouseOut', model, event);
    };
    MouseTool.prototype.mouseEnter = function (model, event) {
        this.handleEvent('mouseEnter', model, event);
    };
    MouseTool.prototype.mouseLeave = function (model, event) {
        this.handleEvent('mouseLeave', model, event);
    };
    MouseTool.prototype.mouseDown = function (model, event) {
        this.handleEvent('mouseDown', model, event);
    };
    MouseTool.prototype.mouseMove = function (model, event) {
        this.handleEvent('mouseMove', model, event);
    };
    MouseTool.prototype.mouseUp = function (model, event) {
        this.handleEvent('mouseUp', model, event);
    };
    MouseTool.prototype.wheel = function (model, event) {
        this.handleEvent('wheel', model, event);
    };
    MouseTool.prototype.doubleClick = function (model, event) {
        this.handleEvent('doubleClick', model, event);
    };
    MouseTool.prototype.decorate = function (vnode, element) {
        if (element instanceof smodel_1.SModelRoot) {
            vnode_utils_1.on(vnode, 'mouseover', this.mouseOver.bind(this), element);
            vnode_utils_1.on(vnode, 'mouseout', this.mouseOut.bind(this), element);
            vnode_utils_1.on(vnode, 'mouseenter', this.mouseEnter.bind(this), element);
            vnode_utils_1.on(vnode, 'mouseleave', this.mouseLeave.bind(this), element);
            vnode_utils_1.on(vnode, 'mousedown', this.mouseDown.bind(this), element);
            vnode_utils_1.on(vnode, 'mouseup', this.mouseUp.bind(this), element);
            vnode_utils_1.on(vnode, 'mousemove', this.mouseMove.bind(this), element);
            vnode_utils_1.on(vnode, 'wheel', this.wheel.bind(this), element);
            vnode_utils_1.on(vnode, 'contextmenu', function (target, event) {
                event.preventDefault();
            }, element);
            vnode_utils_1.on(vnode, 'dblclick', this.doubleClick.bind(this), element);
        }
        vnode = this.mouseListeners.reduce(function (n, listener) { return listener.decorate(n, element); }, vnode);
        return vnode;
    };
    MouseTool.prototype.postUpdate = function () {
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], MouseTool.prototype, "actionDispatcher", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.DOMHelper),
        __metadata("design:type", dom_helper_1.DOMHelper)
    ], MouseTool.prototype, "domHelper", void 0);
    MouseTool = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.MouseListener)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], MouseTool);
    return MouseTool;
}());
exports.MouseTool = MouseTool;
var PopupMouseTool = /** @class */ (function (_super) {
    __extends(PopupMouseTool, _super);
    function PopupMouseTool(mouseListeners) {
        if (mouseListeners === void 0) { mouseListeners = []; }
        var _this = _super.call(this, mouseListeners) || this;
        _this.mouseListeners = mouseListeners;
        return _this;
    }
    PopupMouseTool = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.PopupMouseListener)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], PopupMouseTool);
    return PopupMouseTool;
}(MouseTool));
exports.PopupMouseTool = PopupMouseTool;
var MouseListener = /** @class */ (function () {
    function MouseListener() {
    }
    MouseListener.prototype.mouseOver = function (target, event) {
        return [];
    };
    MouseListener.prototype.mouseOut = function (target, event) {
        return [];
    };
    MouseListener.prototype.mouseEnter = function (target, event) {
        return [];
    };
    MouseListener.prototype.mouseLeave = function (target, event) {
        return [];
    };
    MouseListener.prototype.mouseDown = function (target, event) {
        return [];
    };
    MouseListener.prototype.mouseMove = function (target, event) {
        return [];
    };
    MouseListener.prototype.mouseUp = function (target, event) {
        return [];
    };
    MouseListener.prototype.wheel = function (target, event) {
        return [];
    };
    MouseListener.prototype.doubleClick = function (target, event) {
        return [];
    };
    MouseListener.prototype.decorate = function (vnode, element) {
        return vnode;
    };
    MouseListener = __decorate([
        inversify_1.injectable()
    ], MouseListener);
    return MouseListener;
}());
exports.MouseListener = MouseListener;
var MousePositionTracker = /** @class */ (function (_super) {
    __extends(MousePositionTracker, _super);
    function MousePositionTracker() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MousePositionTracker.prototype.mouseMove = function (target, event) {
        this.lastPosition = target.root.parentToLocal({ x: event.offsetX, y: event.offsetY });
        return [];
    };
    Object.defineProperty(MousePositionTracker.prototype, "lastPositionOnDiagram", {
        /**
         * Returns the last tracked mouse cursor position relative to the diagram root or `undefined`
         * if no mouse cursor position was ever tracked yet.
         */
        get: function () {
            return this.lastPosition;
        },
        enumerable: true,
        configurable: true
    });
    MousePositionTracker = __decorate([
        inversify_1.injectable()
    ], MousePositionTracker);
    return MousePositionTracker;
}(MouseListener));
exports.MousePositionTracker = MousePositionTracker;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/views/thunk-view.js":
/*!************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/views/thunk-view.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var snabbdom_1 = __webpack_require__(/*! snabbdom */ "../node_modules/snabbdom/es/snabbdom.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
/**
 * An view that avoids calculation and patching of VNodes unless some model properties have changed.
 * Based on snabbdom's thunks.
 */
var ThunkView = /** @class */ (function () {
    function ThunkView() {
    }
    ThunkView.prototype.render = function (model, context) {
        var _this = this;
        return snabbdom_1.h(this.selector(model), {
            key: model.id,
            hook: {
                init: this.init.bind(this),
                prepatch: this.prepatch.bind(this)
            },
            fn: function () { return _this.renderAndDecorate(model, context); },
            args: this.watchedArgs(model),
            thunk: true
        });
    };
    ThunkView.prototype.renderAndDecorate = function (model, context) {
        var vnode = this.doRender(model, context);
        context.decorate(vnode, model);
        return vnode;
    };
    ThunkView.prototype.copyToThunk = function (vnode, thunk) {
        thunk.elm = vnode.elm;
        vnode.data.fn = thunk.data.fn;
        vnode.data.args = thunk.data.args;
        thunk.data = vnode.data;
        thunk.children = vnode.children;
        thunk.text = vnode.text;
        thunk.elm = vnode.elm;
    };
    ThunkView.prototype.init = function (thunk) {
        var cur = thunk.data;
        var vnode = cur.fn.apply(undefined, cur.args);
        this.copyToThunk(vnode, thunk);
    };
    ThunkView.prototype.prepatch = function (oldVnode, thunk) {
        var old = oldVnode.data, cur = thunk.data;
        if (!this.equals(old.args, cur.args))
            this.copyToThunk(cur.fn.apply(undefined, cur.args), thunk);
        else
            this.copyToThunk(oldVnode, thunk);
    };
    ThunkView.prototype.equals = function (oldArg, newArg) {
        if (Array.isArray(oldArg) && Array.isArray(newArg)) {
            if (oldArg.length !== newArg.length)
                return false;
            for (var i = 0; i < newArg.length; ++i) {
                if (!this.equals(oldArg[i], newArg[i]))
                    return false;
            }
        }
        else if (typeof oldArg === 'object' && typeof newArg === 'object') {
            if (Object.keys(oldArg).length !== Object.keys(newArg).length)
                return false;
            for (var key in oldArg) {
                if (key !== 'parent' && key !== 'root' && (!(key in newArg) || !this.equals(oldArg[key], newArg[key])))
                    return false;
            }
        }
        else if (oldArg !== newArg) {
            return false;
        }
        return true;
    };
    ThunkView = __decorate([
        inversify_1.injectable()
    ], ThunkView);
    return ThunkView;
}());
exports.ThunkView = ThunkView;
function isThunk(vnode) {
    return 'thunk' in vnode;
}
exports.isThunk = isThunk;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/views/view.js":
/*!******************************************************!*\
  !*** ../node_modules/sprotty/lib/base/views/view.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsx svg */
var snabbdom_jsx_1 = __webpack_require__(/*! snabbdom-jsx */ "../node_modules/snabbdom-jsx/snabbdom-jsx.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../node_modules/sprotty/lib/base/types.js");
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "../node_modules/sprotty/lib/utils/registry.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var inversify_2 = __webpack_require__(/*! ../../utils/inversify */ "../node_modules/sprotty/lib/utils/inversify.js");
var smodel_factory_1 = __webpack_require__(/*! ../model/smodel-factory */ "../node_modules/sprotty/lib/base/model/smodel-factory.js");
var smodel_utils_1 = __webpack_require__(/*! ../model/smodel-utils */ "../node_modules/sprotty/lib/base/model/smodel-utils.js");
/**
 * Allows to look up the IView for a given SModelElement based on its type.
 */
var ViewRegistry = /** @class */ (function (_super) {
    __extends(ViewRegistry, _super);
    function ViewRegistry(registrations) {
        var _this = _super.call(this) || this;
        _this.registerDefaults();
        registrations.forEach(function (registration) {
            return _this.register(registration.type, registration.factory());
        });
        return _this;
    }
    ViewRegistry.prototype.registerDefaults = function () {
        this.register(smodel_factory_1.EMPTY_ROOT.type, new EmptyView());
    };
    ViewRegistry.prototype.missing = function (key) {
        return new MissingView();
    };
    ViewRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.ViewRegistration)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], ViewRegistry);
    return ViewRegistry;
}(registry_1.InstanceRegistry));
exports.ViewRegistry = ViewRegistry;
/**
 * Combines `registerModelElement` and `configureView`.
 */
function configureModelElement(context, type, modelConstr, viewConstr, features) {
    smodel_utils_1.registerModelElement(context, type, modelConstr, features);
    configureView(context, type, viewConstr);
}
exports.configureModelElement = configureModelElement;
/**
 * Utility function to register a view for a model element type.
 */
function configureView(context, type, constr) {
    if (typeof constr === 'function') {
        if (!inversify_2.isInjectable(constr)) {
            throw new Error("Views should be @injectable: " + constr.name);
        }
        if (!context.isBound(constr)) {
            context.bind(constr).toSelf();
        }
    }
    context.bind(types_1.TYPES.ViewRegistration).toDynamicValue(function (ctx) { return ({
        type: type,
        factory: function () { return ctx.container.get(constr); }
    }); });
}
exports.configureView = configureView;
/**
 * This view is used when the model is the EMPTY_ROOT.
 */
var EmptyView = /** @class */ (function () {
    function EmptyView() {
    }
    EmptyView.prototype.render = function (model, context) {
        return snabbdom_jsx_1.svg("svg", { "class-sprotty-empty": true });
    };
    EmptyView = __decorate([
        inversify_1.injectable()
    ], EmptyView);
    return EmptyView;
}());
exports.EmptyView = EmptyView;
/**
 * This view is used when no view has been registered for a model element type.
 */
var MissingView = /** @class */ (function () {
    function MissingView() {
    }
    MissingView.prototype.render = function (model, context) {
        var position = model.position || geometry_1.ORIGIN_POINT;
        return snabbdom_jsx_1.svg("text", { "class-sprotty-missing": true, x: position.x, y: position.y },
            "?",
            model.id,
            "?");
    };
    MissingView = __decorate([
        inversify_1.injectable()
    ], MissingView);
    return MissingView;
}());
exports.MissingView = MissingView;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/views/viewer-cache.js":
/*!**************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/views/viewer-cache.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../node_modules/sprotty/lib/base/types.js");
var animation_frame_syncer_1 = __webpack_require__(/*! ../animations/animation-frame-syncer */ "../node_modules/sprotty/lib/base/animations/animation-frame-syncer.js");
/**
 * Updating the view is rather expensive, and it doesn't make sense to calculate
 * more then one update per animation (rendering) frame. So this class batches
 * all incoming model changes and only renders the last one when the next animation
 * frame comes.
 */
var ViewerCache = /** @class */ (function () {
    function ViewerCache() {
    }
    ViewerCache.prototype.update = function (model, cause) {
        if (cause !== undefined) {
            // Forward the update immediately in order to pass the cause action
            this.delegate.update(model, cause);
            this.cachedModel = undefined;
        }
        else {
            var isCacheEmpty = this.cachedModel === undefined;
            this.cachedModel = model;
            if (isCacheEmpty) {
                this.scheduleUpdate();
            }
        }
    };
    ViewerCache.prototype.scheduleUpdate = function () {
        var _this = this;
        this.syncer.onEndOfNextFrame(function () {
            if (_this.cachedModel) {
                _this.delegate.update(_this.cachedModel);
                _this.cachedModel = undefined;
            }
        });
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.IViewer),
        __metadata("design:type", Object)
    ], ViewerCache.prototype, "delegate", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.AnimationFrameSyncer),
        __metadata("design:type", animation_frame_syncer_1.AnimationFrameSyncer)
    ], ViewerCache.prototype, "syncer", void 0);
    ViewerCache = __decorate([
        inversify_1.injectable()
    ], ViewerCache);
    return ViewerCache;
}());
exports.ViewerCache = ViewerCache;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/views/viewer-options.js":
/*!****************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/views/viewer-options.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var types_1 = __webpack_require__(/*! ../types */ "../node_modules/sprotty/lib/base/types.js");
exports.defaultViewerOptions = function () { return ({
    baseDiv: 'sprotty',
    baseClass: 'sprotty',
    hiddenDiv: 'sprotty-hidden',
    hiddenClass: 'sprotty-hidden',
    popupDiv: 'sprotty-popup',
    popupClass: 'sprotty-popup',
    popupClosedClass: 'sprotty-popup-closed',
    needsClientLayout: true,
    needsServerLayout: false,
    popupOpenDelay: 1000,
    popupCloseDelay: 300
}); };
/**
 * Utility function to partially set viewer options. Default values (from `defaultViewerOptions`) are used for
 * options that are not specified.
 */
function configureViewerOptions(context, options) {
    var opt = __assign(__assign({}, exports.defaultViewerOptions()), options);
    if (context.isBound(types_1.TYPES.ViewerOptions))
        context.rebind(types_1.TYPES.ViewerOptions).toConstantValue(opt);
    else
        context.bind(types_1.TYPES.ViewerOptions).toConstantValue(opt);
}
exports.configureViewerOptions = configureViewerOptions;
/**
 * Utility function to partially override the currently configured viewer options in a DI container.
 */
function overrideViewerOptions(container, options) {
    var opt = container.get(types_1.TYPES.ViewerOptions);
    for (var p in options) {
        if (options.hasOwnProperty(p))
            opt[p] = options[p];
    }
    return opt;
}
exports.overrideViewerOptions = overrideViewerOptions;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/views/viewer.js":
/*!********************************************************!*\
  !*** ../node_modules/sprotty/lib/base/views/viewer.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsx html */
var snabbdom_jsx_1 = __webpack_require__(/*! snabbdom-jsx */ "../node_modules/snabbdom-jsx/snabbdom-jsx.js"); // must be html here, as we're creating a div
var snabbdom_1 = __webpack_require__(/*! snabbdom */ "../node_modules/snabbdom/es/snabbdom.js");
var props_1 = __webpack_require__(/*! snabbdom/modules/props */ "../node_modules/snabbdom/modules/props.js");
var attributes_1 = __webpack_require__(/*! snabbdom/modules/attributes */ "../node_modules/snabbdom/modules/attributes.js");
var style_1 = __webpack_require__(/*! snabbdom/modules/style */ "../node_modules/snabbdom/modules/style.js");
var eventlisteners_1 = __webpack_require__(/*! snabbdom/modules/eventlisteners */ "../node_modules/snabbdom/modules/eventlisteners.js");
var class_1 = __webpack_require__(/*! snabbdom/modules/class */ "../node_modules/snabbdom/modules/class.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../node_modules/sprotty/lib/base/types.js");
var browser_1 = __webpack_require__(/*! ../../utils/browser */ "../node_modules/sprotty/lib/utils/browser.js");
var initialize_canvas_1 = __webpack_require__(/*! ../features/initialize-canvas */ "../node_modules/sprotty/lib/base/features/initialize-canvas.js");
var vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "../node_modules/sprotty/lib/base/views/vnode-utils.js");
var thunk_view_1 = __webpack_require__(/*! ./thunk-view */ "../node_modules/sprotty/lib/base/views/thunk-view.js");
var smodel_factory_1 = __webpack_require__(/*! ../model/smodel-factory */ "../node_modules/sprotty/lib/base/model/smodel-factory.js");
var ModelRenderer = /** @class */ (function () {
    function ModelRenderer(viewRegistry, postprocessors) {
        this.viewRegistry = viewRegistry;
        this.postprocessors = postprocessors;
    }
    ModelRenderer.prototype.decorate = function (vnode, element) {
        if (thunk_view_1.isThunk(vnode))
            return vnode;
        return this.postprocessors.reduce(function (n, processor) { return processor.decorate(n, element); }, vnode);
    };
    ModelRenderer.prototype.renderElement = function (element, args) {
        var vNode = this.viewRegistry.get(element.type).render(element, this, args);
        return this.decorate(vNode, element);
    };
    ModelRenderer.prototype.renderChildren = function (element, args) {
        var _this = this;
        return element.children.map(function (child) { return _this.renderElement(child, args); });
    };
    ModelRenderer.prototype.postUpdate = function (cause) {
        this.postprocessors.forEach(function (processor) { return processor.postUpdate(cause); });
    };
    return ModelRenderer;
}());
exports.ModelRenderer = ModelRenderer;
var PatcherProvider = /** @class */ (function () {
    function PatcherProvider() {
        this.patcher = snabbdom_1.init(this.createModules());
    }
    PatcherProvider.prototype.createModules = function () {
        return [
            props_1.propsModule,
            attributes_1.attributesModule,
            class_1.classModule,
            style_1.styleModule,
            eventlisteners_1.eventListenersModule
        ];
    };
    PatcherProvider = __decorate([
        inversify_1.injectable(),
        __metadata("design:paramtypes", [])
    ], PatcherProvider);
    return PatcherProvider;
}());
exports.PatcherProvider = PatcherProvider;
/**
 * The component that turns the model into an SVG DOM.
 * Uses a VDOM based on snabbdom.js for performance.
 */
var ModelViewer = /** @class */ (function () {
    function ModelViewer(modelRendererFactory, patcherProvider, postprocessors) {
        var _this = this;
        this.onWindowResize = function (vdom) {
            var baseDiv = document.getElementById(_this.options.baseDiv);
            if (baseDiv !== null) {
                var newBounds = _this.getBoundsInPage(baseDiv);
                _this.actiondispatcher.dispatch(new initialize_canvas_1.InitializeCanvasBoundsAction(newBounds));
            }
        };
        this.renderer = modelRendererFactory(postprocessors);
        this.patcher = patcherProvider.patcher;
    }
    ModelViewer.prototype.update = function (model, cause) {
        var _this = this;
        this.logger.log(this, 'rendering', model);
        var newVDOM = snabbdom_jsx_1.html("div", { id: this.options.baseDiv }, this.renderer.renderElement(model));
        if (this.lastVDOM !== undefined) {
            var hadFocus = this.hasFocus();
            vnode_utils_1.copyClassesFromVNode(this.lastVDOM, newVDOM);
            this.lastVDOM = this.patcher.call(this, this.lastVDOM, newVDOM);
            this.restoreFocus(hadFocus);
        }
        else if (typeof document !== 'undefined') {
            var placeholder = document.getElementById(this.options.baseDiv);
            if (placeholder !== null) {
                if (typeof window !== 'undefined') {
                    window.addEventListener('resize', function () {
                        _this.onWindowResize(newVDOM);
                    });
                }
                vnode_utils_1.copyClassesFromElement(placeholder, newVDOM);
                vnode_utils_1.setClass(newVDOM, this.options.baseClass, true);
                this.lastVDOM = this.patcher.call(this, placeholder, newVDOM);
            }
            else {
                this.logger.error(this, 'element not in DOM:', this.options.baseDiv);
            }
        }
        this.renderer.postUpdate(cause);
    };
    ModelViewer.prototype.hasFocus = function () {
        if (typeof document !== 'undefined' && document.activeElement && this.lastVDOM.children && this.lastVDOM.children.length > 0) {
            var lastRootVNode = this.lastVDOM.children[0];
            if (typeof lastRootVNode === 'object') {
                var lastElement = lastRootVNode.elm;
                return document.activeElement === lastElement;
            }
        }
        return false;
    };
    ModelViewer.prototype.restoreFocus = function (focus) {
        if (focus && this.lastVDOM.children && this.lastVDOM.children.length > 0) {
            var lastRootVNode = this.lastVDOM.children[0];
            if (typeof lastRootVNode === 'object') {
                var lastElement = lastRootVNode.elm;
                if (lastElement && typeof lastElement.focus === 'function')
                    lastElement.focus();
            }
        }
    };
    ModelViewer.prototype.getBoundsInPage = function (element) {
        var bounds = element.getBoundingClientRect();
        var scroll = browser_1.getWindowScroll();
        return {
            x: bounds.left + scroll.x,
            y: bounds.top + scroll.y,
            width: bounds.width,
            height: bounds.height
        };
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], ModelViewer.prototype, "options", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], ModelViewer.prototype, "logger", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], ModelViewer.prototype, "actiondispatcher", void 0);
    ModelViewer = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.ModelRendererFactory)),
        __param(1, inversify_1.inject(types_1.TYPES.PatcherProvider)),
        __param(2, inversify_1.multiInject(types_1.TYPES.IVNodePostprocessor)), __param(2, inversify_1.optional()),
        __metadata("design:paramtypes", [Function, PatcherProvider, Array])
    ], ModelViewer);
    return ModelViewer;
}());
exports.ModelViewer = ModelViewer;
/**
 * Viewer for the _hidden_ model. This serves as an intermediate step to compute bounds
 * of elements. The model is rendered in a section that is not visible to the user,
 * and then the bounds are extracted from the DOM.
 */
var HiddenModelViewer = /** @class */ (function () {
    function HiddenModelViewer(modelRendererFactory, patcherProvider, hiddenPostprocessors) {
        this.hiddenRenderer = modelRendererFactory(hiddenPostprocessors);
        this.patcher = patcherProvider.patcher;
    }
    HiddenModelViewer.prototype.update = function (hiddenModel, cause) {
        this.logger.log(this, 'rendering hidden');
        var newVDOM;
        if (hiddenModel.type === smodel_factory_1.EMPTY_ROOT.type) {
            newVDOM = snabbdom_jsx_1.html("div", { id: this.options.hiddenDiv });
        }
        else {
            var hiddenVNode = this.hiddenRenderer.renderElement(hiddenModel);
            vnode_utils_1.setAttr(hiddenVNode, 'opacity', 0);
            newVDOM = snabbdom_jsx_1.html("div", { id: this.options.hiddenDiv }, hiddenVNode);
        }
        if (this.lastHiddenVDOM !== undefined) {
            vnode_utils_1.copyClassesFromVNode(this.lastHiddenVDOM, newVDOM);
            this.lastHiddenVDOM = this.patcher.call(this, this.lastHiddenVDOM, newVDOM);
        }
        else {
            var placeholder = document.getElementById(this.options.hiddenDiv);
            if (placeholder === null) {
                placeholder = document.createElement("div");
                document.body.appendChild(placeholder);
            }
            else {
                vnode_utils_1.copyClassesFromElement(placeholder, newVDOM);
            }
            vnode_utils_1.setClass(newVDOM, this.options.baseClass, true);
            vnode_utils_1.setClass(newVDOM, this.options.hiddenClass, true);
            this.lastHiddenVDOM = this.patcher.call(this, placeholder, newVDOM);
        }
        this.hiddenRenderer.postUpdate(cause);
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], HiddenModelViewer.prototype, "options", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], HiddenModelViewer.prototype, "logger", void 0);
    HiddenModelViewer = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.ModelRendererFactory)),
        __param(1, inversify_1.inject(types_1.TYPES.PatcherProvider)),
        __param(2, inversify_1.multiInject(types_1.TYPES.HiddenVNodePostprocessor)), __param(2, inversify_1.optional()),
        __metadata("design:paramtypes", [Function, PatcherProvider, Array])
    ], HiddenModelViewer);
    return HiddenModelViewer;
}());
exports.HiddenModelViewer = HiddenModelViewer;
var PopupModelViewer = /** @class */ (function () {
    function PopupModelViewer(modelRendererFactory, patcherProvider, popupPostprocessors) {
        this.modelRendererFactory = modelRendererFactory;
        this.popupRenderer = this.modelRendererFactory(popupPostprocessors);
        this.patcher = patcherProvider.patcher;
    }
    PopupModelViewer.prototype.update = function (model, cause) {
        this.logger.log(this, 'rendering popup', model);
        var popupClosed = model.type === smodel_factory_1.EMPTY_ROOT.type;
        var newVDOM;
        if (popupClosed) {
            newVDOM = snabbdom_jsx_1.html("div", { id: this.options.popupDiv });
        }
        else {
            var position = model.canvasBounds;
            var inlineStyle = {
                top: position.y + 'px',
                left: position.x + 'px'
            };
            newVDOM = snabbdom_jsx_1.html("div", { id: this.options.popupDiv, style: inlineStyle }, this.popupRenderer.renderElement(model));
        }
        if (this.lastPopupVDOM !== undefined) {
            vnode_utils_1.copyClassesFromVNode(this.lastPopupVDOM, newVDOM);
            vnode_utils_1.setClass(newVDOM, this.options.popupClosedClass, popupClosed);
            this.lastPopupVDOM = this.patcher.call(this, this.lastPopupVDOM, newVDOM);
        }
        else if (typeof document !== 'undefined') {
            var placeholder = document.getElementById(this.options.popupDiv);
            if (placeholder === null) {
                placeholder = document.createElement("div");
                document.body.appendChild(placeholder);
            }
            else {
                vnode_utils_1.copyClassesFromElement(placeholder, newVDOM);
            }
            vnode_utils_1.setClass(newVDOM, this.options.popupClass, true);
            vnode_utils_1.setClass(newVDOM, this.options.popupClosedClass, popupClosed);
            this.lastPopupVDOM = this.patcher.call(this, placeholder, newVDOM);
        }
        this.popupRenderer.postUpdate(cause);
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], PopupModelViewer.prototype, "options", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], PopupModelViewer.prototype, "logger", void 0);
    PopupModelViewer = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.ModelRendererFactory)),
        __param(1, inversify_1.inject(types_1.TYPES.PatcherProvider)),
        __param(2, inversify_1.multiInject(types_1.TYPES.PopupVNodePostprocessor)), __param(2, inversify_1.optional()),
        __metadata("design:paramtypes", [Function, PatcherProvider, Array])
    ], PopupModelViewer);
    return PopupModelViewer;
}());
exports.PopupModelViewer = PopupModelViewer;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/views/vnode-postprocessor.js":
/*!*********************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/views/vnode-postprocessor.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "../node_modules/sprotty/lib/base/views/vnode-utils.js");
var FocusFixPostprocessor = /** @class */ (function () {
    function FocusFixPostprocessor() {
    }
    FocusFixPostprocessor.prototype.decorate = function (vnode, element) {
        if (vnode.sel && vnode.sel.startsWith('svg'))
            // allows to set focus in Firefox
            vnode_utils_1.setAttr(vnode, 'tabindex', 0);
        return vnode;
    };
    FocusFixPostprocessor.prototype.postUpdate = function () {
    };
    FocusFixPostprocessor = __decorate([
        inversify_1.injectable()
    ], FocusFixPostprocessor);
    return FocusFixPostprocessor;
}());
exports.FocusFixPostprocessor = FocusFixPostprocessor;


/***/ }),

/***/ "../node_modules/sprotty/lib/base/views/vnode-utils.js":
/*!*************************************************************!*\
  !*** ../node_modules/sprotty/lib/base/views/vnode-utils.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
function setAttr(vnode, name, value) {
    getAttrs(vnode)[name] = value;
}
exports.setAttr = setAttr;
function setClass(vnode, name, value) {
    getClass(vnode)[name] = value;
}
exports.setClass = setClass;
function setNamespace(node, ns) {
    if (node.data === undefined)
        node.data = {};
    node.data.ns = ns;
    var children = node.children;
    if (children !== undefined) {
        for (var i = 0; i < children.length; i++) {
            var child = children[i];
            if (typeof child !== 'string')
                setNamespace(child, ns);
        }
    }
}
exports.setNamespace = setNamespace;
function copyClassesFromVNode(source, target) {
    var classList = getClass(source);
    for (var c in classList) {
        if (classList.hasOwnProperty(c))
            setClass(target, c, true);
    }
}
exports.copyClassesFromVNode = copyClassesFromVNode;
function copyClassesFromElement(element, target) {
    var classList = element.classList;
    for (var i = 0; i < classList.length; i++) {
        var item = classList.item(i);
        if (item)
            setClass(target, item, true);
    }
}
exports.copyClassesFromElement = copyClassesFromElement;
function mergeStyle(vnode, style) {
    getData(vnode).style = __assign(__assign({}, (getData(vnode).style || {})), style);
}
exports.mergeStyle = mergeStyle;
function on(vnode, event, listener, element) {
    var val = getOn(vnode);
    if (val[event]) {
        throw new Error('EventListener for ' + event + ' already registered on VNode');
    }
    val[event] = [listener, element];
}
exports.on = on;
function getAttrs(vnode) {
    var data = getData(vnode);
    if (!data.attrs)
        data.attrs = {};
    return data.attrs;
}
exports.getAttrs = getAttrs;
function getData(vnode) {
    if (!vnode.data)
        vnode.data = {};
    return vnode.data;
}
function getClass(vnode) {
    var data = getData(vnode);
    if (!data.class)
        data.class = {};
    return data.class;
}
function getOn(vnode) {
    var data = getData(vnode);
    if (!data.on)
        data.on = {};
    return data.on;
}


/***/ }),

/***/ "../node_modules/sprotty/lib/features/bounds/abstract-layout.js":
/*!**********************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/bounds/abstract-layout.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var model_1 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/bounds/model.js");
var AbstractLayout = /** @class */ (function () {
    function AbstractLayout() {
    }
    AbstractLayout.prototype.layout = function (container, layouter) {
        var boundsData = layouter.getBoundsData(container);
        var options = this.getLayoutOptions(container);
        var childrenSize = this.getChildrenSize(container, options, layouter);
        var maxWidth = options.paddingFactor * (options.resizeContainer
            ? childrenSize.width
            : Math.max(0, this.getFixedContainerBounds(container, options, layouter).width) - options.paddingLeft - options.paddingRight);
        var maxHeight = options.paddingFactor * (options.resizeContainer
            ? childrenSize.height
            : Math.max(0, this.getFixedContainerBounds(container, options, layouter).height) - options.paddingTop - options.paddingBottom);
        if (maxWidth > 0 && maxHeight > 0) {
            var offset = this.layoutChildren(container, layouter, options, maxWidth, maxHeight);
            boundsData.bounds = this.getFinalContainerBounds(container, offset, options, maxWidth, maxHeight);
            boundsData.boundsChanged = true;
        }
    };
    AbstractLayout.prototype.getFinalContainerBounds = function (container, lastOffset, options, maxWidth, maxHeight) {
        return {
            x: container.bounds.x,
            y: container.bounds.y,
            width: Math.max(options.minWidth, maxWidth + options.paddingLeft + options.paddingRight),
            height: Math.max(options.minHeight, maxHeight + options.paddingTop + options.paddingBottom)
        };
    };
    AbstractLayout.prototype.getFixedContainerBounds = function (container, layoutOptions, layouter) {
        var currentContainer = container;
        while (true) {
            if (model_1.isBoundsAware(currentContainer)) {
                var bounds = currentContainer.bounds;
                if (model_1.isLayoutContainer(currentContainer) && layoutOptions.resizeContainer)
                    layouter.log.error(currentContainer, 'Resizable container found while detecting fixed bounds');
                if (geometry_1.isValidDimension(bounds))
                    return bounds;
            }
            if (currentContainer instanceof smodel_1.SChildElement) {
                currentContainer = currentContainer.parent;
            }
            else {
                layouter.log.error(currentContainer, 'Cannot detect fixed bounds');
                return geometry_1.EMPTY_BOUNDS;
            }
        }
    };
    AbstractLayout.prototype.layoutChildren = function (container, layouter, containerOptions, maxWidth, maxHeight) {
        var _this = this;
        var currentOffset = {
            x: containerOptions.paddingLeft + 0.5 * (maxWidth - (maxWidth / containerOptions.paddingFactor)),
            y: containerOptions.paddingTop + 0.5 * (maxHeight - (maxHeight / containerOptions.paddingFactor))
        };
        container.children.forEach(function (child) {
            if (model_1.isLayoutableChild(child)) {
                var boundsData = layouter.getBoundsData(child);
                var bounds = boundsData.bounds;
                var childOptions = _this.getChildLayoutOptions(child, containerOptions);
                if (bounds !== undefined && geometry_1.isValidDimension(bounds)) {
                    currentOffset = _this.layoutChild(child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight);
                }
            }
        });
        return currentOffset;
    };
    AbstractLayout.prototype.getDx = function (hAlign, bounds, maxWidth) {
        switch (hAlign) {
            case 'left':
                return 0;
            case 'center':
                return 0.5 * (maxWidth - bounds.width);
            case 'right':
                return maxWidth - bounds.width;
        }
    };
    AbstractLayout.prototype.getDy = function (vAlign, bounds, maxHeight) {
        switch (vAlign) {
            case 'top':
                return 0;
            case 'center':
                return 0.5 * (maxHeight - bounds.height);
            case 'bottom':
                return maxHeight - bounds.height;
        }
    };
    AbstractLayout.prototype.getChildLayoutOptions = function (child, containerOptions) {
        var layoutOptions = child.layoutOptions;
        if (layoutOptions === undefined)
            return containerOptions;
        else
            return this.spread(containerOptions, layoutOptions);
    };
    AbstractLayout.prototype.getLayoutOptions = function (element) {
        var _this = this;
        var current = element;
        var allOptions = [];
        while (current !== undefined) {
            var layoutOptions = current.layoutOptions;
            if (layoutOptions !== undefined)
                allOptions.push(layoutOptions);
            if (current instanceof smodel_1.SChildElement)
                current = current.parent;
            else
                break;
        }
        return allOptions.reverse().reduce(function (a, b) { return _this.spread(a, b); }, this.getDefaultLayoutOptions());
    };
    return AbstractLayout;
}());
exports.AbstractLayout = AbstractLayout;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/bounds/bounds-manipulation.js":
/*!**************************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/bounds/bounds-manipulation.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var action_1 = __webpack_require__(/*! ../../base/actions/action */ "../node_modules/sprotty/lib/base/actions/action.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../node_modules/sprotty/lib/base/commands/command.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var model_1 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/bounds/model.js");
/**
 * Sent from the model source (e.g. a DiagramServer) to the client to update the bounds of some
 * (or all) model elements.
 */
var SetBoundsAction = /** @class */ (function () {
    function SetBoundsAction(bounds) {
        this.bounds = bounds;
        this.kind = SetBoundsAction.KIND;
    }
    SetBoundsAction.KIND = 'setBounds';
    return SetBoundsAction;
}());
exports.SetBoundsAction = SetBoundsAction;
/**
 * Sent from the model source to the client to request bounds for the given model. The model is
 * rendered invisibly so the bounds can derived from the DOM. The response is a ComputedBoundsAction.
 * This hidden rendering round-trip is necessary if the client is responsible for parts of the layout
 * (see `needsClientLayout` viewer option).
 */
var RequestBoundsAction = /** @class */ (function () {
    function RequestBoundsAction(newRoot, requestId) {
        if (requestId === void 0) { requestId = ''; }
        this.newRoot = newRoot;
        this.requestId = requestId;
        this.kind = RequestBoundsAction.KIND;
    }
    /** Factory function to dispatch a request with the `IActionDispatcher` */
    RequestBoundsAction.create = function (newRoot) {
        return new RequestBoundsAction(newRoot, action_1.generateRequestId());
    };
    RequestBoundsAction.KIND = 'requestBounds';
    return RequestBoundsAction;
}());
exports.RequestBoundsAction = RequestBoundsAction;
/**
 * Sent from the client to the model source (e.g. a DiagramServer) to transmit the result of bounds
 * computation as a response to a RequestBoundsAction. If the server is responsible for parts of
 * the layout (see `needsServerLayout` viewer option), it can do so after applying the computed bounds
 * received with this action. Otherwise there is no need to send the computed bounds to the server,
 * so they can be processed locally by the client.
 */
var ComputedBoundsAction = /** @class */ (function () {
    function ComputedBoundsAction(bounds, revision, alignments, responseId) {
        if (responseId === void 0) { responseId = ''; }
        this.bounds = bounds;
        this.revision = revision;
        this.alignments = alignments;
        this.responseId = responseId;
        this.kind = ComputedBoundsAction.KIND;
    }
    ComputedBoundsAction.KIND = 'computedBounds';
    return ComputedBoundsAction;
}());
exports.ComputedBoundsAction = ComputedBoundsAction;
/**
 * Request a layout of the diagram or the selected elements only.
 */
var LayoutAction = /** @class */ (function () {
    function LayoutAction() {
        this.kind = LayoutAction.KIND;
    }
    LayoutAction.KIND = 'layout';
    return LayoutAction;
}());
exports.LayoutAction = LayoutAction;
var SetBoundsCommand = /** @class */ (function (_super) {
    __extends(SetBoundsCommand, _super);
    function SetBoundsCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.bounds = [];
        return _this;
    }
    SetBoundsCommand.prototype.execute = function (context) {
        var _this = this;
        this.action.bounds.forEach(function (b) {
            var element = context.root.index.getById(b.elementId);
            if (element && model_1.isBoundsAware(element)) {
                _this.bounds.push({
                    element: element,
                    oldBounds: element.bounds,
                    newPosition: b.newPosition,
                    newSize: b.newSize
                });
            }
        });
        return this.redo(context);
    };
    SetBoundsCommand.prototype.undo = function (context) {
        this.bounds.forEach(function (b) { return b.element.bounds = b.oldBounds; });
        return context.root;
    };
    SetBoundsCommand.prototype.redo = function (context) {
        this.bounds.forEach(function (b) {
            if (b.newPosition)
                b.element.bounds = __assign(__assign({}, b.newPosition), b.newSize);
            else
                // keep the position
                b.element.bounds = __assign({ x: b.element.bounds.x, y: b.element.bounds.y }, b.newSize);
        });
        return context.root;
    };
    SetBoundsCommand.KIND = SetBoundsAction.KIND;
    SetBoundsCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [SetBoundsAction])
    ], SetBoundsCommand);
    return SetBoundsCommand;
}(command_1.SystemCommand));
exports.SetBoundsCommand = SetBoundsCommand;
var RequestBoundsCommand = /** @class */ (function (_super) {
    __extends(RequestBoundsCommand, _super);
    function RequestBoundsCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    RequestBoundsCommand.prototype.execute = function (context) {
        return {
            model: context.modelFactory.createRoot(this.action.newRoot),
            modelChanged: true,
            cause: this.action
        };
    };
    Object.defineProperty(RequestBoundsCommand.prototype, "blockUntil", {
        get: function () {
            return function (action) { return action.kind === ComputedBoundsAction.KIND; };
        },
        enumerable: true,
        configurable: true
    });
    RequestBoundsCommand.KIND = RequestBoundsAction.KIND;
    RequestBoundsCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [RequestBoundsAction])
    ], RequestBoundsCommand);
    return RequestBoundsCommand;
}(command_1.HiddenCommand));
exports.RequestBoundsCommand = RequestBoundsCommand;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/bounds/di.config.js":
/*!****************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/bounds/di.config.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var bounds_manipulation_1 = __webpack_require__(/*! ./bounds-manipulation */ "../node_modules/sprotty/lib/features/bounds/bounds-manipulation.js");
var hidden_bounds_updater_1 = __webpack_require__(/*! ./hidden-bounds-updater */ "../node_modules/sprotty/lib/features/bounds/hidden-bounds-updater.js");
var layout_1 = __webpack_require__(/*! ./layout */ "../node_modules/sprotty/lib/features/bounds/layout.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../node_modules/sprotty/lib/base/commands/command-registration.js");
var boundsModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, bounds_manipulation_1.SetBoundsCommand);
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, bounds_manipulation_1.RequestBoundsCommand);
    bind(hidden_bounds_updater_1.HiddenBoundsUpdater).toSelf().inSingletonScope();
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(hidden_bounds_updater_1.HiddenBoundsUpdater);
    bind(types_1.TYPES.Layouter).to(layout_1.Layouter).inSingletonScope();
    bind(types_1.TYPES.LayoutRegistry).to(layout_1.LayoutRegistry).inSingletonScope();
});
exports.default = boundsModule;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/bounds/hbox-layout.js":
/*!******************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/bounds/hbox-layout.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var abstract_layout_1 = __webpack_require__(/*! ./abstract-layout */ "../node_modules/sprotty/lib/features/bounds/abstract-layout.js");
var model_1 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/bounds/model.js");
/**
 * Layouts children of a container in horizontal (left->right) direction.
 */
var HBoxLayouter = /** @class */ (function (_super) {
    __extends(HBoxLayouter, _super);
    function HBoxLayouter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HBoxLayouter.prototype.getChildrenSize = function (container, containerOptions, layouter) {
        var maxWidth = 0;
        var maxHeight = -1;
        var isFirst = true;
        container.children.forEach(function (child) {
            if (model_1.isLayoutableChild(child)) {
                var bounds = layouter.getBoundsData(child).bounds;
                if (bounds !== undefined && geometry_1.isValidDimension(bounds)) {
                    if (isFirst)
                        isFirst = false;
                    else
                        maxWidth += containerOptions.hGap;
                    maxWidth += bounds.width;
                    maxHeight = Math.max(maxHeight, bounds.height);
                }
            }
        });
        return {
            width: maxWidth,
            height: maxHeight
        };
    };
    HBoxLayouter.prototype.layoutChild = function (child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight) {
        var dy = this.getDy(childOptions.vAlign, bounds, maxHeight);
        boundsData.bounds = {
            x: currentOffset.x + child.bounds.x - bounds.x,
            y: containerOptions.paddingTop + child.bounds.y - bounds.y + dy,
            width: bounds.width,
            height: bounds.height
        };
        boundsData.boundsChanged = true;
        return {
            x: currentOffset.x + bounds.width + containerOptions.hGap,
            y: currentOffset.y
        };
    };
    HBoxLayouter.prototype.getDefaultLayoutOptions = function () {
        return {
            resizeContainer: true,
            paddingTop: 5,
            paddingBottom: 5,
            paddingLeft: 5,
            paddingRight: 5,
            paddingFactor: 1,
            hGap: 1,
            vAlign: 'center',
            minWidth: 0,
            minHeight: 0
        };
    };
    HBoxLayouter.prototype.spread = function (a, b) {
        return __assign(__assign({}, a), b);
    };
    HBoxLayouter.KIND = 'hbox';
    return HBoxLayouter;
}(abstract_layout_1.AbstractLayout));
exports.HBoxLayouter = HBoxLayouter;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/bounds/hidden-bounds-updater.js":
/*!****************************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/bounds/hidden-bounds-updater.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var bounds_manipulation_1 = __webpack_require__(/*! ./bounds-manipulation */ "../node_modules/sprotty/lib/features/bounds/bounds-manipulation.js");
var layout_1 = __webpack_require__(/*! ./layout */ "../node_modules/sprotty/lib/features/bounds/layout.js");
var model_1 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/bounds/model.js");
var BoundsData = /** @class */ (function () {
    function BoundsData() {
    }
    return BoundsData;
}());
exports.BoundsData = BoundsData;
/**
 * Grabs the bounds from hidden SVG DOM elements, applies layouts and fires
 * ComputedBoundsActions.
 *
 * The actual bounds of an element can usually not be determined from the SModel
 * as they depend on the view implementation and CSS stylings. So the best way is
 * to grab them from a live (but hidden) SVG using getBBox().
 *
 * If an element is Alignable, and the top-left corner of its bounding box is not
 * the origin, we also issue a realign with the ComputedBoundsAction.
 */
var HiddenBoundsUpdater = /** @class */ (function () {
    function HiddenBoundsUpdater() {
        this.element2boundsData = new Map;
    }
    HiddenBoundsUpdater.prototype.decorate = function (vnode, element) {
        if (model_1.isSizeable(element) || model_1.isLayoutContainer(element)) {
            this.element2boundsData.set(element, {
                vnode: vnode,
                bounds: element.bounds,
                boundsChanged: false,
                alignmentChanged: false
            });
        }
        if (element instanceof smodel_1.SModelRoot)
            this.root = element;
        return vnode;
    };
    HiddenBoundsUpdater.prototype.postUpdate = function (cause) {
        if (cause === undefined || cause.kind !== bounds_manipulation_1.RequestBoundsAction.KIND) {
            return;
        }
        var request = cause;
        this.getBoundsFromDOM();
        this.layouter.layout(this.element2boundsData);
        var resizes = [];
        var realignments = [];
        this.element2boundsData.forEach(function (boundsData, element) {
            if (boundsData.boundsChanged && boundsData.bounds !== undefined) {
                var resize = {
                    elementId: element.id,
                    newSize: {
                        width: boundsData.bounds.width,
                        height: boundsData.bounds.height
                    }
                };
                // don't copy position if the element is layouted by the server
                if (element instanceof smodel_1.SChildElement && model_1.isLayoutContainer(element.parent))
                    resize.newPosition = {
                        x: boundsData.bounds.x,
                        y: boundsData.bounds.y,
                    };
                resizes.push(resize);
            }
            if (boundsData.alignmentChanged && boundsData.alignment !== undefined)
                realignments.push({
                    elementId: element.id,
                    newAlignment: boundsData.alignment
                });
        });
        var revision = (this.root !== undefined) ? this.root.revision : undefined;
        this.actionDispatcher.dispatch(new bounds_manipulation_1.ComputedBoundsAction(resizes, revision, realignments, request.requestId));
        this.element2boundsData.clear();
    };
    HiddenBoundsUpdater.prototype.getBoundsFromDOM = function () {
        var _this = this;
        this.element2boundsData.forEach(function (boundsData, element) {
            if (boundsData.bounds && model_1.isSizeable(element)) {
                var vnode = boundsData.vnode;
                if (vnode && vnode.elm) {
                    var boundingBox = _this.getBounds(vnode.elm, element);
                    if (model_1.isAlignable(element) && !(geometry_1.almostEquals(boundingBox.x, 0) && geometry_1.almostEquals(boundingBox.y, 0))) {
                        boundsData.alignment = {
                            x: -boundingBox.x,
                            y: -boundingBox.y
                        };
                        boundsData.alignmentChanged = true;
                    }
                    var newBounds = {
                        x: element.bounds.x,
                        y: element.bounds.y,
                        width: boundingBox.width,
                        height: boundingBox.height
                    };
                    if (!(geometry_1.almostEquals(newBounds.x, element.bounds.x)
                        && geometry_1.almostEquals(newBounds.y, element.bounds.y)
                        && geometry_1.almostEquals(newBounds.width, element.bounds.width)
                        && geometry_1.almostEquals(newBounds.height, element.bounds.height))) {
                        boundsData.bounds = newBounds;
                        boundsData.boundsChanged = true;
                    }
                }
            }
        });
    };
    HiddenBoundsUpdater.prototype.getBounds = function (elm, element) {
        if (typeof elm.getBBox !== 'function') {
            this.logger.error(this, 'Not an SVG element:', elm);
            return geometry_1.EMPTY_BOUNDS;
        }
        var bounds = elm.getBBox();
        return {
            x: bounds.x,
            y: bounds.y,
            width: bounds.width,
            height: bounds.height
        };
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], HiddenBoundsUpdater.prototype, "logger", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], HiddenBoundsUpdater.prototype, "actionDispatcher", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.Layouter),
        __metadata("design:type", layout_1.Layouter)
    ], HiddenBoundsUpdater.prototype, "layouter", void 0);
    HiddenBoundsUpdater = __decorate([
        inversify_1.injectable()
    ], HiddenBoundsUpdater);
    return HiddenBoundsUpdater;
}());
exports.HiddenBoundsUpdater = HiddenBoundsUpdater;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/bounds/layout.js":
/*!*************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/bounds/layout.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "../node_modules/sprotty/lib/utils/registry.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var model_1 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/bounds/model.js");
var vbox_layout_1 = __webpack_require__(/*! ./vbox-layout */ "../node_modules/sprotty/lib/features/bounds/vbox-layout.js");
var hbox_layout_1 = __webpack_require__(/*! ./hbox-layout */ "../node_modules/sprotty/lib/features/bounds/hbox-layout.js");
var stack_layout_1 = __webpack_require__(/*! ./stack-layout */ "../node_modules/sprotty/lib/features/bounds/stack-layout.js");
var LayoutRegistry = /** @class */ (function (_super) {
    __extends(LayoutRegistry, _super);
    function LayoutRegistry() {
        var _this = _super.call(this) || this;
        _this.register(vbox_layout_1.VBoxLayouter.KIND, new vbox_layout_1.VBoxLayouter());
        _this.register(hbox_layout_1.HBoxLayouter.KIND, new hbox_layout_1.HBoxLayouter());
        _this.register(stack_layout_1.StackLayouter.KIND, new stack_layout_1.StackLayouter());
        return _this;
    }
    return LayoutRegistry;
}(registry_1.InstanceRegistry));
exports.LayoutRegistry = LayoutRegistry;
var Layouter = /** @class */ (function () {
    function Layouter() {
    }
    Layouter.prototype.layout = function (element2boundsData) {
        new StatefulLayouter(element2boundsData, this.layoutRegistry, this.logger).layout();
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.LayoutRegistry),
        __metadata("design:type", LayoutRegistry)
    ], Layouter.prototype, "layoutRegistry", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], Layouter.prototype, "logger", void 0);
    Layouter = __decorate([
        inversify_1.injectable()
    ], Layouter);
    return Layouter;
}());
exports.Layouter = Layouter;
var StatefulLayouter = /** @class */ (function () {
    function StatefulLayouter(element2boundsData, layoutRegistry, log) {
        var _this = this;
        this.element2boundsData = element2boundsData;
        this.layoutRegistry = layoutRegistry;
        this.log = log;
        this.toBeLayouted = [];
        element2boundsData.forEach(function (data, element) {
            if (model_1.isLayoutContainer(element))
                _this.toBeLayouted.push(element);
        });
    }
    StatefulLayouter.prototype.getBoundsData = function (element) {
        var boundsData = this.element2boundsData.get(element);
        var bounds = element.bounds;
        if (model_1.isLayoutContainer(element) && this.toBeLayouted.indexOf(element) >= 0) {
            bounds = this.doLayout(element);
        }
        if (!boundsData) {
            boundsData = {
                bounds: bounds,
                boundsChanged: false,
                alignmentChanged: false
            };
            this.element2boundsData.set(element, boundsData);
        }
        return boundsData;
    };
    StatefulLayouter.prototype.layout = function () {
        while (this.toBeLayouted.length > 0) {
            var element = this.toBeLayouted[0];
            this.doLayout(element);
        }
    };
    StatefulLayouter.prototype.doLayout = function (element) {
        var index = this.toBeLayouted.indexOf(element);
        if (index >= 0)
            this.toBeLayouted.splice(index, 1);
        var layout = this.layoutRegistry.get(element.layout);
        if (layout)
            layout.layout(element, this);
        var boundsData = this.element2boundsData.get(element);
        if (boundsData !== undefined && boundsData.bounds !== undefined) {
            return boundsData.bounds;
        }
        else {
            this.log.error(element, 'Layout failed');
            return geometry_1.EMPTY_BOUNDS;
        }
    };
    return StatefulLayouter;
}());
exports.StatefulLayouter = StatefulLayouter;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/bounds/model.js":
/*!************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/bounds/model.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../node_modules/sprotty/lib/base/model/smodel-utils.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var browser_1 = __webpack_require__(/*! ../../utils/browser */ "../node_modules/sprotty/lib/utils/browser.js");
exports.boundsFeature = Symbol('boundsFeature');
exports.layoutContainerFeature = Symbol('layoutContainerFeature');
exports.layoutableChildFeature = Symbol('layoutableChildFeature');
exports.alignFeature = Symbol('alignFeature');
function isBoundsAware(element) {
    return 'bounds' in element;
}
exports.isBoundsAware = isBoundsAware;
function isLayoutContainer(element) {
    return isBoundsAware(element)
        && element.hasFeature(exports.layoutContainerFeature)
        && 'layout' in element;
}
exports.isLayoutContainer = isLayoutContainer;
function isLayoutableChild(element) {
    return isBoundsAware(element)
        && element.hasFeature(exports.layoutableChildFeature);
}
exports.isLayoutableChild = isLayoutableChild;
function isSizeable(element) {
    return element.hasFeature(exports.boundsFeature) && isBoundsAware(element);
}
exports.isSizeable = isSizeable;
function isAlignable(element) {
    return element.hasFeature(exports.alignFeature)
        && 'alignment' in element;
}
exports.isAlignable = isAlignable;
function getAbsoluteBounds(element) {
    var boundsAware = smodel_utils_1.findParentByFeature(element, isBoundsAware);
    if (boundsAware !== undefined) {
        var bounds = boundsAware.bounds;
        var current = boundsAware;
        while (current instanceof smodel_1.SChildElement) {
            var parent_1 = current.parent;
            bounds = parent_1.localToParent(bounds);
            current = parent_1;
        }
        return bounds;
    }
    else if (element instanceof smodel_1.SModelRoot) {
        var canvasBounds = element.canvasBounds;
        return { x: 0, y: 0, width: canvasBounds.width, height: canvasBounds.height };
    }
    else {
        return geometry_1.EMPTY_BOUNDS;
    }
}
exports.getAbsoluteBounds = getAbsoluteBounds;
/**
 * Returns the "client-absolute" bounds of the specified `element`.
 *
 * The client-absolute bounds are relative to the entire browser page.
 *
 * @param element The element to get the bounds for.
 * @param domHelper The dom helper to obtain the SVG element's id.
 * @param viewerOptions The viewer options to obtain sprotty's container div id.
 */
function getAbsoluteClientBounds(element, domHelper, viewerOptions) {
    var x = 0;
    var y = 0;
    var width = 0;
    var height = 0;
    var svgElementId = domHelper.createUniqueDOMElementId(element);
    var svgElement = document.getElementById(svgElementId);
    if (svgElement) {
        var rect = svgElement.getBoundingClientRect();
        var scroll_1 = browser_1.getWindowScroll();
        x = rect.left + scroll_1.x;
        y = rect.top + scroll_1.y;
        width = rect.width;
        height = rect.height;
    }
    var container = document.getElementById(viewerOptions.baseDiv);
    if (container) {
        while (container.offsetParent instanceof HTMLElement
            && (container = container.offsetParent)) {
            x -= container.offsetLeft;
            y -= container.offsetTop;
        }
    }
    return { x: x, y: y, width: width, height: height };
}
exports.getAbsoluteClientBounds = getAbsoluteClientBounds;
function findChildrenAtPosition(parent, point) {
    var matches = [];
    doFindChildrenAtPosition(parent, point, matches);
    return matches;
}
exports.findChildrenAtPosition = findChildrenAtPosition;
function doFindChildrenAtPosition(parent, point, matches) {
    parent.children.forEach(function (child) {
        if (isBoundsAware(child) && geometry_1.includes(child.bounds, point))
            matches.push(child);
        if (child instanceof smodel_1.SParentElement) {
            var newPoint = child.parentToLocal(point);
            doFindChildrenAtPosition(child, newPoint, matches);
        }
    });
}
/**
 * Abstract class for elements with a position and a size.
 */
var SShapeElement = /** @class */ (function (_super) {
    __extends(SShapeElement, _super);
    function SShapeElement() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.position = geometry_1.ORIGIN_POINT;
        _this.size = geometry_1.EMPTY_DIMENSION;
        return _this;
    }
    Object.defineProperty(SShapeElement.prototype, "bounds", {
        get: function () {
            return {
                x: this.position.x,
                y: this.position.y,
                width: this.size.width,
                height: this.size.height
            };
        },
        set: function (newBounds) {
            this.position = {
                x: newBounds.x,
                y: newBounds.y
            };
            this.size = {
                width: newBounds.width,
                height: newBounds.height
            };
        },
        enumerable: true,
        configurable: true
    });
    SShapeElement.prototype.localToParent = function (point) {
        var result = {
            x: point.x + this.position.x,
            y: point.y + this.position.y,
            width: -1,
            height: -1
        };
        if (geometry_1.isBounds(point)) {
            result.width = point.width;
            result.height = point.height;
        }
        return result;
    };
    SShapeElement.prototype.parentToLocal = function (point) {
        var result = {
            x: point.x - this.position.x,
            y: point.y - this.position.y,
            width: -1,
            height: -1
        };
        if (geometry_1.isBounds(point)) {
            result.width = point.width;
            result.height = point.height;
        }
        return result;
    };
    return SShapeElement;
}(smodel_1.SChildElement));
exports.SShapeElement = SShapeElement;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/bounds/resize.js":
/*!*************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/bounds/resize.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var animation_1 = __webpack_require__(/*! ../../base/animations/animation */ "../node_modules/sprotty/lib/base/animations/animation.js");
var ResizeAnimation = /** @class */ (function (_super) {
    __extends(ResizeAnimation, _super);
    function ResizeAnimation(model, elementResizes, context, reverse) {
        if (reverse === void 0) { reverse = false; }
        var _this = _super.call(this, context) || this;
        _this.model = model;
        _this.elementResizes = elementResizes;
        _this.reverse = reverse;
        return _this;
    }
    ResizeAnimation.prototype.tween = function (t) {
        var _this = this;
        this.elementResizes.forEach(function (elementResize) {
            var element = elementResize.element;
            var newDimension = (_this.reverse) ? {
                width: (1 - t) * elementResize.toDimension.width + t * elementResize.fromDimension.width,
                height: (1 - t) * elementResize.toDimension.height + t * elementResize.fromDimension.height
            } : {
                width: (1 - t) * elementResize.fromDimension.width + t * elementResize.toDimension.width,
                height: (1 - t) * elementResize.fromDimension.height + t * elementResize.toDimension.height
            };
            element.bounds = {
                x: element.bounds.x,
                y: element.bounds.y,
                width: newDimension.width,
                height: newDimension.height
            };
        });
        return this.model;
    };
    return ResizeAnimation;
}(animation_1.Animation));
exports.ResizeAnimation = ResizeAnimation;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/bounds/stack-layout.js":
/*!*******************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/bounds/stack-layout.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var abstract_layout_1 = __webpack_require__(/*! ./abstract-layout */ "../node_modules/sprotty/lib/features/bounds/abstract-layout.js");
var model_1 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/bounds/model.js");
var StackLayouter = /** @class */ (function (_super) {
    __extends(StackLayouter, _super);
    function StackLayouter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StackLayouter.prototype.getChildrenSize = function (container, options, layouter) {
        var maxWidth = -1;
        var maxHeight = -1;
        container.children.forEach(function (child) {
            if (model_1.isLayoutableChild(child)) {
                var bounds = layouter.getBoundsData(child).bounds;
                if (bounds !== undefined && geometry_1.isValidDimension(bounds)) {
                    maxWidth = Math.max(maxWidth, bounds.width);
                    maxHeight = Math.max(maxHeight, bounds.height);
                }
            }
        });
        return {
            width: maxWidth,
            height: maxHeight
        };
    };
    StackLayouter.prototype.layoutChild = function (child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight) {
        var dx = this.getDx(childOptions.hAlign, bounds, maxWidth);
        var dy = this.getDy(childOptions.vAlign, bounds, maxHeight);
        boundsData.bounds = {
            x: containerOptions.paddingLeft + child.bounds.x - bounds.x + dx,
            y: containerOptions.paddingTop + child.bounds.y - bounds.y + dy,
            width: bounds.width,
            height: bounds.height
        };
        boundsData.boundsChanged = true;
        return currentOffset;
    };
    StackLayouter.prototype.getDefaultLayoutOptions = function () {
        return {
            resizeContainer: true,
            paddingTop: 5,
            paddingBottom: 5,
            paddingLeft: 5,
            paddingRight: 5,
            paddingFactor: 1,
            hAlign: 'center',
            vAlign: 'center',
            minWidth: 0,
            minHeight: 0
        };
    };
    StackLayouter.prototype.spread = function (a, b) {
        return __assign(__assign({}, a), b);
    };
    StackLayouter.KIND = 'stack';
    return StackLayouter;
}(abstract_layout_1.AbstractLayout));
exports.StackLayouter = StackLayouter;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/bounds/vbox-layout.js":
/*!******************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/bounds/vbox-layout.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var abstract_layout_1 = __webpack_require__(/*! ./abstract-layout */ "../node_modules/sprotty/lib/features/bounds/abstract-layout.js");
var model_1 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/bounds/model.js");
/**
 * Layouts children of a container in vertical (top->bottom) direction.
 */
var VBoxLayouter = /** @class */ (function (_super) {
    __extends(VBoxLayouter, _super);
    function VBoxLayouter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VBoxLayouter.prototype.getChildrenSize = function (container, containerOptions, layouter) {
        var maxWidth = -1;
        var maxHeight = 0;
        var isFirst = true;
        container.children.forEach(function (child) {
            if (model_1.isLayoutableChild(child)) {
                var bounds = layouter.getBoundsData(child).bounds;
                if (bounds !== undefined && geometry_1.isValidDimension(bounds)) {
                    maxHeight += bounds.height;
                    if (isFirst)
                        isFirst = false;
                    else
                        maxHeight += containerOptions.vGap;
                    maxWidth = Math.max(maxWidth, bounds.width);
                }
            }
        });
        return {
            width: maxWidth,
            height: maxHeight
        };
    };
    VBoxLayouter.prototype.layoutChild = function (child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight) {
        var dx = this.getDx(childOptions.hAlign, bounds, maxWidth);
        boundsData.bounds = {
            x: containerOptions.paddingLeft + child.bounds.x - bounds.x + dx,
            y: currentOffset.y + child.bounds.y - bounds.y,
            width: bounds.width,
            height: bounds.height
        };
        boundsData.boundsChanged = true;
        return {
            x: currentOffset.x,
            y: currentOffset.y + bounds.height + containerOptions.vGap
        };
    };
    VBoxLayouter.prototype.getDefaultLayoutOptions = function () {
        return {
            resizeContainer: true,
            paddingTop: 5,
            paddingBottom: 5,
            paddingLeft: 5,
            paddingRight: 5,
            paddingFactor: 1,
            vGap: 1,
            hAlign: 'center',
            minWidth: 0,
            minHeight: 0
        };
    };
    VBoxLayouter.prototype.spread = function (a, b) {
        return __assign(__assign({}, a), b);
    };
    VBoxLayouter.KIND = 'vbox';
    return VBoxLayouter;
}(abstract_layout_1.AbstractLayout));
exports.VBoxLayouter = VBoxLayouter;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/button/button-handler.js":
/*!*********************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/button/button-handler.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "../node_modules/sprotty/lib/utils/registry.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var ButtonHandlerRegistry = /** @class */ (function (_super) {
    __extends(ButtonHandlerRegistry, _super);
    function ButtonHandlerRegistry(buttonHandlerFactories) {
        var _this = _super.call(this) || this;
        buttonHandlerFactories.forEach(function (factory) { return _this.register(factory.TYPE, new factory()); });
        return _this;
    }
    ButtonHandlerRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.IButtonHandler)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], ButtonHandlerRegistry);
    return ButtonHandlerRegistry;
}(registry_1.InstanceRegistry));
exports.ButtonHandlerRegistry = ButtonHandlerRegistry;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/button/di.config.js":
/*!****************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/button/di.config.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var button_handler_1 = __webpack_require__(/*! ./button-handler */ "../node_modules/sprotty/lib/features/button/button-handler.js");
var buttonModule = new inversify_1.ContainerModule(function (bind) {
    bind(button_handler_1.ButtonHandlerRegistry).toSelf().inSingletonScope();
});
exports.default = buttonModule;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/button/model.js":
/*!************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/button/model.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var model_1 = __webpack_require__(/*! ../bounds/model */ "../node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ../fade/model */ "../node_modules/sprotty/lib/features/fade/model.js");
var SButton = /** @class */ (function (_super) {
    __extends(SButton, _super);
    function SButton() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.enabled = true;
        return _this;
    }
    SButton.DEFAULT_FEATURES = [model_1.boundsFeature, model_1.layoutableChildFeature, model_2.fadeFeature];
    return SButton;
}(model_1.SShapeElement));
exports.SButton = SButton;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/command-palette/action-providers.js":
/*!********************************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/command-palette/action-providers.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var action_1 = __webpack_require__(/*! ../../base/actions/action */ "../node_modules/sprotty/lib/base/actions/action.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var iterable_1 = __webpack_require__(/*! ../../utils/iterable */ "../node_modules/sprotty/lib/utils/iterable.js");
var model_1 = __webpack_require__(/*! ../nameable/model */ "../node_modules/sprotty/lib/features/nameable/model.js");
var select_1 = __webpack_require__(/*! ../select/select */ "../node_modules/sprotty/lib/features/select/select.js");
var center_fit_1 = __webpack_require__(/*! ../viewport/center-fit */ "../node_modules/sprotty/lib/features/viewport/center-fit.js");
var CommandPaletteActionProviderRegistry = /** @class */ (function () {
    function CommandPaletteActionProviderRegistry(actionProviders) {
        if (actionProviders === void 0) { actionProviders = []; }
        this.actionProviders = actionProviders;
    }
    CommandPaletteActionProviderRegistry.prototype.getActions = function (root, text, lastMousePosition, index) {
        var actionLists = this.actionProviders.map(function (provider) { return provider.getActions(root, text, lastMousePosition, index); });
        return Promise.all(actionLists).then(function (p) { return p.reduce(function (acc, promise) { return promise !== undefined ? acc.concat(promise) : acc; }); });
    };
    CommandPaletteActionProviderRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.ICommandPaletteActionProvider)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], CommandPaletteActionProviderRegistry);
    return CommandPaletteActionProviderRegistry;
}());
exports.CommandPaletteActionProviderRegistry = CommandPaletteActionProviderRegistry;
var RevealNamedElementActionProvider = /** @class */ (function () {
    function RevealNamedElementActionProvider(logger) {
        this.logger = logger;
    }
    RevealNamedElementActionProvider.prototype.getActions = function (root, text, lastMousePosition, index) {
        if (index !== undefined && index % 2 === 0)
            return Promise.resolve(this.createSelectActions(root));
        else
            return Promise.resolve([new action_1.LabeledAction("Select all", [new select_1.SelectAllAction()])]);
    };
    RevealNamedElementActionProvider.prototype.createSelectActions = function (modelRoot) {
        var nameables = iterable_1.toArray(modelRoot.index.all().filter(function (element) { return model_1.isNameable(element); }));
        return nameables.map(function (nameable) { return new action_1.LabeledAction("Reveal " + model_1.name(nameable), [new select_1.SelectAction([nameable.id]), new center_fit_1.CenterAction([nameable.id])], 'fa-eye'); });
    };
    RevealNamedElementActionProvider = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.ILogger)),
        __metadata("design:paramtypes", [Object])
    ], RevealNamedElementActionProvider);
    return RevealNamedElementActionProvider;
}());
exports.RevealNamedElementActionProvider = RevealNamedElementActionProvider;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/command-palette/command-palette.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/command-palette/command-palette.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var action_1 = __webpack_require__(/*! ../../base/actions/action */ "../node_modules/sprotty/lib/base/actions/action.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var ui_extension_1 = __webpack_require__(/*! ../../base/ui-extensions/ui-extension */ "../node_modules/sprotty/lib/base/ui-extensions/ui-extension.js");
var ui_extension_registry_1 = __webpack_require__(/*! ../../base/ui-extensions/ui-extension-registry */ "../node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js");
var dom_helper_1 = __webpack_require__(/*! ../../base/views/dom-helper */ "../node_modules/sprotty/lib/base/views/dom-helper.js");
var key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "../node_modules/sprotty/lib/base/views/key-tool.js");
var iterable_1 = __webpack_require__(/*! ../../utils/iterable */ "../node_modules/sprotty/lib/utils/iterable.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../node_modules/sprotty/lib/utils/keyboard.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "../node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ../select/model */ "../node_modules/sprotty/lib/features/select/model.js");
var action_providers_1 = __webpack_require__(/*! ./action-providers */ "../node_modules/sprotty/lib/features/command-palette/action-providers.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../node_modules/sprotty/lib/base/views/mouse-tool.js");
// import of function autocomplete(...) doesn't work
// see also https://github.com/kraaden/autocomplete/issues/13
// this is a workaround to still get the function including type support
var configureAutocomplete = __webpack_require__(/*! autocompleter */ "../node_modules/autocompleter/autocomplete.js");
var CommandPalette = /** @class */ (function (_super) {
    __extends(CommandPalette, _super);
    function CommandPalette() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.loadingIndicatorClasses = ['loading'];
        _this.xOffset = 20;
        _this.yOffset = 20;
        _this.defaultWidth = 400;
        _this.debounceWaitMs = 100;
        _this.noCommandsMsg = "No commands available";
        _this.paletteIndex = 0;
        return _this;
    }
    CommandPalette_1 = CommandPalette;
    CommandPalette.prototype.id = function () { return CommandPalette_1.ID; };
    CommandPalette.prototype.containerClass = function () { return "command-palette"; };
    CommandPalette.prototype.show = function (root) {
        var contextElementIds = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            contextElementIds[_i - 1] = arguments[_i];
        }
        _super.prototype.show.apply(this, __spreadArrays([root], contextElementIds));
        this.paletteIndex = 0;
        this.contextActions = undefined;
        this.inputElement.value = "";
        this.autoCompleteResult = configureAutocomplete(this.autocompleteSettings(root));
        this.inputElement.focus();
    };
    CommandPalette.prototype.initializeContents = function (containerElement) {
        var _this = this;
        containerElement.style.position = "absolute";
        this.inputElement = document.createElement('input');
        this.inputElement.style.width = '100%';
        this.inputElement.addEventListener('keydown', function (event) { return _this.hideIfEscapeEvent(event); });
        this.inputElement.addEventListener('keydown', function (event) { return _this.cylceIfInvokePaletteKey(event); });
        this.inputElement.onblur = function () { return window.setTimeout(function () { return _this.hide(); }, 200); };
        containerElement.appendChild(this.inputElement);
    };
    CommandPalette.prototype.hideIfEscapeEvent = function (event) {
        if (keyboard_1.matchesKeystroke(event, 'Escape')) {
            this.hide();
        }
    };
    CommandPalette.prototype.cylceIfInvokePaletteKey = function (event) {
        if (CommandPalette_1.isInvokePaletteKey(event)) {
            this.cycle();
        }
    };
    CommandPalette.prototype.cycle = function () {
        this.contextActions = undefined;
        this.paletteIndex++;
    };
    CommandPalette.prototype.onBeforeShow = function (containerElement, root) {
        var selectedElementIds = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            selectedElementIds[_i - 2] = arguments[_i];
        }
        var x = this.xOffset;
        var y = this.yOffset;
        var selectedElements = iterable_1.toArray(root.index.all().filter(function (e) { return model_2.isSelectable(e) && e.selected; }));
        if (selectedElements.length === 1) {
            var bounds = model_1.getAbsoluteClientBounds(selectedElements[0], this.domHelper, this.viewerOptions);
            x += bounds.x + bounds.width;
            y += bounds.y;
        }
        else {
            var bounds = model_1.getAbsoluteClientBounds(root, this.domHelper, this.viewerOptions);
            x += bounds.x;
            y += bounds.y;
        }
        containerElement.style.left = x + "px";
        containerElement.style.top = y + "px";
        containerElement.style.width = this.defaultWidth + "px";
    };
    CommandPalette.prototype.autocompleteSettings = function (root) {
        var _this = this;
        return {
            input: this.inputElement,
            emptyMsg: this.noCommandsMsg,
            className: "command-palette-suggestions",
            debounceWaitMs: this.debounceWaitMs,
            showOnFocus: true,
            minLength: -1,
            fetch: function (text, update) {
                return _this.updateAutoCompleteActions(update, text, root);
            },
            onSelect: function (item) { return _this.onSelect(item); },
            render: function (item, currentValue) {
                return _this.renderLabeledActionSuggestion(item, currentValue);
            },
            customize: function (input, inputRect, container, maxHeight) {
                _this.customizeSuggestionContainer(container, inputRect, maxHeight);
            }
        };
    };
    CommandPalette.prototype.onSelect = function (item) {
        this.executeAction(item);
        this.hide();
    };
    CommandPalette.prototype.updateAutoCompleteActions = function (update, text, root) {
        var _this = this;
        this.onLoading();
        if (this.contextActions) {
            update(this.filterActions(text, this.contextActions));
            this.onLoaded('success');
        }
        else {
            this.actionProviderRegistry
                .getActions(root, text, this.mousePositionTracker.lastPositionOnDiagram, this.paletteIndex)
                .then(function (actions) {
                _this.contextActions = actions;
                update(_this.filterActions(text, actions));
                _this.onLoaded('success');
            })
                .catch(function (reason) {
                _this.logger.error(_this, "Failed to obtain actions from command palette action providers", reason);
                _this.onLoaded('error');
            });
        }
    };
    CommandPalette.prototype.onLoading = function () {
        var _a;
        if (this.loadingIndicator && this.containerElement.contains(this.loadingIndicator)) {
            return;
        }
        this.loadingIndicator = document.createElement('span');
        (_a = this.loadingIndicator.classList).add.apply(_a, this.loadingIndicatorClasses);
        this.containerElement.appendChild(this.loadingIndicator);
    };
    CommandPalette.prototype.onLoaded = function (success) {
        if (this.containerElement.contains(this.loadingIndicator)) {
            this.containerElement.removeChild(this.loadingIndicator);
        }
    };
    CommandPalette.prototype.renderLabeledActionSuggestion = function (item, value) {
        var itemElement = document.createElement("div");
        var wordMatcher = espaceForRegExp(value).split(" ").join("|");
        var regex = new RegExp(wordMatcher, "gi");
        if (item.icon) {
            this.renderIcon(itemElement, item.icon);
        }
        itemElement.innerHTML += item.label.replace(regex, function (match) { return "<em>" + match + "</em>"; });
        return itemElement;
    };
    CommandPalette.prototype.renderIcon = function (itemElement, icon) {
        itemElement.innerHTML += "<span class=\"icon fa " + icon + "\"></span>";
    };
    CommandPalette.prototype.filterActions = function (filterText, actions) {
        return iterable_1.toArray(actions.filter(function (action) {
            var label = action.label.toLowerCase();
            var searchWords = filterText.split(' ');
            return searchWords.every(function (word) { return label.indexOf(word.toLowerCase()) !== -1; });
        }));
    };
    CommandPalette.prototype.customizeSuggestionContainer = function (container, inputRect, maxHeight) {
        // move container into our command palette container as this is already positioned correctly
        if (this.containerElement) {
            this.containerElement.appendChild(container);
        }
    };
    CommandPalette.prototype.hide = function () {
        _super.prototype.hide.call(this);
        if (this.autoCompleteResult) {
            this.autoCompleteResult.destroy();
        }
    };
    CommandPalette.prototype.executeAction = function (input) {
        var _this = this;
        this.actionDispatcherProvider()
            .then(function (actionDispatcher) { return actionDispatcher.dispatchAll(toActionArray(input)); })
            .catch(function (reason) { return _this.logger.error(_this, 'No action dispatcher available to execute command palette action', reason); });
    };
    var CommandPalette_1;
    CommandPalette.ID = "command-palette";
    CommandPalette.isInvokePaletteKey = function (event) { return keyboard_1.matchesKeystroke(event, 'Space', 'ctrl'); };
    __decorate([
        inversify_1.inject(types_1.TYPES.IActionDispatcherProvider),
        __metadata("design:type", Function)
    ], CommandPalette.prototype, "actionDispatcherProvider", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ICommandPaletteActionProviderRegistry),
        __metadata("design:type", action_providers_1.CommandPaletteActionProviderRegistry)
    ], CommandPalette.prototype, "actionProviderRegistry", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], CommandPalette.prototype, "viewerOptions", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.DOMHelper),
        __metadata("design:type", dom_helper_1.DOMHelper)
    ], CommandPalette.prototype, "domHelper", void 0);
    __decorate([
        inversify_1.inject(mouse_tool_1.MousePositionTracker),
        __metadata("design:type", mouse_tool_1.MousePositionTracker)
    ], CommandPalette.prototype, "mousePositionTracker", void 0);
    CommandPalette = CommandPalette_1 = __decorate([
        inversify_1.injectable()
    ], CommandPalette);
    return CommandPalette;
}(ui_extension_1.AbstractUIExtension));
exports.CommandPalette = CommandPalette;
function toActionArray(input) {
    if (action_1.isLabeledAction(input)) {
        return input.actions;
    }
    else if (action_1.isAction(input)) {
        return [input];
    }
    return [];
}
function espaceForRegExp(value) {
    return value.replace(/([.?*+^$[\]\\(){}|-])/g, '\\$1');
}
var CommandPaletteKeyListener = /** @class */ (function (_super) {
    __extends(CommandPaletteKeyListener, _super);
    function CommandPaletteKeyListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CommandPaletteKeyListener.prototype.keyDown = function (element, event) {
        if (keyboard_1.matchesKeystroke(event, 'Escape')) {
            return [new ui_extension_registry_1.SetUIExtensionVisibilityAction(CommandPalette.ID, false, [])];
        }
        else if (CommandPalette.isInvokePaletteKey(event)) {
            var selectedElements = iterable_1.toArray(element.index.all().filter(function (e) { return model_2.isSelectable(e) && e.selected; }).map(function (e) { return e.id; }));
            return [new ui_extension_registry_1.SetUIExtensionVisibilityAction(CommandPalette.ID, true, selectedElements)];
        }
        return [];
    };
    return CommandPaletteKeyListener;
}(key_tool_1.KeyListener));
exports.CommandPaletteKeyListener = CommandPaletteKeyListener;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/command-palette/di.config.js":
/*!*************************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/command-palette/di.config.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var action_providers_1 = __webpack_require__(/*! ./action-providers */ "../node_modules/sprotty/lib/features/command-palette/action-providers.js");
var command_palette_1 = __webpack_require__(/*! ./command-palette */ "../node_modules/sprotty/lib/features/command-palette/command-palette.js");
var commandPaletteModule = new inversify_1.ContainerModule(function (bind) {
    bind(command_palette_1.CommandPalette).toSelf().inSingletonScope();
    bind(types_1.TYPES.IUIExtension).toService(command_palette_1.CommandPalette);
    bind(types_1.TYPES.KeyListener).to(command_palette_1.CommandPaletteKeyListener);
    bind(action_providers_1.CommandPaletteActionProviderRegistry).toSelf().inSingletonScope();
    bind(types_1.TYPES.ICommandPaletteActionProviderRegistry).toService(action_providers_1.CommandPaletteActionProviderRegistry);
});
exports.default = commandPaletteModule;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/context-menu/context-menu-service.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/context-menu/context-menu-service.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function toAnchor(anchor) {
    return anchor instanceof HTMLElement ? { x: anchor.offsetLeft, y: anchor.offsetTop } : anchor;
}
exports.toAnchor = toAnchor;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/context-menu/di.config.js":
/*!**********************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/context-menu/di.config.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var menu_providers_1 = __webpack_require__(/*! ./menu-providers */ "../node_modules/sprotty/lib/features/context-menu/menu-providers.js");
var mouse_listener_1 = __webpack_require__(/*! ./mouse-listener */ "../node_modules/sprotty/lib/features/context-menu/mouse-listener.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var contextMenuModule = new inversify_1.ContainerModule(function (bind) {
    bind(types_1.TYPES.IContextMenuServiceProvider).toProvider(function (ctx) {
        return function () {
            return new Promise(function (resolve, reject) {
                if (ctx.container.isBound(types_1.TYPES.IContextMenuService)) {
                    resolve(ctx.container.get(types_1.TYPES.IContextMenuService));
                }
                else {
                    reject();
                }
            });
        };
    });
    bind(types_1.TYPES.MouseListener).to(mouse_listener_1.ContextMenuMouseListener);
    bind(types_1.TYPES.IContextMenuProviderRegistry).to(menu_providers_1.ContextMenuProviderRegistry);
});
exports.default = contextMenuModule;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/context-menu/menu-providers.js":
/*!***************************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/context-menu/menu-providers.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var delete_1 = __webpack_require__(/*! ../edit/delete */ "../node_modules/sprotty/lib/features/edit/delete.js");
var model_1 = __webpack_require__(/*! ../select/model */ "../node_modules/sprotty/lib/features/select/model.js");
var ContextMenuProviderRegistry = /** @class */ (function () {
    function ContextMenuProviderRegistry(menuProviders) {
        if (menuProviders === void 0) { menuProviders = []; }
        this.menuProviders = menuProviders;
    }
    ContextMenuProviderRegistry.prototype.getItems = function (root, lastMousePosition) {
        var menues = this.menuProviders.map(function (provider) { return provider.getItems(root, lastMousePosition); });
        return Promise.all(menues).then(this.flattenAndRestructure);
    };
    ContextMenuProviderRegistry.prototype.flattenAndRestructure = function (p) {
        var menuItems = p.reduce(function (acc, promise) { return promise !== undefined ? acc.concat(promise) : acc; }, []);
        var menuItemsWithParentId = menuItems.filter(function (menuItem) { return menuItem.parentId; });
        var _loop_1 = function (menuItem) {
            if (menuItem.parentId) {
                var fragments = menuItem.parentId.split(".");
                var matchingParent = undefined;
                var nextParents = menuItems;
                var _loop_2 = function (fragment) {
                    matchingParent = nextParents.find(function (item) { return fragment === item.id; });
                    if (matchingParent && matchingParent.children)
                        nextParents = matchingParent.children;
                };
                for (var _i = 0, fragments_1 = fragments; _i < fragments_1.length; _i++) {
                    var fragment = fragments_1[_i];
                    _loop_2(fragment);
                }
                if (matchingParent) {
                    if (matchingParent.children) {
                        matchingParent.children.push(menuItem);
                    }
                    else {
                        matchingParent.children = [menuItem];
                    }
                    menuItems = menuItems.filter(function (item) { return item !== menuItem; });
                }
            }
        };
        for (var _i = 0, menuItemsWithParentId_1 = menuItemsWithParentId; _i < menuItemsWithParentId_1.length; _i++) {
            var menuItem = menuItemsWithParentId_1[_i];
            _loop_1(menuItem);
        }
        return menuItems;
    };
    ContextMenuProviderRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.IContextMenuItemProvider)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], ContextMenuProviderRegistry);
    return ContextMenuProviderRegistry;
}());
exports.ContextMenuProviderRegistry = ContextMenuProviderRegistry;
var DeleteContextMenuItemProvider = /** @class */ (function () {
    function DeleteContextMenuItemProvider() {
    }
    DeleteContextMenuItemProvider.prototype.getItems = function (root, lastMousePosition) {
        var selectedElements = Array.from(root.index.all().filter(model_1.isSelected).filter(delete_1.isDeletable));
        return Promise.resolve([
            {
                id: "delete",
                label: "Delete",
                sortString: "d",
                group: "edit",
                actions: [new delete_1.DeleteElementAction(selectedElements.map(function (e) { return e.id; }))],
                isEnabled: function () { return selectedElements.length > 0; }
            }
        ]);
    };
    DeleteContextMenuItemProvider = __decorate([
        inversify_1.injectable()
    ], DeleteContextMenuItemProvider);
    return DeleteContextMenuItemProvider;
}());
exports.DeleteContextMenuItemProvider = DeleteContextMenuItemProvider;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/context-menu/mouse-listener.js":
/*!***************************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/context-menu/mouse-listener.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var menu_providers_1 = __webpack_require__(/*! ./menu-providers */ "../node_modules/sprotty/lib/features/context-menu/menu-providers.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../node_modules/sprotty/lib/base/views/mouse-tool.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var model_1 = __webpack_require__(/*! ../select/model */ "../node_modules/sprotty/lib/features/select/model.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../node_modules/sprotty/lib/base/model/smodel-utils.js");
var ContextMenuMouseListener = /** @class */ (function (_super) {
    __extends(ContextMenuMouseListener, _super);
    function ContextMenuMouseListener(contextMenuService, menuProvider) {
        var _this = _super.call(this) || this;
        _this.contextMenuService = contextMenuService;
        _this.menuProvider = menuProvider;
        return _this;
    }
    ContextMenuMouseListener.prototype.mouseDown = function (target, event) {
        if (event.button === 2 && this.contextMenuService && this.menuProvider) {
            var mousePosition_1 = { x: event.x, y: event.y };
            var isTargetSelected_1 = false;
            var selectableTarget_1 = smodel_utils_1.findParentByFeature(target, model_1.isSelectable);
            if (selectableTarget_1) {
                isTargetSelected_1 = selectableTarget_1.selected;
                selectableTarget_1.selected = true;
            }
            var restoreSelection_1 = function () { if (selectableTarget_1)
                selectableTarget_1.selected = isTargetSelected_1; };
            Promise.all([this.contextMenuService(), this.menuProvider.getItems(target.root, mousePosition_1)])
                .then(function (_a) {
                var menuService = _a[0], menuItems = _a[1];
                return menuService.show(menuItems, mousePosition_1, restoreSelection_1);
            });
        }
        return [];
    };
    ContextMenuMouseListener = __decorate([
        __param(0, inversify_1.inject(types_1.TYPES.IContextMenuServiceProvider)), __param(0, inversify_1.optional()),
        __param(1, inversify_1.inject(types_1.TYPES.IContextMenuProviderRegistry)), __param(1, inversify_1.optional()),
        __metadata("design:paramtypes", [Function, menu_providers_1.ContextMenuProviderRegistry])
    ], ContextMenuMouseListener);
    return ContextMenuMouseListener;
}(mouse_tool_1.MouseListener));
exports.ContextMenuMouseListener = ContextMenuMouseListener;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/decoration/decoration-placer.js":
/*!****************************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/decoration/decoration-placer.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var model_1 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/decoration/model.js");
var vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "../node_modules/sprotty/lib/base/views/vnode-utils.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var model_2 = __webpack_require__(/*! ../bounds/model */ "../node_modules/sprotty/lib/features/bounds/model.js");
var model_3 = __webpack_require__(/*! ../routing/model */ "../node_modules/sprotty/lib/features/routing/model.js");
var routing_1 = __webpack_require__(/*! ../routing/routing */ "../node_modules/sprotty/lib/features/routing/routing.js");
var DecorationPlacer = /** @class */ (function () {
    function DecorationPlacer() {
    }
    DecorationPlacer.prototype.decorate = function (vnode, element) {
        if (model_1.isDecoration(element)) {
            var position = this.getPosition(element);
            var translate = 'translate(' + position.x + ', ' + position.y + ')';
            vnode_utils_1.setAttr(vnode, 'transform', translate);
        }
        return vnode;
    };
    DecorationPlacer.prototype.getPosition = function (element) {
        if (element instanceof smodel_1.SChildElement && element.parent instanceof model_3.SRoutableElement) {
            var router = this.edgeRouterRegistry.get(element.parent.routerKind);
            var route = router.route(element.parent);
            if (route.length > 1) {
                var index = Math.floor(0.5 * (route.length - 1));
                var offset = model_2.isSizeable(element)
                    ? {
                        x: -0.5 * element.bounds.width,
                        y: -0.5 * element.bounds.width
                    }
                    : geometry_1.ORIGIN_POINT;
                return {
                    x: 0.5 * (route[index].x + route[index + 1].x) + offset.x,
                    y: 0.5 * (route[index].y + route[index + 1].y) + offset.y
                };
            }
        }
        if (model_2.isSizeable(element))
            return {
                x: -0.666 * element.bounds.width,
                y: -0.666 * element.bounds.height
            };
        return geometry_1.ORIGIN_POINT;
    };
    DecorationPlacer.prototype.postUpdate = function () {
    };
    __decorate([
        inversify_1.inject(routing_1.EdgeRouterRegistry),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], DecorationPlacer.prototype, "edgeRouterRegistry", void 0);
    DecorationPlacer = __decorate([
        inversify_1.injectable()
    ], DecorationPlacer);
    return DecorationPlacer;
}());
exports.DecorationPlacer = DecorationPlacer;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/decoration/di.config.js":
/*!********************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/decoration/di.config.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var view_1 = __webpack_require__(/*! ../../base/views/view */ "../node_modules/sprotty/lib/base/views/view.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var model_1 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/decoration/model.js");
var views_1 = __webpack_require__(/*! ./views */ "../node_modules/sprotty/lib/features/decoration/views.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var decoration_placer_1 = __webpack_require__(/*! ./decoration-placer */ "../node_modules/sprotty/lib/features/decoration/decoration-placer.js");
var decorationModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    view_1.configureModelElement({ bind: bind, isBound: isBound }, 'marker', model_1.SIssueMarker, views_1.IssueMarkerView);
    bind(decoration_placer_1.DecorationPlacer).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(decoration_placer_1.DecorationPlacer);
});
exports.default = decorationModule;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/decoration/model.js":
/*!****************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/decoration/model.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var model_1 = __webpack_require__(/*! ../hover/model */ "../node_modules/sprotty/lib/features/hover/model.js");
var model_2 = __webpack_require__(/*! ../bounds/model */ "../node_modules/sprotty/lib/features/bounds/model.js");
exports.decorationFeature = Symbol('decorationFeature');
function isDecoration(e) {
    return e.hasFeature(exports.decorationFeature);
}
exports.isDecoration = isDecoration;
var SDecoration = /** @class */ (function (_super) {
    __extends(SDecoration, _super);
    function SDecoration() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SDecoration.DEFAULT_FEATURES = [exports.decorationFeature, model_2.boundsFeature, model_1.hoverFeedbackFeature, model_1.popupFeature];
    return SDecoration;
}(model_2.SShapeElement));
exports.SDecoration = SDecoration;
var SIssueMarker = /** @class */ (function (_super) {
    __extends(SIssueMarker, _super);
    function SIssueMarker() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SIssueMarker;
}(SDecoration));
exports.SIssueMarker = SIssueMarker;
var SIssue = /** @class */ (function () {
    function SIssue() {
    }
    return SIssue;
}());
exports.SIssue = SIssue;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/decoration/views.js":
/*!****************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/decoration/views.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsx svg */
var snabbdom_jsx_1 = __webpack_require__(/*! snabbdom-jsx */ "../node_modules/snabbdom-jsx/snabbdom-jsx.js");
var vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "../node_modules/sprotty/lib/base/views/vnode-utils.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var IssueMarkerView = /** @class */ (function () {
    function IssueMarkerView() {
    }
    IssueMarkerView.prototype.render = function (marker, context) {
        var scale = 16 / 1792;
        var trafo = "scale(" + scale + ", " + scale + ")";
        var maxSeverity = this.getMaxSeverity(marker);
        var group = snabbdom_jsx_1.svg("g", { "class-sprotty-issue": true },
            snabbdom_jsx_1.svg("g", { transform: trafo },
                snabbdom_jsx_1.svg("path", { d: this.getPath(maxSeverity) })));
        vnode_utils_1.setClass(group, 'sprotty-' + maxSeverity, true);
        return group;
    };
    IssueMarkerView.prototype.getMaxSeverity = function (marker) {
        var currentSeverity = 'info';
        for (var _i = 0, _a = marker.issues.map(function (s) { return s.severity; }); _i < _a.length; _i++) {
            var severity = _a[_i];
            if (severity === 'error' || (severity === 'warning' && currentSeverity === 'info'))
                currentSeverity = severity;
        }
        return currentSeverity;
    };
    IssueMarkerView.prototype.getPath = function (severity) {
        switch (severity) {
            case 'error':
            case 'warning':
                // tslint:disable-next-line:max-line-length
                return "M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zm128 1247v-190q0-14-9-23.5t-22-9.5h-192q-13 0-23 10t-10 23v190q0 13 10 23t23 10h192q13 0 22-9.5t9-23.5zm-2-344l18-621q0-12-10-18-10-8-24-8h-220q-14 0-24 8-10 6-10 18l17 621q0 10 10 17.5t24 7.5h185q14 0 23.5-7.5t10.5-17.5z";
            case 'info':
                // tslint:disable-next-line:max-line-length
                return "M1024 1376v-160q0-14-9-23t-23-9h-96v-512q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v160q0 14 9 23t23 9h96v320h-96q-14 0-23 9t-9 23v160q0 14 9 23t23 9h448q14 0 23-9t9-23zm-128-896v-160q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v160q0 14 9 23t23 9h192q14 0 23-9t9-23zm640 416q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z";
        }
    };
    IssueMarkerView = __decorate([
        inversify_1.injectable()
    ], IssueMarkerView);
    return IssueMarkerView;
}());
exports.IssueMarkerView = IssueMarkerView;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/edge-layout/di.config.js":
/*!*********************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/edge-layout/di.config.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var edge_layout_1 = __webpack_require__(/*! ./edge-layout */ "../node_modules/sprotty/lib/features/edge-layout/edge-layout.js");
var edgeLayoutModule = new inversify_1.ContainerModule(function (bind) {
    bind(edge_layout_1.EdgeLayoutPostprocessor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(edge_layout_1.EdgeLayoutPostprocessor);
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(edge_layout_1.EdgeLayoutPostprocessor);
});
exports.default = edgeLayoutModule;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/edge-layout/edge-layout.js":
/*!***********************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/edge-layout/edge-layout.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "../node_modules/sprotty/lib/base/views/vnode-utils.js");
var sgraph_1 = __webpack_require__(/*! ../../graph/sgraph */ "../node_modules/sprotty/lib/graph/sgraph.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "../node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/edge-layout/model.js");
var routing_1 = __webpack_require__(/*! ../routing/routing */ "../node_modules/sprotty/lib/features/routing/routing.js");
var EdgeLayoutPostprocessor = /** @class */ (function () {
    function EdgeLayoutPostprocessor() {
    }
    EdgeLayoutPostprocessor.prototype.decorate = function (vnode, element) {
        if (model_2.isEdgeLayoutable(element) && element.parent instanceof sgraph_1.SEdge) {
            if (element.bounds !== geometry_1.EMPTY_BOUNDS) {
                var placement = this.getEdgePlacement(element);
                var edge = element.parent;
                var position = Math.min(1, Math.max(0, placement.position));
                var router = this.edgeRouterRegistry.get(edge.routerKind);
                var pointOnEdge = router.pointAt(edge, position);
                var derivativeOnEdge = router.derivativeAt(edge, position);
                var transform = '';
                if (pointOnEdge && derivativeOnEdge) {
                    transform += "translate(" + pointOnEdge.x + ", " + pointOnEdge.y + ")";
                    var angle = geometry_1.toDegrees(Math.atan2(derivativeOnEdge.y, derivativeOnEdge.x));
                    if (placement.rotate) {
                        var flippedAngle = angle;
                        if (Math.abs(angle) > 90) {
                            if (angle < 0)
                                flippedAngle += 180;
                            else if (angle > 0)
                                flippedAngle -= 180;
                        }
                        transform += " rotate(" + flippedAngle + ")";
                        var alignment = this.getRotatedAlignment(element, placement, flippedAngle !== angle);
                        transform += " translate(" + alignment.x + ", " + alignment.y + ")";
                    }
                    else {
                        var alignment = this.getAlignment(element, placement, angle);
                        transform += " translate(" + alignment.x + ", " + alignment.y + ")";
                    }
                    vnode_utils_1.setAttr(vnode, 'transform', transform);
                }
            }
        }
        return vnode;
    };
    EdgeLayoutPostprocessor.prototype.getRotatedAlignment = function (element, placement, flip) {
        var x = model_1.isAlignable(element) ? element.alignment.x : 0;
        var y = model_1.isAlignable(element) ? element.alignment.y : 0;
        var bounds = element.bounds;
        if (placement.side === 'on')
            return { x: x - 0.5 * bounds.height, y: y - 0.5 * bounds.height };
        if (flip) {
            if (placement.position < 0.3333333)
                x -= bounds.width + placement.offset;
            else if (placement.position < 0.6666666)
                x -= 0.5 * bounds.width;
            else
                x += placement.offset;
            switch (placement.side) {
                case 'left':
                case 'bottom':
                    y -= placement.offset + bounds.height;
                    break;
                case 'right':
                case 'top':
                    y += placement.offset;
            }
        }
        else {
            if (placement.position < 0.3333333)
                x += placement.offset;
            else if (placement.position < 0.6666666)
                x -= 0.5 * bounds.width;
            else
                x -= bounds.width + placement.offset;
            switch (placement.side) {
                case 'right':
                case 'bottom':
                    y += -placement.offset - bounds.height;
                    break;
                case 'left':
                case 'top':
                    y += placement.offset;
            }
        }
        return { x: x, y: y };
    };
    EdgeLayoutPostprocessor.prototype.getEdgePlacement = function (element) {
        var current = element;
        var allPlacements = [];
        while (current !== undefined) {
            var placement = current.edgePlacement;
            if (placement !== undefined)
                allPlacements.push(placement);
            if (current instanceof smodel_1.SChildElement)
                current = current.parent;
            else
                break;
        }
        return allPlacements.reverse().reduce(function (a, b) { return __assign(__assign({}, a), b); }, model_2.DEFAULT_EDGE_PLACEMENT);
    };
    EdgeLayoutPostprocessor.prototype.getAlignment = function (label, placement, angle) {
        var bounds = label.bounds;
        var x = model_1.isAlignable(label) ? label.alignment.x - bounds.width : 0;
        var y = model_1.isAlignable(label) ? label.alignment.y - bounds.height : 0;
        if (placement.side === 'on')
            return { x: x + 0.5 * bounds.height, y: y + 0.5 * bounds.height };
        var quadrant = this.getQuadrant(angle);
        var midLeft = { x: placement.offset, y: y + 0.5 * bounds.height };
        var topLeft = { x: placement.offset, y: y + bounds.height + placement.offset };
        var topRight = { x: -bounds.width - placement.offset, y: y + bounds.height + placement.offset };
        var midRight = { x: -bounds.width - placement.offset, y: y + 0.5 * bounds.height };
        var bottomRight = { x: -bounds.width - placement.offset, y: y - placement.offset };
        var bottomLeft = { x: placement.offset, y: y - placement.offset };
        switch (placement.side) {
            case 'left':
                switch (quadrant.orientation) {
                    case 'west':
                        return geometry_1.linear(topLeft, topRight, quadrant.position);
                    case 'north':
                        return geometry_1.linear(topRight, bottomRight, quadrant.position);
                    case 'east':
                        return geometry_1.linear(bottomRight, bottomLeft, quadrant.position);
                    case 'south':
                        return geometry_1.linear(bottomLeft, topLeft, quadrant.position);
                }
                break;
            case 'right':
                switch (quadrant.orientation) {
                    case 'west':
                        return geometry_1.linear(bottomRight, bottomLeft, quadrant.position);
                    case 'north':
                        return geometry_1.linear(bottomLeft, topLeft, quadrant.position);
                    case 'east':
                        return geometry_1.linear(topLeft, topRight, quadrant.position);
                    case 'south':
                        return geometry_1.linear(topRight, bottomRight, quadrant.position);
                }
                break;
            case 'top':
                switch (quadrant.orientation) {
                    case 'west':
                        return geometry_1.linear(bottomRight, bottomLeft, quadrant.position);
                    case 'north':
                        return this.linearFlip(bottomLeft, midLeft, midRight, bottomRight, quadrant.position);
                    case 'east':
                        return geometry_1.linear(bottomRight, bottomLeft, quadrant.position);
                    case 'south':
                        return this.linearFlip(bottomLeft, midLeft, midRight, bottomRight, quadrant.position);
                }
                break;
            case 'bottom':
                switch (quadrant.orientation) {
                    case 'west':
                        return geometry_1.linear(topLeft, topRight, quadrant.position);
                    case 'north':
                        return this.linearFlip(topRight, midRight, midLeft, topLeft, quadrant.position);
                    case 'east':
                        return geometry_1.linear(topLeft, topRight, quadrant.position);
                    case 'south':
                        return this.linearFlip(topRight, midRight, midLeft, topLeft, quadrant.position);
                }
                break;
        }
        return { x: 0, y: 0 };
    };
    EdgeLayoutPostprocessor.prototype.getQuadrant = function (angle) {
        if (Math.abs(angle) > 135)
            return { orientation: 'west', position: (angle > 0 ? angle - 135 : angle + 225) / 90 };
        else if (angle < -45)
            return { orientation: 'north', position: (angle + 135) / 90 };
        else if (angle < 45)
            return { orientation: 'east', position: (angle + 45) / 90 };
        else
            return { orientation: 'south', position: (angle - 45) / 90 };
    };
    EdgeLayoutPostprocessor.prototype.linearFlip = function (p0, p1, p2, p3, position) {
        return position < 0.5 ? geometry_1.linear(p0, p1, 2 * position) : geometry_1.linear(p2, p3, 2 * position - 1);
    };
    EdgeLayoutPostprocessor.prototype.postUpdate = function () { };
    __decorate([
        inversify_1.inject(routing_1.EdgeRouterRegistry),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], EdgeLayoutPostprocessor.prototype, "edgeRouterRegistry", void 0);
    EdgeLayoutPostprocessor = __decorate([
        inversify_1.injectable()
    ], EdgeLayoutPostprocessor);
    return EdgeLayoutPostprocessor;
}());
exports.EdgeLayoutPostprocessor = EdgeLayoutPostprocessor;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/edge-layout/model.js":
/*!*****************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/edge-layout/model.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "../node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ../routing/model */ "../node_modules/sprotty/lib/features/routing/model.js");
exports.edgeLayoutFeature = Symbol('edgeLayout');
function isEdgeLayoutable(element) {
    return element instanceof smodel_1.SChildElement
        && element.parent instanceof model_2.SRoutableElement
        && 'edgePlacement' in element
        && model_1.isBoundsAware(element)
        && element.hasFeature(exports.edgeLayoutFeature);
}
exports.isEdgeLayoutable = isEdgeLayoutable;
var EdgePlacement = /** @class */ (function (_super) {
    __extends(EdgePlacement, _super);
    function EdgePlacement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return EdgePlacement;
}(Object));
exports.EdgePlacement = EdgePlacement;
exports.DEFAULT_EDGE_PLACEMENT = {
    rotate: true,
    side: 'top',
    position: 0.5,
    offset: 7
};


/***/ }),

/***/ "../node_modules/sprotty/lib/features/edit/create-on-drag.js":
/*!*******************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/edit/create-on-drag.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.creatingOnDragFeature = Symbol('creatingOnDragFeature');
function isCreatingOnDrag(element) {
    return element.hasFeature(exports.creatingOnDragFeature) && element.createAction !== undefined;
}
exports.isCreatingOnDrag = isCreatingOnDrag;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/edit/create.js":
/*!***********************************************************!*\
  !*** ../node_modules/sprotty/lib/features/edit/create.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../node_modules/sprotty/lib/base/commands/command.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var CreateElementAction = /** @class */ (function () {
    function CreateElementAction(containerId, elementSchema) {
        this.containerId = containerId;
        this.elementSchema = elementSchema;
        this.kind = CreateElementAction.KIND;
    }
    CreateElementAction.KIND = "createElement";
    return CreateElementAction;
}());
exports.CreateElementAction = CreateElementAction;
var CreateElementCommand = /** @class */ (function (_super) {
    __extends(CreateElementCommand, _super);
    function CreateElementCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    CreateElementCommand.prototype.execute = function (context) {
        var container = context.root.index.getById(this.action.containerId);
        if (container instanceof smodel_1.SParentElement) {
            this.container = container;
            this.newElement = context.modelFactory.createElement(this.action.elementSchema);
            this.container.add(this.newElement);
        }
        return context.root;
    };
    CreateElementCommand.prototype.undo = function (context) {
        this.container.remove(this.newElement);
        return context.root;
    };
    CreateElementCommand.prototype.redo = function (context) {
        this.container.add(this.newElement);
        return context.root;
    };
    CreateElementCommand.KIND = CreateElementAction.KIND;
    CreateElementCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [CreateElementAction])
    ], CreateElementCommand);
    return CreateElementCommand;
}(command_1.Command));
exports.CreateElementCommand = CreateElementCommand;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/edit/delete.js":
/*!***********************************************************!*\
  !*** ../node_modules/sprotty/lib/features/edit/delete.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../node_modules/sprotty/lib/base/commands/command.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
exports.deletableFeature = Symbol('deletableFeature');
function isDeletable(element) {
    return element instanceof smodel_1.SChildElement && element.hasFeature(exports.deletableFeature);
}
exports.isDeletable = isDeletable;
var DeleteElementAction = /** @class */ (function () {
    function DeleteElementAction(elementIds) {
        this.elementIds = elementIds;
        this.kind = DeleteElementAction.KIND;
    }
    DeleteElementAction.KIND = 'delete';
    return DeleteElementAction;
}());
exports.DeleteElementAction = DeleteElementAction;
var ResolvedDelete = /** @class */ (function () {
    function ResolvedDelete() {
    }
    return ResolvedDelete;
}());
exports.ResolvedDelete = ResolvedDelete;
var DeleteElementCommand = /** @class */ (function (_super) {
    __extends(DeleteElementCommand, _super);
    function DeleteElementCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.resolvedDeletes = [];
        return _this;
    }
    DeleteElementCommand.prototype.execute = function (context) {
        var index = context.root.index;
        for (var _i = 0, _a = this.action.elementIds; _i < _a.length; _i++) {
            var id = _a[_i];
            var element = index.getById(id);
            if (element && isDeletable(element)) {
                this.resolvedDeletes.push({ child: element, parent: element.parent });
                element.parent.remove(element);
            }
        }
        return context.root;
    };
    DeleteElementCommand.prototype.undo = function (context) {
        for (var _i = 0, _a = this.resolvedDeletes; _i < _a.length; _i++) {
            var resolvedDelete = _a[_i];
            resolvedDelete.parent.add(resolvedDelete.child);
        }
        return context.root;
    };
    DeleteElementCommand.prototype.redo = function (context) {
        for (var _i = 0, _a = this.resolvedDeletes; _i < _a.length; _i++) {
            var resolvedDelete = _a[_i];
            resolvedDelete.parent.remove(resolvedDelete.child);
        }
        return context.root;
    };
    DeleteElementCommand.KIND = DeleteElementAction.KIND;
    DeleteElementCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [DeleteElementAction])
    ], DeleteElementCommand);
    return DeleteElementCommand;
}(command_1.Command));
exports.DeleteElementCommand = DeleteElementCommand;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/edit/di.config.js":
/*!**************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/edit/di.config.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../node_modules/sprotty/lib/base/commands/command-registration.js");
var action_handler_1 = __webpack_require__(/*! ../../base/actions/action-handler */ "../node_modules/sprotty/lib/base/actions/action-handler.js");
var view_1 = __webpack_require__(/*! ../../base/views/view */ "../node_modules/sprotty/lib/base/views/view.js");
var model_1 = __webpack_require__(/*! ../../features/routing/model */ "../node_modules/sprotty/lib/features/routing/model.js");
var svg_views_1 = __webpack_require__(/*! ../../lib/svg-views */ "../node_modules/sprotty/lib/lib/svg-views.js");
var delete_1 = __webpack_require__(/*! ./delete */ "../node_modules/sprotty/lib/features/edit/delete.js");
var edit_label_1 = __webpack_require__(/*! ./edit-label */ "../node_modules/sprotty/lib/features/edit/edit-label.js");
var edit_label_ui_1 = __webpack_require__(/*! ./edit-label-ui */ "../node_modules/sprotty/lib/features/edit/edit-label-ui.js");
var edit_routing_1 = __webpack_require__(/*! ./edit-routing */ "../node_modules/sprotty/lib/features/edit/edit-routing.js");
var reconnect_1 = __webpack_require__(/*! ./reconnect */ "../node_modules/sprotty/lib/features/edit/reconnect.js");
exports.edgeEditModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    var context = { bind: bind, isBound: isBound };
    command_registration_1.configureCommand(context, edit_routing_1.SwitchEditModeCommand);
    command_registration_1.configureCommand(context, reconnect_1.ReconnectCommand);
    command_registration_1.configureCommand(context, delete_1.DeleteElementCommand);
    view_1.configureModelElement(context, 'dangling-anchor', model_1.SDanglingAnchor, svg_views_1.EmptyGroupView);
});
exports.labelEditModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(types_1.TYPES.MouseListener).to(edit_label_1.EditLabelMouseListener);
    bind(types_1.TYPES.KeyListener).to(edit_label_1.EditLabelKeyListener);
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, edit_label_1.ApplyLabelEditCommand);
});
exports.labelEditUiModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    var context = { bind: bind, isBound: isBound };
    action_handler_1.configureActionHandler(context, edit_label_1.EditLabelAction.KIND, edit_label_ui_1.EditLabelActionHandler);
    bind(edit_label_ui_1.EditLabelUI).toSelf().inSingletonScope();
    bind(types_1.TYPES.IUIExtension).toService(edit_label_ui_1.EditLabelUI);
});


/***/ }),

/***/ "../node_modules/sprotty/lib/features/edit/edit-label-ui.js":
/*!******************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/edit/edit-label-ui.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019-2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var ui_extension_1 = __webpack_require__(/*! ../../base/ui-extensions/ui-extension */ "../node_modules/sprotty/lib/base/ui-extensions/ui-extension.js");
var ui_extension_registry_1 = __webpack_require__(/*! ../../base/ui-extensions/ui-extension-registry */ "../node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js");
var dom_helper_1 = __webpack_require__(/*! ../../base/views/dom-helper */ "../node_modules/sprotty/lib/base/views/dom-helper.js");
var commit_model_1 = __webpack_require__(/*! ../../model-source/commit-model */ "../node_modules/sprotty/lib/model-source/commit-model.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../node_modules/sprotty/lib/utils/keyboard.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "../node_modules/sprotty/lib/features/bounds/model.js");
var zoom_1 = __webpack_require__(/*! ../viewport/zoom */ "../node_modules/sprotty/lib/features/viewport/zoom.js");
var edit_label_1 = __webpack_require__(/*! ./edit-label */ "../node_modules/sprotty/lib/features/edit/edit-label.js");
var model_2 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/edit/model.js");
/** Shows a UI extension for editing a label on emitted `EditLabelAction`s. */
var EditLabelActionHandler = /** @class */ (function () {
    function EditLabelActionHandler() {
    }
    EditLabelActionHandler.prototype.handle = function (action) {
        if (edit_label_1.isEditLabelAction(action)) {
            return new ui_extension_registry_1.SetUIExtensionVisibilityAction(EditLabelUI.ID, true, [action.labelId]);
        }
    };
    EditLabelActionHandler = __decorate([
        inversify_1.injectable()
    ], EditLabelActionHandler);
    return EditLabelActionHandler;
}());
exports.EditLabelActionHandler = EditLabelActionHandler;
var EditLabelUI = /** @class */ (function (_super) {
    __extends(EditLabelUI, _super);
    function EditLabelUI() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.validationTimeout = undefined;
        _this.isActive = false;
        _this.blockApplyEditOnInvalidInput = true;
        _this.isCurrentLabelValid = true;
        return _this;
    }
    EditLabelUI_1 = EditLabelUI;
    EditLabelUI.prototype.id = function () { return EditLabelUI_1.ID; };
    EditLabelUI.prototype.containerClass = function () { return "label-edit"; };
    Object.defineProperty(EditLabelUI.prototype, "labelId", {
        get: function () { return this.label ? this.label.id : 'unknown'; },
        enumerable: true,
        configurable: true
    });
    EditLabelUI.prototype.initializeContents = function (containerElement) {
        var _this = this;
        containerElement.style.position = 'absolute';
        this.inputElement = document.createElement('input');
        this.configureAndAdd(this.inputElement, containerElement);
        this.inputElement.onkeydown = function (event) { return _this.applyLabelEditOnEvent(event, 'Enter'); };
        this.textAreaElement = document.createElement('textarea');
        this.configureAndAdd(this.textAreaElement, containerElement);
        this.textAreaElement.onkeydown = function (event) { return _this.applyLabelEditOnEvent(event, 'Enter', 'ctrl'); };
    };
    EditLabelUI.prototype.configureAndAdd = function (element, containerElement) {
        var _this = this;
        element.style.visibility = 'hidden';
        element.style.position = 'absolute';
        element.style.top = '0px';
        element.style.left = '0px';
        element.addEventListener('keydown', function (event) { return _this.hideIfEscapeEvent(event); });
        element.addEventListener('keyup', function (event) { return _this.validateLabelIfContentChange(event, _this.inputElement.value); });
        element.addEventListener('blur', function () { return window.setTimeout(function () { return _this.applyLabelEdit(); }, 200); });
        containerElement.appendChild(element);
    };
    Object.defineProperty(EditLabelUI.prototype, "editControl", {
        get: function () {
            if (this.label && this.label.isMultiLine) {
                return this.textAreaElement;
            }
            return this.inputElement;
        },
        enumerable: true,
        configurable: true
    });
    EditLabelUI.prototype.hideIfEscapeEvent = function (event) {
        if (keyboard_1.matchesKeystroke(event, 'Escape')) {
            this.hide();
        }
    };
    EditLabelUI.prototype.applyLabelEditOnEvent = function (event, code) {
        var modifiers = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            modifiers[_i - 2] = arguments[_i];
        }
        if (keyboard_1.matchesKeystroke.apply(void 0, __spreadArrays([event, code ? code : 'Enter'], modifiers))) {
            this.applyLabelEdit();
        }
    };
    EditLabelUI.prototype.validateLabelIfContentChange = function (event, value) {
        if (this.previousLabelContent === undefined || this.previousLabelContent !== value) {
            this.previousLabelContent = value;
            this.performLabelValidation(event, this.editControl.value);
        }
    };
    EditLabelUI.prototype.applyLabelEdit = function () {
        return __awaiter(this, void 0, void 0, function () {
            var result;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.isActive) {
                            return [2 /*return*/];
                        }
                        if (!this.blockApplyEditOnInvalidInput) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.validateLabel(this.editControl.value)];
                    case 1:
                        result = _a.sent();
                        if ('error' === result.severity) {
                            this.editControl.focus();
                            return [2 /*return*/];
                        }
                        _a.label = 2;
                    case 2:
                        this.actionDispatcherProvider()
                            .then(function (actionDispatcher) { return actionDispatcher.dispatchAll([new edit_label_1.ApplyLabelEditAction(_this.labelId, _this.editControl.value), new commit_model_1.CommitModelAction()]); })
                            .catch(function (reason) { return _this.logger.error(_this, 'No action dispatcher available to execute apply label edit action', reason); });
                        this.hide();
                        return [2 /*return*/];
                }
            });
        });
    };
    EditLabelUI.prototype.performLabelValidation = function (event, value) {
        var _this = this;
        if (this.validationTimeout) {
            window.clearTimeout(this.validationTimeout);
        }
        this.validationTimeout = window.setTimeout(function () { return _this.validateLabel(value); }, 200);
    };
    EditLabelUI.prototype.validateLabel = function (value) {
        return __awaiter(this, void 0, void 0, function () {
            var result, reason_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.labelValidator && this.label)) return [3 /*break*/, 4];
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, this.labelValidator.validate(value, this.label)];
                    case 2:
                        result = _a.sent();
                        this.isCurrentLabelValid = 'error' !== result.severity;
                        this.showValidationResult(result);
                        return [2 /*return*/, result];
                    case 3:
                        reason_1 = _a.sent();
                        this.logger.error(this, 'Error validating edited label', reason_1);
                        return [3 /*break*/, 4];
                    case 4:
                        this.isCurrentLabelValid = true;
                        return [2 /*return*/, { severity: 'ok', message: undefined }];
                }
            });
        });
    };
    EditLabelUI.prototype.showValidationResult = function (result) {
        this.clearValidationResult();
        if (this.validationDecorator) {
            this.validationDecorator.decorate(this.editControl, result);
        }
    };
    EditLabelUI.prototype.clearValidationResult = function () {
        if (this.validationDecorator) {
            this.validationDecorator.dispose(this.editControl);
        }
    };
    EditLabelUI.prototype.show = function (root) {
        var contextElementIds = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            contextElementIds[_i - 1] = arguments[_i];
        }
        if (!hasEditableLabel(contextElementIds, root) || this.isActive) {
            return;
        }
        _super.prototype.show.apply(this, __spreadArrays([root], contextElementIds));
        this.isActive = true;
    };
    EditLabelUI.prototype.hide = function () {
        this.editControl.style.visibility = 'hidden';
        _super.prototype.hide.call(this);
        this.clearValidationResult();
        this.isActive = false;
        this.isCurrentLabelValid = true;
        this.previousLabelContent = undefined;
        if (this.labelElement) {
            this.labelElement.style.visibility = 'visible';
        }
    };
    EditLabelUI.prototype.onBeforeShow = function (containerElement, root) {
        var contextElementIds = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            contextElementIds[_i - 2] = arguments[_i];
        }
        this.label = getEditableLabels(contextElementIds, root)[0];
        this.previousLabelContent = this.label.text;
        this.setPosition(containerElement);
        this.applyTextContents();
        this.applyFontStyling();
        this.editControl.style.visibility = 'visible';
        this.editControl.focus();
    };
    EditLabelUI.prototype.setPosition = function (containerElement) {
        var x = 0;
        var y = 0;
        var width = 100;
        var height = 20;
        if (this.label) {
            var zoom = zoom_1.getZoom(this.label);
            var bounds = model_1.getAbsoluteClientBounds(this.label, this.domHelper, this.viewerOptions);
            x = bounds.x + (this.label.editControlPositionCorrection ? this.label.editControlPositionCorrection.x : 0) * zoom;
            y = bounds.y + (this.label.editControlPositionCorrection ? this.label.editControlPositionCorrection.y : 0) * zoom;
            height = (this.label.editControlDimension ? this.label.editControlDimension.height : height) * zoom;
            width = (this.label.editControlDimension ? this.label.editControlDimension.width : width) * zoom;
        }
        containerElement.style.left = x + "px";
        containerElement.style.top = y + "px";
        containerElement.style.width = width + "px";
        this.editControl.style.width = width + "px";
        containerElement.style.height = height + "px";
        this.editControl.style.height = height + "px";
    };
    EditLabelUI.prototype.applyTextContents = function () {
        if (this.label) {
            this.editControl.value = this.label.text;
            if (this.editControl instanceof HTMLTextAreaElement) {
                this.editControl.selectionStart = 0;
                this.editControl.selectionEnd = 0;
                this.editControl.scrollTop = 0;
                this.editControl.scrollLeft = 0;
            }
            else {
                this.editControl.setSelectionRange(0, this.editControl.value.length);
            }
        }
    };
    EditLabelUI.prototype.applyFontStyling = function () {
        if (this.label) {
            this.labelElement = document.getElementById(this.domHelper.createUniqueDOMElementId(this.label));
            if (this.labelElement) {
                this.labelElement.style.visibility = 'hidden';
                var style = window.getComputedStyle(this.labelElement);
                this.editControl.style.font = style.font;
                this.editControl.style.fontStyle = style.fontStyle;
                this.editControl.style.fontFamily = style.fontFamily;
                this.editControl.style.fontSize = scaledFont(style.fontSize, zoom_1.getZoom(this.label));
                this.editControl.style.fontWeight = style.fontWeight;
                this.editControl.style.lineHeight = style.lineHeight;
            }
        }
    };
    var EditLabelUI_1;
    EditLabelUI.ID = "editLabelUi";
    __decorate([
        inversify_1.inject(types_1.TYPES.IActionDispatcherProvider),
        __metadata("design:type", Function)
    ], EditLabelUI.prototype, "actionDispatcherProvider", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], EditLabelUI.prototype, "viewerOptions", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.DOMHelper),
        __metadata("design:type", dom_helper_1.DOMHelper)
    ], EditLabelUI.prototype, "domHelper", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.IEditLabelValidator), inversify_1.optional(),
        __metadata("design:type", Object)
    ], EditLabelUI.prototype, "labelValidator", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.IEditLabelValidationDecorator), inversify_1.optional(),
        __metadata("design:type", Object)
    ], EditLabelUI.prototype, "validationDecorator", void 0);
    EditLabelUI = EditLabelUI_1 = __decorate([
        inversify_1.injectable()
    ], EditLabelUI);
    return EditLabelUI;
}(ui_extension_1.AbstractUIExtension));
exports.EditLabelUI = EditLabelUI;
function hasEditableLabel(contextElementIds, root) {
    return getEditableLabels(contextElementIds, root).length === 1;
}
function getEditableLabels(contextElementIds, root) {
    return contextElementIds.map(function (id) { return root.index.getById(id); }).filter(model_2.isEditableLabel);
}
function scaledFont(font, zoom) {
    return font.replace(/([0-9]+)/, function (match) {
        return String(Number.parseInt(match, 10) * zoom);
    });
}


/***/ }),

/***/ "../node_modules/sprotty/lib/features/edit/edit-label.js":
/*!***************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/edit/edit-label.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var action_1 = __webpack_require__(/*! ../../base/actions/action */ "../node_modules/sprotty/lib/base/actions/action.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../node_modules/sprotty/lib/base/commands/command.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../node_modules/sprotty/lib/base/views/mouse-tool.js");
var key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "../node_modules/sprotty/lib/base/views/key-tool.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../node_modules/sprotty/lib/utils/keyboard.js");
var model_1 = __webpack_require__(/*! ../select/model */ "../node_modules/sprotty/lib/features/select/model.js");
var iterable_1 = __webpack_require__(/*! ../../utils/iterable */ "../node_modules/sprotty/lib/utils/iterable.js");
var model_2 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/edit/model.js");
var EditLabelAction = /** @class */ (function () {
    function EditLabelAction(labelId) {
        this.labelId = labelId;
        this.kind = EditLabelAction.KIND;
    }
    EditLabelAction.KIND = 'EditLabel';
    return EditLabelAction;
}());
exports.EditLabelAction = EditLabelAction;
function isEditLabelAction(element) {
    return action_1.isAction(element) && element.kind === EditLabelAction.KIND && 'labelId' in element;
}
exports.isEditLabelAction = isEditLabelAction;
var ApplyLabelEditAction = /** @class */ (function () {
    function ApplyLabelEditAction(labelId, text) {
        this.labelId = labelId;
        this.text = text;
        this.kind = ApplyLabelEditAction.KIND;
    }
    ApplyLabelEditAction.KIND = 'applyLabelEdit';
    return ApplyLabelEditAction;
}());
exports.ApplyLabelEditAction = ApplyLabelEditAction;
var ResolvedLabelEdit = /** @class */ (function () {
    function ResolvedLabelEdit() {
    }
    return ResolvedLabelEdit;
}());
exports.ResolvedLabelEdit = ResolvedLabelEdit;
var ApplyLabelEditCommand = /** @class */ (function (_super) {
    __extends(ApplyLabelEditCommand, _super);
    function ApplyLabelEditCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    ApplyLabelEditCommand.prototype.execute = function (context) {
        var index = context.root.index;
        var label = index.getById(this.action.labelId);
        if (label && model_2.isEditableLabel(label)) {
            this.resolvedLabelEdit = { label: label, oldLabel: label.text, newLabel: this.action.text };
            label.text = this.action.text;
        }
        return context.root;
    };
    ApplyLabelEditCommand.prototype.undo = function (context) {
        if (this.resolvedLabelEdit) {
            this.resolvedLabelEdit.label.text = this.resolvedLabelEdit.oldLabel;
        }
        return context.root;
    };
    ApplyLabelEditCommand.prototype.redo = function (context) {
        if (this.resolvedLabelEdit) {
            this.resolvedLabelEdit.label.text = this.resolvedLabelEdit.newLabel;
        }
        return context.root;
    };
    ApplyLabelEditCommand.KIND = ApplyLabelEditAction.KIND;
    ApplyLabelEditCommand = __decorate([
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [ApplyLabelEditAction])
    ], ApplyLabelEditCommand);
    return ApplyLabelEditCommand;
}(command_1.Command));
exports.ApplyLabelEditCommand = ApplyLabelEditCommand;
var EditLabelMouseListener = /** @class */ (function (_super) {
    __extends(EditLabelMouseListener, _super);
    function EditLabelMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EditLabelMouseListener.prototype.doubleClick = function (target, event) {
        var editableLabel = getEditableLabel(target);
        if (editableLabel) {
            return [new EditLabelAction(editableLabel.id)];
        }
        return [];
    };
    return EditLabelMouseListener;
}(mouse_tool_1.MouseListener));
exports.EditLabelMouseListener = EditLabelMouseListener;
var EditLabelKeyListener = /** @class */ (function (_super) {
    __extends(EditLabelKeyListener, _super);
    function EditLabelKeyListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EditLabelKeyListener.prototype.keyDown = function (element, event) {
        if (keyboard_1.matchesKeystroke(event, 'F2')) {
            var editableLabels = iterable_1.toArray(element.index.all()
                .filter(function (e) { return model_1.isSelectable(e) && e.selected; })).map(getEditableLabel)
                .filter(function (e) { return e !== undefined; });
            if (editableLabels.length === 1) {
                return [new EditLabelAction(editableLabels[0].id)];
            }
        }
        return [];
    };
    return EditLabelKeyListener;
}(key_tool_1.KeyListener));
exports.EditLabelKeyListener = EditLabelKeyListener;
function getEditableLabel(element) {
    if (model_2.isEditableLabel(element)) {
        return element;
    }
    else if (model_2.isWithEditableLabel(element) && element.editableLabel) {
        return element.editableLabel;
    }
    return undefined;
}
exports.getEditableLabel = getEditableLabel;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/edit/edit-routing.js":
/*!*****************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/edit/edit-routing.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../node_modules/sprotty/lib/base/commands/command.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var model_1 = __webpack_require__(/*! ../routing/model */ "../node_modules/sprotty/lib/features/routing/model.js");
var routing_1 = __webpack_require__(/*! ../routing/routing */ "../node_modules/sprotty/lib/features/routing/routing.js");
var model_2 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/edit/model.js");
var SwitchEditModeAction = /** @class */ (function () {
    function SwitchEditModeAction(elementsToActivate, elementsToDeactivate) {
        if (elementsToActivate === void 0) { elementsToActivate = []; }
        if (elementsToDeactivate === void 0) { elementsToDeactivate = []; }
        this.elementsToActivate = elementsToActivate;
        this.elementsToDeactivate = elementsToDeactivate;
        this.kind = SwitchEditModeAction.KIND;
    }
    SwitchEditModeAction.KIND = "switchEditMode";
    return SwitchEditModeAction;
}());
exports.SwitchEditModeAction = SwitchEditModeAction;
var SwitchEditModeCommand = /** @class */ (function (_super) {
    __extends(SwitchEditModeCommand, _super);
    function SwitchEditModeCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.elementsToActivate = [];
        _this.elementsToDeactivate = [];
        _this.handlesToRemove = [];
        return _this;
    }
    SwitchEditModeCommand.prototype.execute = function (context) {
        var _this = this;
        var index = context.root.index;
        this.action.elementsToActivate.forEach(function (id) {
            var element = index.getById(id);
            if (element !== undefined)
                _this.elementsToActivate.push(element);
        });
        this.action.elementsToDeactivate.forEach(function (id) {
            var element = index.getById(id);
            if (element !== undefined)
                _this.elementsToDeactivate.push(element);
            if (element instanceof model_1.SRoutingHandle && element.parent instanceof model_1.SRoutableElement) {
                var parent_1 = element.parent;
                if (_this.shouldRemoveHandle(element, parent_1)) {
                    _this.handlesToRemove.push({ handle: element, parent: parent_1 });
                    _this.elementsToDeactivate.push(parent_1);
                    _this.elementsToActivate.push(parent_1);
                }
            }
        });
        return this.doExecute(context);
    };
    SwitchEditModeCommand.prototype.doExecute = function (context) {
        var _this = this;
        this.handlesToRemove.forEach(function (entry) {
            entry.point = entry.parent.routingPoints.splice(entry.handle.pointIndex, 1)[0];
        });
        this.elementsToDeactivate.forEach(function (element) {
            if (element instanceof model_1.SRoutableElement)
                element.removeAll(function (child) { return child instanceof model_1.SRoutingHandle; });
            else if (element instanceof model_1.SRoutingHandle) {
                element.editMode = false;
                if (element.danglingAnchor) {
                    if (element.parent instanceof model_1.SRoutableElement && element.danglingAnchor.original) {
                        if (element.parent.source === element.danglingAnchor)
                            element.parent.sourceId = element.danglingAnchor.original.id;
                        else if (element.parent.target === element.danglingAnchor)
                            element.parent.targetId = element.danglingAnchor.original.id;
                        element.danglingAnchor.parent.remove(element.danglingAnchor);
                        element.danglingAnchor = undefined;
                    }
                }
            }
        });
        this.elementsToActivate.forEach(function (element) {
            if (model_2.canEditRouting(element) && element instanceof smodel_1.SParentElement) {
                var router = _this.edgeRouterRegistry.get(element.routerKind);
                router.createRoutingHandles(element);
            }
            else if (element instanceof model_1.SRoutingHandle)
                element.editMode = true;
        });
        return context.root;
    };
    SwitchEditModeCommand.prototype.shouldRemoveHandle = function (handle, parent) {
        if (handle.kind === 'junction') {
            var router = this.edgeRouterRegistry.get(parent.routerKind);
            var route = router.route(parent);
            return route.find(function (rp) { return rp.pointIndex === handle.pointIndex; }) === undefined;
        }
        return false;
    };
    SwitchEditModeCommand.prototype.undo = function (context) {
        var _this = this;
        this.handlesToRemove.forEach(function (entry) {
            if (entry.point !== undefined)
                entry.parent.routingPoints.splice(entry.handle.pointIndex, 0, entry.point);
        });
        this.elementsToActivate.forEach(function (element) {
            if (element instanceof model_1.SRoutableElement)
                element.removeAll(function (child) { return child instanceof model_1.SRoutingHandle; });
            else if (element instanceof model_1.SRoutingHandle)
                element.editMode = false;
        });
        this.elementsToDeactivate.forEach(function (element) {
            if (model_2.canEditRouting(element)) {
                var router = _this.edgeRouterRegistry.get(element.routerKind);
                router.createRoutingHandles(element);
            }
            else if (element instanceof model_1.SRoutingHandle)
                element.editMode = true;
        });
        return context.root;
    };
    SwitchEditModeCommand.prototype.redo = function (context) {
        return this.doExecute(context);
    };
    SwitchEditModeCommand.KIND = SwitchEditModeAction.KIND;
    __decorate([
        inversify_1.inject(routing_1.EdgeRouterRegistry),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], SwitchEditModeCommand.prototype, "edgeRouterRegistry", void 0);
    SwitchEditModeCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [SwitchEditModeAction])
    ], SwitchEditModeCommand);
    return SwitchEditModeCommand;
}(command_1.Command));
exports.SwitchEditModeCommand = SwitchEditModeCommand;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/edit/model.js":
/*!**********************************************************!*\
  !*** ../node_modules/sprotty/lib/features/edit/model.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var model_1 = __webpack_require__(/*! ../routing/model */ "../node_modules/sprotty/lib/features/routing/model.js");
exports.editFeature = Symbol('editFeature');
function canEditRouting(element) {
    return element instanceof model_1.SRoutableElement && element.hasFeature(exports.editFeature);
}
exports.canEditRouting = canEditRouting;
exports.editLabelFeature = Symbol('editLabelFeature');
function isEditableLabel(element) {
    return 'text' in element && element.hasFeature(exports.editLabelFeature);
}
exports.isEditableLabel = isEditableLabel;
exports.withEditLabelFeature = Symbol('withEditLabelFeature');
function isWithEditableLabel(element) {
    return 'editableLabel' in element && element.hasFeature(exports.withEditLabelFeature);
}
exports.isWithEditableLabel = isWithEditableLabel;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/edit/reconnect.js":
/*!**************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/edit/reconnect.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../node_modules/sprotty/lib/base/commands/command.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var model_1 = __webpack_require__(/*! ../routing/model */ "../node_modules/sprotty/lib/features/routing/model.js");
var routing_1 = __webpack_require__(/*! ../routing/routing */ "../node_modules/sprotty/lib/features/routing/routing.js");
var ReconnectAction = /** @class */ (function () {
    function ReconnectAction(routableId, newSourceId, newTargetId) {
        this.routableId = routableId;
        this.newSourceId = newSourceId;
        this.newTargetId = newTargetId;
        this.kind = ReconnectAction.KIND;
    }
    ReconnectAction.KIND = 'reconnect';
    return ReconnectAction;
}());
exports.ReconnectAction = ReconnectAction;
var ReconnectCommand = /** @class */ (function (_super) {
    __extends(ReconnectCommand, _super);
    function ReconnectCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    ReconnectCommand.prototype.execute = function (context) {
        this.doExecute(context);
        return context.root;
    };
    ReconnectCommand.prototype.doExecute = function (context) {
        var index = context.root.index;
        var edge = index.getById(this.action.routableId);
        if (edge instanceof model_1.SRoutableElement) {
            var router = this.edgeRouterRegistry.get(edge.routerKind);
            var before = router.takeSnapshot(edge);
            router.applyReconnect(edge, this.action.newSourceId, this.action.newTargetId);
            var after = router.takeSnapshot(edge);
            this.memento = {
                edge: edge,
                before: before,
                after: after
            };
        }
    };
    ReconnectCommand.prototype.undo = function (context) {
        if (this.memento) {
            var router = this.edgeRouterRegistry.get(this.memento.edge.routerKind);
            router.applySnapshot(this.memento.edge, this.memento.before);
        }
        return context.root;
    };
    ReconnectCommand.prototype.redo = function (context) {
        if (this.memento) {
            var router = this.edgeRouterRegistry.get(this.memento.edge.routerKind);
            router.applySnapshot(this.memento.edge, this.memento.after);
        }
        return context.root;
    };
    ReconnectCommand.KIND = ReconnectAction.KIND;
    __decorate([
        inversify_1.inject(routing_1.EdgeRouterRegistry),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], ReconnectCommand.prototype, "edgeRouterRegistry", void 0);
    ReconnectCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [ReconnectAction])
    ], ReconnectCommand);
    return ReconnectCommand;
}(command_1.Command));
exports.ReconnectCommand = ReconnectCommand;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/expand/di.config.js":
/*!****************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/expand/di.config.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var expand_1 = __webpack_require__(/*! ./expand */ "../node_modules/sprotty/lib/features/expand/expand.js");
var expandModule = new inversify_1.ContainerModule(function (bind) {
    bind(types_1.TYPES.IButtonHandler).toConstructor(expand_1.ExpandButtonHandler);
});
exports.default = expandModule;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/expand/expand.js":
/*!*************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/expand/expand.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../node_modules/sprotty/lib/base/model/smodel-utils.js");
var model_1 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/expand/model.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
/**
 * Sent from the client to the model source to recalculate a diagram when elements
 * are collapsed/expanded by the client.
 */
var CollapseExpandAction = /** @class */ (function () {
    function CollapseExpandAction(expandIds, collapseIds) {
        this.expandIds = expandIds;
        this.collapseIds = collapseIds;
        this.kind = CollapseExpandAction.KIND;
    }
    CollapseExpandAction.KIND = 'collapseExpand';
    return CollapseExpandAction;
}());
exports.CollapseExpandAction = CollapseExpandAction;
/**
 * Programmatic action for expanding or collapsing all elements.
 */
var CollapseExpandAllAction = /** @class */ (function () {
    /**
     * If `expand` is true, all elements are expanded, othewise they are collapsed.
     */
    function CollapseExpandAllAction(expand) {
        if (expand === void 0) { expand = true; }
        this.expand = expand;
        this.kind = CollapseExpandAllAction.KIND;
    }
    CollapseExpandAllAction.KIND = 'collapseExpandAll';
    return CollapseExpandAllAction;
}());
exports.CollapseExpandAllAction = CollapseExpandAllAction;
var ExpandButtonHandler = /** @class */ (function () {
    function ExpandButtonHandler() {
    }
    ExpandButtonHandler.prototype.buttonPressed = function (button) {
        var expandable = smodel_utils_1.findParentByFeature(button, model_1.isExpandable);
        if (expandable !== undefined) {
            return [new CollapseExpandAction(expandable.expanded ? [] : [expandable.id], expandable.expanded ? [expandable.id] : [])];
        }
        else {
            return [];
        }
    };
    ExpandButtonHandler.TYPE = 'button:expand';
    ExpandButtonHandler = __decorate([
        inversify_1.injectable()
    ], ExpandButtonHandler);
    return ExpandButtonHandler;
}());
exports.ExpandButtonHandler = ExpandButtonHandler;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/expand/model.js":
/*!************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/expand/model.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.expandFeature = Symbol('expandFeature');
function isExpandable(element) {
    return element.hasFeature(exports.expandFeature) && 'expanded' in element;
}
exports.isExpandable = isExpandable;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/expand/views.js":
/*!************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/expand/views.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsx svg */
var snabbdom_jsx_1 = __webpack_require__(/*! snabbdom-jsx */ "../node_modules/snabbdom-jsx/snabbdom-jsx.js");
var model_1 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/expand/model.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../node_modules/sprotty/lib/base/model/smodel-utils.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var ExpandButtonView = /** @class */ (function () {
    function ExpandButtonView() {
    }
    ExpandButtonView.prototype.render = function (button, context) {
        var expandable = smodel_utils_1.findParentByFeature(button, model_1.isExpandable);
        var path = (expandable !== undefined && expandable.expanded)
            ? 'M 1,5 L 8,12 L 15,5 Z'
            : 'M 1,8 L 8,15 L 8,1 Z';
        return snabbdom_jsx_1.svg("g", { "class-sprotty-button": "{true}", "class-enabled": "{button.enabled}" },
            snabbdom_jsx_1.svg("rect", { x: 0, y: 0, width: 16, height: 16, opacity: 0 }),
            snabbdom_jsx_1.svg("path", { d: path }));
    };
    ExpandButtonView = __decorate([
        inversify_1.injectable()
    ], ExpandButtonView);
    return ExpandButtonView;
}());
exports.ExpandButtonView = ExpandButtonView;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/export/di.config.js":
/*!****************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/export/di.config.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var export_1 = __webpack_require__(/*! ./export */ "../node_modules/sprotty/lib/features/export/export.js");
var svg_exporter_1 = __webpack_require__(/*! ./svg-exporter */ "../node_modules/sprotty/lib/features/export/svg-exporter.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../node_modules/sprotty/lib/base/commands/command-registration.js");
var exportSvgModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(types_1.TYPES.KeyListener).to(export_1.ExportSvgKeyListener).inSingletonScope();
    bind(types_1.TYPES.HiddenVNodePostprocessor).to(export_1.ExportSvgPostprocessor).inSingletonScope();
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, export_1.ExportSvgCommand);
    bind(types_1.TYPES.SvgExporter).to(svg_exporter_1.SvgExporter).inSingletonScope();
});
exports.default = exportSvgModule;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/export/export.js":
/*!*************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/export/export.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../node_modules/sprotty/lib/base/commands/command.js");
var model_1 = __webpack_require__(/*! ../select/model */ "../node_modules/sprotty/lib/features/select/model.js");
var action_1 = __webpack_require__(/*! ../../base/actions/action */ "../node_modules/sprotty/lib/base/actions/action.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "../node_modules/sprotty/lib/base/views/key-tool.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../node_modules/sprotty/lib/utils/keyboard.js");
var model_2 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/export/model.js");
var svg_exporter_1 = __webpack_require__(/*! ./svg-exporter */ "../node_modules/sprotty/lib/features/export/svg-exporter.js");
var model_3 = __webpack_require__(/*! ../viewport/model */ "../node_modules/sprotty/lib/features/viewport/model.js");
var model_4 = __webpack_require__(/*! ../hover/model */ "../node_modules/sprotty/lib/features/hover/model.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var ExportSvgKeyListener = /** @class */ (function (_super) {
    __extends(ExportSvgKeyListener, _super);
    function ExportSvgKeyListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ExportSvgKeyListener.prototype.keyDown = function (element, event) {
        if (keyboard_1.matchesKeystroke(event, 'KeyE', 'ctrlCmd', 'shift'))
            return [new RequestExportSvgAction()];
        else
            return [];
    };
    ExportSvgKeyListener = __decorate([
        inversify_1.injectable()
    ], ExportSvgKeyListener);
    return ExportSvgKeyListener;
}(key_tool_1.KeyListener));
exports.ExportSvgKeyListener = ExportSvgKeyListener;
var RequestExportSvgAction = /** @class */ (function () {
    function RequestExportSvgAction(requestId) {
        if (requestId === void 0) { requestId = ''; }
        this.requestId = requestId;
        this.kind = RequestExportSvgAction.KIND;
    }
    /** Factory function to dispatch a request with the `IActionDispatcher` */
    RequestExportSvgAction.create = function () {
        return new RequestExportSvgAction(action_1.generateRequestId());
    };
    RequestExportSvgAction.KIND = 'requestExportSvg';
    return RequestExportSvgAction;
}());
exports.RequestExportSvgAction = RequestExportSvgAction;
var ExportSvgCommand = /** @class */ (function (_super) {
    __extends(ExportSvgCommand, _super);
    function ExportSvgCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    ExportSvgCommand.prototype.execute = function (context) {
        if (model_2.isExportable(context.root)) {
            var root = context.modelFactory.createRoot(context.root);
            if (model_2.isExportable(root)) {
                if (model_3.isViewport(root)) {
                    root.zoom = 1;
                    root.scroll = { x: 0, y: 0 };
                }
                root.index.all().forEach(function (element) {
                    if (model_1.isSelectable(element) && element.selected)
                        element.selected = false;
                    if (model_4.isHoverable(element) && element.hoverFeedback)
                        element.hoverFeedback = false;
                });
                return {
                    model: root,
                    modelChanged: true,
                    cause: this.action
                };
            }
        }
        return {
            model: context.root,
            modelChanged: false
        };
    };
    ExportSvgCommand.KIND = RequestExportSvgAction.KIND;
    ExportSvgCommand = __decorate([
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [RequestExportSvgAction])
    ], ExportSvgCommand);
    return ExportSvgCommand;
}(command_1.HiddenCommand));
exports.ExportSvgCommand = ExportSvgCommand;
var ExportSvgPostprocessor = /** @class */ (function () {
    function ExportSvgPostprocessor() {
    }
    ExportSvgPostprocessor.prototype.decorate = function (vnode, element) {
        if (element instanceof smodel_1.SModelRoot)
            this.root = element;
        return vnode;
    };
    ExportSvgPostprocessor.prototype.postUpdate = function (cause) {
        if (this.root && cause !== undefined && cause.kind === RequestExportSvgAction.KIND) {
            this.svgExporter.export(this.root, cause);
        }
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.SvgExporter),
        __metadata("design:type", svg_exporter_1.SvgExporter)
    ], ExportSvgPostprocessor.prototype, "svgExporter", void 0);
    ExportSvgPostprocessor = __decorate([
        inversify_1.injectable()
    ], ExportSvgPostprocessor);
    return ExportSvgPostprocessor;
}());
exports.ExportSvgPostprocessor = ExportSvgPostprocessor;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/export/model.js":
/*!************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/export/model.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.exportFeature = Symbol('exportFeature');
function isExportable(element) {
    return element.hasFeature(exports.exportFeature);
}
exports.isExportable = isExportable;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/export/svg-exporter.js":
/*!*******************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/export/svg-exporter.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var model_1 = __webpack_require__(/*! ../bounds/model */ "../node_modules/sprotty/lib/features/bounds/model.js");
var action_dispatcher_1 = __webpack_require__(/*! ../../base/actions/action-dispatcher */ "../node_modules/sprotty/lib/base/actions/action-dispatcher.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var ExportSvgAction = /** @class */ (function () {
    function ExportSvgAction(svg, responseId) {
        if (responseId === void 0) { responseId = ''; }
        this.svg = svg;
        this.responseId = responseId;
        this.kind = ExportSvgAction.KIND;
    }
    ExportSvgAction.KIND = 'exportSvg';
    return ExportSvgAction;
}());
exports.ExportSvgAction = ExportSvgAction;
var SvgExporter = /** @class */ (function () {
    function SvgExporter() {
    }
    SvgExporter.prototype.export = function (root, request) {
        if (typeof document !== 'undefined') {
            var div = document.getElementById(this.options.hiddenDiv);
            if (div !== null && div.firstElementChild && div.firstElementChild.tagName === 'svg') {
                var svgElement = div.firstElementChild;
                var svg = this.createSvg(svgElement, root);
                this.actionDispatcher.dispatch(new ExportSvgAction(svg, request ? request.requestId : ''));
            }
        }
    };
    SvgExporter.prototype.createSvg = function (svgElementOrig, root) {
        var serializer = new XMLSerializer();
        var svgCopy = serializer.serializeToString(svgElementOrig);
        var iframe = document.createElement('iframe');
        document.body.appendChild(iframe);
        if (!iframe.contentWindow)
            throw new Error('IFrame has no contentWindow');
        var docCopy = iframe.contentWindow.document;
        docCopy.open();
        docCopy.write(svgCopy);
        docCopy.close();
        var svgElementNew = docCopy.getElementById(svgElementOrig.id);
        svgElementNew.removeAttribute('opacity');
        this.copyStyles(svgElementOrig, svgElementNew, ['width', 'height', 'opacity']);
        svgElementNew.setAttribute('version', '1.1');
        var bounds = this.getBounds(root);
        svgElementNew.setAttribute('viewBox', bounds.x + " " + bounds.y + " " + bounds.width + " " + bounds.height);
        var svgCode = serializer.serializeToString(svgElementNew);
        document.body.removeChild(iframe);
        return svgCode;
    };
    SvgExporter.prototype.copyStyles = function (source, target, skipedProperties) {
        var sourceStyle = getComputedStyle(source);
        var targetStyle = getComputedStyle(target);
        var diffStyle = '';
        for (var i = 0; i < sourceStyle.length; i++) {
            var key = sourceStyle[i];
            if (skipedProperties.indexOf(key) === -1) {
                var value = sourceStyle.getPropertyValue(key);
                if (targetStyle.getPropertyValue(key) !== value) {
                    diffStyle += key + ":" + value + ";";
                }
            }
        }
        if (diffStyle !== '')
            target.setAttribute('style', diffStyle);
        // IE doesn't retrun anything on source.children
        for (var i = 0; i < source.childNodes.length; ++i) {
            var sourceChild = source.childNodes[i];
            var targetChild = target.childNodes[i];
            if (sourceChild instanceof Element)
                this.copyStyles(sourceChild, targetChild, []);
        }
    };
    SvgExporter.prototype.getBounds = function (root) {
        var allBounds = [geometry_1.EMPTY_BOUNDS];
        root.children.forEach(function (element) {
            if (model_1.isBoundsAware(element)) {
                allBounds.push(element.bounds);
            }
        });
        return allBounds.reduce(function (one, two) { return geometry_1.combine(one, two); });
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], SvgExporter.prototype, "options", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", action_dispatcher_1.ActionDispatcher)
    ], SvgExporter.prototype, "actionDispatcher", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], SvgExporter.prototype, "log", void 0);
    SvgExporter = __decorate([
        inversify_1.injectable()
    ], SvgExporter);
    return SvgExporter;
}());
exports.SvgExporter = SvgExporter;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/fade/di.config.js":
/*!**************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/fade/di.config.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var fade_1 = __webpack_require__(/*! ./fade */ "../node_modules/sprotty/lib/features/fade/fade.js");
var fadeModule = new inversify_1.ContainerModule(function (bind) {
    bind(types_1.TYPES.IVNodePostprocessor).to(fade_1.ElementFader).inSingletonScope();
});
exports.default = fadeModule;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/fade/fade.js":
/*!*********************************************************!*\
  !*** ../node_modules/sprotty/lib/features/fade/fade.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var animation_1 = __webpack_require__(/*! ../../base/animations/animation */ "../node_modules/sprotty/lib/base/animations/animation.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "../node_modules/sprotty/lib/base/views/vnode-utils.js");
var model_1 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/fade/model.js");
var FadeAnimation = /** @class */ (function (_super) {
    __extends(FadeAnimation, _super);
    function FadeAnimation(model, elementFades, context, removeAfterFadeOut) {
        if (removeAfterFadeOut === void 0) { removeAfterFadeOut = false; }
        var _this = _super.call(this, context) || this;
        _this.model = model;
        _this.elementFades = elementFades;
        _this.removeAfterFadeOut = removeAfterFadeOut;
        return _this;
    }
    FadeAnimation.prototype.tween = function (t, context) {
        for (var _i = 0, _a = this.elementFades; _i < _a.length; _i++) {
            var elementFade = _a[_i];
            var element = elementFade.element;
            if (elementFade.type === 'in') {
                element.opacity = t;
            }
            else if (elementFade.type === 'out') {
                element.opacity = 1 - t;
                if (t === 1 && this.removeAfterFadeOut && element instanceof smodel_1.SChildElement) {
                    element.parent.remove(element);
                }
            }
        }
        return this.model;
    };
    return FadeAnimation;
}(animation_1.Animation));
exports.FadeAnimation = FadeAnimation;
var ElementFader = /** @class */ (function () {
    function ElementFader() {
    }
    ElementFader.prototype.decorate = function (vnode, element) {
        if (model_1.isFadeable(element)) {
            vnode_utils_1.setAttr(vnode, 'opacity', element.opacity);
        }
        return vnode;
    };
    ElementFader.prototype.postUpdate = function () {
    };
    ElementFader = __decorate([
        inversify_1.injectable()
    ], ElementFader);
    return ElementFader;
}());
exports.ElementFader = ElementFader;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/fade/model.js":
/*!**********************************************************!*\
  !*** ../node_modules/sprotty/lib/features/fade/model.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.fadeFeature = Symbol('fadeFeature');
function isFadeable(element) {
    return element.hasFeature(exports.fadeFeature) && element['opacity'] !== undefined;
}
exports.isFadeable = isFadeable;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/hover/di.config.js":
/*!***************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/hover/di.config.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var hover_1 = __webpack_require__(/*! ./hover */ "../node_modules/sprotty/lib/features/hover/hover.js");
var popup_position_updater_1 = __webpack_require__(/*! ./popup-position-updater */ "../node_modules/sprotty/lib/features/hover/popup-position-updater.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../node_modules/sprotty/lib/base/commands/command-registration.js");
var action_handler_1 = __webpack_require__(/*! ../../base/actions/action-handler */ "../node_modules/sprotty/lib/base/actions/action-handler.js");
var center_fit_1 = __webpack_require__(/*! ../viewport/center-fit */ "../node_modules/sprotty/lib/features/viewport/center-fit.js");
var viewport_1 = __webpack_require__(/*! ../viewport/viewport */ "../node_modules/sprotty/lib/features/viewport/viewport.js");
var move_1 = __webpack_require__(/*! ../move/move */ "../node_modules/sprotty/lib/features/move/move.js");
var hoverModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(types_1.TYPES.PopupVNodePostprocessor).to(popup_position_updater_1.PopupPositionUpdater).inSingletonScope();
    bind(types_1.TYPES.MouseListener).to(hover_1.HoverMouseListener);
    bind(types_1.TYPES.PopupMouseListener).to(hover_1.PopupHoverMouseListener);
    bind(types_1.TYPES.KeyListener).to(hover_1.HoverKeyListener);
    bind(types_1.TYPES.HoverState).toConstantValue({
        mouseOverTimer: undefined,
        mouseOutTimer: undefined,
        popupOpen: false,
        previousPopupElement: undefined
    });
    bind(hover_1.ClosePopupActionHandler).toSelf().inSingletonScope();
    var context = { bind: bind, isBound: isBound };
    command_registration_1.configureCommand(context, hover_1.HoverFeedbackCommand);
    command_registration_1.configureCommand(context, hover_1.SetPopupModelCommand);
    action_handler_1.configureActionHandler(context, hover_1.SetPopupModelCommand.KIND, hover_1.ClosePopupActionHandler);
    action_handler_1.configureActionHandler(context, center_fit_1.FitToScreenCommand.KIND, hover_1.ClosePopupActionHandler);
    action_handler_1.configureActionHandler(context, center_fit_1.CenterCommand.KIND, hover_1.ClosePopupActionHandler);
    action_handler_1.configureActionHandler(context, viewport_1.SetViewportCommand.KIND, hover_1.ClosePopupActionHandler);
    action_handler_1.configureActionHandler(context, move_1.MoveCommand.KIND, hover_1.ClosePopupActionHandler);
});
exports.default = hoverModule;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/hover/hover.js":
/*!***********************************************************!*\
  !*** ../node_modules/sprotty/lib/features/hover/hover.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../node_modules/sprotty/lib/utils/keyboard.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../node_modules/sprotty/lib/base/views/mouse-tool.js");
var action_1 = __webpack_require__(/*! ../../base/actions/action */ "../node_modules/sprotty/lib/base/actions/action.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../node_modules/sprotty/lib/base/commands/command.js");
var smodel_factory_1 = __webpack_require__(/*! ../../base/model/smodel-factory */ "../node_modules/sprotty/lib/base/model/smodel-factory.js");
var key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "../node_modules/sprotty/lib/base/views/key-tool.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../node_modules/sprotty/lib/base/model/smodel-utils.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "../node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/hover/model.js");
/**
 * Triggered when the user puts the mouse pointer over an element.
 */
var HoverFeedbackAction = /** @class */ (function () {
    function HoverFeedbackAction(mouseoverElement, mouseIsOver) {
        this.mouseoverElement = mouseoverElement;
        this.mouseIsOver = mouseIsOver;
        this.kind = HoverFeedbackAction.KIND;
    }
    HoverFeedbackAction.KIND = 'hoverFeedback';
    return HoverFeedbackAction;
}());
exports.HoverFeedbackAction = HoverFeedbackAction;
var HoverFeedbackCommand = /** @class */ (function (_super) {
    __extends(HoverFeedbackCommand, _super);
    function HoverFeedbackCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    HoverFeedbackCommand.prototype.execute = function (context) {
        var model = context.root;
        var modelElement = model.index.getById(this.action.mouseoverElement);
        if (modelElement) {
            if (model_2.isHoverable(modelElement)) {
                modelElement.hoverFeedback = this.action.mouseIsOver;
            }
        }
        return this.redo(context);
    };
    HoverFeedbackCommand.prototype.undo = function (context) {
        return context.root;
    };
    HoverFeedbackCommand.prototype.redo = function (context) {
        return context.root;
    };
    HoverFeedbackCommand.KIND = HoverFeedbackAction.KIND;
    HoverFeedbackCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [HoverFeedbackAction])
    ], HoverFeedbackCommand);
    return HoverFeedbackCommand;
}(command_1.SystemCommand));
exports.HoverFeedbackCommand = HoverFeedbackCommand;
/**
 * Triggered when the user hovers the mouse pointer over an element to get a popup with details on
 * that element. This action is sent from the client to the model source, e.g. a DiagramServer.
 * The response is a SetPopupModelAction.
 */
var RequestPopupModelAction = /** @class */ (function () {
    function RequestPopupModelAction(elementId, bounds, requestId) {
        if (requestId === void 0) { requestId = ''; }
        this.elementId = elementId;
        this.bounds = bounds;
        this.requestId = requestId;
        this.kind = RequestPopupModelAction.KIND;
    }
    /** Factory function to dispatch a request with the `IActionDispatcher` */
    RequestPopupModelAction.create = function (elementId, bounds) {
        return new RequestPopupModelAction(elementId, bounds, action_1.generateRequestId());
    };
    RequestPopupModelAction.KIND = 'requestPopupModel';
    return RequestPopupModelAction;
}());
exports.RequestPopupModelAction = RequestPopupModelAction;
/**
 * Sent from the model source to the client to display a popup in response to a RequestPopupModelAction.
 * This action can also be used to remove any existing popup by choosing EMPTY_ROOT as root element.
 */
var SetPopupModelAction = /** @class */ (function () {
    function SetPopupModelAction(newRoot, responseId) {
        if (responseId === void 0) { responseId = ''; }
        this.newRoot = newRoot;
        this.responseId = responseId;
        this.kind = SetPopupModelAction.KIND;
    }
    SetPopupModelAction.KIND = 'setPopupModel';
    return SetPopupModelAction;
}());
exports.SetPopupModelAction = SetPopupModelAction;
var SetPopupModelCommand = /** @class */ (function (_super) {
    __extends(SetPopupModelCommand, _super);
    function SetPopupModelCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    SetPopupModelCommand.prototype.execute = function (context) {
        this.oldRoot = context.root;
        this.newRoot = context.modelFactory.createRoot(this.action.newRoot);
        return this.newRoot;
    };
    SetPopupModelCommand.prototype.undo = function (context) {
        return this.oldRoot;
    };
    SetPopupModelCommand.prototype.redo = function (context) {
        return this.newRoot;
    };
    SetPopupModelCommand.KIND = SetPopupModelAction.KIND;
    SetPopupModelCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [SetPopupModelAction])
    ], SetPopupModelCommand);
    return SetPopupModelCommand;
}(command_1.PopupCommand));
exports.SetPopupModelCommand = SetPopupModelCommand;
var AbstractHoverMouseListener = /** @class */ (function (_super) {
    __extends(AbstractHoverMouseListener, _super);
    function AbstractHoverMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AbstractHoverMouseListener.prototype.mouseDown = function (target, event) {
        this.mouseIsDown = true;
        return [];
    };
    AbstractHoverMouseListener.prototype.mouseUp = function (target, event) {
        this.mouseIsDown = false;
        return [];
    };
    AbstractHoverMouseListener.prototype.stopMouseOutTimer = function () {
        if (this.state.mouseOutTimer !== undefined) {
            window.clearTimeout(this.state.mouseOutTimer);
            this.state.mouseOutTimer = undefined;
        }
    };
    AbstractHoverMouseListener.prototype.startMouseOutTimer = function () {
        var _this = this;
        this.stopMouseOutTimer();
        return new Promise(function (resolve) {
            _this.state.mouseOutTimer = window.setTimeout(function () {
                _this.state.popupOpen = false;
                _this.state.previousPopupElement = undefined;
                resolve(new SetPopupModelAction({ type: smodel_factory_1.EMPTY_ROOT.type, id: smodel_factory_1.EMPTY_ROOT.id }));
            }, _this.options.popupCloseDelay);
        });
    };
    AbstractHoverMouseListener.prototype.stopMouseOverTimer = function () {
        if (this.state.mouseOverTimer !== undefined) {
            window.clearTimeout(this.state.mouseOverTimer);
            this.state.mouseOverTimer = undefined;
        }
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], AbstractHoverMouseListener.prototype, "options", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.HoverState),
        __metadata("design:type", Object)
    ], AbstractHoverMouseListener.prototype, "state", void 0);
    return AbstractHoverMouseListener;
}(mouse_tool_1.MouseListener));
exports.AbstractHoverMouseListener = AbstractHoverMouseListener;
var HoverMouseListener = /** @class */ (function (_super) {
    __extends(HoverMouseListener, _super);
    function HoverMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HoverMouseListener.prototype.computePopupBounds = function (target, mousePosition) {
        // Default position: below the mouse cursor
        var offset = { x: -5, y: 20 };
        var targetBounds = model_1.getAbsoluteBounds(target);
        var canvasBounds = target.root.canvasBounds;
        var boundsInWindow = geometry_1.translate(targetBounds, canvasBounds);
        var distRight = boundsInWindow.x + boundsInWindow.width - mousePosition.x;
        var distBottom = boundsInWindow.y + boundsInWindow.height - mousePosition.y;
        if (distBottom <= distRight && this.allowSidePosition(target, 'below', distBottom)) {
            // Put the popup below the target element
            offset = { x: -5, y: Math.round(distBottom + 5) };
        }
        else if (distRight <= distBottom && this.allowSidePosition(target, 'right', distRight)) {
            // Put the popup right of the target element
            offset = { x: Math.round(distRight + 5), y: -5 };
        }
        var leftPopupPosition = mousePosition.x + offset.x;
        var canvasRightBorderPosition = canvasBounds.x + canvasBounds.width;
        if (leftPopupPosition > canvasRightBorderPosition) {
            leftPopupPosition = canvasRightBorderPosition;
        }
        var topPopupPosition = mousePosition.y + offset.y;
        var canvasBottomBorderPosition = canvasBounds.y + canvasBounds.height;
        if (topPopupPosition > canvasBottomBorderPosition) {
            topPopupPosition = canvasBottomBorderPosition;
        }
        return { x: leftPopupPosition, y: topPopupPosition, width: -1, height: -1 };
    };
    HoverMouseListener.prototype.allowSidePosition = function (target, side, distance) {
        return !(target instanceof smodel_1.SModelRoot) && distance <= 150;
    };
    HoverMouseListener.prototype.startMouseOverTimer = function (target, event) {
        var _this = this;
        this.stopMouseOverTimer();
        return new Promise(function (resolve) {
            _this.state.mouseOverTimer = window.setTimeout(function () {
                var popupBounds = _this.computePopupBounds(target, { x: event.pageX, y: event.pageY });
                resolve(new RequestPopupModelAction(target.id, popupBounds));
                _this.state.popupOpen = true;
                _this.state.previousPopupElement = target;
            }, _this.options.popupOpenDelay);
        });
    };
    HoverMouseListener.prototype.mouseOver = function (target, event) {
        var result = [];
        if (!this.mouseIsDown) {
            var popupTarget = smodel_utils_1.findParent(target, model_2.hasPopupFeature);
            if (this.state.popupOpen && (popupTarget === undefined ||
                this.state.previousPopupElement !== undefined && this.state.previousPopupElement.id !== popupTarget.id)) {
                result.push(this.startMouseOutTimer());
            }
            else {
                this.stopMouseOverTimer();
                this.stopMouseOutTimer();
            }
            if (popupTarget !== undefined &&
                (this.state.previousPopupElement === undefined || this.state.previousPopupElement.id !== popupTarget.id)) {
                result.push(this.startMouseOverTimer(popupTarget, event));
            }
            if (this.lastHoverFeedbackElementId) {
                result.push(new HoverFeedbackAction(this.lastHoverFeedbackElementId, false));
                this.lastHoverFeedbackElementId = undefined;
            }
            var hoverTarget = smodel_utils_1.findParentByFeature(target, model_2.isHoverable);
            if (hoverTarget !== undefined) {
                result.push(new HoverFeedbackAction(hoverTarget.id, true));
                this.lastHoverFeedbackElementId = hoverTarget.id;
            }
        }
        return result;
    };
    HoverMouseListener.prototype.mouseOut = function (target, event) {
        var result = [];
        if (!this.mouseIsDown) {
            var elementUnderMouse = document.elementFromPoint(event.x, event.y);
            if (!this.isSprottyPopup(elementUnderMouse)) {
                if (this.state.popupOpen) {
                    var popupTarget = smodel_utils_1.findParent(target, model_2.hasPopupFeature);
                    if (this.state.previousPopupElement !== undefined && popupTarget !== undefined
                        && this.state.previousPopupElement.id === popupTarget.id)
                        result.push(this.startMouseOutTimer());
                }
                this.stopMouseOverTimer();
                var hoverTarget = smodel_utils_1.findParentByFeature(target, model_2.isHoverable);
                if (hoverTarget !== undefined) {
                    result.push(new HoverFeedbackAction(hoverTarget.id, false));
                    this.lastHoverFeedbackElementId = undefined;
                }
            }
        }
        return result;
    };
    HoverMouseListener.prototype.isSprottyPopup = function (element) {
        return element
            ? (element.id === this.options.popupDiv
                || (!!element.parentElement && this.isSprottyPopup(element.parentElement)))
            : false;
    };
    HoverMouseListener.prototype.mouseMove = function (target, event) {
        var result = [];
        if (!this.mouseIsDown) {
            if (this.state.previousPopupElement !== undefined && this.closeOnMouseMove(this.state.previousPopupElement, event)) {
                result.push(this.startMouseOutTimer());
            }
            var popupTarget = smodel_utils_1.findParent(target, model_2.hasPopupFeature);
            if (popupTarget !== undefined && (this.state.previousPopupElement === undefined
                || this.state.previousPopupElement.id !== popupTarget.id)) {
                result.push(this.startMouseOverTimer(popupTarget, event));
            }
        }
        return result;
    };
    HoverMouseListener.prototype.closeOnMouseMove = function (target, event) {
        return target instanceof smodel_1.SModelRoot;
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], HoverMouseListener.prototype, "options", void 0);
    HoverMouseListener = __decorate([
        inversify_1.injectable()
    ], HoverMouseListener);
    return HoverMouseListener;
}(AbstractHoverMouseListener));
exports.HoverMouseListener = HoverMouseListener;
var PopupHoverMouseListener = /** @class */ (function (_super) {
    __extends(PopupHoverMouseListener, _super);
    function PopupHoverMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PopupHoverMouseListener.prototype.mouseOut = function (target, event) {
        return [this.startMouseOutTimer()];
    };
    PopupHoverMouseListener.prototype.mouseOver = function (target, event) {
        this.stopMouseOutTimer();
        this.stopMouseOverTimer();
        return [];
    };
    PopupHoverMouseListener = __decorate([
        inversify_1.injectable()
    ], PopupHoverMouseListener);
    return PopupHoverMouseListener;
}(AbstractHoverMouseListener));
exports.PopupHoverMouseListener = PopupHoverMouseListener;
var HoverKeyListener = /** @class */ (function (_super) {
    __extends(HoverKeyListener, _super);
    function HoverKeyListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HoverKeyListener.prototype.keyDown = function (element, event) {
        if (keyboard_1.matchesKeystroke(event, 'Escape')) {
            return [new SetPopupModelAction({ type: smodel_factory_1.EMPTY_ROOT.type, id: smodel_factory_1.EMPTY_ROOT.id })];
        }
        return [];
    };
    return HoverKeyListener;
}(key_tool_1.KeyListener));
exports.HoverKeyListener = HoverKeyListener;
var ClosePopupActionHandler = /** @class */ (function () {
    function ClosePopupActionHandler() {
        this.popupOpen = false;
    }
    ClosePopupActionHandler.prototype.handle = function (action) {
        if (action.kind === SetPopupModelCommand.KIND) {
            this.popupOpen = action.newRoot.type !== smodel_factory_1.EMPTY_ROOT.type;
        }
        else if (this.popupOpen) {
            return new SetPopupModelAction({ id: smodel_factory_1.EMPTY_ROOT.id, type: smodel_factory_1.EMPTY_ROOT.type });
        }
    };
    ClosePopupActionHandler = __decorate([
        inversify_1.injectable()
    ], ClosePopupActionHandler);
    return ClosePopupActionHandler;
}());
exports.ClosePopupActionHandler = ClosePopupActionHandler;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/hover/model.js":
/*!***********************************************************!*\
  !*** ../node_modules/sprotty/lib/features/hover/model.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.hoverFeedbackFeature = Symbol('hoverFeedbackFeature');
function isHoverable(element) {
    return element.hasFeature(exports.hoverFeedbackFeature);
}
exports.isHoverable = isHoverable;
exports.popupFeature = Symbol('popupFeature');
function hasPopupFeature(element) {
    return element.hasFeature(exports.popupFeature);
}
exports.hasPopupFeature = hasPopupFeature;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/hover/popup-position-updater.js":
/*!****************************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/hover/popup-position-updater.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var PopupPositionUpdater = /** @class */ (function () {
    function PopupPositionUpdater() {
    }
    PopupPositionUpdater.prototype.decorate = function (vnode, element) {
        return vnode;
    };
    PopupPositionUpdater.prototype.postUpdate = function () {
        var popupDiv = document.getElementById(this.options.popupDiv);
        if (popupDiv !== null && typeof window !== 'undefined') {
            var boundingClientRect = popupDiv.getBoundingClientRect();
            if (window.innerHeight < boundingClientRect.height + boundingClientRect.top) {
                popupDiv.style.top = (window.pageYOffset + window.innerHeight - boundingClientRect.height - 5) + 'px';
            }
            if (window.innerWidth < boundingClientRect.left + boundingClientRect.width) {
                popupDiv.style.left = (window.pageXOffset + window.innerWidth - boundingClientRect.width - 5) + 'px';
            }
            if (boundingClientRect.left < 0) {
                popupDiv.style.left = '0px';
            }
            if (boundingClientRect.top < 0) {
                popupDiv.style.top = '0px';
            }
        }
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], PopupPositionUpdater.prototype, "options", void 0);
    PopupPositionUpdater = __decorate([
        inversify_1.injectable()
    ], PopupPositionUpdater);
    return PopupPositionUpdater;
}());
exports.PopupPositionUpdater = PopupPositionUpdater;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/move/di.config.js":
/*!**************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/move/di.config.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var move_1 = __webpack_require__(/*! ./move */ "../node_modules/sprotty/lib/features/move/move.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../node_modules/sprotty/lib/base/commands/command-registration.js");
var moveModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(types_1.TYPES.MouseListener).to(move_1.MoveMouseListener);
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, move_1.MoveCommand);
    bind(move_1.LocationPostprocessor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(move_1.LocationPostprocessor);
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(move_1.LocationPostprocessor);
});
exports.default = moveModule;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/move/model.js":
/*!**********************************************************!*\
  !*** ../node_modules/sprotty/lib/features/move/model.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.moveFeature = Symbol('moveFeature');
function isLocateable(element) {
    return element['position'] !== undefined;
}
exports.isLocateable = isLocateable;
function isMoveable(element) {
    return element.hasFeature(exports.moveFeature) && isLocateable(element);
}
exports.isMoveable = isMoveable;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/move/move.js":
/*!*********************************************************!*\
  !*** ../node_modules/sprotty/lib/features/move/move.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var animation_1 = __webpack_require__(/*! ../../base/animations/animation */ "../node_modules/sprotty/lib/base/animations/animation.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../node_modules/sprotty/lib/base/commands/command.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../node_modules/sprotty/lib/base/model/smodel-utils.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../node_modules/sprotty/lib/base/views/mouse-tool.js");
var vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "../node_modules/sprotty/lib/base/views/vnode-utils.js");
var sgraph_1 = __webpack_require__(/*! ../../graph/sgraph */ "../node_modules/sprotty/lib/graph/sgraph.js");
var commit_model_1 = __webpack_require__(/*! ../../model-source/commit-model */ "../node_modules/sprotty/lib/model-source/commit-model.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "../node_modules/sprotty/lib/features/bounds/model.js");
var create_on_drag_1 = __webpack_require__(/*! ../edit/create-on-drag */ "../node_modules/sprotty/lib/features/edit/create-on-drag.js");
var delete_1 = __webpack_require__(/*! ../edit/delete */ "../node_modules/sprotty/lib/features/edit/delete.js");
var edit_routing_1 = __webpack_require__(/*! ../edit/edit-routing */ "../node_modules/sprotty/lib/features/edit/edit-routing.js");
var reconnect_1 = __webpack_require__(/*! ../edit/reconnect */ "../node_modules/sprotty/lib/features/edit/reconnect.js");
var model_2 = __webpack_require__(/*! ../routing/model */ "../node_modules/sprotty/lib/features/routing/model.js");
var routing_1 = __webpack_require__(/*! ../routing/routing */ "../node_modules/sprotty/lib/features/routing/routing.js");
var model_3 = __webpack_require__(/*! ../edge-layout/model */ "../node_modules/sprotty/lib/features/edge-layout/model.js");
var model_4 = __webpack_require__(/*! ../select/model */ "../node_modules/sprotty/lib/features/select/model.js");
var select_1 = __webpack_require__(/*! ../select/select */ "../node_modules/sprotty/lib/features/select/select.js");
var model_5 = __webpack_require__(/*! ../viewport/model */ "../node_modules/sprotty/lib/features/viewport/model.js");
var model_6 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/move/model.js");
var MoveAction = /** @class */ (function () {
    function MoveAction(moves, animate, finished) {
        if (animate === void 0) { animate = true; }
        if (finished === void 0) { finished = false; }
        this.moves = moves;
        this.animate = animate;
        this.finished = finished;
        this.kind = MoveCommand.KIND;
    }
    return MoveAction;
}());
exports.MoveAction = MoveAction;
var MoveCommand = /** @class */ (function (_super) {
    __extends(MoveCommand, _super);
    function MoveCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.resolvedMoves = new Map;
        _this.edgeMementi = [];
        return _this;
    }
    MoveCommand_1 = MoveCommand;
    MoveCommand.prototype.execute = function (context) {
        var _this = this;
        var index = context.root.index;
        var edge2handleMoves = new Map();
        var attachedEdgeShifts = new Map();
        this.action.moves.forEach(function (move) {
            var element = index.getById(move.elementId);
            if (element instanceof model_2.SRoutingHandle && _this.edgeRouterRegistry) {
                var edge = element.parent;
                if (edge instanceof model_2.SRoutableElement) {
                    var resolvedMove = _this.resolveHandleMove(element, edge, move);
                    if (resolvedMove) {
                        var movesByEdge = edge2handleMoves.get(edge);
                        if (!movesByEdge) {
                            movesByEdge = [];
                            edge2handleMoves.set(edge, movesByEdge);
                        }
                        movesByEdge.push(resolvedMove);
                    }
                }
            }
            else if (element && model_6.isLocateable(element)) {
                var resolvedMove_1 = _this.resolveElementMove(element, move);
                if (resolvedMove_1) {
                    _this.resolvedMoves.set(resolvedMove_1.element.id, resolvedMove_1);
                    if (_this.edgeRouterRegistry) {
                        index.getAttachedElements(element).forEach(function (edge) {
                            if (edge instanceof model_2.SRoutableElement) {
                                var existingDelta = attachedEdgeShifts.get(edge);
                                var newDelta = geometry_1.subtract(resolvedMove_1.toPosition, resolvedMove_1.fromPosition);
                                var delta = (existingDelta)
                                    ? geometry_1.linear(existingDelta, newDelta, 0.5)
                                    : newDelta;
                                attachedEdgeShifts.set(edge, delta);
                            }
                        });
                    }
                }
            }
        });
        this.doMove(edge2handleMoves, attachedEdgeShifts);
        if (this.action.animate) {
            this.undoMove();
            return new animation_1.CompoundAnimation(context.root, context, [
                new MoveAnimation(context.root, this.resolvedMoves, context, false),
                new MorphEdgesAnimation(context.root, this.edgeMementi, context, false)
            ]).start();
        }
        return context.root;
    };
    MoveCommand.prototype.resolveHandleMove = function (handle, edge, move) {
        var fromPosition = move.fromPosition;
        if (!fromPosition) {
            var router = this.edgeRouterRegistry.get(edge.routerKind);
            fromPosition = router.getHandlePosition(edge, router.route(edge), handle);
        }
        if (fromPosition)
            return {
                handle: handle,
                fromPosition: fromPosition,
                toPosition: move.toPosition
            };
        return undefined;
    };
    MoveCommand.prototype.resolveElementMove = function (element, move) {
        var fromPosition = move.fromPosition
            || { x: element.position.x, y: element.position.y };
        return {
            element: element,
            fromPosition: fromPosition,
            toPosition: move.toPosition
        };
    };
    MoveCommand.prototype.doMove = function (edge2move, attachedEdgeShifts) {
        var _this = this;
        this.resolvedMoves.forEach(function (res) {
            res.element.position = res.toPosition;
        });
        // reset edges to state before
        edge2move.forEach(function (moves, edge) {
            var router = _this.edgeRouterRegistry.get(edge.routerKind);
            var before = router.takeSnapshot(edge);
            router.applyHandleMoves(edge, moves);
            var after = router.takeSnapshot(edge);
            _this.edgeMementi.push({ edge: edge, before: before, after: after });
        });
        attachedEdgeShifts.forEach(function (delta, edge) {
            if (!edge2move.get(edge)) {
                var router = _this.edgeRouterRegistry.get(edge.routerKind);
                var before = router.takeSnapshot(edge);
                if (edge.source
                    && edge.target
                    && _this.resolvedMoves.get(edge.source.id)
                    && _this.resolvedMoves.get(edge.target.id)) {
                    // move the entire edge when both source and target are moved
                    edge.routingPoints = edge.routingPoints.map(function (rp) { return geometry_1.add(rp, delta); });
                }
                else {
                    // add/remove RPs according to the new source/target positions
                    var updateHandles = model_4.isSelectable(edge) && edge.selected;
                    router.cleanupRoutingPoints(edge, edge.routingPoints, updateHandles, _this.action.finished);
                }
                var after = router.takeSnapshot(edge);
                _this.edgeMementi.push({ edge: edge, before: before, after: after });
            }
        });
    };
    MoveCommand.prototype.undoMove = function () {
        var _this = this;
        this.resolvedMoves.forEach(function (res) {
            res.element.position = res.fromPosition;
        });
        this.edgeMementi.forEach(function (memento) {
            var router = _this.edgeRouterRegistry.get(memento.edge.routerKind);
            router.applySnapshot(memento.edge, memento.before);
        });
    };
    MoveCommand.prototype.undo = function (context) {
        return new animation_1.CompoundAnimation(context.root, context, [
            new MoveAnimation(context.root, this.resolvedMoves, context, true),
            new MorphEdgesAnimation(context.root, this.edgeMementi, context, true)
        ]).start();
    };
    MoveCommand.prototype.redo = function (context) {
        return new animation_1.CompoundAnimation(context.root, context, [
            new MoveAnimation(context.root, this.resolvedMoves, context, false),
            new MorphEdgesAnimation(context.root, this.edgeMementi, context, false)
        ]).start();
    };
    MoveCommand.prototype.merge = function (other, context) {
        var _this = this;
        if (!this.action.animate && other instanceof MoveCommand_1) {
            other.resolvedMoves.forEach(function (otherMove, otherElementId) {
                var existingMove = _this.resolvedMoves.get(otherElementId);
                if (existingMove) {
                    existingMove.toPosition = otherMove.toPosition;
                }
                else {
                    _this.resolvedMoves.set(otherElementId, otherMove);
                }
            });
            other.edgeMementi.forEach(function (otherMemento) {
                var existingMemento = _this.edgeMementi.find(function (edgeMemento) { return edgeMemento.edge.id === otherMemento.edge.id; });
                if (existingMemento) {
                    existingMemento.after = otherMemento.after;
                }
                else {
                    _this.edgeMementi.push(otherMemento);
                }
            });
            return true;
        }
        else if (other instanceof reconnect_1.ReconnectCommand) {
            var otherMemento_1 = other.memento;
            if (otherMemento_1) {
                var existingMemento = this.edgeMementi.find(function (edgeMemento) { return edgeMemento.edge.id === otherMemento_1.edge.id; });
                if (existingMemento) {
                    existingMemento.after = otherMemento_1.after;
                }
                else {
                    this.edgeMementi.push(otherMemento_1);
                }
            }
            return true;
        }
        return false;
    };
    var MoveCommand_1;
    MoveCommand.KIND = 'move';
    __decorate([
        inversify_1.inject(routing_1.EdgeRouterRegistry), inversify_1.optional(),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], MoveCommand.prototype, "edgeRouterRegistry", void 0);
    MoveCommand = MoveCommand_1 = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [MoveAction])
    ], MoveCommand);
    return MoveCommand;
}(command_1.MergeableCommand));
exports.MoveCommand = MoveCommand;
var MoveAnimation = /** @class */ (function (_super) {
    __extends(MoveAnimation, _super);
    function MoveAnimation(model, elementMoves, context, reverse) {
        if (reverse === void 0) { reverse = false; }
        var _this = _super.call(this, context) || this;
        _this.model = model;
        _this.elementMoves = elementMoves;
        _this.reverse = reverse;
        return _this;
    }
    MoveAnimation.prototype.tween = function (t) {
        var _this = this;
        this.elementMoves.forEach(function (elementMove) {
            if (_this.reverse) {
                elementMove.element.position = {
                    x: (1 - t) * elementMove.toPosition.x + t * elementMove.fromPosition.x,
                    y: (1 - t) * elementMove.toPosition.y + t * elementMove.fromPosition.y
                };
            }
            else {
                elementMove.element.position = {
                    x: (1 - t) * elementMove.fromPosition.x + t * elementMove.toPosition.x,
                    y: (1 - t) * elementMove.fromPosition.y + t * elementMove.toPosition.y
                };
            }
        });
        return this.model;
    };
    return MoveAnimation;
}(animation_1.Animation));
exports.MoveAnimation = MoveAnimation;
var MorphEdgesAnimation = /** @class */ (function (_super) {
    __extends(MorphEdgesAnimation, _super);
    function MorphEdgesAnimation(model, originalMementi, context, reverse) {
        if (reverse === void 0) { reverse = false; }
        var _this = _super.call(this, context) || this;
        _this.model = model;
        _this.reverse = reverse;
        _this.expanded = [];
        originalMementi.forEach(function (edgeMemento) {
            var start = _this.reverse ? edgeMemento.after : edgeMemento.before;
            var end = _this.reverse ? edgeMemento.before : edgeMemento.after;
            var startRoute = start.routedPoints;
            var endRoute = end.routedPoints;
            var maxRoutingPoints = Math.max(startRoute.length, endRoute.length);
            _this.expanded.push({
                startExpandedRoute: _this.growToSize(startRoute, maxRoutingPoints),
                endExpandedRoute: _this.growToSize(endRoute, maxRoutingPoints),
                memento: edgeMemento
            });
        });
        return _this;
    }
    MorphEdgesAnimation.prototype.midPoint = function (edgeMemento) {
        var edge = edgeMemento.edge;
        var source = edgeMemento.edge.source;
        var target = edgeMemento.edge.target;
        return geometry_1.linear(smodel_utils_1.translatePoint(geometry_1.center(source.bounds), source.parent, edge.parent), smodel_utils_1.translatePoint(geometry_1.center(target.bounds), target.parent, edge.parent), 0.5);
    };
    MorphEdgesAnimation.prototype.start = function () {
        this.expanded.forEach(function (morph) {
            morph.memento.edge.removeAll(function (e) { return e instanceof model_2.SRoutingHandle; });
        });
        return _super.prototype.start.call(this);
    };
    MorphEdgesAnimation.prototype.tween = function (t) {
        var _this = this;
        if (t === 1) {
            this.expanded.forEach(function (morph) {
                var memento = morph.memento;
                if (_this.reverse)
                    memento.before.router.applySnapshot(memento.edge, memento.before);
                else
                    memento.after.router.applySnapshot(memento.edge, memento.after);
            });
        }
        else {
            this.expanded.forEach(function (morph) {
                var newRoutingPoints = [];
                // ignore source and target anchor
                for (var i = 1; i < morph.startExpandedRoute.length - 1; ++i)
                    newRoutingPoints.push(geometry_1.linear(morph.startExpandedRoute[i], morph.endExpandedRoute[i], t));
                var closestSnapshot = t < 0.5 ? morph.memento.before : morph.memento.after;
                var newSnapshot = __assign(__assign({}, closestSnapshot), { routingPoints: newRoutingPoints, routingHandles: [] });
                closestSnapshot.router.applySnapshot(morph.memento.edge, newSnapshot);
            });
        }
        return this.model;
    };
    MorphEdgesAnimation.prototype.growToSize = function (route, targetSize) {
        var diff = targetSize - route.length;
        if (diff <= 0)
            return route;
        var result = [];
        result.push(route[0]);
        var deltaDiff = 1 / (diff + 1);
        var deltaSmaller = 1 / (route.length - 1);
        var nextInsertion = 1;
        for (var i = 1; i < route.length; ++i) {
            var pos = deltaSmaller * i;
            var insertions = 0;
            while (pos > (nextInsertion + insertions) * deltaDiff)
                ++insertions;
            nextInsertion += insertions;
            for (var j = 0; j < insertions; ++j) {
                var p = geometry_1.linear(route[i - 1], route[i], (j + 1) / (insertions + 1));
                result.push(p);
            }
            result.push(route[i]);
        }
        return result;
    };
    return MorphEdgesAnimation;
}(animation_1.Animation));
exports.MorphEdgesAnimation = MorphEdgesAnimation;
var MoveMouseListener = /** @class */ (function (_super) {
    __extends(MoveMouseListener, _super);
    function MoveMouseListener() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.hasDragged = false;
        _this.elementId2startPos = new Map();
        return _this;
    }
    MoveMouseListener.prototype.mouseDown = function (target, event) {
        var result = [];
        if (event.button === 0) {
            var moveable = smodel_utils_1.findParentByFeature(target, model_6.isMoveable);
            var isRoutingHandle = target instanceof model_2.SRoutingHandle;
            if (moveable !== undefined || isRoutingHandle || create_on_drag_1.isCreatingOnDrag(target)) {
                this.startDragPosition = { x: event.pageX, y: event.pageY };
            }
            else {
                this.startDragPosition = undefined;
            }
            this.hasDragged = false;
            if (create_on_drag_1.isCreatingOnDrag(target)) {
                result.push(new select_1.SelectAllAction(false));
                result.push(target.createAction(model_2.edgeInProgressID));
                result.push(new select_1.SelectAction([model_2.edgeInProgressID], []));
                result.push(new edit_routing_1.SwitchEditModeAction([model_2.edgeInProgressID], []));
                result.push(new select_1.SelectAction([model_2.edgeInProgressTargetHandleID], []));
                result.push(new edit_routing_1.SwitchEditModeAction([model_2.edgeInProgressTargetHandleID], []));
            }
            else if (isRoutingHandle) {
                result.push(new edit_routing_1.SwitchEditModeAction([target.id], []));
            }
        }
        return result;
    };
    MoveMouseListener.prototype.mouseMove = function (target, event) {
        var result = [];
        if (event.buttons === 0)
            this.mouseUp(target, event);
        else if (this.startDragPosition) {
            if (this.elementId2startPos.size === 0) {
                this.collectStartPositions(target.root);
            }
            this.hasDragged = true;
            var moveAction = this.getElementMoves(target, event, false);
            if (moveAction)
                result.push(moveAction);
        }
        return result;
    };
    MoveMouseListener.prototype.collectStartPositions = function (root) {
        var _this = this;
        root.index.all()
            .filter(function (element) { return model_4.isSelectable(element) && element.selected; })
            .forEach(function (element) {
            if (model_6.isMoveable(element))
                _this.elementId2startPos.set(element.id, element.position);
            else if (element instanceof model_2.SRoutingHandle) {
                var position = _this.getHandlePosition(element);
                if (position)
                    _this.elementId2startPos.set(element.id, position);
            }
        });
    };
    MoveMouseListener.prototype.getElementMoves = function (target, event, isFinished) {
        var _this = this;
        if (!this.startDragPosition)
            return undefined;
        var elementMoves = [];
        var viewport = smodel_utils_1.findParentByFeature(target, model_5.isViewport);
        var zoom = viewport ? viewport.zoom : 1;
        var delta = {
            x: (event.pageX - this.startDragPosition.x) / zoom,
            y: (event.pageY - this.startDragPosition.y) / zoom
        };
        this.elementId2startPos.forEach(function (startPosition, elementId) {
            var element = target.root.index.getById(elementId);
            if (element) {
                var toPosition = _this.snap({
                    x: startPosition.x + delta.x,
                    y: startPosition.y + delta.y
                }, element, !event.shiftKey);
                if (model_6.isMoveable(element)) {
                    elementMoves.push({
                        elementId: element.id,
                        fromPosition: {
                            x: element.position.x,
                            y: element.position.y
                        },
                        toPosition: toPosition
                    });
                }
                else if (element instanceof model_2.SRoutingHandle) {
                    var point = _this.getHandlePosition(element);
                    if (point !== undefined) {
                        elementMoves.push({
                            elementId: element.id,
                            fromPosition: point,
                            toPosition: toPosition
                        });
                    }
                }
            }
        });
        if (elementMoves.length > 0)
            return new MoveAction(elementMoves, false, isFinished);
        else
            return undefined;
    };
    MoveMouseListener.prototype.snap = function (position, element, isSnap) {
        if (isSnap && this.snapper)
            return this.snapper.snap(position, element);
        else
            return position;
    };
    MoveMouseListener.prototype.getHandlePosition = function (handle) {
        if (this.edgeRouterRegistry) {
            var parent_1 = handle.parent;
            if (!(parent_1 instanceof model_2.SRoutableElement))
                return undefined;
            var router = this.edgeRouterRegistry.get(parent_1.routerKind);
            var route = router.route(parent_1);
            return router.getHandlePosition(parent_1, route, handle);
        }
        return undefined;
    };
    MoveMouseListener.prototype.mouseEnter = function (target, event) {
        if (target instanceof smodel_1.SModelRoot && event.buttons === 0)
            this.mouseUp(target, event);
        return [];
    };
    MoveMouseListener.prototype.mouseUp = function (target, event) {
        var _this = this;
        var result = [];
        var hasReconnected = false;
        if (this.startDragPosition) {
            var moveAction = this.getElementMoves(target, event, true);
            if (moveAction)
                result.push(moveAction);
            target.root.index.all()
                .forEach(function (element) {
                if (element instanceof model_2.SRoutingHandle) {
                    var parent_2 = element.parent;
                    if (parent_2 instanceof model_2.SRoutableElement && element.danglingAnchor) {
                        var handlePos = _this.getHandlePosition(element);
                        if (handlePos) {
                            var handlePosAbs = smodel_utils_1.translatePoint(handlePos, element.parent, element.root);
                            var newEnd = model_1.findChildrenAtPosition(target.root, handlePosAbs)
                                .find(function (e) { return model_2.isConnectable(e) && e.canConnect(parent_2, element.kind); });
                            if (newEnd && _this.hasDragged) {
                                result.push(new reconnect_1.ReconnectAction(element.parent.id, element.kind === 'source' ? newEnd.id : parent_2.sourceId, element.kind === 'target' ? newEnd.id : parent_2.targetId));
                                hasReconnected = true;
                            }
                        }
                    }
                    if (element.editMode)
                        result.push(new edit_routing_1.SwitchEditModeAction([], [element.id]));
                }
            });
        }
        if (!hasReconnected) {
            var edgeInProgress = target.root.index.getById(model_2.edgeInProgressID);
            if (edgeInProgress instanceof smodel_1.SChildElement) {
                var deleteIds_1 = [];
                deleteIds_1.push(model_2.edgeInProgressID);
                edgeInProgress.children.forEach(function (c) {
                    if (c instanceof model_2.SRoutingHandle && c.danglingAnchor)
                        deleteIds_1.push(c.danglingAnchor.id);
                });
                result.push(new delete_1.DeleteElementAction(deleteIds_1));
            }
        }
        if (this.hasDragged)
            result.push(new commit_model_1.CommitModelAction());
        this.hasDragged = false;
        this.startDragPosition = undefined;
        this.elementId2startPos.clear();
        return result;
    };
    MoveMouseListener.prototype.decorate = function (vnode, element) {
        return vnode;
    };
    __decorate([
        inversify_1.inject(routing_1.EdgeRouterRegistry), inversify_1.optional(),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], MoveMouseListener.prototype, "edgeRouterRegistry", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ISnapper), inversify_1.optional(),
        __metadata("design:type", Object)
    ], MoveMouseListener.prototype, "snapper", void 0);
    return MoveMouseListener;
}(mouse_tool_1.MouseListener));
exports.MoveMouseListener = MoveMouseListener;
var LocationPostprocessor = /** @class */ (function () {
    function LocationPostprocessor() {
    }
    LocationPostprocessor.prototype.decorate = function (vnode, element) {
        if (model_3.isEdgeLayoutable(element) && element.parent instanceof sgraph_1.SEdge) {
            // The element is handled by EdgeLayoutDecorator
            return vnode;
        }
        var translate = '';
        if (model_6.isLocateable(element) && element instanceof smodel_1.SChildElement && element.parent !== undefined) {
            translate = 'translate(' + element.position.x + ', ' + element.position.y + ')';
        }
        if (model_1.isAlignable(element)) {
            if (translate.length > 0)
                translate += ' ';
            translate += 'translate(' + element.alignment.x + ', ' + element.alignment.y + ')';
        }
        if (translate.length > 0)
            vnode_utils_1.setAttr(vnode, 'transform', translate);
        return vnode;
    };
    LocationPostprocessor.prototype.postUpdate = function () {
    };
    LocationPostprocessor = __decorate([
        inversify_1.injectable()
    ], LocationPostprocessor);
    return LocationPostprocessor;
}());
exports.LocationPostprocessor = LocationPostprocessor;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/move/snap.js":
/*!*********************************************************!*\
  !*** ../node_modules/sprotty/lib/features/move/snap.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "../node_modules/sprotty/lib/features/bounds/model.js");
/**
 * A simple snapper that snaps the center of nodes and routing points to a grid.
 */
var CenterGridSnapper = /** @class */ (function () {
    function CenterGridSnapper() {
    }
    Object.defineProperty(CenterGridSnapper.prototype, "gridX", {
        get: function () {
            return 10;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CenterGridSnapper.prototype, "gridY", {
        get: function () {
            return 10;
        },
        enumerable: true,
        configurable: true
    });
    CenterGridSnapper.prototype.snap = function (position, element) {
        if (element && model_1.isBoundsAware(element))
            return {
                x: Math.round((position.x + 0.5 * element.bounds.width) / this.gridX) * this.gridX - 0.5 * element.bounds.width,
                y: Math.round((position.y + 0.5 * element.bounds.height) / this.gridY) * this.gridY - 0.5 * element.bounds.height
            };
        else
            return {
                x: Math.round(position.x / this.gridX) * this.gridX,
                y: Math.round(position.y / this.gridY) * this.gridY
            };
    };
    CenterGridSnapper = __decorate([
        inversify_1.injectable()
    ], CenterGridSnapper);
    return CenterGridSnapper;
}());
exports.CenterGridSnapper = CenterGridSnapper;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/nameable/model.js":
/*!**************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/nameable/model.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.nameFeature = Symbol('nameableFeature');
function isNameable(element) {
    return element.hasFeature(exports.nameFeature);
}
exports.isNameable = isNameable;
function name(element) {
    if (isNameable(element)) {
        return element.name;
    }
    else {
        return undefined;
    }
}
exports.name = name;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/open/di.config.js":
/*!**************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/open/di.config.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var open_1 = __webpack_require__(/*! ./open */ "../node_modules/sprotty/lib/features/open/open.js");
var openModule = new inversify_1.ContainerModule(function (bind) {
    bind(types_1.TYPES.MouseListener).to(open_1.OpenMouseListener);
});
exports.default = openModule;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/open/model.js":
/*!**********************************************************!*\
  !*** ../node_modules/sprotty/lib/features/open/model.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.openFeature = Symbol('openFeature');
function isOpenable(element) {
    return element.hasFeature(exports.openFeature);
}
exports.isOpenable = isOpenable;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/open/open.js":
/*!*********************************************************!*\
  !*** ../node_modules/sprotty/lib/features/open/open.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../node_modules/sprotty/lib/base/views/mouse-tool.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../node_modules/sprotty/lib/base/model/smodel-utils.js");
var model_1 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/open/model.js");
var OpenAction = /** @class */ (function () {
    function OpenAction(elementId) {
        this.elementId = elementId;
        this.kind = OpenAction.KIND;
    }
    OpenAction.KIND = 'open';
    return OpenAction;
}());
exports.OpenAction = OpenAction;
var OpenMouseListener = /** @class */ (function (_super) {
    __extends(OpenMouseListener, _super);
    function OpenMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OpenMouseListener.prototype.doubleClick = function (target, event) {
        var openableTarget = smodel_utils_1.findParentByFeature(target, model_1.isOpenable);
        if (openableTarget !== undefined) {
            return [new OpenAction(openableTarget.id)];
        }
        return [];
    };
    return OpenMouseListener;
}(mouse_tool_1.MouseListener));
exports.OpenMouseListener = OpenMouseListener;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/routing/anchor.js":
/*!**************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/routing/anchor.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "../node_modules/sprotty/lib/utils/registry.js");
exports.DIAMOND_ANCHOR_KIND = 'diamond';
exports.ELLIPTIC_ANCHOR_KIND = 'elliptic';
exports.RECTANGULAR_ANCHOR_KIND = 'rectangular';
var AnchorComputerRegistry = /** @class */ (function (_super) {
    __extends(AnchorComputerRegistry, _super);
    function AnchorComputerRegistry(anchors) {
        var _this = _super.call(this) || this;
        anchors.forEach(function (anchor) { return _this.register(anchor.kind, anchor); });
        return _this;
    }
    Object.defineProperty(AnchorComputerRegistry.prototype, "defaultAnchorKind", {
        get: function () {
            return exports.RECTANGULAR_ANCHOR_KIND;
        },
        enumerable: true,
        configurable: true
    });
    AnchorComputerRegistry.prototype.get = function (routerKind, anchorKind) {
        return _super.prototype.get.call(this, routerKind + ":" + (anchorKind || this.defaultAnchorKind));
    };
    AnchorComputerRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.IAnchorComputer)),
        __metadata("design:paramtypes", [Array])
    ], AnchorComputerRegistry);
    return AnchorComputerRegistry;
}(registry_1.InstanceRegistry));
exports.AnchorComputerRegistry = AnchorComputerRegistry;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/routing/di.config.js":
/*!*****************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/routing/di.config.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var manhattan_edge_router_1 = __webpack_require__(/*! ./manhattan-edge-router */ "../node_modules/sprotty/lib/features/routing/manhattan-edge-router.js");
var polyline_edge_router_1 = __webpack_require__(/*! ./polyline-edge-router */ "../node_modules/sprotty/lib/features/routing/polyline-edge-router.js");
var manhattan_anchors_1 = __webpack_require__(/*! ./manhattan-anchors */ "../node_modules/sprotty/lib/features/routing/manhattan-anchors.js");
var polyline_anchors_1 = __webpack_require__(/*! ./polyline-anchors */ "../node_modules/sprotty/lib/features/routing/polyline-anchors.js");
var anchor_1 = __webpack_require__(/*! ./anchor */ "../node_modules/sprotty/lib/features/routing/anchor.js");
var routing_1 = __webpack_require__(/*! ./routing */ "../node_modules/sprotty/lib/features/routing/routing.js");
var routingModule = new inversify_1.ContainerModule(function (bind) {
    bind(routing_1.EdgeRouterRegistry).toSelf().inSingletonScope();
    bind(anchor_1.AnchorComputerRegistry).toSelf().inSingletonScope();
    bind(manhattan_edge_router_1.ManhattanEdgeRouter).toSelf().inSingletonScope();
    bind(types_1.TYPES.IEdgeRouter).toService(manhattan_edge_router_1.ManhattanEdgeRouter);
    bind(types_1.TYPES.IAnchorComputer).to(manhattan_anchors_1.ManhattanEllipticAnchor).inSingletonScope();
    bind(types_1.TYPES.IAnchorComputer).to(manhattan_anchors_1.ManhattanRectangularAnchor).inSingletonScope();
    bind(types_1.TYPES.IAnchorComputer).to(manhattan_anchors_1.ManhattanDiamondAnchor).inSingletonScope();
    bind(polyline_edge_router_1.PolylineEdgeRouter).toSelf().inSingletonScope();
    bind(types_1.TYPES.IEdgeRouter).toService(polyline_edge_router_1.PolylineEdgeRouter);
    bind(types_1.TYPES.IAnchorComputer).to(polyline_anchors_1.EllipseAnchor);
    bind(types_1.TYPES.IAnchorComputer).to(polyline_anchors_1.RectangleAnchor);
    bind(types_1.TYPES.IAnchorComputer).to(polyline_anchors_1.DiamondAnchor);
});
exports.default = routingModule;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/routing/linear-edge-router.js":
/*!**************************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/routing/linear-edge-router.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../node_modules/sprotty/lib/base/model/smodel-utils.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var model_1 = __webpack_require__(/*! ../routing/model */ "../node_modules/sprotty/lib/features/routing/model.js");
var anchor_1 = __webpack_require__(/*! ./anchor */ "../node_modules/sprotty/lib/features/routing/anchor.js");
var model_2 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/routing/model.js");
var Side;
(function (Side) {
    Side[Side["RIGHT"] = 0] = "RIGHT";
    Side[Side["LEFT"] = 1] = "LEFT";
    Side[Side["TOP"] = 2] = "TOP";
    Side[Side["BOTTOM"] = 3] = "BOTTOM";
})(Side = exports.Side || (exports.Side = {}));
var DefaultAnchors = /** @class */ (function () {
    function DefaultAnchors(element, edgeParent, kind) {
        this.element = element;
        this.kind = kind;
        var bounds = element.bounds;
        this.bounds = smodel_utils_1.translateBounds(bounds, element.parent, edgeParent);
        this.left = { x: this.bounds.x, y: this.bounds.y + 0.5 * this.bounds.height, kind: kind };
        this.right = { x: this.bounds.x + this.bounds.width, y: this.bounds.y + 0.5 * this.bounds.height, kind: kind };
        this.top = { x: this.bounds.x + 0.5 * this.bounds.width, y: this.bounds.y, kind: kind };
        this.bottom = { x: this.bounds.x + 0.5 * this.bounds.width, y: this.bounds.y + this.bounds.height, kind: kind };
    }
    DefaultAnchors.prototype.get = function (side) {
        return this[Side[side].toLowerCase()];
    };
    DefaultAnchors.prototype.getNearestSide = function (point) {
        var leftDistance = geometry_1.euclideanDistance(point, this.left);
        var rightDistance = geometry_1.euclideanDistance(point, this.right);
        var topDistance = geometry_1.euclideanDistance(point, this.top);
        var bottomDistance = geometry_1.euclideanDistance(point, this.bottom);
        var currentNearestSide = Side.LEFT;
        var currentMinDist = leftDistance;
        if (rightDistance < currentMinDist) {
            currentMinDist = rightDistance;
            currentNearestSide = Side.RIGHT;
        }
        if (topDistance < currentMinDist) {
            currentMinDist = topDistance;
            currentNearestSide = Side.TOP;
        }
        if (bottomDistance < currentMinDist) {
            currentMinDist = bottomDistance;
            currentNearestSide = Side.BOTTOM;
        }
        return currentNearestSide;
    };
    return DefaultAnchors;
}());
exports.DefaultAnchors = DefaultAnchors;
var LinearEdgeRouter = /** @class */ (function () {
    function LinearEdgeRouter() {
    }
    LinearEdgeRouter.prototype.pointAt = function (edge, t) {
        var segments = this.calculateSegment(edge, t);
        if (!segments)
            return undefined;
        var segmentStart = segments.segmentStart, segmentEnd = segments.segmentEnd, lambda = segments.lambda;
        return geometry_1.linear(segmentStart, segmentEnd, lambda);
    };
    LinearEdgeRouter.prototype.derivativeAt = function (edge, t) {
        var segments = this.calculateSegment(edge, t);
        if (!segments)
            return undefined;
        var segmentStart = segments.segmentStart, segmentEnd = segments.segmentEnd;
        return {
            x: segmentEnd.x - segmentStart.x,
            y: segmentEnd.y - segmentStart.y
        };
    };
    LinearEdgeRouter.prototype.calculateSegment = function (edge, t) {
        if (t < 0 || t > 1)
            return undefined;
        var routedPoints = this.route(edge);
        if (routedPoints.length < 2)
            return undefined;
        var segmentLengths = [];
        var totalLength = 0;
        for (var i = 0; i < routedPoints.length - 1; ++i) {
            segmentLengths[i] = geometry_1.euclideanDistance(routedPoints[i], routedPoints[i + 1]);
            totalLength += segmentLengths[i];
        }
        var currentLenght = 0;
        var tAsLenght = t * totalLength;
        for (var i = 0; i < routedPoints.length - 1; ++i) {
            var newLength = currentLenght + segmentLengths[i];
            // avoid division by (almost) zero
            if (segmentLengths[i] > 1E-8) {
                if (newLength >= tAsLenght) {
                    var lambda = Math.max(0, (tAsLenght - currentLenght)) / segmentLengths[i];
                    return {
                        segmentStart: routedPoints[i],
                        segmentEnd: routedPoints[i + 1],
                        lambda: lambda
                    };
                }
            }
            currentLenght = newLength;
        }
        return {
            segmentEnd: routedPoints.pop(),
            segmentStart: routedPoints.pop(),
            lambda: 1
        };
    };
    LinearEdgeRouter.prototype.addHandle = function (edge, kind, type, routingPointIndex) {
        var handle = new model_1.SRoutingHandle();
        handle.kind = kind;
        handle.pointIndex = routingPointIndex;
        handle.type = type;
        if (kind === 'target' && edge.id === model_1.edgeInProgressID)
            handle.id = model_1.edgeInProgressTargetHandleID;
        edge.add(handle);
        return handle;
    };
    LinearEdgeRouter.prototype.getHandlePosition = function (edge, route, handle) {
        switch (handle.kind) {
            case 'source':
                if (edge.source instanceof model_1.SDanglingAnchor)
                    return edge.source.position;
                else
                    return route[0];
            case 'target':
                if (edge.target instanceof model_1.SDanglingAnchor)
                    return edge.target.position;
                else {
                    return route[route.length - 1];
                }
            default:
                var position = this.getInnerHandlePosition(edge, route, handle);
                if (position !== undefined)
                    return position;
                if (handle.pointIndex >= 0 && handle.pointIndex < edge.routingPoints.length)
                    return edge.routingPoints[handle.pointIndex];
        }
        return undefined;
    };
    LinearEdgeRouter.prototype.findRouteSegment = function (edge, route, handleIndex) {
        var getIndex = function (rp) {
            if (rp.pointIndex !== undefined)
                return rp.pointIndex;
            else if (rp.kind === 'target')
                return edge.routingPoints.length;
            else
                return -2;
        };
        var start, end;
        for (var _i = 0, route_1 = route; _i < route_1.length; _i++) {
            var rp = route_1[_i];
            var i = getIndex(rp);
            if (i <= handleIndex && (start === undefined || i > getIndex(start)))
                start = rp;
            if (i > handleIndex && (end === undefined || i < getIndex(end)))
                end = rp;
        }
        return { start: start, end: end };
    };
    LinearEdgeRouter.prototype.getTranslatedAnchor = function (connectable, refPoint, refContainer, edge, anchorCorrection) {
        if (anchorCorrection === void 0) { anchorCorrection = 0; }
        var translatedRefPoint = smodel_utils_1.translatePoint(refPoint, refContainer, connectable.parent);
        var anchorComputer = this.getAnchorComputer(connectable);
        var strokeCorrection = 0.5 * connectable.strokeWidth;
        var anchor = anchorComputer.getAnchor(connectable, translatedRefPoint, anchorCorrection + strokeCorrection);
        return smodel_utils_1.translatePoint(anchor, connectable.parent, edge.parent);
    };
    LinearEdgeRouter.prototype.getAnchorComputer = function (connectable) {
        return this.anchorRegistry.get(this.kind, connectable.anchorKind);
    };
    LinearEdgeRouter.prototype.applyHandleMoves = function (edge, moves) {
        var remainingMoves = moves.slice();
        moves.forEach(function (move) {
            var handle = move.handle;
            if (handle.kind === 'source' && !(edge.source instanceof model_1.SDanglingAnchor)) {
                // detach source
                var anchor = new model_1.SDanglingAnchor();
                anchor.id = edge.id + '_dangling-source';
                anchor.original = edge.source;
                anchor.position = move.toPosition;
                handle.root.add(anchor);
                handle.danglingAnchor = anchor;
                edge.sourceId = anchor.id;
            }
            else if (handle.kind === 'target' && !(edge.target instanceof model_1.SDanglingAnchor)) {
                // detach target
                var anchor = new model_1.SDanglingAnchor();
                anchor.id = edge.id + '_dangling-target';
                anchor.original = edge.target;
                anchor.position = move.toPosition;
                handle.root.add(anchor);
                handle.danglingAnchor = anchor;
                edge.targetId = anchor.id;
            }
            if (handle.danglingAnchor) {
                handle.danglingAnchor.position = move.toPosition;
                remainingMoves.splice(remainingMoves.indexOf(move), 1);
            }
        });
        if (remainingMoves.length > 0)
            this.applyInnerHandleMoves(edge, remainingMoves);
        this.cleanupRoutingPoints(edge, edge.routingPoints, true, true);
    };
    LinearEdgeRouter.prototype.cleanupRoutingPoints = function (edge, routingPoints, updateHandles, addRoutingPoints) {
        var sourceAnchors = new DefaultAnchors(edge.source, edge.parent, "source");
        var targetAnchors = new DefaultAnchors(edge.target, edge.parent, "target");
        this.resetRoutingPointsOnReconnect(edge, routingPoints, updateHandles, sourceAnchors, targetAnchors);
    };
    LinearEdgeRouter.prototype.resetRoutingPointsOnReconnect = function (edge, routingPoints, updateHandles, sourceAnchors, targetAnchors) {
        if (routingPoints.length === 0 || edge.source instanceof model_1.SDanglingAnchor || edge.target instanceof model_1.SDanglingAnchor) {
            var options = this.getOptions(edge);
            var corners = this.calculateDefaultCorners(edge, sourceAnchors, targetAnchors, options);
            routingPoints.splice.apply(routingPoints, __spreadArrays([0, routingPoints.length], corners));
            if (updateHandles) {
                var maxPointIndex_1 = -2;
                edge.children.forEach(function (child) {
                    if (child instanceof model_1.SRoutingHandle) {
                        if (child.kind === 'target')
                            child.pointIndex = routingPoints.length;
                        else if (child.kind === 'line' && child.pointIndex >= routingPoints.length)
                            edge.remove(child);
                        else
                            maxPointIndex_1 = Math.max(child.pointIndex, maxPointIndex_1);
                    }
                });
                for (var i = maxPointIndex_1; i < routingPoints.length - 1; ++i)
                    this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', i);
            }
            return true;
        }
        return false;
    };
    LinearEdgeRouter.prototype.applyReconnect = function (edge, newSourceId, newTargetId) {
        var hasChanged = false;
        if (newSourceId) {
            var newSource = edge.root.index.getById(newSourceId);
            if (newSource instanceof model_2.SConnectableElement) {
                edge.sourceId = newSource.id;
                hasChanged = true;
            }
        }
        if (newTargetId) {
            var newTarget = edge.root.index.getById(newTargetId);
            if (newTarget instanceof model_2.SConnectableElement) {
                edge.targetId = newTarget.id;
                hasChanged = true;
            }
        }
        if (hasChanged) {
            // reset attached elements in index
            edge.index.remove(edge);
            edge.index.add(edge);
            if (this.getSelfEdgeIndex(edge) > -1) {
                edge.routingPoints = [];
                this.cleanupRoutingPoints(edge, edge.routingPoints, true, true);
            }
        }
    };
    LinearEdgeRouter.prototype.takeSnapshot = function (edge) {
        return {
            routingPoints: edge.routingPoints.slice(),
            routingHandles: edge.children
                .filter(function (child) { return child instanceof model_1.SRoutingHandle; })
                .map(function (child) { return child; }),
            routedPoints: this.route(edge),
            router: this,
            source: edge.source,
            target: edge.target
        };
    };
    LinearEdgeRouter.prototype.applySnapshot = function (edge, snapshot) {
        edge.routingPoints = snapshot.routingPoints;
        edge.removeAll(function (child) { return child instanceof model_1.SRoutingHandle; });
        edge.routerKind = snapshot.router.kind;
        snapshot.routingHandles.forEach(function (handle) { return edge.add(handle); });
        if (snapshot.source)
            edge.sourceId = snapshot.source.id;
        if (snapshot.target)
            edge.targetId = snapshot.target.id;
        // update index
        edge.root.index.remove(edge);
        edge.root.index.add(edge);
    };
    LinearEdgeRouter.prototype.calculateDefaultCorners = function (edge, sourceAnchors, targetAnchors, options) {
        var selfEdgeIndex = this.getSelfEdgeIndex(edge);
        if (selfEdgeIndex >= 0) {
            var standardDist = options.standardDistance;
            var delta = options.selfEdgeOffset * Math.min(sourceAnchors.bounds.width, sourceAnchors.bounds.height);
            switch (selfEdgeIndex % 4) {
                case 0:
                    return [
                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.RIGHT).y + delta },
                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },
                        { x: sourceAnchors.get(Side.BOTTOM).x + delta, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },
                    ];
                case 1:
                    return [
                        { x: sourceAnchors.get(Side.BOTTOM).x - delta, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },
                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },
                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.LEFT).y + delta },
                    ];
                case 2:
                    return [
                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.LEFT).y - delta },
                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.TOP).y - standardDist },
                        { x: sourceAnchors.get(Side.TOP).x - delta, y: sourceAnchors.get(Side.TOP).y - standardDist },
                    ];
                case 3:
                    return [
                        { x: sourceAnchors.get(Side.TOP).x + delta, y: sourceAnchors.get(Side.TOP).y - standardDist },
                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.TOP).y - standardDist },
                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.RIGHT).y - delta },
                    ];
            }
        }
        return [];
    };
    LinearEdgeRouter.prototype.getSelfEdgeIndex = function (edge) {
        if (!edge.source || edge.source !== edge.target)
            return -1;
        return edge.source.outgoingEdges
            .filter(function (otherEdge) { return otherEdge.target === edge.source; })
            .indexOf(edge);
    };
    __decorate([
        inversify_1.inject(anchor_1.AnchorComputerRegistry),
        __metadata("design:type", anchor_1.AnchorComputerRegistry)
    ], LinearEdgeRouter.prototype, "anchorRegistry", void 0);
    LinearEdgeRouter = __decorate([
        inversify_1.injectable()
    ], LinearEdgeRouter);
    return LinearEdgeRouter;
}());
exports.LinearEdgeRouter = LinearEdgeRouter;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/routing/manhattan-anchors.js":
/*!*************************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/routing/manhattan-anchors.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var anchor_1 = __webpack_require__(/*! ./anchor */ "../node_modules/sprotty/lib/features/routing/anchor.js");
var manhattan_edge_router_1 = __webpack_require__(/*! ./manhattan-edge-router */ "../node_modules/sprotty/lib/features/routing/manhattan-edge-router.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var ManhattanRectangularAnchor = /** @class */ (function () {
    function ManhattanRectangularAnchor() {
    }
    ManhattanRectangularAnchor_1 = ManhattanRectangularAnchor;
    Object.defineProperty(ManhattanRectangularAnchor.prototype, "kind", {
        get: function () {
            return ManhattanRectangularAnchor_1.KIND;
        },
        enumerable: true,
        configurable: true
    });
    ManhattanRectangularAnchor.prototype.getAnchor = function (connectable, refPoint, offset) {
        var b = connectable.bounds;
        if (b.width <= 0 || b.height <= 0) {
            return b;
        }
        var bounds = {
            x: b.x - offset,
            y: b.y - offset,
            width: b.width + 2 * offset,
            height: b.height + 2 * offset
        };
        if (refPoint.x >= bounds.x && bounds.x + bounds.width >= refPoint.x) {
            if (refPoint.y < bounds.y + 0.5 * bounds.height)
                return { x: refPoint.x, y: bounds.y };
            else
                return { x: refPoint.x, y: bounds.y + bounds.height };
        }
        if (refPoint.y >= bounds.y && bounds.y + bounds.height >= refPoint.y) {
            if (refPoint.x < bounds.x + 0.5 * bounds.width)
                return { x: bounds.x, y: refPoint.y };
            else
                return { x: bounds.x + bounds.width, y: refPoint.y };
        }
        return geometry_1.center(bounds);
    };
    var ManhattanRectangularAnchor_1;
    ManhattanRectangularAnchor.KIND = manhattan_edge_router_1.ManhattanEdgeRouter.KIND + ':' + anchor_1.RECTANGULAR_ANCHOR_KIND;
    ManhattanRectangularAnchor = ManhattanRectangularAnchor_1 = __decorate([
        inversify_1.injectable()
    ], ManhattanRectangularAnchor);
    return ManhattanRectangularAnchor;
}());
exports.ManhattanRectangularAnchor = ManhattanRectangularAnchor;
var ManhattanDiamondAnchor = /** @class */ (function () {
    function ManhattanDiamondAnchor() {
    }
    ManhattanDiamondAnchor_1 = ManhattanDiamondAnchor;
    Object.defineProperty(ManhattanDiamondAnchor.prototype, "kind", {
        get: function () {
            return ManhattanDiamondAnchor_1.KIND;
        },
        enumerable: true,
        configurable: true
    });
    ManhattanDiamondAnchor.prototype.getAnchor = function (connectable, refPoint, offset) {
        if (offset === void 0) { offset = 0; }
        var b = connectable.bounds;
        if (b.width <= 0 || b.height <= 0) {
            return b;
        }
        var bounds = {
            x: b.x - offset,
            y: b.y - offset,
            width: b.width + 2 * offset,
            height: b.height + 2 * offset
        };
        var c = geometry_1.center(bounds);
        var outline = undefined;
        var refLine = undefined;
        if (refPoint.x >= bounds.x && refPoint.x <= bounds.x + bounds.width) {
            if (bounds.x + 0.5 * bounds.width >= refPoint.x) {
                refLine = new geometry_1.PointToPointLine(refPoint, { x: refPoint.x, y: c.y });
                if (refPoint.y < c.y)
                    outline = new geometry_1.PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y });
                else
                    outline = new geometry_1.PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y + bounds.height });
            }
            else {
                refLine = new geometry_1.PointToPointLine(refPoint, { x: refPoint.x, y: c.y });
                if (refPoint.y < c.y)
                    outline = new geometry_1.PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y });
                else
                    outline = new geometry_1.PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y + bounds.height });
            }
        }
        else if (refPoint.y >= bounds.y && refPoint.y <= bounds.y + bounds.height) {
            if (bounds.y + 0.5 * bounds.height >= refPoint.y) {
                refLine = new geometry_1.PointToPointLine(refPoint, { x: c.x, y: refPoint.y });
                if (refPoint.x < c.x)
                    outline = new geometry_1.PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y });
                else
                    outline = new geometry_1.PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y });
            }
            else {
                refLine = new geometry_1.PointToPointLine(refPoint, { x: c.x, y: refPoint.y });
                if (refPoint.x < c.x)
                    outline = new geometry_1.PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y + bounds.height });
                else
                    outline = new geometry_1.PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y + bounds.height });
            }
        }
        if (!!refLine && !!outline)
            return geometry_1.intersection(outline, refLine);
        else
            return c;
    };
    var ManhattanDiamondAnchor_1;
    ManhattanDiamondAnchor.KIND = manhattan_edge_router_1.ManhattanEdgeRouter.KIND + ':' + anchor_1.DIAMOND_ANCHOR_KIND;
    ManhattanDiamondAnchor = ManhattanDiamondAnchor_1 = __decorate([
        inversify_1.injectable()
    ], ManhattanDiamondAnchor);
    return ManhattanDiamondAnchor;
}());
exports.ManhattanDiamondAnchor = ManhattanDiamondAnchor;
var ManhattanEllipticAnchor = /** @class */ (function () {
    function ManhattanEllipticAnchor() {
    }
    ManhattanEllipticAnchor_1 = ManhattanEllipticAnchor;
    Object.defineProperty(ManhattanEllipticAnchor.prototype, "kind", {
        get: function () {
            return ManhattanEllipticAnchor_1.KIND;
        },
        enumerable: true,
        configurable: true
    });
    ManhattanEllipticAnchor.prototype.getAnchor = function (connectable, refPoint, offset) {
        if (offset === void 0) { offset = 0; }
        var b = connectable.bounds;
        if (b.width <= 0 || b.height <= 0) {
            return b;
        }
        var bounds = {
            x: b.x - offset,
            y: b.y - offset,
            width: b.width + 2 * offset,
            height: b.height + 2 * offset
        };
        var c = geometry_1.center(bounds);
        var refRelative = geometry_1.subtract(refPoint, c);
        var x = c.x;
        var y = c.y;
        if (refPoint.x >= bounds.x && bounds.x + bounds.width >= refPoint.x) {
            x += refRelative.x;
            var dy = 0.5 * bounds.height * Math.sqrt(1 - (refRelative.x * refRelative.x) / (0.25 * bounds.width * bounds.width));
            if (refRelative.y < 0)
                y -= dy;
            else
                y += dy;
        }
        else if (refPoint.y >= bounds.y && bounds.y + bounds.height >= refPoint.y) {
            y += refRelative.y;
            var dx = 0.5 * bounds.width * Math.sqrt(1 - (refRelative.y * refRelative.y) / (0.25 * bounds.height * bounds.height));
            if (refRelative.x < 0)
                x -= dx;
            else
                x += dx;
        }
        return { x: x, y: y };
    };
    var ManhattanEllipticAnchor_1;
    ManhattanEllipticAnchor.KIND = manhattan_edge_router_1.ManhattanEdgeRouter.KIND + ':' + anchor_1.ELLIPTIC_ANCHOR_KIND;
    ManhattanEllipticAnchor = ManhattanEllipticAnchor_1 = __decorate([
        inversify_1.injectable()
    ], ManhattanEllipticAnchor);
    return ManhattanEllipticAnchor;
}());
exports.ManhattanEllipticAnchor = ManhattanEllipticAnchor;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/routing/manhattan-edge-router.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/routing/manhattan-edge-router.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../node_modules/sprotty/lib/base/model/smodel-utils.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var linear_edge_router_1 = __webpack_require__(/*! ./linear-edge-router */ "../node_modules/sprotty/lib/features/routing/linear-edge-router.js");
var model_1 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/routing/model.js");
var ManhattanEdgeRouter = /** @class */ (function (_super) {
    __extends(ManhattanEdgeRouter, _super);
    function ManhattanEdgeRouter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ManhattanEdgeRouter.prototype, "kind", {
        get: function () {
            return ManhattanEdgeRouter.KIND;
        },
        enumerable: true,
        configurable: true
    });
    ManhattanEdgeRouter.prototype.getOptions = function (edge) {
        return {
            standardDistance: 20,
            minimalPointDistance: 3,
            selfEdgeOffset: 0.25
        };
    };
    ManhattanEdgeRouter.prototype.route = function (edge) {
        if (!edge.source || !edge.target)
            return [];
        var routedCorners = this.createRoutedCorners(edge);
        var sourceRefPoint = routedCorners[0]
            || smodel_utils_1.translatePoint(geometry_1.center(edge.target.bounds), edge.target.parent, edge.parent);
        var sourceAnchor = this.getTranslatedAnchor(edge.source, sourceRefPoint, edge.parent, edge, edge.sourceAnchorCorrection);
        var targetRefPoint = routedCorners[routedCorners.length - 1]
            || smodel_utils_1.translatePoint(geometry_1.center(edge.source.bounds), edge.source.parent, edge.parent);
        var targetAnchor = this.getTranslatedAnchor(edge.target, targetRefPoint, edge.parent, edge, edge.targetAnchorCorrection);
        if (!sourceAnchor || !targetAnchor)
            return [];
        var routedPoints = [];
        routedPoints.push(__assign({ kind: 'source' }, sourceAnchor));
        routedCorners.forEach(function (corner) { return routedPoints.push(corner); });
        routedPoints.push(__assign({ kind: 'target' }, targetAnchor));
        return routedPoints;
    };
    ManhattanEdgeRouter.prototype.createRoutedCorners = function (edge) {
        var sourceAnchors = new linear_edge_router_1.DefaultAnchors(edge.source, edge.parent, 'source');
        var targetAnchors = new linear_edge_router_1.DefaultAnchors(edge.target, edge.parent, 'target');
        if (edge.routingPoints.length > 0) {
            var routingPointsCopy = edge.routingPoints.slice();
            this.cleanupRoutingPoints(edge, routingPointsCopy, false, true);
            if (routingPointsCopy.length > 0)
                return routingPointsCopy.map(function (routingPoint, index) {
                    return __assign({ kind: 'linear', pointIndex: index }, routingPoint);
                });
        }
        var options = this.getOptions(edge);
        var corners = this.calculateDefaultCorners(edge, sourceAnchors, targetAnchors, options);
        return corners.map(function (corner) {
            return __assign({ kind: 'linear' }, corner);
        });
    };
    ManhattanEdgeRouter.prototype.createRoutingHandles = function (edge) {
        var routedPoints = this.route(edge);
        this.commitRoute(edge, routedPoints);
        if (routedPoints.length > 0) {
            this.addHandle(edge, 'source', 'routing-point', -2);
            for (var i = 0; i < routedPoints.length - 1; ++i)
                this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', i - 1);
            this.addHandle(edge, 'target', 'routing-point', routedPoints.length - 2);
        }
    };
    ManhattanEdgeRouter.prototype.getInnerHandlePosition = function (edge, route, handle) {
        var fraction = this.getFraction(handle.kind);
        if (fraction !== undefined) {
            var _a = this.findRouteSegment(edge, route, handle.pointIndex), start = _a.start, end = _a.end;
            if (start !== undefined && end !== undefined)
                return geometry_1.linear(start, end, fraction);
        }
        return undefined;
    };
    ManhattanEdgeRouter.prototype.getFraction = function (kind) {
        switch (kind) {
            case 'manhattan-50%': return 0.5;
            default: return undefined;
        }
    };
    ManhattanEdgeRouter.prototype.commitRoute = function (edge, routedPoints) {
        var newRoutingPoints = [];
        for (var i = 1; i < routedPoints.length - 1; ++i)
            newRoutingPoints.push({ x: routedPoints[i].x, y: routedPoints[i].y });
        edge.routingPoints = newRoutingPoints;
    };
    ManhattanEdgeRouter.prototype.applyInnerHandleMoves = function (edge, moves) {
        var _this = this;
        var route = this.route(edge);
        var routingPoints = edge.routingPoints;
        var minimalPointDistance = this.getOptions(edge).minimalPointDistance;
        moves.forEach(function (move) {
            var handle = move.handle;
            var index = handle.pointIndex;
            var correctedX = _this.correctX(routingPoints, index, move.toPosition.x, minimalPointDistance);
            var correctedY = _this.correctY(routingPoints, index, move.toPosition.y, minimalPointDistance);
            switch (handle.kind) {
                case 'manhattan-50%':
                    if (index < 0) {
                        if (geometry_1.almostEquals(route[0].x, route[1].x))
                            _this.alignX(routingPoints, 0, correctedX);
                        else
                            _this.alignY(routingPoints, 0, correctedY);
                    }
                    else if (index < routingPoints.length - 1) {
                        if (geometry_1.almostEquals(routingPoints[index].x, routingPoints[index + 1].x)) {
                            _this.alignX(routingPoints, index, correctedX);
                            _this.alignX(routingPoints, index + 1, correctedX);
                        }
                        else {
                            _this.alignY(routingPoints, index, correctedY);
                            _this.alignY(routingPoints, index + 1, correctedY);
                        }
                    }
                    else {
                        if (geometry_1.almostEquals(route[route.length - 2].x, route[route.length - 1].x))
                            _this.alignX(routingPoints, routingPoints.length - 1, correctedX);
                        else
                            _this.alignY(routingPoints, routingPoints.length - 1, correctedY);
                    }
                    break;
            }
        });
    };
    ManhattanEdgeRouter.prototype.correctX = function (routingPoints, index, x, minimalPointDistance) {
        if (index > 0 && Math.abs(x - routingPoints[index - 1].x) < minimalPointDistance)
            return routingPoints[index - 1].x;
        else if (index < routingPoints.length - 2 && Math.abs(x - routingPoints[index + 2].x) < minimalPointDistance)
            return routingPoints[index + 2].x;
        else
            return x;
    };
    ManhattanEdgeRouter.prototype.alignX = function (routingPoints, index, x) {
        if (index >= 0 && index < routingPoints.length)
            routingPoints[index] = {
                x: x,
                y: routingPoints[index].y
            };
    };
    ManhattanEdgeRouter.prototype.correctY = function (routingPoints, index, y, minimalPointDistance) {
        if (index > 0 && Math.abs(y - routingPoints[index - 1].y) < minimalPointDistance)
            return routingPoints[index - 1].y;
        else if (index < routingPoints.length - 2 && Math.abs(y - routingPoints[index + 2].y) < minimalPointDistance)
            return routingPoints[index + 2].y;
        else
            return y;
    };
    ManhattanEdgeRouter.prototype.alignY = function (routingPoints, index, y) {
        if (index >= 0 && index < routingPoints.length)
            routingPoints[index] = {
                x: routingPoints[index].x,
                y: y
            };
    };
    ManhattanEdgeRouter.prototype.cleanupRoutingPoints = function (edge, routingPoints, updateHandles, addRoutingPoints) {
        var sourceAnchors = new linear_edge_router_1.DefaultAnchors(edge.source, edge.parent, "source");
        var targetAnchors = new linear_edge_router_1.DefaultAnchors(edge.target, edge.parent, "target");
        if (this.resetRoutingPointsOnReconnect(edge, routingPoints, updateHandles, sourceAnchors, targetAnchors))
            return;
        // delete leading RPs inside the bounds of the source
        for (var i = 0; i < routingPoints.length; ++i)
            if (geometry_1.includes(sourceAnchors.bounds, routingPoints[i])) {
                routingPoints.splice(0, 1);
                if (updateHandles) {
                    this.removeHandle(edge, -1);
                }
            }
            else {
                break;
            }
        // delete trailing RPs inside the bounds of the target
        for (var i = routingPoints.length - 1; i >= 0; --i)
            if (geometry_1.includes(targetAnchors.bounds, routingPoints[i])) {
                routingPoints.splice(i, 1);
                if (updateHandles) {
                    this.removeHandle(edge, i);
                }
            }
            else {
                break;
            }
        if (routingPoints.length >= 2) {
            var options = this.getOptions(edge);
            for (var i = routingPoints.length - 2; i >= 0; --i) {
                if (geometry_1.manhattanDistance(routingPoints[i], routingPoints[i + 1]) < options.minimalPointDistance) {
                    routingPoints.splice(i, 2);
                    --i;
                    if (updateHandles) {
                        this.removeHandle(edge, i - 1);
                        this.removeHandle(edge, i);
                    }
                }
            }
        }
        if (addRoutingPoints) {
            this.addAdditionalCorner(edge, routingPoints, sourceAnchors, targetAnchors, updateHandles);
            this.addAdditionalCorner(edge, routingPoints, targetAnchors, sourceAnchors, updateHandles);
            this.manhattanify(edge, routingPoints);
        }
    };
    ManhattanEdgeRouter.prototype.removeHandle = function (edge, pointIndex) {
        var toBeRemoved = [];
        edge.children.forEach(function (child) {
            if (child instanceof model_1.SRoutingHandle) {
                if (child.pointIndex > pointIndex)
                    --child.pointIndex;
                else if (child.pointIndex === pointIndex)
                    toBeRemoved.push(child);
            }
        });
        toBeRemoved.forEach(function (child) { return edge.remove(child); });
    };
    ManhattanEdgeRouter.prototype.addAdditionalCorner = function (edge, routingPoints, currentAnchors, otherAnchors, updateHandles) {
        if (routingPoints.length === 0)
            return;
        var refPoint = currentAnchors.kind === 'source' ? routingPoints[0] : routingPoints[routingPoints.length - 1];
        var index = currentAnchors.kind === 'source' ? 0 : routingPoints.length;
        var shiftIndex = index - (currentAnchors.kind === 'source' ? 1 : 0);
        var isHorizontal;
        if (routingPoints.length > 1) {
            isHorizontal = index === 0
                ? geometry_1.almostEquals(routingPoints[0].x, routingPoints[1].x)
                : geometry_1.almostEquals(routingPoints[routingPoints.length - 1].x, routingPoints[routingPoints.length - 2].x);
        }
        else {
            var nearestSide = otherAnchors.getNearestSide(refPoint);
            isHorizontal = nearestSide === linear_edge_router_1.Side.TOP || nearestSide === linear_edge_router_1.Side.BOTTOM;
        }
        if (isHorizontal) {
            if (refPoint.y < currentAnchors.get(linear_edge_router_1.Side.TOP).y || refPoint.y > currentAnchors.get(linear_edge_router_1.Side.BOTTOM).y) {
                var newPoint = { x: currentAnchors.get(linear_edge_router_1.Side.TOP).x, y: refPoint.y };
                routingPoints.splice(index, 0, newPoint);
                if (updateHandles) {
                    edge.children.forEach(function (child) {
                        if (child instanceof model_1.SRoutingHandle && child.pointIndex >= shiftIndex)
                            ++child.pointIndex;
                    });
                    this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', shiftIndex);
                }
            }
        }
        else {
            if (refPoint.x < currentAnchors.get(linear_edge_router_1.Side.LEFT).x || refPoint.x > currentAnchors.get(linear_edge_router_1.Side.RIGHT).x) {
                var newPoint = { x: refPoint.x, y: currentAnchors.get(linear_edge_router_1.Side.LEFT).y };
                routingPoints.splice(index, 0, newPoint);
                if (updateHandles) {
                    edge.children.forEach(function (child) {
                        if (child instanceof model_1.SRoutingHandle && child.pointIndex >= shiftIndex)
                            ++child.pointIndex;
                    });
                    this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', shiftIndex);
                }
            }
        }
    };
    /**
     * Add artificial routing points to keep all angles rectilinear.
     *
     * This makes edge morphing look a lot smoother, where RP positions are interpolated
     * linearly probably resulting in non-rectilinear angles. We don't add handles for
     * these additional RPs.
     */
    ManhattanEdgeRouter.prototype.manhattanify = function (edge, routingPoints) {
        for (var i = 1; i < routingPoints.length; ++i) {
            var isVertical = Math.abs(routingPoints[i - 1].x - routingPoints[i].x) < 1;
            var isHorizontal = Math.abs(routingPoints[i - 1].y - routingPoints[i].y) < 1;
            if (!isVertical && !isHorizontal) {
                routingPoints.splice(i, 0, {
                    x: routingPoints[i - 1].x,
                    y: routingPoints[i].y
                });
                ++i;
            }
        }
    };
    ManhattanEdgeRouter.prototype.calculateDefaultCorners = function (edge, sourceAnchors, targetAnchors, options) {
        var selfEdge = _super.prototype.calculateDefaultCorners.call(this, edge, sourceAnchors, targetAnchors, options);
        if (selfEdge.length > 0)
            return selfEdge;
        var bestAnchors = this.getBestConnectionAnchors(edge, sourceAnchors, targetAnchors, options);
        var sourceSide = bestAnchors.source;
        var targetSide = bestAnchors.target;
        var corners = [];
        var startPoint = sourceAnchors.get(sourceSide);
        var endPoint = targetAnchors.get(targetSide);
        switch (sourceSide) {
            case linear_edge_router_1.Side.RIGHT:
                switch (targetSide) {
                    case linear_edge_router_1.Side.BOTTOM:
                        corners.push({ x: endPoint.x, y: startPoint.y });
                        break;
                    case linear_edge_router_1.Side.TOP:
                        corners.push({ x: endPoint.x, y: startPoint.y });
                        break;
                    case linear_edge_router_1.Side.RIGHT:
                        corners.push({ x: Math.max(startPoint.x, endPoint.x) + 1.5 * options.standardDistance, y: startPoint.y });
                        corners.push({ x: Math.max(startPoint.x, endPoint.x) + 1.5 * options.standardDistance, y: endPoint.y });
                        break;
                    case linear_edge_router_1.Side.LEFT:
                        if (endPoint.y !== startPoint.y) {
                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: startPoint.y });
                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: endPoint.y });
                        }
                        break;
                }
                break;
            case linear_edge_router_1.Side.LEFT:
                switch (targetSide) {
                    case linear_edge_router_1.Side.BOTTOM:
                        corners.push({ x: endPoint.x, y: startPoint.y });
                        break;
                    case linear_edge_router_1.Side.TOP:
                        corners.push({ x: endPoint.x, y: startPoint.y });
                        break;
                    default:
                        endPoint = targetAnchors.get(linear_edge_router_1.Side.RIGHT);
                        if (endPoint.y !== startPoint.y) {
                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: startPoint.y });
                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: endPoint.y });
                        }
                        break;
                }
                break;
            case linear_edge_router_1.Side.TOP:
                switch (targetSide) {
                    case linear_edge_router_1.Side.RIGHT:
                        if ((endPoint.x - startPoint.x) > 0) {
                            corners.push({ x: startPoint.x, y: startPoint.y - options.standardDistance });
                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: startPoint.y - options.standardDistance });
                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: endPoint.y });
                        }
                        else {
                            corners.push({ x: startPoint.x, y: endPoint.y });
                        }
                        break;
                    case linear_edge_router_1.Side.LEFT:
                        if ((endPoint.x - startPoint.x) < 0) {
                            corners.push({ x: startPoint.x, y: startPoint.y - options.standardDistance });
                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: startPoint.y - options.standardDistance });
                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: endPoint.y });
                        }
                        else {
                            corners.push({ x: startPoint.x, y: endPoint.y });
                        }
                        break;
                    case linear_edge_router_1.Side.TOP:
                        corners.push({ x: startPoint.x, y: Math.min(startPoint.y, endPoint.y) - 1.5 * options.standardDistance });
                        corners.push({ x: endPoint.x, y: Math.min(startPoint.y, endPoint.y) - 1.5 * options.standardDistance });
                        break;
                    case linear_edge_router_1.Side.BOTTOM:
                        if (endPoint.x !== startPoint.x) {
                            corners.push({ x: startPoint.x, y: (startPoint.y + endPoint.y) / 2 });
                            corners.push({ x: endPoint.x, y: (startPoint.y + endPoint.y) / 2 });
                        }
                        break;
                }
                break;
            case linear_edge_router_1.Side.BOTTOM:
                switch (targetSide) {
                    case linear_edge_router_1.Side.RIGHT:
                        if ((endPoint.x - startPoint.x) > 0) {
                            corners.push({ x: startPoint.x, y: startPoint.y + options.standardDistance });
                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: startPoint.y + options.standardDistance });
                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: endPoint.y });
                        }
                        else {
                            corners.push({ x: startPoint.x, y: endPoint.y });
                        }
                        break;
                    case linear_edge_router_1.Side.LEFT:
                        if ((endPoint.x - startPoint.x) < 0) {
                            corners.push({ x: startPoint.x, y: startPoint.y + options.standardDistance });
                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: startPoint.y + options.standardDistance });
                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: endPoint.y });
                        }
                        else {
                            corners.push({ x: startPoint.x, y: endPoint.y });
                        }
                        break;
                    default:
                        endPoint = targetAnchors.get(linear_edge_router_1.Side.TOP);
                        if (endPoint.x !== startPoint.x) {
                            corners.push({ x: startPoint.x, y: (startPoint.y + endPoint.y) / 2 });
                            corners.push({ x: endPoint.x, y: (startPoint.y + endPoint.y) / 2 });
                        }
                        break;
                }
                break;
        }
        return corners;
    };
    ManhattanEdgeRouter.prototype.getBestConnectionAnchors = function (edge, sourceAnchors, targetAnchors, options) {
        // distance is enough
        var sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.RIGHT);
        var targetPoint = targetAnchors.get(linear_edge_router_1.Side.LEFT);
        if ((targetPoint.x - sourcePoint.x) > options.standardDistance)
            return { source: linear_edge_router_1.Side.RIGHT, target: linear_edge_router_1.Side.LEFT };
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.LEFT);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.RIGHT);
        if ((sourcePoint.x - targetPoint.x) > options.standardDistance)
            return { source: linear_edge_router_1.Side.LEFT, target: linear_edge_router_1.Side.RIGHT };
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.TOP);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.BOTTOM);
        if ((sourcePoint.y - targetPoint.y) > options.standardDistance)
            return { source: linear_edge_router_1.Side.TOP, target: linear_edge_router_1.Side.BOTTOM };
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.BOTTOM);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.TOP);
        if ((targetPoint.y - sourcePoint.y) > options.standardDistance)
            return { source: linear_edge_router_1.Side.BOTTOM, target: linear_edge_router_1.Side.TOP };
        // One additional point
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.RIGHT);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.TOP);
        if (((targetPoint.x - sourcePoint.x) > 0.5 * options.standardDistance) && ((targetPoint.y - sourcePoint.y) > options.standardDistance))
            return { source: linear_edge_router_1.Side.RIGHT, target: linear_edge_router_1.Side.TOP };
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.BOTTOM);
        if (((targetPoint.x - sourcePoint.x) > 0.5 * options.standardDistance) && ((sourcePoint.y - targetPoint.y) > options.standardDistance))
            return { source: linear_edge_router_1.Side.RIGHT, target: linear_edge_router_1.Side.BOTTOM };
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.LEFT);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.BOTTOM);
        if (((sourcePoint.x - targetPoint.x) > 0.5 * options.standardDistance) && ((sourcePoint.y - targetPoint.y) > options.standardDistance))
            return { source: linear_edge_router_1.Side.LEFT, target: linear_edge_router_1.Side.BOTTOM };
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.TOP);
        if (((sourcePoint.x - targetPoint.x) > 0.5 * options.standardDistance) && ((targetPoint.y - sourcePoint.y) > options.standardDistance))
            return { source: linear_edge_router_1.Side.LEFT, target: linear_edge_router_1.Side.TOP };
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.TOP);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.RIGHT);
        if (((sourcePoint.y - targetPoint.y) > 0.5 * options.standardDistance) && ((sourcePoint.x - targetPoint.x) > options.standardDistance))
            return { source: linear_edge_router_1.Side.TOP, target: linear_edge_router_1.Side.RIGHT };
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.LEFT);
        if (((sourcePoint.y - targetPoint.y) > 0.5 * options.standardDistance) && ((targetPoint.x - sourcePoint.x) > options.standardDistance))
            return { source: linear_edge_router_1.Side.TOP, target: linear_edge_router_1.Side.LEFT };
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.BOTTOM);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.RIGHT);
        if (((targetPoint.y - sourcePoint.y) > 0.5 * options.standardDistance) && ((sourcePoint.x - targetPoint.x) > options.standardDistance))
            return { source: linear_edge_router_1.Side.BOTTOM, target: linear_edge_router_1.Side.RIGHT };
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.LEFT);
        if (((targetPoint.y - sourcePoint.y) > 0.5 * options.standardDistance) && ((targetPoint.x - sourcePoint.x) > options.standardDistance))
            return { source: linear_edge_router_1.Side.BOTTOM, target: linear_edge_router_1.Side.LEFT };
        // Two points
        // priority NN >> EE >> NE >> NW >> SE >> SW
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.TOP);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.TOP);
        if (!geometry_1.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.includes(sourceAnchors.bounds, targetPoint)) {
            if ((sourcePoint.y - targetPoint.y) < 0) {
                if (Math.abs(sourcePoint.x - targetPoint.x) > ((sourceAnchors.bounds.width + options.standardDistance) / 2))
                    return { source: linear_edge_router_1.Side.TOP, target: linear_edge_router_1.Side.TOP };
            }
            else {
                if (Math.abs(sourcePoint.x - targetPoint.x) > (targetAnchors.bounds.width / 2))
                    return { source: linear_edge_router_1.Side.TOP, target: linear_edge_router_1.Side.TOP };
            }
        }
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.RIGHT);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.RIGHT);
        if (!geometry_1.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.includes(sourceAnchors.bounds, targetPoint)) {
            if ((sourcePoint.x - targetPoint.x) > 0) {
                if (Math.abs(sourcePoint.y - targetPoint.y) > ((sourceAnchors.bounds.height + options.standardDistance) / 2))
                    return { source: linear_edge_router_1.Side.RIGHT, target: linear_edge_router_1.Side.RIGHT };
            }
            else if (Math.abs(sourcePoint.y - targetPoint.y) > (targetAnchors.bounds.height / 2))
                return { source: linear_edge_router_1.Side.RIGHT, target: linear_edge_router_1.Side.RIGHT };
        }
        // Secondly, judge NE NW is available
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.TOP);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.RIGHT);
        if (!geometry_1.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.includes(sourceAnchors.bounds, targetPoint))
            return { source: linear_edge_router_1.Side.TOP, target: linear_edge_router_1.Side.RIGHT };
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.LEFT);
        if (!geometry_1.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.includes(sourceAnchors.bounds, targetPoint))
            return { source: linear_edge_router_1.Side.TOP, target: linear_edge_router_1.Side.LEFT };
        // Finally, judge SE SW is available
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.BOTTOM);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.RIGHT);
        if (!geometry_1.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.includes(sourceAnchors.bounds, targetPoint))
            return { source: linear_edge_router_1.Side.BOTTOM, target: linear_edge_router_1.Side.RIGHT };
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.LEFT);
        if (!geometry_1.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.includes(sourceAnchors.bounds, targetPoint))
            return { source: linear_edge_router_1.Side.BOTTOM, target: linear_edge_router_1.Side.LEFT };
        // Only to return to the
        return { source: linear_edge_router_1.Side.RIGHT, target: linear_edge_router_1.Side.BOTTOM };
    };
    ManhattanEdgeRouter.KIND = 'manhattan';
    return ManhattanEdgeRouter;
}(linear_edge_router_1.LinearEdgeRouter));
exports.ManhattanEdgeRouter = ManhattanEdgeRouter;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/routing/model.js":
/*!*************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/routing/model.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "../node_modules/sprotty/lib/features/bounds/model.js");
var delete_1 = __webpack_require__(/*! ../edit/delete */ "../node_modules/sprotty/lib/features/edit/delete.js");
var model_2 = __webpack_require__(/*! ../select/model */ "../node_modules/sprotty/lib/features/select/model.js");
var model_3 = __webpack_require__(/*! ../hover/model */ "../node_modules/sprotty/lib/features/hover/model.js");
var model_4 = __webpack_require__(/*! ../move/model */ "../node_modules/sprotty/lib/features/move/model.js");
var SRoutableElement = /** @class */ (function (_super) {
    __extends(SRoutableElement, _super);
    function SRoutableElement() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.routingPoints = [];
        return _this;
    }
    Object.defineProperty(SRoutableElement.prototype, "source", {
        get: function () {
            return this.index.getById(this.sourceId);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SRoutableElement.prototype, "target", {
        get: function () {
            return this.index.getById(this.targetId);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SRoutableElement.prototype, "bounds", {
        get: function () {
            // this should also work for splines, which have the convex hull property
            return this.routingPoints.reduce(function (bounds, routingPoint) { return geometry_1.combine(bounds, {
                x: routingPoint.x,
                y: routingPoint.y,
                width: 0,
                height: 0
            }); }, geometry_1.EMPTY_BOUNDS);
        },
        enumerable: true,
        configurable: true
    });
    return SRoutableElement;
}(smodel_1.SChildElement));
exports.SRoutableElement = SRoutableElement;
exports.connectableFeature = Symbol('connectableFeature');
function isConnectable(element) {
    return element.hasFeature(exports.connectableFeature) && element.canConnect;
}
exports.isConnectable = isConnectable;
/**
 * A connectable element is one that can have outgoing and incoming edges, i.e. it can be the source
 * or target element of an edge. There are two kinds of connectable elements: nodes (`SNode`) and
 * ports (`SPort`). A node represents a main entity, while a port is a connection point inside a node.
 */
var SConnectableElement = /** @class */ (function (_super) {
    __extends(SConnectableElement, _super);
    function SConnectableElement() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.strokeWidth = 0;
        return _this;
    }
    Object.defineProperty(SConnectableElement.prototype, "incomingEdges", {
        /**
         * The incoming edges of this connectable element. They are resolved by the index, which must
         * be an `SGraphIndex`.
         */
        get: function () {
            return this.index.getIncomingEdges(this);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SConnectableElement.prototype, "outgoingEdges", {
        /**
         * The outgoing edges of this connectable element. They are resolved by the index, which must
         * be an `SGraphIndex`.
         */
        get: function () {
            return this.index.getOutgoingEdges(this);
        },
        enumerable: true,
        configurable: true
    });
    SConnectableElement.prototype.canConnect = function (routable, role) {
        return true;
    };
    return SConnectableElement;
}(model_1.SShapeElement));
exports.SConnectableElement = SConnectableElement;
var SRoutingHandle = /** @class */ (function (_super) {
    __extends(SRoutingHandle, _super);
    function SRoutingHandle() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** Whether the routing point is being dragged. */
        _this.editMode = false;
        _this.hoverFeedback = false;
        _this.selected = false;
        return _this;
    }
    /**
     * SRoutingHandles are created using the constructor, so we hard-wire the
     * default features
     */
    SRoutingHandle.prototype.hasFeature = function (feature) {
        return SRoutingHandle.DEFAULT_FEATURES.indexOf(feature) !== -1;
    };
    SRoutingHandle.DEFAULT_FEATURES = [model_2.selectFeature, model_4.moveFeature, model_3.hoverFeedbackFeature];
    return SRoutingHandle;
}(smodel_1.SChildElement));
exports.SRoutingHandle = SRoutingHandle;
var SDanglingAnchor = /** @class */ (function (_super) {
    __extends(SDanglingAnchor, _super);
    function SDanglingAnchor() {
        var _this = _super.call(this) || this;
        _this.type = 'dangling-anchor';
        _this.size = { width: 0, height: 0 };
        return _this;
    }
    SDanglingAnchor.DEFAULT_FEATURES = [delete_1.deletableFeature];
    return SDanglingAnchor;
}(SConnectableElement));
exports.SDanglingAnchor = SDanglingAnchor;
exports.edgeInProgressID = 'edge-in-progress';
exports.edgeInProgressTargetHandleID = exports.edgeInProgressID + '-target-anchor';


/***/ }),

/***/ "../node_modules/sprotty/lib/features/routing/polyline-anchors.js":
/*!************************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/routing/polyline-anchors.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var anchor_1 = __webpack_require__(/*! ./anchor */ "../node_modules/sprotty/lib/features/routing/anchor.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var polyline_edge_router_1 = __webpack_require__(/*! ./polyline-edge-router */ "../node_modules/sprotty/lib/features/routing/polyline-edge-router.js");
var EllipseAnchor = /** @class */ (function () {
    function EllipseAnchor() {
    }
    Object.defineProperty(EllipseAnchor.prototype, "kind", {
        get: function () {
            return polyline_edge_router_1.PolylineEdgeRouter.KIND + ':' + anchor_1.ELLIPTIC_ANCHOR_KIND;
        },
        enumerable: true,
        configurable: true
    });
    EllipseAnchor.prototype.getAnchor = function (connectable, refPoint, offset) {
        if (offset === void 0) { offset = 0; }
        var bounds = connectable.bounds;
        var c = geometry_1.center(bounds);
        var dx = c.x - refPoint.x;
        var dy = c.y - refPoint.y;
        var distance = Math.sqrt(dx * dx + dy * dy);
        var normX = (dx / distance) || 0;
        var normY = (dy / distance) || 0;
        return {
            x: c.x - normX * (0.5 * bounds.width + offset),
            y: c.y - normY * (0.5 * bounds.height + offset)
        };
    };
    EllipseAnchor = __decorate([
        inversify_1.injectable()
    ], EllipseAnchor);
    return EllipseAnchor;
}());
exports.EllipseAnchor = EllipseAnchor;
var RectangleAnchor = /** @class */ (function () {
    function RectangleAnchor() {
    }
    Object.defineProperty(RectangleAnchor.prototype, "kind", {
        get: function () {
            return polyline_edge_router_1.PolylineEdgeRouter.KIND + ':' + anchor_1.RECTANGULAR_ANCHOR_KIND;
        },
        enumerable: true,
        configurable: true
    });
    RectangleAnchor.prototype.getAnchor = function (connectable, refPoint, offset) {
        if (offset === void 0) { offset = 0; }
        var bounds = connectable.bounds;
        var c = geometry_1.center(bounds);
        var finder = new NearestPointFinder(c, refPoint);
        if (!geometry_1.almostEquals(c.y, refPoint.y)) {
            var xTop = this.getXIntersection(bounds.y, c, refPoint);
            if (xTop >= bounds.x && xTop <= bounds.x + bounds.width)
                finder.addCandidate(xTop, bounds.y - offset);
            var xBottom = this.getXIntersection(bounds.y + bounds.height, c, refPoint);
            if (xBottom >= bounds.x && xBottom <= bounds.x + bounds.width)
                finder.addCandidate(xBottom, bounds.y + bounds.height + offset);
        }
        if (!geometry_1.almostEquals(c.x, refPoint.x)) {
            var yLeft = this.getYIntersection(bounds.x, c, refPoint);
            if (yLeft >= bounds.y && yLeft <= bounds.y + bounds.height)
                finder.addCandidate(bounds.x - offset, yLeft);
            var yRight = this.getYIntersection(bounds.x + bounds.width, c, refPoint);
            if (yRight >= bounds.y && yRight <= bounds.y + bounds.height)
                finder.addCandidate(bounds.x + bounds.width + offset, yRight);
        }
        return finder.best;
    };
    RectangleAnchor.prototype.getXIntersection = function (yIntersection, centerPoint, point) {
        var t = (yIntersection - centerPoint.y) / (point.y - centerPoint.y);
        return (point.x - centerPoint.x) * t + centerPoint.x;
    };
    RectangleAnchor.prototype.getYIntersection = function (xIntersection, centerPoint, point) {
        var t = (xIntersection - centerPoint.x) / (point.x - centerPoint.x);
        return (point.y - centerPoint.y) * t + centerPoint.y;
    };
    RectangleAnchor = __decorate([
        inversify_1.injectable()
    ], RectangleAnchor);
    return RectangleAnchor;
}());
exports.RectangleAnchor = RectangleAnchor;
var NearestPointFinder = /** @class */ (function () {
    function NearestPointFinder(centerPoint, refPoint) {
        this.centerPoint = centerPoint;
        this.refPoint = refPoint;
        this.currentDist = -1;
    }
    NearestPointFinder.prototype.addCandidate = function (x, y) {
        var dx = this.refPoint.x - x;
        var dy = this.refPoint.y - y;
        var dist = dx * dx + dy * dy;
        if (this.currentDist < 0 || dist < this.currentDist) {
            this.currentBest = {
                x: x,
                y: y
            };
            this.currentDist = dist;
        }
    };
    Object.defineProperty(NearestPointFinder.prototype, "best", {
        get: function () {
            if (this.currentBest === undefined)
                return this.centerPoint;
            else
                return this.currentBest;
        },
        enumerable: true,
        configurable: true
    });
    return NearestPointFinder;
}());
var DiamondAnchor = /** @class */ (function () {
    function DiamondAnchor() {
    }
    Object.defineProperty(DiamondAnchor.prototype, "kind", {
        get: function () {
            return polyline_edge_router_1.PolylineEdgeRouter.KIND + ':' + anchor_1.DIAMOND_ANCHOR_KIND;
        },
        enumerable: true,
        configurable: true
    });
    DiamondAnchor.prototype.getAnchor = function (connectable, refPoint, offset) {
        var bounds = connectable.bounds;
        var referenceLine = new geometry_1.PointToPointLine(geometry_1.center(bounds), refPoint);
        var closestDiamondSide = new geometry_1.Diamond(bounds).closestSideLine(refPoint);
        var anchorPoint = geometry_1.intersection(closestDiamondSide, referenceLine);
        return geometry_1.shiftTowards(anchorPoint, refPoint, offset);
    };
    DiamondAnchor = __decorate([
        inversify_1.injectable()
    ], DiamondAnchor);
    return DiamondAnchor;
}());
exports.DiamondAnchor = DiamondAnchor;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/routing/polyline-edge-router.js":
/*!****************************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/routing/polyline-edge-router.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var model_1 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/routing/model.js");
var anchor_1 = __webpack_require__(/*! ./anchor */ "../node_modules/sprotty/lib/features/routing/anchor.js");
var linear_edge_router_1 = __webpack_require__(/*! ./linear-edge-router */ "../node_modules/sprotty/lib/features/routing/linear-edge-router.js");
var PolylineEdgeRouter = /** @class */ (function (_super) {
    __extends(PolylineEdgeRouter, _super);
    function PolylineEdgeRouter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PolylineEdgeRouter_1 = PolylineEdgeRouter;
    Object.defineProperty(PolylineEdgeRouter.prototype, "kind", {
        get: function () {
            return PolylineEdgeRouter_1.KIND;
        },
        enumerable: true,
        configurable: true
    });
    PolylineEdgeRouter.prototype.getOptions = function (edge) {
        return {
            minimalPointDistance: 2,
            removeAngleThreshold: 0.1,
            standardDistance: 20,
            selfEdgeOffset: 0.25
        };
    };
    PolylineEdgeRouter.prototype.route = function (edge) {
        var source = edge.source;
        var target = edge.target;
        if (source === undefined || target === undefined) {
            return [];
        }
        var sourceAnchor;
        var targetAnchor;
        var options = this.getOptions(edge);
        var routingPoints = edge.routingPoints.length > 0
            ? edge.routingPoints
            : [];
        this.cleanupRoutingPoints(edge, routingPoints, false, false);
        var rpCount = routingPoints !== undefined ? routingPoints.length : 0;
        if (rpCount === 0) {
            // Use the target center as start anchor reference
            var startRef = geometry_1.center(target.bounds);
            sourceAnchor = this.getTranslatedAnchor(source, startRef, target.parent, edge, edge.sourceAnchorCorrection);
            // Use the source center as end anchor reference
            var endRef = geometry_1.center(source.bounds);
            targetAnchor = this.getTranslatedAnchor(target, endRef, source.parent, edge, edge.targetAnchorCorrection);
        }
        else {
            // Use the first routing point as start anchor reference
            var p0 = routingPoints[0];
            sourceAnchor = this.getTranslatedAnchor(source, p0, edge.parent, edge, edge.sourceAnchorCorrection);
            // Use the last routing point as end anchor reference
            var pn = routingPoints[rpCount - 1];
            targetAnchor = this.getTranslatedAnchor(target, pn, edge.parent, edge, edge.targetAnchorCorrection);
        }
        var result = [];
        result.push({ kind: 'source', x: sourceAnchor.x, y: sourceAnchor.y });
        for (var i = 0; i < rpCount; i++) {
            var p = routingPoints[i];
            if (i > 0 && i < rpCount - 1
                || i === 0 && geometry_1.maxDistance(sourceAnchor, p) >= options.minimalPointDistance + (edge.sourceAnchorCorrection || 0)
                || i === rpCount - 1 && geometry_1.maxDistance(p, targetAnchor) >= options.minimalPointDistance + (edge.targetAnchorCorrection || 0)) {
                result.push({ kind: 'linear', x: p.x, y: p.y, pointIndex: i });
            }
        }
        result.push({ kind: 'target', x: targetAnchor.x, y: targetAnchor.y });
        return this.filterEditModeHandles(result, edge, options);
    };
    /**
     * Remove routed points that are in edit mode and for which the angle between the preceding and
     * following points falls below a threshold.
     */
    PolylineEdgeRouter.prototype.filterEditModeHandles = function (route, edge, options) {
        if (edge.children.length === 0)
            return route;
        var i = 0;
        var _loop_1 = function () {
            var curr = route[i];
            if (curr.pointIndex !== undefined) {
                var handle = edge.children.find(function (child) {
                    return child instanceof model_1.SRoutingHandle && child.kind === 'junction' && child.pointIndex === curr.pointIndex;
                });
                if (handle !== undefined && handle.editMode && i > 0 && i < route.length - 1) {
                    var prev = route[i - 1], next = route[i + 1];
                    var prevDiff = { x: prev.x - curr.x, y: prev.y - curr.y };
                    var nextDiff = { x: next.x - curr.x, y: next.y - curr.y };
                    var angle = geometry_1.angleBetweenPoints(prevDiff, nextDiff);
                    if (Math.abs(Math.PI - angle) < options.removeAngleThreshold) {
                        route.splice(i, 1);
                        return "continue";
                    }
                }
            }
            i++;
        };
        while (i < route.length) {
            _loop_1();
        }
        return route;
    };
    PolylineEdgeRouter.prototype.createRoutingHandles = function (edge) {
        var rpCount = edge.routingPoints.length;
        this.addHandle(edge, 'source', 'routing-point', -2);
        this.addHandle(edge, 'line', 'volatile-routing-point', -1);
        for (var i = 0; i < rpCount; i++) {
            this.addHandle(edge, 'junction', 'routing-point', i);
            this.addHandle(edge, 'line', 'volatile-routing-point', i);
        }
        this.addHandle(edge, 'target', 'routing-point', rpCount);
    };
    PolylineEdgeRouter.prototype.getInnerHandlePosition = function (edge, route, handle) {
        if (handle.kind === 'line') {
            var _a = this.findRouteSegment(edge, route, handle.pointIndex), start = _a.start, end = _a.end;
            if (start !== undefined && end !== undefined)
                return geometry_1.centerOfLine(start, end);
        }
        return undefined;
    };
    PolylineEdgeRouter.prototype.applyInnerHandleMoves = function (edge, moves) {
        var _this = this;
        moves.forEach(function (move) {
            var handle = move.handle;
            var points = edge.routingPoints;
            var index = handle.pointIndex;
            if (handle.kind === 'line') {
                // Upgrade to a proper routing point
                handle.kind = 'junction';
                handle.type = 'routing-point';
                points.splice(index + 1, 0, move.fromPosition || points[Math.max(index, 0)]);
                edge.children.forEach(function (child) {
                    if (child instanceof model_1.SRoutingHandle && (child === handle || child.pointIndex > index))
                        child.pointIndex++;
                });
                _this.addHandle(edge, 'line', 'volatile-routing-point', index);
                _this.addHandle(edge, 'line', 'volatile-routing-point', index + 1);
                index++;
            }
            if (index >= 0 && index < points.length) {
                points[index] = move.toPosition;
            }
        });
    };
    var PolylineEdgeRouter_1;
    PolylineEdgeRouter.KIND = 'polyline';
    __decorate([
        inversify_1.inject(anchor_1.AnchorComputerRegistry),
        __metadata("design:type", anchor_1.AnchorComputerRegistry)
    ], PolylineEdgeRouter.prototype, "anchorRegistry", void 0);
    PolylineEdgeRouter = PolylineEdgeRouter_1 = __decorate([
        inversify_1.injectable()
    ], PolylineEdgeRouter);
    return PolylineEdgeRouter;
}(linear_edge_router_1.LinearEdgeRouter));
exports.PolylineEdgeRouter = PolylineEdgeRouter;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/routing/routing.js":
/*!***************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/routing/routing.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "../node_modules/sprotty/lib/utils/registry.js");
var polyline_edge_router_1 = __webpack_require__(/*! ./polyline-edge-router */ "../node_modules/sprotty/lib/features/routing/polyline-edge-router.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var EdgeRouterRegistry = /** @class */ (function (_super) {
    __extends(EdgeRouterRegistry, _super);
    function EdgeRouterRegistry(edgeRouters) {
        var _this = _super.call(this) || this;
        edgeRouters.forEach(function (router) { return _this.register(router.kind, router); });
        return _this;
    }
    Object.defineProperty(EdgeRouterRegistry.prototype, "defaultKind", {
        get: function () {
            return polyline_edge_router_1.PolylineEdgeRouter.KIND;
        },
        enumerable: true,
        configurable: true
    });
    EdgeRouterRegistry.prototype.get = function (kind) {
        return _super.prototype.get.call(this, kind || this.defaultKind);
    };
    EdgeRouterRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.IEdgeRouter)),
        __metadata("design:paramtypes", [Array])
    ], EdgeRouterRegistry);
    return EdgeRouterRegistry;
}(registry_1.InstanceRegistry));
exports.EdgeRouterRegistry = EdgeRouterRegistry;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/select/di.config.js":
/*!****************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/select/di.config.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var select_1 = __webpack_require__(/*! ./select */ "../node_modules/sprotty/lib/features/select/select.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../node_modules/sprotty/lib/base/commands/command-registration.js");
var selectModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, select_1.SelectCommand);
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, select_1.SelectAllCommand);
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, select_1.GetSelectionCommand);
    bind(types_1.TYPES.KeyListener).to(select_1.SelectKeyboardListener);
    bind(types_1.TYPES.MouseListener).to(select_1.SelectMouseListener);
});
exports.default = selectModule;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/select/model.js":
/*!************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/select/model.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.selectFeature = Symbol('selectFeature');
function isSelectable(element) {
    return element.hasFeature(exports.selectFeature);
}
exports.isSelectable = isSelectable;
function isSelected(element) {
    return element !== undefined && isSelectable(element) && element.selected;
}
exports.isSelected = isSelected;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/select/select.js":
/*!*************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/select/select.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var action_1 = __webpack_require__(/*! ../../base/actions/action */ "../node_modules/sprotty/lib/base/actions/action.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../node_modules/sprotty/lib/base/commands/command.js");
var request_command_1 = __webpack_require__(/*! ../../base/commands/request-command */ "../node_modules/sprotty/lib/base/commands/request-command.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../node_modules/sprotty/lib/base/model/smodel-utils.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "../node_modules/sprotty/lib/base/views/key-tool.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../node_modules/sprotty/lib/base/views/mouse-tool.js");
var vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "../node_modules/sprotty/lib/base/views/vnode-utils.js");
var browser_1 = __webpack_require__(/*! ../../utils/browser */ "../node_modules/sprotty/lib/utils/browser.js");
var iterable_1 = __webpack_require__(/*! ../../utils/iterable */ "../node_modules/sprotty/lib/utils/iterable.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../node_modules/sprotty/lib/utils/keyboard.js");
var button_handler_1 = __webpack_require__(/*! ../button/button-handler */ "../node_modules/sprotty/lib/features/button/button-handler.js");
var model_1 = __webpack_require__(/*! ../button/model */ "../node_modules/sprotty/lib/features/button/model.js");
var edit_routing_1 = __webpack_require__(/*! ../edit/edit-routing */ "../node_modules/sprotty/lib/features/edit/edit-routing.js");
var model_2 = __webpack_require__(/*! ../routing/model */ "../node_modules/sprotty/lib/features/routing/model.js");
var model_3 = __webpack_require__(/*! ../routing/model */ "../node_modules/sprotty/lib/features/routing/model.js");
var zorder_1 = __webpack_require__(/*! ../zorder/zorder */ "../node_modules/sprotty/lib/features/zorder/zorder.js");
var model_4 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/select/model.js");
/**
 * Triggered when the user changes the selection, e.g. by clicking on a selectable element. The resulting
 * SelectCommand changes the `selected` state accordingly, so the elements can be rendered differently.
 * This action is also forwarded to the diagram server, if present, so it may react on the selection change.
 * Furthermore, the server can send such an action to the client in order to change the selection programmatically.
 */
var SelectAction = /** @class */ (function () {
    function SelectAction(selectedElementsIDs, deselectedElementsIDs) {
        if (selectedElementsIDs === void 0) { selectedElementsIDs = []; }
        if (deselectedElementsIDs === void 0) { deselectedElementsIDs = []; }
        this.selectedElementsIDs = selectedElementsIDs;
        this.deselectedElementsIDs = deselectedElementsIDs;
        this.kind = SelectAction.KIND;
    }
    SelectAction.KIND = 'elementSelected';
    return SelectAction;
}());
exports.SelectAction = SelectAction;
/**
 * Programmatic action for selecting or deselecting all elements.
 */
var SelectAllAction = /** @class */ (function () {
    /**
     * If `select` is true, all elements are selected, othewise they are deselected.
     */
    function SelectAllAction(select) {
        if (select === void 0) { select = true; }
        this.select = select;
        this.kind = SelectAllAction.KIND;
    }
    SelectAllAction.KIND = 'allSelected';
    return SelectAllAction;
}());
exports.SelectAllAction = SelectAllAction;
/**
 * Request action for retrieving the current selection.
 */
var GetSelectionAction = /** @class */ (function () {
    function GetSelectionAction(requestId) {
        if (requestId === void 0) { requestId = ''; }
        this.requestId = requestId;
        this.kind = GetSelectionAction.KIND;
    }
    /** Factory function to dispatch a request with the `IActionDispatcher` */
    GetSelectionAction.create = function () {
        return new GetSelectionAction(action_1.generateRequestId());
    };
    GetSelectionAction.KIND = 'getSelection';
    return GetSelectionAction;
}());
exports.GetSelectionAction = GetSelectionAction;
var SelectionResult = /** @class */ (function () {
    function SelectionResult(selectedElementsIDs, responseId) {
        if (selectedElementsIDs === void 0) { selectedElementsIDs = []; }
        this.selectedElementsIDs = selectedElementsIDs;
        this.responseId = responseId;
        this.kind = SelectionResult.KIND;
    }
    SelectionResult.KIND = 'selectionResult';
    return SelectionResult;
}());
exports.SelectionResult = SelectionResult;
var SelectCommand = /** @class */ (function (_super) {
    __extends(SelectCommand, _super);
    function SelectCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.selected = [];
        _this.deselected = [];
        return _this;
    }
    SelectCommand.prototype.execute = function (context) {
        var _this = this;
        var model = context.root;
        this.action.selectedElementsIDs.forEach(function (id) {
            var element = model.index.getById(id);
            if (element instanceof smodel_1.SChildElement && model_4.isSelectable(element)) {
                _this.selected.push(element);
            }
        });
        this.action.deselectedElementsIDs.forEach(function (id) {
            var element = model.index.getById(id);
            if (element instanceof smodel_1.SChildElement && model_4.isSelectable(element)) {
                _this.deselected.push(element);
            }
        });
        return this.redo(context);
    };
    SelectCommand.prototype.undo = function (context) {
        for (var _i = 0, _a = this.selected; _i < _a.length; _i++) {
            var element = _a[_i];
            element.selected = false;
        }
        for (var _b = 0, _c = this.deselected; _b < _c.length; _b++) {
            var element = _c[_b];
            element.selected = true;
        }
        return context.root;
    };
    SelectCommand.prototype.redo = function (context) {
        for (var _i = 0, _a = this.deselected; _i < _a.length; _i++) {
            var element = _a[_i];
            element.selected = false;
        }
        for (var _b = 0, _c = this.selected; _b < _c.length; _b++) {
            var element = _c[_b];
            element.selected = true;
        }
        return context.root;
    };
    SelectCommand.KIND = SelectAction.KIND;
    SelectCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [SelectAction])
    ], SelectCommand);
    return SelectCommand;
}(command_1.Command));
exports.SelectCommand = SelectCommand;
var SelectAllCommand = /** @class */ (function (_super) {
    __extends(SelectAllCommand, _super);
    function SelectAllCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.previousSelection = {};
        return _this;
    }
    SelectAllCommand.prototype.execute = function (context) {
        this.selectAll(context.root, this.action.select);
        return context.root;
    };
    SelectAllCommand.prototype.selectAll = function (element, newState) {
        if (model_4.isSelectable(element)) {
            this.previousSelection[element.id] = element.selected;
            element.selected = newState;
        }
        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
            var child = _a[_i];
            this.selectAll(child, newState);
        }
    };
    SelectAllCommand.prototype.undo = function (context) {
        var index = context.root.index;
        for (var id in this.previousSelection) {
            if (this.previousSelection.hasOwnProperty(id)) {
                var element = index.getById(id);
                if (element !== undefined && model_4.isSelectable(element))
                    element.selected = this.previousSelection[id];
            }
        }
        return context.root;
    };
    SelectAllCommand.prototype.redo = function (context) {
        this.selectAll(context.root, this.action.select);
        return context.root;
    };
    SelectAllCommand.KIND = SelectAllAction.KIND;
    SelectAllCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [SelectAllAction])
    ], SelectAllCommand);
    return SelectAllCommand;
}(command_1.Command));
exports.SelectAllCommand = SelectAllCommand;
var SelectMouseListener = /** @class */ (function (_super) {
    __extends(SelectMouseListener, _super);
    function SelectMouseListener() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.wasSelected = false;
        _this.hasDragged = false;
        return _this;
    }
    SelectMouseListener.prototype.mouseDown = function (target, event) {
        var result = [];
        if (event.button === 0) {
            if (this.buttonHandlerRegistry !== undefined && target instanceof model_1.SButton && target.enabled) {
                var buttonHandler = this.buttonHandlerRegistry.get(target.type);
                if (buttonHandler !== undefined)
                    return buttonHandler.buttonPressed(target);
            }
            var selectableTarget_1 = smodel_utils_1.findParentByFeature(target, model_4.isSelectable);
            if (selectableTarget_1 !== undefined || target instanceof smodel_1.SModelRoot) {
                this.hasDragged = false;
                var deselect = [];
                // multi-selection?
                if (!browser_1.isCtrlOrCmd(event)) {
                    deselect = iterable_1.toArray(target.root.index.all()
                        .filter(function (element) { return model_4.isSelectable(element) && element.selected
                        && !(selectableTarget_1 instanceof model_2.SRoutingHandle && element === selectableTarget_1.parent); }));
                }
                if (selectableTarget_1 !== undefined) {
                    if (!selectableTarget_1.selected) {
                        this.wasSelected = false;
                        result.push(new SelectAction([selectableTarget_1.id], deselect.map(function (e) { return e.id; })));
                        result.push(new zorder_1.BringToFrontAction([selectableTarget_1.id]));
                        var routableDeselect = deselect.filter(function (e) { return e instanceof model_3.SRoutableElement; }).map(function (e) { return e.id; });
                        if (selectableTarget_1 instanceof model_3.SRoutableElement)
                            result.push(new edit_routing_1.SwitchEditModeAction([selectableTarget_1.id], routableDeselect));
                        else if (routableDeselect.length > 0)
                            result.push(new edit_routing_1.SwitchEditModeAction([], routableDeselect));
                    }
                    else if (browser_1.isCtrlOrCmd(event)) {
                        this.wasSelected = false;
                        result.push(new SelectAction([], [selectableTarget_1.id]));
                        if (selectableTarget_1 instanceof model_3.SRoutableElement)
                            result.push(new edit_routing_1.SwitchEditModeAction([], [selectableTarget_1.id]));
                    }
                    else {
                        this.wasSelected = true;
                    }
                }
                else {
                    result.push(new SelectAction([], deselect.map(function (e) { return e.id; })));
                    var routableDeselect = deselect.filter(function (e) { return e instanceof model_3.SRoutableElement; }).map(function (e) { return e.id; });
                    if (routableDeselect.length > 0)
                        result.push(new edit_routing_1.SwitchEditModeAction([], routableDeselect));
                }
            }
        }
        return result;
    };
    SelectMouseListener.prototype.mouseMove = function (target, event) {
        this.hasDragged = true;
        return [];
    };
    SelectMouseListener.prototype.mouseUp = function (target, event) {
        if (event.button === 0) {
            if (!this.hasDragged) {
                var selectableTarget = smodel_utils_1.findParentByFeature(target, model_4.isSelectable);
                if (selectableTarget !== undefined && this.wasSelected) {
                    return [new SelectAction([selectableTarget.id], [])];
                }
            }
        }
        this.hasDragged = false;
        return [];
    };
    SelectMouseListener.prototype.decorate = function (vnode, element) {
        var selectableTarget = smodel_utils_1.findParentByFeature(element, model_4.isSelectable);
        if (selectableTarget !== undefined)
            vnode_utils_1.setClass(vnode, 'selected', selectableTarget.selected);
        return vnode;
    };
    __decorate([
        inversify_1.inject(button_handler_1.ButtonHandlerRegistry), inversify_1.optional(),
        __metadata("design:type", button_handler_1.ButtonHandlerRegistry)
    ], SelectMouseListener.prototype, "buttonHandlerRegistry", void 0);
    return SelectMouseListener;
}(mouse_tool_1.MouseListener));
exports.SelectMouseListener = SelectMouseListener;
var GetSelectionCommand = /** @class */ (function (_super) {
    __extends(GetSelectionCommand, _super);
    function GetSelectionCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.previousSelection = {};
        return _this;
    }
    GetSelectionCommand.prototype.retrieveResult = function (context) {
        var selection = context.root.index.all()
            .filter(function (e) { return model_4.isSelectable(e) && e.selected; })
            .map(function (e) { return e.id; });
        return new SelectionResult(iterable_1.toArray(selection), this.action.requestId);
    };
    GetSelectionCommand.KIND = GetSelectionAction.KIND;
    GetSelectionCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [GetSelectionAction])
    ], GetSelectionCommand);
    return GetSelectionCommand;
}(request_command_1.ModelRequestCommand));
exports.GetSelectionCommand = GetSelectionCommand;
var SelectKeyboardListener = /** @class */ (function (_super) {
    __extends(SelectKeyboardListener, _super);
    function SelectKeyboardListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SelectKeyboardListener.prototype.keyDown = function (element, event) {
        if (keyboard_1.matchesKeystroke(event, 'KeyA', 'ctrlCmd')) {
            return [new SelectAllAction()];
        }
        return [];
    };
    return SelectKeyboardListener;
}(key_tool_1.KeyListener));
exports.SelectKeyboardListener = SelectKeyboardListener;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/undo-redo/di.config.js":
/*!*******************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/undo-redo/di.config.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var undo_redo_1 = __webpack_require__(/*! ./undo-redo */ "../node_modules/sprotty/lib/features/undo-redo/undo-redo.js");
var undoRedoModule = new inversify_1.ContainerModule(function (bind) {
    bind(types_1.TYPES.KeyListener).to(undo_redo_1.UndoRedoKeyListener);
});
exports.default = undoRedoModule;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/undo-redo/undo-redo.js":
/*!*******************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/undo-redo/undo-redo.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../node_modules/sprotty/lib/utils/keyboard.js");
var key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "../node_modules/sprotty/lib/base/views/key-tool.js");
var UndoAction = /** @class */ (function () {
    function UndoAction() {
        this.kind = UndoAction.KIND;
    }
    UndoAction.KIND = 'undo';
    return UndoAction;
}());
exports.UndoAction = UndoAction;
var RedoAction = /** @class */ (function () {
    function RedoAction() {
        this.kind = RedoAction.KIND;
    }
    RedoAction.KIND = 'redo';
    return RedoAction;
}());
exports.RedoAction = RedoAction;
var UndoRedoKeyListener = /** @class */ (function (_super) {
    __extends(UndoRedoKeyListener, _super);
    function UndoRedoKeyListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UndoRedoKeyListener.prototype.keyDown = function (element, event) {
        if (keyboard_1.matchesKeystroke(event, 'KeyZ', 'ctrlCmd'))
            return [new UndoAction];
        if (keyboard_1.matchesKeystroke(event, 'KeyZ', 'ctrlCmd', 'shift'))
            return [new RedoAction];
        return [];
    };
    return UndoRedoKeyListener;
}(key_tool_1.KeyListener));
exports.UndoRedoKeyListener = UndoRedoKeyListener;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/update/di.config.js":
/*!****************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/update/di.config.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../node_modules/sprotty/lib/base/commands/command-registration.js");
var update_model_1 = __webpack_require__(/*! ./update-model */ "../node_modules/sprotty/lib/features/update/update-model.js");
var updateModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, update_model_1.UpdateModelCommand);
});
exports.default = updateModule;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/update/model-matching.js":
/*!*********************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/update/model-matching.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
function forEachMatch(matchResult, callback) {
    for (var id in matchResult) {
        if (matchResult.hasOwnProperty(id))
            callback(id, matchResult[id]);
    }
}
exports.forEachMatch = forEachMatch;
var ModelMatcher = /** @class */ (function () {
    function ModelMatcher() {
    }
    ModelMatcher.prototype.match = function (left, right) {
        var result = {};
        this.matchLeft(left, result);
        this.matchRight(right, result);
        return result;
    };
    ModelMatcher.prototype.matchLeft = function (element, result, parentId) {
        var match = result[element.id];
        if (match !== undefined) {
            match.left = element;
            match.leftParentId = parentId;
        }
        else {
            match = {
                left: element,
                leftParentId: parentId
            };
            result[element.id] = match;
        }
        if (smodel_1.isParent(element)) {
            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
                var child = _a[_i];
                this.matchLeft(child, result, element.id);
            }
        }
    };
    ModelMatcher.prototype.matchRight = function (element, result, parentId) {
        var match = result[element.id];
        if (match !== undefined) {
            match.right = element;
            match.rightParentId = parentId;
        }
        else {
            match = {
                right: element,
                rightParentId: parentId
            };
            result[element.id] = match;
        }
        if (smodel_1.isParent(element)) {
            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
                var child = _a[_i];
                this.matchRight(child, result, element.id);
            }
        }
    };
    return ModelMatcher;
}());
exports.ModelMatcher = ModelMatcher;
function applyMatches(root, matches) {
    var index;
    if (root instanceof smodel_1.SModelRoot) {
        index = root.index;
    }
    else {
        index = new smodel_1.SModelIndex();
        index.add(root);
    }
    for (var _i = 0, matches_1 = matches; _i < matches_1.length; _i++) {
        var match = matches_1[_i];
        var newElementInserted = false;
        if (match.left !== undefined && match.leftParentId !== undefined) {
            var parent_1 = index.getById(match.leftParentId);
            if (parent_1 !== undefined && parent_1.children !== undefined) {
                var i = parent_1.children.indexOf(match.left);
                if (i >= 0) {
                    if (match.right !== undefined && match.leftParentId === match.rightParentId) {
                        parent_1.children.splice(i, 1, match.right);
                        newElementInserted = true;
                    }
                    else {
                        parent_1.children.splice(i, 1);
                    }
                }
                index.remove(match.left);
            }
        }
        if (!newElementInserted && match.right !== undefined && match.rightParentId !== undefined) {
            var parent_2 = index.getById(match.rightParentId);
            if (parent_2 !== undefined) {
                if (parent_2.children === undefined)
                    parent_2.children = [];
                parent_2.children.push(match.right);
            }
        }
    }
}
exports.applyMatches = applyMatches;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/update/update-model.js":
/*!*******************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/update/update-model.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var animation_1 = __webpack_require__(/*! ../../base/animations/animation */ "../node_modules/sprotty/lib/base/animations/animation.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../node_modules/sprotty/lib/base/commands/command.js");
var fade_1 = __webpack_require__(/*! ../fade/fade */ "../node_modules/sprotty/lib/features/fade/fade.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var move_1 = __webpack_require__(/*! ../move/move */ "../node_modules/sprotty/lib/features/move/move.js");
var model_1 = __webpack_require__(/*! ../fade/model */ "../node_modules/sprotty/lib/features/fade/model.js");
var model_2 = __webpack_require__(/*! ../move/model */ "../node_modules/sprotty/lib/features/move/model.js");
var model_3 = __webpack_require__(/*! ../bounds/model */ "../node_modules/sprotty/lib/features/bounds/model.js");
var viewport_root_1 = __webpack_require__(/*! ../viewport/viewport-root */ "../node_modules/sprotty/lib/features/viewport/viewport-root.js");
var model_4 = __webpack_require__(/*! ../select/model */ "../node_modules/sprotty/lib/features/select/model.js");
var model_matching_1 = __webpack_require__(/*! ./model-matching */ "../node_modules/sprotty/lib/features/update/model-matching.js");
var resize_1 = __webpack_require__(/*! ../bounds/resize */ "../node_modules/sprotty/lib/features/bounds/resize.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var model_5 = __webpack_require__(/*! ../viewport/model */ "../node_modules/sprotty/lib/features/viewport/model.js");
var routing_1 = __webpack_require__(/*! ../routing/routing */ "../node_modules/sprotty/lib/features/routing/routing.js");
var model_6 = __webpack_require__(/*! ../routing/model */ "../node_modules/sprotty/lib/features/routing/model.js");
/**
 * Sent from the model source to the client in order to update the model. If no model is present yet,
 * this behaves the same as a SetModelAction. The transition from the old model to the new one can be animated.
 */
var UpdateModelAction = /** @class */ (function () {
    function UpdateModelAction(input, animate) {
        if (animate === void 0) { animate = true; }
        this.animate = animate;
        this.kind = UpdateModelAction.KIND;
        if (input.id !== undefined)
            this.newRoot = input;
        else
            this.matches = input;
    }
    UpdateModelAction.KIND = 'updateModel';
    return UpdateModelAction;
}());
exports.UpdateModelAction = UpdateModelAction;
var UpdateModelCommand = /** @class */ (function (_super) {
    __extends(UpdateModelCommand, _super);
    function UpdateModelCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    UpdateModelCommand.prototype.execute = function (context) {
        var newRoot;
        if (this.action.newRoot !== undefined) {
            newRoot = context.modelFactory.createRoot(this.action.newRoot);
        }
        else {
            newRoot = context.modelFactory.createRoot(context.root);
            if (this.action.matches !== undefined)
                this.applyMatches(newRoot, this.action.matches, context);
        }
        this.oldRoot = context.root;
        this.newRoot = newRoot;
        return this.performUpdate(this.oldRoot, this.newRoot, context);
    };
    UpdateModelCommand.prototype.performUpdate = function (oldRoot, newRoot, context) {
        if ((this.action.animate === undefined || this.action.animate) && oldRoot.id === newRoot.id) {
            var matchResult = void 0;
            if (this.action.matches === undefined) {
                var matcher = new model_matching_1.ModelMatcher();
                matchResult = matcher.match(oldRoot, newRoot);
            }
            else {
                matchResult = this.convertToMatchResult(this.action.matches, oldRoot, newRoot);
            }
            var animationOrRoot = this.computeAnimation(newRoot, matchResult, context);
            if (animationOrRoot instanceof animation_1.Animation)
                return animationOrRoot.start();
            else
                return animationOrRoot;
        }
        else {
            if (oldRoot.type === newRoot.type && geometry_1.isValidDimension(oldRoot.canvasBounds))
                newRoot.canvasBounds = oldRoot.canvasBounds;
            if (model_5.isViewport(oldRoot) && model_5.isViewport(newRoot)) {
                newRoot.zoom = oldRoot.zoom;
                newRoot.scroll = oldRoot.scroll;
            }
            return newRoot;
        }
    };
    UpdateModelCommand.prototype.applyMatches = function (root, matches, context) {
        var index = root.index;
        for (var _i = 0, matches_1 = matches; _i < matches_1.length; _i++) {
            var match = matches_1[_i];
            if (match.left !== undefined) {
                var element = index.getById(match.left.id);
                if (element instanceof smodel_1.SChildElement)
                    element.parent.remove(element);
            }
            if (match.right !== undefined) {
                var element = context.modelFactory.createElement(match.right);
                var parent_1 = void 0;
                if (match.rightParentId !== undefined)
                    parent_1 = index.getById(match.rightParentId);
                if (parent_1 instanceof smodel_1.SParentElement)
                    parent_1.add(element);
                else
                    root.add(element);
            }
        }
    };
    UpdateModelCommand.prototype.convertToMatchResult = function (matches, leftRoot, rightRoot) {
        var result = {};
        for (var _i = 0, matches_2 = matches; _i < matches_2.length; _i++) {
            var match = matches_2[_i];
            var converted = {};
            var id = undefined;
            if (match.left !== undefined) {
                id = match.left.id;
                converted.left = leftRoot.index.getById(id);
                converted.leftParentId = match.leftParentId;
            }
            if (match.right !== undefined) {
                id = match.right.id;
                converted.right = rightRoot.index.getById(id);
                converted.rightParentId = match.rightParentId;
            }
            if (id !== undefined)
                result[id] = converted;
        }
        return result;
    };
    UpdateModelCommand.prototype.computeAnimation = function (newRoot, matchResult, context) {
        var _this = this;
        var animationData = {
            fades: []
        };
        model_matching_1.forEachMatch(matchResult, function (id, match) {
            if (match.left !== undefined && match.right !== undefined) {
                // The element is still there, but may have been moved
                _this.updateElement(match.left, match.right, animationData);
            }
            else if (match.right !== undefined) {
                // An element has been added
                var right = match.right;
                if (model_1.isFadeable(right)) {
                    right.opacity = 0;
                    animationData.fades.push({
                        element: right,
                        type: 'in'
                    });
                }
            }
            else if (match.left instanceof smodel_1.SChildElement) {
                // An element has been removed
                var left = match.left;
                if (model_1.isFadeable(left) && match.leftParentId !== undefined) {
                    if (newRoot.index.getById(left.id) === undefined) {
                        var parent_2 = newRoot.index.getById(match.leftParentId);
                        if (parent_2 instanceof smodel_1.SParentElement) {
                            var leftCopy = context.modelFactory.createElement(left);
                            parent_2.add(leftCopy);
                            animationData.fades.push({
                                element: leftCopy,
                                type: 'out'
                            });
                        }
                    }
                }
            }
        });
        var animations = this.createAnimations(animationData, newRoot, context);
        if (animations.length >= 2) {
            return new animation_1.CompoundAnimation(newRoot, context, animations);
        }
        else if (animations.length === 1) {
            return animations[0];
        }
        else {
            return newRoot;
        }
    };
    UpdateModelCommand.prototype.updateElement = function (left, right, animationData) {
        if (model_2.isLocateable(left) && model_2.isLocateable(right)) {
            var leftPos = left.position;
            var rightPos = right.position;
            if (!geometry_1.almostEquals(leftPos.x, rightPos.x) || !geometry_1.almostEquals(leftPos.y, rightPos.y)) {
                if (animationData.moves === undefined)
                    animationData.moves = [];
                animationData.moves.push({
                    element: right,
                    fromPosition: leftPos,
                    toPosition: rightPos
                });
                right.position = leftPos;
            }
        }
        if (model_3.isSizeable(left) && model_3.isSizeable(right)) {
            if (!geometry_1.isValidDimension(right.bounds)) {
                right.bounds = {
                    x: right.bounds.x,
                    y: right.bounds.y,
                    width: left.bounds.width,
                    height: left.bounds.height
                };
            }
            else if (!geometry_1.almostEquals(left.bounds.width, right.bounds.width)
                || !geometry_1.almostEquals(left.bounds.height, right.bounds.height)) {
                if (animationData.resizes === undefined)
                    animationData.resizes = [];
                animationData.resizes.push({
                    element: right,
                    fromDimension: {
                        width: left.bounds.width,
                        height: left.bounds.height,
                    },
                    toDimension: {
                        width: right.bounds.width,
                        height: right.bounds.height,
                    }
                });
            }
        }
        if (left instanceof model_6.SRoutableElement && right instanceof model_6.SRoutableElement && this.edgeRouterRegistry) {
            if (animationData.edgeMementi === undefined)
                animationData.edgeMementi = [];
            animationData.edgeMementi.push({
                edge: right,
                before: this.takeSnapshot(left),
                after: this.takeSnapshot(right),
            });
        }
        if (model_4.isSelectable(left) && model_4.isSelectable(right)) {
            right.selected = left.selected;
        }
        if (left instanceof smodel_1.SModelRoot && right instanceof smodel_1.SModelRoot) {
            right.canvasBounds = left.canvasBounds;
        }
        if (left instanceof viewport_root_1.ViewportRootElement && right instanceof viewport_root_1.ViewportRootElement) {
            right.scroll = left.scroll;
            right.zoom = left.zoom;
        }
    };
    UpdateModelCommand.prototype.takeSnapshot = function (edge) {
        var router = this.edgeRouterRegistry.get(edge.routerKind);
        return router.takeSnapshot(edge);
    };
    UpdateModelCommand.prototype.createAnimations = function (data, root, context) {
        var animations = [];
        if (data.fades.length > 0) {
            animations.push(new fade_1.FadeAnimation(root, data.fades, context, true));
        }
        if (data.moves !== undefined && data.moves.length > 0) {
            var movesMap = new Map;
            for (var _i = 0, _a = data.moves; _i < _a.length; _i++) {
                var move = _a[_i];
                movesMap.set(move.element.id, move);
            }
            animations.push(new move_1.MoveAnimation(root, movesMap, context, false));
        }
        if (data.resizes !== undefined && data.resizes.length > 0) {
            var resizesMap = new Map;
            for (var _b = 0, _c = data.resizes; _b < _c.length; _b++) {
                var resize = _c[_b];
                resizesMap.set(resize.element.id, resize);
            }
            animations.push(new resize_1.ResizeAnimation(root, resizesMap, context, false));
        }
        if (data.edgeMementi !== undefined && data.edgeMementi.length > 0) {
            animations.push(new move_1.MorphEdgesAnimation(root, data.edgeMementi, context, false));
        }
        return animations;
    };
    UpdateModelCommand.prototype.undo = function (context) {
        return this.performUpdate(this.newRoot, this.oldRoot, context);
    };
    UpdateModelCommand.prototype.redo = function (context) {
        return this.performUpdate(this.oldRoot, this.newRoot, context);
    };
    UpdateModelCommand.KIND = UpdateModelAction.KIND;
    __decorate([
        inversify_1.inject(routing_1.EdgeRouterRegistry), inversify_1.optional(),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], UpdateModelCommand.prototype, "edgeRouterRegistry", void 0);
    UpdateModelCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [UpdateModelAction])
    ], UpdateModelCommand);
    return UpdateModelCommand;
}(command_1.Command));
exports.UpdateModelCommand = UpdateModelCommand;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/viewport/center-fit.js":
/*!*******************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/viewport/center-fit.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../node_modules/sprotty/lib/utils/keyboard.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../node_modules/sprotty/lib/base/commands/command.js");
var key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "../node_modules/sprotty/lib/base/views/key-tool.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "../node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ../select/model */ "../node_modules/sprotty/lib/features/select/model.js");
var viewport_1 = __webpack_require__(/*! ./viewport */ "../node_modules/sprotty/lib/features/viewport/viewport.js");
var model_3 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/viewport/model.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
/**
 * Triggered when the user requests the viewer to center on the current model. The resulting
 * CenterCommand changes the scroll setting of the viewport accordingly.
 * It also resets the zoom to its default if retainZoom is false.
 * This action can also be sent from the model source to the client in order to perform such a
 * viewport change programmatically.
 */
var CenterAction = /** @class */ (function () {
    function CenterAction(elementIds, animate, retainZoom) {
        if (animate === void 0) { animate = true; }
        if (retainZoom === void 0) { retainZoom = false; }
        this.elementIds = elementIds;
        this.animate = animate;
        this.retainZoom = retainZoom;
        this.kind = CenterAction.KIND;
    }
    CenterAction.KIND = 'center';
    return CenterAction;
}());
exports.CenterAction = CenterAction;
/**
 * Triggered when the user requests the viewer to fit its content to the available drawing area.
 * The resulting FitToScreenCommand changes the zoom and scroll settings of the viewport so the model
 * can be shown completely. This action can also be sent from the model source to the client in order
 * to perform such a viewport change programmatically.
 */
var FitToScreenAction = /** @class */ (function () {
    function FitToScreenAction(elementIds, padding, maxZoom, animate) {
        if (animate === void 0) { animate = true; }
        this.elementIds = elementIds;
        this.padding = padding;
        this.maxZoom = maxZoom;
        this.animate = animate;
        this.kind = FitToScreenAction.KIND;
    }
    FitToScreenAction.KIND = 'fit';
    return FitToScreenAction;
}());
exports.FitToScreenAction = FitToScreenAction;
var BoundsAwareViewportCommand = /** @class */ (function (_super) {
    __extends(BoundsAwareViewportCommand, _super);
    function BoundsAwareViewportCommand(animate) {
        var _this = _super.call(this) || this;
        _this.animate = animate;
        return _this;
    }
    BoundsAwareViewportCommand.prototype.initialize = function (model) {
        var _this = this;
        if (model_3.isViewport(model)) {
            this.oldViewport = {
                scroll: model.scroll,
                zoom: model.zoom
            };
            var allBounds_1 = [];
            this.getElementIds().forEach(function (id) {
                var element = model.index.getById(id);
                if (element && model_1.isBoundsAware(element))
                    allBounds_1.push(_this.boundsInViewport(element, element.bounds, model));
            });
            if (allBounds_1.length === 0) {
                model.index.all().forEach(function (element) {
                    if (model_2.isSelectable(element) && element.selected && model_1.isBoundsAware(element))
                        allBounds_1.push(_this.boundsInViewport(element, element.bounds, model));
                });
            }
            if (allBounds_1.length === 0) {
                model.index.all().forEach(function (element) {
                    if (model_1.isBoundsAware(element))
                        allBounds_1.push(_this.boundsInViewport(element, element.bounds, model));
                });
            }
            if (allBounds_1.length !== 0) {
                var bounds = allBounds_1.reduce(function (b0, b1) { return geometry_1.combine(b0, b1); });
                if (geometry_1.isValidDimension(bounds))
                    this.newViewport = this.getNewViewport(bounds, model);
            }
        }
    };
    BoundsAwareViewportCommand.prototype.boundsInViewport = function (element, bounds, viewport) {
        if (element instanceof smodel_1.SChildElement && element.parent !== viewport)
            return this.boundsInViewport(element.parent, element.parent.localToParent(bounds), viewport);
        else
            return bounds;
    };
    BoundsAwareViewportCommand.prototype.execute = function (context) {
        this.initialize(context.root);
        return this.redo(context);
    };
    BoundsAwareViewportCommand.prototype.undo = function (context) {
        var model = context.root;
        if (model_3.isViewport(model) && this.newViewport !== undefined && !this.equal(this.newViewport, this.oldViewport)) {
            if (this.animate)
                return new viewport_1.ViewportAnimation(model, this.newViewport, this.oldViewport, context).start();
            else {
                model.scroll = this.oldViewport.scroll;
                model.zoom = this.oldViewport.zoom;
            }
        }
        return model;
    };
    BoundsAwareViewportCommand.prototype.redo = function (context) {
        var model = context.root;
        if (model_3.isViewport(model) && this.newViewport !== undefined && !this.equal(this.newViewport, this.oldViewport)) {
            if (this.animate) {
                return new viewport_1.ViewportAnimation(model, this.oldViewport, this.newViewport, context).start();
            }
            else {
                model.scroll = this.newViewport.scroll;
                model.zoom = this.newViewport.zoom;
            }
        }
        return model;
    };
    BoundsAwareViewportCommand.prototype.equal = function (vp1, vp2) {
        return vp1.zoom === vp2.zoom && vp1.scroll.x === vp2.scroll.x && vp1.scroll.y === vp2.scroll.y;
    };
    BoundsAwareViewportCommand = __decorate([
        inversify_1.injectable(),
        __metadata("design:paramtypes", [Boolean])
    ], BoundsAwareViewportCommand);
    return BoundsAwareViewportCommand;
}(command_1.Command));
exports.BoundsAwareViewportCommand = BoundsAwareViewportCommand;
var CenterCommand = /** @class */ (function (_super) {
    __extends(CenterCommand, _super);
    function CenterCommand(action) {
        var _this = _super.call(this, action.animate) || this;
        _this.action = action;
        return _this;
    }
    CenterCommand.prototype.getElementIds = function () {
        return this.action.elementIds;
    };
    CenterCommand.prototype.getNewViewport = function (bounds, model) {
        if (!geometry_1.isValidDimension(model.canvasBounds)) {
            return undefined;
        }
        var zoom = (this.action.retainZoom && model_3.isViewport(model)) ? model.zoom : 1;
        var c = geometry_1.center(bounds);
        return {
            scroll: {
                x: c.x - 0.5 * model.canvasBounds.width / zoom,
                y: c.y - 0.5 * model.canvasBounds.height / zoom
            },
            zoom: zoom
        };
    };
    CenterCommand.KIND = CenterAction.KIND;
    CenterCommand = __decorate([
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [CenterAction])
    ], CenterCommand);
    return CenterCommand;
}(BoundsAwareViewportCommand));
exports.CenterCommand = CenterCommand;
var FitToScreenCommand = /** @class */ (function (_super) {
    __extends(FitToScreenCommand, _super);
    function FitToScreenCommand(action) {
        var _this = _super.call(this, action.animate) || this;
        _this.action = action;
        return _this;
    }
    FitToScreenCommand.prototype.getElementIds = function () {
        return this.action.elementIds;
    };
    FitToScreenCommand.prototype.getNewViewport = function (bounds, model) {
        if (!geometry_1.isValidDimension(model.canvasBounds)) {
            return undefined;
        }
        var c = geometry_1.center(bounds);
        var delta = this.action.padding === undefined
            ? 0
            : 2 * this.action.padding;
        var zoom = Math.min(model.canvasBounds.width / (bounds.width + delta), model.canvasBounds.height / (bounds.height + delta));
        if (this.action.maxZoom !== undefined)
            zoom = Math.min(zoom, this.action.maxZoom);
        if (zoom === Infinity) {
            zoom = 1;
        }
        return {
            scroll: {
                x: c.x - 0.5 * model.canvasBounds.width / zoom,
                y: c.y - 0.5 * model.canvasBounds.height / zoom
            },
            zoom: zoom
        };
    };
    FitToScreenCommand.KIND = FitToScreenAction.KIND;
    FitToScreenCommand = __decorate([
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [FitToScreenAction])
    ], FitToScreenCommand);
    return FitToScreenCommand;
}(BoundsAwareViewportCommand));
exports.FitToScreenCommand = FitToScreenCommand;
var CenterKeyboardListener = /** @class */ (function (_super) {
    __extends(CenterKeyboardListener, _super);
    function CenterKeyboardListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CenterKeyboardListener.prototype.keyDown = function (element, event) {
        if (keyboard_1.matchesKeystroke(event, 'KeyC', 'ctrlCmd', 'shift'))
            return [new CenterAction([])];
        if (keyboard_1.matchesKeystroke(event, 'KeyF', 'ctrlCmd', 'shift'))
            return [new FitToScreenAction([])];
        return [];
    };
    return CenterKeyboardListener;
}(key_tool_1.KeyListener));
exports.CenterKeyboardListener = CenterKeyboardListener;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/viewport/di.config.js":
/*!******************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/viewport/di.config.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var center_fit_1 = __webpack_require__(/*! ./center-fit */ "../node_modules/sprotty/lib/features/viewport/center-fit.js");
var viewport_1 = __webpack_require__(/*! ./viewport */ "../node_modules/sprotty/lib/features/viewport/viewport.js");
var scroll_1 = __webpack_require__(/*! ./scroll */ "../node_modules/sprotty/lib/features/viewport/scroll.js");
var zoom_1 = __webpack_require__(/*! ./zoom */ "../node_modules/sprotty/lib/features/viewport/zoom.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../node_modules/sprotty/lib/base/commands/command-registration.js");
var viewportModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, center_fit_1.CenterCommand);
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, center_fit_1.FitToScreenCommand);
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, viewport_1.SetViewportCommand);
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, viewport_1.GetViewportCommand);
    bind(types_1.TYPES.KeyListener).to(center_fit_1.CenterKeyboardListener);
    bind(types_1.TYPES.MouseListener).to(scroll_1.ScrollMouseListener);
    bind(types_1.TYPES.MouseListener).to(zoom_1.ZoomMouseListener);
});
exports.default = viewportModule;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/viewport/model.js":
/*!**************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/viewport/model.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
exports.viewportFeature = Symbol('viewportFeature');
function isViewport(element) {
    return element instanceof smodel_1.SModelRoot
        && element.hasFeature(exports.viewportFeature)
        && 'zoom' in element
        && 'scroll' in element;
}
exports.isViewport = isViewport;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/viewport/scroll.js":
/*!***************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/viewport/scroll.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../node_modules/sprotty/lib/base/views/mouse-tool.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../node_modules/sprotty/lib/base/model/smodel-utils.js");
var viewport_1 = __webpack_require__(/*! ./viewport */ "../node_modules/sprotty/lib/features/viewport/viewport.js");
var model_1 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/viewport/model.js");
var model_2 = __webpack_require__(/*! ../move/model */ "../node_modules/sprotty/lib/features/move/model.js");
var model_3 = __webpack_require__(/*! ../routing/model */ "../node_modules/sprotty/lib/features/routing/model.js");
function isScrollable(element) {
    return 'scroll' in element;
}
exports.isScrollable = isScrollable;
var ScrollMouseListener = /** @class */ (function (_super) {
    __extends(ScrollMouseListener, _super);
    function ScrollMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ScrollMouseListener.prototype.mouseDown = function (target, event) {
        var moveable = smodel_utils_1.findParentByFeature(target, model_2.isMoveable);
        if (moveable === undefined && !(target instanceof model_3.SRoutingHandle)) {
            var viewport = smodel_utils_1.findParentByFeature(target, model_1.isViewport);
            if (viewport)
                this.lastScrollPosition = { x: event.pageX, y: event.pageY };
            else
                this.lastScrollPosition = undefined;
        }
        return [];
    };
    ScrollMouseListener.prototype.mouseMove = function (target, event) {
        if (event.buttons === 0)
            this.mouseUp(target, event);
        else if (this.lastScrollPosition) {
            var viewport = smodel_utils_1.findParentByFeature(target, model_1.isViewport);
            if (viewport) {
                var dx = (event.pageX - this.lastScrollPosition.x) / viewport.zoom;
                var dy = (event.pageY - this.lastScrollPosition.y) / viewport.zoom;
                var newViewport = {
                    scroll: {
                        x: viewport.scroll.x - dx,
                        y: viewport.scroll.y - dy,
                    },
                    zoom: viewport.zoom
                };
                this.lastScrollPosition = { x: event.pageX, y: event.pageY };
                return [new viewport_1.SetViewportAction(viewport.id, newViewport, false)];
            }
        }
        return [];
    };
    ScrollMouseListener.prototype.mouseEnter = function (target, event) {
        if (target instanceof smodel_1.SModelRoot && event.buttons === 0)
            this.mouseUp(target, event);
        return [];
    };
    ScrollMouseListener.prototype.mouseUp = function (target, event) {
        this.lastScrollPosition = undefined;
        return [];
    };
    return ScrollMouseListener;
}(mouse_tool_1.MouseListener));
exports.ScrollMouseListener = ScrollMouseListener;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/viewport/viewport-root.js":
/*!**********************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/viewport/viewport-root.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var model_1 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/viewport/model.js");
var model_2 = __webpack_require__(/*! ../export/model */ "../node_modules/sprotty/lib/features/export/model.js");
/**
 * Model root element that defines a viewport, so it transforms the coordinate system with
 * a `scroll` translation and a `zoom` scaling.
 */
var ViewportRootElement = /** @class */ (function (_super) {
    __extends(ViewportRootElement, _super);
    function ViewportRootElement(index) {
        var _this = _super.call(this, index) || this;
        _this.scroll = { x: 0, y: 0 };
        _this.zoom = 1;
        return _this;
    }
    ViewportRootElement.prototype.localToParent = function (point) {
        var result = {
            x: (point.x - this.scroll.x) * this.zoom,
            y: (point.y - this.scroll.y) * this.zoom,
            width: -1,
            height: -1
        };
        if (geometry_1.isBounds(point)) {
            result.width = point.width * this.zoom;
            result.height = point.height * this.zoom;
        }
        return result;
    };
    ViewportRootElement.prototype.parentToLocal = function (point) {
        var result = {
            x: (point.x / this.zoom) + this.scroll.x,
            y: (point.y / this.zoom) + this.scroll.y,
            width: -1,
            height: -1
        };
        if (geometry_1.isBounds(point) && geometry_1.isValidDimension(point)) {
            result.width = point.width / this.zoom;
            result.height = point.height / this.zoom;
        }
        return result;
    };
    ViewportRootElement.DEFAULT_FEATURES = [model_1.viewportFeature, model_2.exportFeature];
    return ViewportRootElement;
}(smodel_1.SModelRoot));
exports.ViewportRootElement = ViewportRootElement;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/viewport/viewport.js":
/*!*****************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/viewport/viewport.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var action_1 = __webpack_require__(/*! ../../base/actions/action */ "../node_modules/sprotty/lib/base/actions/action.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../node_modules/sprotty/lib/base/commands/command.js");
var animation_1 = __webpack_require__(/*! ../../base/animations/animation */ "../node_modules/sprotty/lib/base/animations/animation.js");
var model_1 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/viewport/model.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var request_command_1 = __webpack_require__(/*! ../../base/commands/request-command */ "../node_modules/sprotty/lib/base/commands/request-command.js");
var SetViewportAction = /** @class */ (function () {
    function SetViewportAction(elementId, newViewport, animate) {
        this.elementId = elementId;
        this.newViewport = newViewport;
        this.animate = animate;
        this.kind = SetViewportAction.KIND;
    }
    SetViewportAction.KIND = 'viewport';
    return SetViewportAction;
}());
exports.SetViewportAction = SetViewportAction;
/**
 * Request action for retrieving the current viewport and canvas bounds.
 */
var GetViewportAction = /** @class */ (function () {
    function GetViewportAction(requestId) {
        if (requestId === void 0) { requestId = ''; }
        this.requestId = requestId;
        this.kind = GetViewportAction.KIND;
    }
    /** Factory function to dispatch a request with the `IActionDispatcher` */
    GetViewportAction.create = function () {
        return new GetViewportAction(action_1.generateRequestId());
    };
    GetViewportAction.KIND = 'getViewport';
    return GetViewportAction;
}());
exports.GetViewportAction = GetViewportAction;
var ViewportResult = /** @class */ (function () {
    function ViewportResult(viewport, canvasBounds, responseId) {
        this.viewport = viewport;
        this.canvasBounds = canvasBounds;
        this.responseId = responseId;
        this.kind = ViewportResult.KIND;
    }
    ViewportResult.KIND = 'viewportResult';
    return ViewportResult;
}());
exports.ViewportResult = ViewportResult;
var SetViewportCommand = /** @class */ (function (_super) {
    __extends(SetViewportCommand, _super);
    function SetViewportCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.newViewport = action.newViewport;
        return _this;
    }
    SetViewportCommand_1 = SetViewportCommand;
    SetViewportCommand.prototype.execute = function (context) {
        var model = context.root;
        var element = model.index.getById(this.action.elementId);
        if (element && model_1.isViewport(element)) {
            this.element = element;
            this.oldViewport = {
                scroll: this.element.scroll,
                zoom: this.element.zoom,
            };
            if (this.action.animate)
                return new ViewportAnimation(this.element, this.oldViewport, this.newViewport, context).start();
            else {
                this.element.scroll = this.newViewport.scroll;
                this.element.zoom = this.newViewport.zoom;
            }
        }
        return model;
    };
    SetViewportCommand.prototype.undo = function (context) {
        return new ViewportAnimation(this.element, this.newViewport, this.oldViewport, context).start();
    };
    SetViewportCommand.prototype.redo = function (context) {
        return new ViewportAnimation(this.element, this.oldViewport, this.newViewport, context).start();
    };
    SetViewportCommand.prototype.merge = function (command, context) {
        if (!this.action.animate && command instanceof SetViewportCommand_1 && this.element === command.element) {
            this.newViewport = command.newViewport;
            return true;
        }
        return false;
    };
    var SetViewportCommand_1;
    SetViewportCommand.KIND = SetViewportAction.KIND;
    SetViewportCommand = SetViewportCommand_1 = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [SetViewportAction])
    ], SetViewportCommand);
    return SetViewportCommand;
}(command_1.MergeableCommand));
exports.SetViewportCommand = SetViewportCommand;
var GetViewportCommand = /** @class */ (function (_super) {
    __extends(GetViewportCommand, _super);
    function GetViewportCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    GetViewportCommand.prototype.retrieveResult = function (context) {
        var elem = context.root;
        var viewport;
        if (model_1.isViewport(elem)) {
            viewport = { scroll: elem.scroll, zoom: elem.zoom };
        }
        else {
            viewport = { scroll: geometry_1.ORIGIN_POINT, zoom: 1 };
        }
        return new ViewportResult(viewport, elem.canvasBounds, this.action.requestId);
    };
    GetViewportCommand.KIND = GetViewportAction.KIND;
    GetViewportCommand = __decorate([
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [GetViewportAction])
    ], GetViewportCommand);
    return GetViewportCommand;
}(request_command_1.ModelRequestCommand));
exports.GetViewportCommand = GetViewportCommand;
var ViewportAnimation = /** @class */ (function (_super) {
    __extends(ViewportAnimation, _super);
    function ViewportAnimation(element, oldViewport, newViewport, context) {
        var _this = _super.call(this, context) || this;
        _this.element = element;
        _this.oldViewport = oldViewport;
        _this.newViewport = newViewport;
        _this.context = context;
        _this.zoomFactor = Math.log(newViewport.zoom / oldViewport.zoom);
        return _this;
    }
    ViewportAnimation.prototype.tween = function (t, context) {
        this.element.scroll = {
            x: (1 - t) * this.oldViewport.scroll.x + t * this.newViewport.scroll.x,
            y: (1 - t) * this.oldViewport.scroll.y + t * this.newViewport.scroll.y
        };
        this.element.zoom = this.oldViewport.zoom * Math.exp(t * this.zoomFactor);
        return context.root;
    };
    return ViewportAnimation;
}(animation_1.Animation));
exports.ViewportAnimation = ViewportAnimation;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/viewport/zoom.js":
/*!*************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/viewport/zoom.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var browser_1 = __webpack_require__(/*! ../../utils/browser */ "../node_modules/sprotty/lib/utils/browser.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../node_modules/sprotty/lib/base/views/mouse-tool.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../node_modules/sprotty/lib/base/model/smodel-utils.js");
var viewport_1 = __webpack_require__(/*! ./viewport */ "../node_modules/sprotty/lib/features/viewport/viewport.js");
var model_1 = __webpack_require__(/*! ./model */ "../node_modules/sprotty/lib/features/viewport/model.js");
function isZoomable(element) {
    return 'zoom' in element;
}
exports.isZoomable = isZoomable;
function getZoom(label) {
    var zoom = 1;
    var viewport = smodel_utils_1.findParentByFeature(label, model_1.isViewport);
    if (viewport) {
        zoom = viewport.zoom;
    }
    return zoom;
}
exports.getZoom = getZoom;
var ZoomMouseListener = /** @class */ (function (_super) {
    __extends(ZoomMouseListener, _super);
    function ZoomMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ZoomMouseListener.prototype.wheel = function (target, event) {
        var viewport = smodel_utils_1.findParentByFeature(target, model_1.isViewport);
        if (viewport) {
            var newZoom = this.getZoomFactor(event);
            var viewportOffset = this.getViewportOffset(target.root, event);
            var offsetFactor = 1.0 / (newZoom * viewport.zoom) - 1.0 / viewport.zoom;
            var newViewport = {
                scroll: {
                    x: viewport.scroll.x - offsetFactor * viewportOffset.x,
                    y: viewport.scroll.y - offsetFactor * viewportOffset.y
                },
                zoom: viewport.zoom * newZoom
            };
            return [new viewport_1.SetViewportAction(viewport.id, newViewport, false)];
        }
        return [];
    };
    ZoomMouseListener.prototype.getViewportOffset = function (root, event) {
        var canvasBounds = root.canvasBounds;
        var windowScroll = browser_1.getWindowScroll();
        return {
            x: event.clientX + windowScroll.x - canvasBounds.x,
            y: event.clientY + windowScroll.y - canvasBounds.y
        };
    };
    ZoomMouseListener.prototype.getZoomFactor = function (event) {
        if (event.deltaMode === event.DOM_DELTA_PAGE)
            return Math.exp(-event.deltaY * 0.5);
        else if (event.deltaMode === event.DOM_DELTA_LINE)
            return Math.exp(-event.deltaY * 0.05);
        else // deltaMode === DOM_DELTA_PIXEL
            return Math.exp(-event.deltaY * 0.005);
    };
    return ZoomMouseListener;
}(mouse_tool_1.MouseListener));
exports.ZoomMouseListener = ZoomMouseListener;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/zorder/di.config.js":
/*!****************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/zorder/di.config.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../node_modules/sprotty/lib/base/commands/command-registration.js");
var zorder_1 = __webpack_require__(/*! ./zorder */ "../node_modules/sprotty/lib/features/zorder/zorder.js");
var zorderModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, zorder_1.BringToFrontCommand);
});
exports.default = zorderModule;


/***/ }),

/***/ "../node_modules/sprotty/lib/features/zorder/zorder.js":
/*!*************************************************************!*\
  !*** ../node_modules/sprotty/lib/features/zorder/zorder.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../node_modules/sprotty/lib/base/types.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../node_modules/sprotty/lib/base/commands/command.js");
var model_1 = __webpack_require__(/*! ../routing/model */ "../node_modules/sprotty/lib/features/routing/model.js");
/**
 * Action to render the selected elements in front of others by manipulating the z-order.
 */
var BringToFrontAction = /** @class */ (function () {
    function BringToFrontAction(elementIDs) {
        this.elementIDs = elementIDs;
        this.kind = BringToFrontAction.KIND;
    }
    BringToFrontAction.KIND = 'bringToFront';
    return BringToFrontAction;
}());
exports.BringToFrontAction = BringToFrontAction;
var BringToFrontCommand = /** @class */ (function (_super) {
    __extends(BringToFrontCommand, _super);
    function BringToFrontCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.selected = [];
        return _this;
    }
    BringToFrontCommand.prototype.execute = function (context) {
        var _this = this;
        var model = context.root;
        this.action.elementIDs.forEach(function (id) {
            var element = model.index.getById(id);
            if (element instanceof model_1.SRoutableElement) {
                if (element.source)
                    _this.addToSelection(element.source);
                if (element.target)
                    _this.addToSelection(element.target);
            }
            if (element instanceof smodel_1.SChildElement) {
                _this.addToSelection(element);
            }
            _this.includeConnectedEdges(element);
        });
        return this.redo(context);
    };
    BringToFrontCommand.prototype.includeConnectedEdges = function (element) {
        var _this = this;
        if (element instanceof model_1.SConnectableElement) {
            element.incomingEdges.forEach(function (edge) { return _this.addToSelection(edge); });
            element.outgoingEdges.forEach(function (edge) { return _this.addToSelection(edge); });
        }
        if (element instanceof smodel_1.SParentElement) {
            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
                var child = _a[_i];
                this.includeConnectedEdges(child);
            }
        }
    };
    BringToFrontCommand.prototype.addToSelection = function (element) {
        this.selected.push({
            element: element,
            index: element.parent.children.indexOf(element)
        });
    };
    BringToFrontCommand.prototype.undo = function (context) {
        for (var i = this.selected.length - 1; i >= 0; i--) {
            var selection = this.selected[i];
            var element = selection.element;
            element.parent.move(element, selection.index);
        }
        return context.root;
    };
    BringToFrontCommand.prototype.redo = function (context) {
        for (var i = 0; i < this.selected.length; i++) {
            this.bringToFront(this.selected[i]);
        }
        return context.root;
    };
    BringToFrontCommand.prototype.bringToFront = function (selection) {
        var element = selection.element;
        var childrenLength = element.parent.children.length;
        element.parent.move(element, childrenLength - 1);
    };
    BringToFrontCommand.KIND = BringToFrontAction.KIND;
    BringToFrontCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [BringToFrontAction])
    ], BringToFrontCommand);
    return BringToFrontCommand;
}(command_1.Command));
exports.BringToFrontCommand = BringToFrontCommand;


/***/ }),

/***/ "../node_modules/sprotty/lib/graph/di.config.js":
/*!******************************************************!*\
  !*** ../node_modules/sprotty/lib/graph/di.config.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../base/types */ "../node_modules/sprotty/lib/base/types.js");
var sgraph_factory_1 = __webpack_require__(/*! ./sgraph-factory */ "../node_modules/sprotty/lib/graph/sgraph-factory.js");
var graphModule = new inversify_1.ContainerModule(function (bind, unbind, isBound, rebind) {
    rebind(types_1.TYPES.IModelFactory).to(sgraph_factory_1.SGraphFactory).inSingletonScope();
});
exports.default = graphModule;


/***/ }),

/***/ "../node_modules/sprotty/lib/graph/sgraph-factory.js":
/*!***********************************************************!*\
  !*** ../node_modules/sprotty/lib/graph/sgraph-factory.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var smodel_factory_1 = __webpack_require__(/*! ../base/model/smodel-factory */ "../node_modules/sprotty/lib/base/model/smodel-factory.js");
var smodel_1 = __webpack_require__(/*! ../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var smodel_utils_1 = __webpack_require__(/*! ../base/model/smodel-utils */ "../node_modules/sprotty/lib/base/model/smodel-utils.js");
var sgraph_1 = __webpack_require__(/*! ./sgraph */ "../node_modules/sprotty/lib/graph/sgraph.js");
var model_1 = __webpack_require__(/*! ../features/button/model */ "../node_modules/sprotty/lib/features/button/model.js");
/**
 * @deprecated
 * Subclassing SModelFactory is discouraged. Use `registerModelElement`
 * or `configureModelElement` instead.
 */
var SGraphFactory = /** @class */ (function (_super) {
    __extends(SGraphFactory, _super);
    function SGraphFactory() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.defaultGraphFeatures = smodel_factory_1.createFeatureSet(sgraph_1.SGraph.DEFAULT_FEATURES);
        _this.defaultNodeFeatures = smodel_factory_1.createFeatureSet(sgraph_1.SNode.DEFAULT_FEATURES);
        _this.defaultPortFeatures = smodel_factory_1.createFeatureSet(sgraph_1.SPort.DEFAULT_FEATURES);
        _this.defaultEdgeFeatures = smodel_factory_1.createFeatureSet(sgraph_1.SEdge.DEFAULT_FEATURES);
        _this.defaultLabelFeatures = smodel_factory_1.createFeatureSet(sgraph_1.SLabel.DEFAULT_FEATURES);
        _this.defaultCompartmentFeatures = smodel_factory_1.createFeatureSet(sgraph_1.SCompartment.DEFAULT_FEATURES);
        _this.defaultButtonFeatures = smodel_factory_1.createFeatureSet(model_1.SButton.DEFAULT_FEATURES);
        return _this;
    }
    SGraphFactory.prototype.createElement = function (schema, parent) {
        var child;
        if (this.registry.hasKey(schema.type)) {
            var regElement = this.registry.get(schema.type, undefined);
            if (!(regElement instanceof smodel_1.SChildElement))
                throw new Error("Element with type " + schema.type + " was expected to be an SChildElement.");
            child = regElement;
        }
        else if (this.isNodeSchema(schema)) {
            child = new sgraph_1.SNode();
            child.features = this.defaultNodeFeatures;
        }
        else if (this.isPortSchema(schema)) {
            child = new sgraph_1.SPort();
            child.features = this.defaultPortFeatures;
        }
        else if (this.isEdgeSchema(schema)) {
            child = new sgraph_1.SEdge();
            child.features = this.defaultEdgeFeatures;
        }
        else if (this.isLabelSchema(schema)) {
            child = new sgraph_1.SLabel();
            child.features = this.defaultLabelFeatures;
        }
        else if (this.isCompartmentSchema(schema)) {
            child = new sgraph_1.SCompartment();
            child.features = this.defaultCompartmentFeatures;
        }
        else if (this.isButtonSchema(schema)) {
            child = new model_1.SButton();
            child.features = this.defaultButtonFeatures;
        }
        else {
            child = new smodel_1.SChildElement();
        }
        return this.initializeChild(child, schema, parent);
    };
    SGraphFactory.prototype.createRoot = function (schema) {
        var root;
        if (this.registry.hasKey(schema.type)) {
            var regElement = this.registry.get(schema.type, undefined);
            if (!(regElement instanceof smodel_1.SModelRoot))
                throw new Error("Element with type " + schema.type + " was expected to be an SModelRoot.");
            root = regElement;
        }
        else if (this.isGraphSchema(schema)) {
            root = new sgraph_1.SGraph();
            root.features = this.defaultGraphFeatures;
        }
        else {
            root = new smodel_1.SModelRoot();
        }
        return this.initializeRoot(root, schema);
    };
    SGraphFactory.prototype.isGraphSchema = function (schema) {
        return smodel_utils_1.getBasicType(schema) === 'graph';
    };
    SGraphFactory.prototype.isNodeSchema = function (schema) {
        return smodel_utils_1.getBasicType(schema) === 'node';
    };
    SGraphFactory.prototype.isPortSchema = function (schema) {
        return smodel_utils_1.getBasicType(schema) === 'port';
    };
    SGraphFactory.prototype.isEdgeSchema = function (schema) {
        return smodel_utils_1.getBasicType(schema) === 'edge';
    };
    SGraphFactory.prototype.isLabelSchema = function (schema) {
        return smodel_utils_1.getBasicType(schema) === 'label';
    };
    SGraphFactory.prototype.isCompartmentSchema = function (schema) {
        return smodel_utils_1.getBasicType(schema) === 'comp';
    };
    SGraphFactory.prototype.isButtonSchema = function (schema) {
        return smodel_utils_1.getBasicType(schema) === 'button';
    };
    SGraphFactory = __decorate([
        inversify_1.injectable()
    ], SGraphFactory);
    return SGraphFactory;
}(smodel_factory_1.SModelFactory));
exports.SGraphFactory = SGraphFactory;


/***/ }),

/***/ "../node_modules/sprotty/lib/graph/sgraph.js":
/*!***************************************************!*\
  !*** ../node_modules/sprotty/lib/graph/sgraph.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var smodel_1 = __webpack_require__(/*! ../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var model_1 = __webpack_require__(/*! ../features/bounds/model */ "../node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ../features/edge-layout/model */ "../node_modules/sprotty/lib/features/edge-layout/model.js");
var delete_1 = __webpack_require__(/*! ../features/edit/delete */ "../node_modules/sprotty/lib/features/edit/delete.js");
var model_3 = __webpack_require__(/*! ../features/edit/model */ "../node_modules/sprotty/lib/features/edit/model.js");
var model_4 = __webpack_require__(/*! ../features/fade/model */ "../node_modules/sprotty/lib/features/fade/model.js");
var model_5 = __webpack_require__(/*! ../features/hover/model */ "../node_modules/sprotty/lib/features/hover/model.js");
var model_6 = __webpack_require__(/*! ../features/move/model */ "../node_modules/sprotty/lib/features/move/model.js");
var model_7 = __webpack_require__(/*! ../features/routing/model */ "../node_modules/sprotty/lib/features/routing/model.js");
var model_8 = __webpack_require__(/*! ../features/select/model */ "../node_modules/sprotty/lib/features/select/model.js");
var viewport_root_1 = __webpack_require__(/*! ../features/viewport/viewport-root */ "../node_modules/sprotty/lib/features/viewport/viewport-root.js");
var geometry_1 = __webpack_require__(/*! ../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var iterable_1 = __webpack_require__(/*! ../utils/iterable */ "../node_modules/sprotty/lib/utils/iterable.js");
/**
 * Root element for graph-like models.
 */
var SGraph = /** @class */ (function (_super) {
    __extends(SGraph, _super);
    function SGraph(index) {
        if (index === void 0) { index = new SGraphIndex(); }
        return _super.call(this, index) || this;
    }
    return SGraph;
}(viewport_root_1.ViewportRootElement));
exports.SGraph = SGraph;
/**
 * Model element class for nodes, which are the main entities in a graph. A node can be connected to
 * another node via an SEdge. Such a connection can be direct, i.e. the node is the source or target of
 * the edge, or indirect through a port, i.e. it contains an SPort which is the source or target of the edge.
 */
var SNode = /** @class */ (function (_super) {
    __extends(SNode, _super);
    function SNode() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.selected = false;
        _this.hoverFeedback = false;
        _this.opacity = 1;
        return _this;
    }
    SNode.prototype.canConnect = function (routable, role) {
        return this.children.find(function (c) { return c instanceof SPort; }) === undefined;
    };
    SNode.DEFAULT_FEATURES = [model_7.connectableFeature, delete_1.deletableFeature, model_8.selectFeature, model_1.boundsFeature,
        model_6.moveFeature, model_1.layoutContainerFeature, model_4.fadeFeature, model_5.hoverFeedbackFeature, model_5.popupFeature];
    return SNode;
}(model_7.SConnectableElement));
exports.SNode = SNode;
/**
 * A port is a connection point for edges. It should always be contained in an SNode.
 */
var SPort = /** @class */ (function (_super) {
    __extends(SPort, _super);
    function SPort() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.selected = false;
        _this.hoverFeedback = false;
        _this.opacity = 1;
        return _this;
    }
    SPort.DEFAULT_FEATURES = [model_7.connectableFeature, model_8.selectFeature, model_1.boundsFeature, model_4.fadeFeature,
        model_5.hoverFeedbackFeature];
    return SPort;
}(model_7.SConnectableElement));
exports.SPort = SPort;
/**
 * Model element class for edges, which are the connectors in a graph. An edge has a source and a target,
 * each of which can be either a node or a port. The source and target elements are referenced via their
 * ids and can be resolved with the index stored in the root element.
 */
var SEdge = /** @class */ (function (_super) {
    __extends(SEdge, _super);
    function SEdge() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.selected = false;
        _this.hoverFeedback = false;
        _this.opacity = 1;
        return _this;
    }
    SEdge.DEFAULT_FEATURES = [model_3.editFeature, delete_1.deletableFeature, model_8.selectFeature, model_4.fadeFeature,
        model_5.hoverFeedbackFeature];
    return SEdge;
}(model_7.SRoutableElement));
exports.SEdge = SEdge;
/**
 * A label can be attached to a node, edge, or port, and contains some text to be rendered in its view.
 */
var SLabel = /** @class */ (function (_super) {
    __extends(SLabel, _super);
    function SLabel() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.selected = false;
        _this.alignment = geometry_1.ORIGIN_POINT;
        _this.opacity = 1;
        return _this;
    }
    SLabel.DEFAULT_FEATURES = [model_1.boundsFeature, model_1.alignFeature, model_1.layoutableChildFeature,
        model_2.edgeLayoutFeature, model_4.fadeFeature];
    return SLabel;
}(model_1.SShapeElement));
exports.SLabel = SLabel;
/**
 * A compartment is used to group multiple child elements such as labels of a node. Usually a `vbox`
 * or `hbox` layout is used to arrange these children.
 */
var SCompartment = /** @class */ (function (_super) {
    __extends(SCompartment, _super);
    function SCompartment() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.opacity = 1;
        return _this;
    }
    SCompartment.DEFAULT_FEATURES = [model_1.boundsFeature, model_1.layoutContainerFeature, model_1.layoutableChildFeature,
        model_4.fadeFeature];
    return SCompartment;
}(model_1.SShapeElement));
exports.SCompartment = SCompartment;
/**
 * A specialized model index that tracks outgoing and incoming edges.
 */
var SGraphIndex = /** @class */ (function (_super) {
    __extends(SGraphIndex, _super);
    function SGraphIndex() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.outgoing = new Map;
        _this.incoming = new Map;
        return _this;
    }
    SGraphIndex.prototype.add = function (element) {
        _super.prototype.add.call(this, element);
        if (element instanceof SEdge) {
            // Register the edge in the outgoing map
            if (element.sourceId) {
                var sourceArr = this.outgoing.get(element.sourceId);
                if (sourceArr === undefined)
                    this.outgoing.set(element.sourceId, [element]);
                else
                    sourceArr.push(element);
            }
            // Register the edge in the incoming map
            if (element.targetId) {
                var targetArr = this.incoming.get(element.targetId);
                if (targetArr === undefined)
                    this.incoming.set(element.targetId, [element]);
                else
                    targetArr.push(element);
            }
        }
    };
    SGraphIndex.prototype.remove = function (element) {
        _super.prototype.remove.call(this, element);
        if (element instanceof SEdge) {
            // Remove the edge from the outgoing map
            var sourceArr = this.outgoing.get(element.sourceId);
            if (sourceArr !== undefined) {
                var index = sourceArr.indexOf(element);
                if (index >= 0) {
                    if (sourceArr.length === 1)
                        this.outgoing.delete(element.sourceId);
                    else
                        sourceArr.splice(index, 1);
                }
            }
            // Remove the edge from the incoming map
            var targetArr = this.incoming.get(element.targetId);
            if (targetArr !== undefined) {
                var index = targetArr.indexOf(element);
                if (index >= 0) {
                    if (targetArr.length === 1)
                        this.incoming.delete(element.targetId);
                    else
                        targetArr.splice(index, 1);
                }
            }
        }
    };
    SGraphIndex.prototype.getAttachedElements = function (element) {
        var _this = this;
        return new iterable_1.FluentIterableImpl(function () { return ({
            outgoing: _this.outgoing.get(element.id),
            incoming: _this.incoming.get(element.id),
            nextOutgoingIndex: 0,
            nextIncomingIndex: 0
        }); }, function (state) {
            var index = state.nextOutgoingIndex;
            if (state.outgoing !== undefined && index < state.outgoing.length) {
                state.nextOutgoingIndex = index + 1;
                return { done: false, value: state.outgoing[index] };
            }
            index = state.nextIncomingIndex;
            if (state.incoming !== undefined) {
                // Filter out self-loops: edges that are both outgoing and incoming
                while (index < state.incoming.length) {
                    var edge = state.incoming[index];
                    if (edge.sourceId !== edge.targetId) {
                        state.nextIncomingIndex = index + 1;
                        return { done: false, value: edge };
                    }
                    index++;
                }
            }
            return { done: true, value: undefined };
        });
    };
    SGraphIndex.prototype.getIncomingEdges = function (element) {
        return this.incoming.get(element.id) || [];
    };
    SGraphIndex.prototype.getOutgoingEdges = function (element) {
        return this.outgoing.get(element.id) || [];
    };
    return SGraphIndex;
}(smodel_1.SModelIndex));
exports.SGraphIndex = SGraphIndex;


/***/ }),

/***/ "../node_modules/sprotty/lib/graph/views.js":
/*!**************************************************!*\
  !*** ../node_modules/sprotty/lib/graph/views.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsx svg */
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var snabbdom_jsx_1 = __webpack_require__(/*! snabbdom-jsx */ "../node_modules/snabbdom-jsx/snabbdom-jsx.js");
var smodel_utils_1 = __webpack_require__(/*! ../base/model/smodel-utils */ "../node_modules/sprotty/lib/base/model/smodel-utils.js");
var vnode_utils_1 = __webpack_require__(/*! ../base/views/vnode-utils */ "../node_modules/sprotty/lib/base/views/vnode-utils.js");
var model_1 = __webpack_require__(/*! ../features/routing/model */ "../node_modules/sprotty/lib/features/routing/model.js");
var routing_1 = __webpack_require__(/*! ../features/routing/routing */ "../node_modules/sprotty/lib/features/routing/routing.js");
/**
 * IView component that turns an SGraph element and its children into a tree of virtual DOM elements.
 */
var SGraphView = /** @class */ (function () {
    function SGraphView() {
    }
    SGraphView.prototype.render = function (model, context) {
        var transform = "scale(" + model.zoom + ") translate(" + -model.scroll.x + "," + -model.scroll.y + ")";
        return snabbdom_jsx_1.svg("svg", { "class-sprotty-graph": true },
            snabbdom_jsx_1.svg("g", { transform: transform }, context.renderChildren(model)));
    };
    SGraphView = __decorate([
        inversify_1.injectable()
    ], SGraphView);
    return SGraphView;
}());
exports.SGraphView = SGraphView;
var PolylineEdgeView = /** @class */ (function () {
    function PolylineEdgeView() {
    }
    PolylineEdgeView.prototype.render = function (edge, context) {
        var router = this.edgeRouterRegistry.get(edge.routerKind);
        var route = router.route(edge);
        if (route.length === 0)
            return this.renderDanglingEdge("Cannot compute route", edge, context);
        return snabbdom_jsx_1.svg("g", { "class-sprotty-edge": true, "class-mouseover": edge.hoverFeedback },
            this.renderLine(edge, route, context),
            this.renderAdditionals(edge, route, context),
            context.renderChildren(edge, { route: route }));
    };
    PolylineEdgeView.prototype.renderLine = function (edge, segments, context) {
        var firstPoint = segments[0];
        var path = "M " + firstPoint.x + "," + firstPoint.y;
        for (var i = 1; i < segments.length; i++) {
            var p = segments[i];
            path += " L " + p.x + "," + p.y;
        }
        return snabbdom_jsx_1.svg("path", { d: path });
    };
    PolylineEdgeView.prototype.renderAdditionals = function (edge, segments, context) {
        return [];
    };
    PolylineEdgeView.prototype.renderDanglingEdge = function (message, edge, context) {
        return snabbdom_jsx_1.svg("text", { "class-sprotty-edge-dangling": true, title: message }, "?");
    };
    __decorate([
        inversify_1.inject(routing_1.EdgeRouterRegistry),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], PolylineEdgeView.prototype, "edgeRouterRegistry", void 0);
    PolylineEdgeView = __decorate([
        inversify_1.injectable()
    ], PolylineEdgeView);
    return PolylineEdgeView;
}());
exports.PolylineEdgeView = PolylineEdgeView;
var SRoutingHandleView = /** @class */ (function () {
    function SRoutingHandleView() {
        this.minimalPointDistance = 10;
    }
    SRoutingHandleView.prototype.render = function (handle, context, args) {
        if (args && args.route) {
            if (handle.parent instanceof model_1.SRoutableElement) {
                var router = this.edgeRouterRegistry.get(handle.parent.routerKind);
                var theRoute = args.route === undefined ? router.route(handle.parent) : args.route;
                var position = router.getHandlePosition(handle.parent, theRoute, handle);
                if (position !== undefined) {
                    var node = snabbdom_jsx_1.svg("circle", { "class-sprotty-routing-handle": true, "class-selected": handle.selected, "class-mouseover": handle.hoverFeedback, cx: position.x, cy: position.y, r: this.getRadius() });
                    vnode_utils_1.setAttr(node, 'data-kind', handle.kind);
                    return node;
                }
            }
        }
        // Fallback: Create an empty group
        return snabbdom_jsx_1.svg("g", null);
    };
    SRoutingHandleView.prototype.getRadius = function () {
        return 7;
    };
    __decorate([
        inversify_1.inject(routing_1.EdgeRouterRegistry),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], SRoutingHandleView.prototype, "edgeRouterRegistry", void 0);
    SRoutingHandleView = __decorate([
        inversify_1.injectable()
    ], SRoutingHandleView);
    return SRoutingHandleView;
}());
exports.SRoutingHandleView = SRoutingHandleView;
var SLabelView = /** @class */ (function () {
    function SLabelView() {
    }
    SLabelView.prototype.render = function (label, context) {
        var vnode = snabbdom_jsx_1.svg("text", { "class-sprotty-label": true }, label.text);
        var subType = smodel_utils_1.getSubType(label);
        if (subType)
            vnode_utils_1.setAttr(vnode, 'class', subType);
        return vnode;
    };
    SLabelView = __decorate([
        inversify_1.injectable()
    ], SLabelView);
    return SLabelView;
}());
exports.SLabelView = SLabelView;
var SCompartmentView = /** @class */ (function () {
    function SCompartmentView() {
    }
    SCompartmentView.prototype.render = function (model, context) {
        var translate = "translate(" + model.bounds.x + ", " + model.bounds.y + ")";
        var vnode = snabbdom_jsx_1.svg("g", { transform: translate, "class-sprotty-comp": "{true}" }, context.renderChildren(model));
        var subType = smodel_utils_1.getSubType(model);
        if (subType)
            vnode_utils_1.setAttr(vnode, 'class', subType);
        return vnode;
    };
    SCompartmentView = __decorate([
        inversify_1.injectable()
    ], SCompartmentView);
    return SCompartmentView;
}());
exports.SCompartmentView = SCompartmentView;


/***/ }),

/***/ "../node_modules/sprotty/lib/index.js":
/*!********************************************!*\
  !*** ../node_modules/sprotty/lib/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
// ------------------ Base ------------------
__export(__webpack_require__(/*! ./base/actions/action */ "../node_modules/sprotty/lib/base/actions/action.js"));
__export(__webpack_require__(/*! ./base/actions/action-dispatcher */ "../node_modules/sprotty/lib/base/actions/action-dispatcher.js"));
__export(__webpack_require__(/*! ./base/actions/action-handler */ "../node_modules/sprotty/lib/base/actions/action-handler.js"));
__export(__webpack_require__(/*! ./base/actions/diagram-locker */ "../node_modules/sprotty/lib/base/actions/diagram-locker.js"));
__export(__webpack_require__(/*! ./base/animations/animation-frame-syncer */ "../node_modules/sprotty/lib/base/animations/animation-frame-syncer.js"));
__export(__webpack_require__(/*! ./base/animations/animation */ "../node_modules/sprotty/lib/base/animations/animation.js"));
__export(__webpack_require__(/*! ./base/animations/easing */ "../node_modules/sprotty/lib/base/animations/easing.js"));
__export(__webpack_require__(/*! ./base/commands/command */ "../node_modules/sprotty/lib/base/commands/command.js"));
__export(__webpack_require__(/*! ./base/commands/command-registration */ "../node_modules/sprotty/lib/base/commands/command-registration.js"));
__export(__webpack_require__(/*! ./base/commands/command-stack-options */ "../node_modules/sprotty/lib/base/commands/command-stack-options.js"));
__export(__webpack_require__(/*! ./base/commands/command-stack */ "../node_modules/sprotty/lib/base/commands/command-stack.js"));
__export(__webpack_require__(/*! ./base/features/initialize-canvas */ "../node_modules/sprotty/lib/base/features/initialize-canvas.js"));
__export(__webpack_require__(/*! ./base/features/set-model */ "../node_modules/sprotty/lib/base/features/set-model.js"));
__export(__webpack_require__(/*! ./base/model/smodel-factory */ "../node_modules/sprotty/lib/base/model/smodel-factory.js"));
__export(__webpack_require__(/*! ./base/model/smodel-utils */ "../node_modules/sprotty/lib/base/model/smodel-utils.js"));
__export(__webpack_require__(/*! ./base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js"));
__export(__webpack_require__(/*! ./base/tool-manager/tool-manager */ "../node_modules/sprotty/lib/base/tool-manager/tool-manager.js"));
__export(__webpack_require__(/*! ./base/tool-manager/tool */ "../node_modules/sprotty/lib/base/tool-manager/tool.js"));
__export(__webpack_require__(/*! ./base/ui-extensions/ui-extension-registry */ "../node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js"));
__export(__webpack_require__(/*! ./base/ui-extensions/ui-extension */ "../node_modules/sprotty/lib/base/ui-extensions/ui-extension.js"));
__export(__webpack_require__(/*! ./base/views/key-tool */ "../node_modules/sprotty/lib/base/views/key-tool.js"));
__export(__webpack_require__(/*! ./base/views/mouse-tool */ "../node_modules/sprotty/lib/base/views/mouse-tool.js"));
__export(__webpack_require__(/*! ./base/views/thunk-view */ "../node_modules/sprotty/lib/base/views/thunk-view.js"));
__export(__webpack_require__(/*! ./base/views/view */ "../node_modules/sprotty/lib/base/views/view.js"));
__export(__webpack_require__(/*! ./base/views/viewer-cache */ "../node_modules/sprotty/lib/base/views/viewer-cache.js"));
__export(__webpack_require__(/*! ./base/views/viewer-options */ "../node_modules/sprotty/lib/base/views/viewer-options.js"));
__export(__webpack_require__(/*! ./base/views/viewer */ "../node_modules/sprotty/lib/base/views/viewer.js"));
__export(__webpack_require__(/*! ./base/views/vnode-postprocessor */ "../node_modules/sprotty/lib/base/views/vnode-postprocessor.js"));
__export(__webpack_require__(/*! ./base/views/vnode-utils */ "../node_modules/sprotty/lib/base/views/vnode-utils.js"));
__export(__webpack_require__(/*! ./base/types */ "../node_modules/sprotty/lib/base/types.js"));
var di_config_1 = __webpack_require__(/*! ./base/di.config */ "../node_modules/sprotty/lib/base/di.config.js");
exports.defaultModule = di_config_1.default;
// ------------------ Features ------------------
__export(__webpack_require__(/*! ./features/bounds/bounds-manipulation */ "../node_modules/sprotty/lib/features/bounds/bounds-manipulation.js"));
__export(__webpack_require__(/*! ./features/bounds/hidden-bounds-updater */ "../node_modules/sprotty/lib/features/bounds/hidden-bounds-updater.js"));
__export(__webpack_require__(/*! ./features/bounds/layout */ "../node_modules/sprotty/lib/features/bounds/layout.js"));
__export(__webpack_require__(/*! ./features/bounds/model */ "../node_modules/sprotty/lib/features/bounds/model.js"));
__export(__webpack_require__(/*! ./features/bounds/vbox-layout */ "../node_modules/sprotty/lib/features/bounds/vbox-layout.js"));
__export(__webpack_require__(/*! ./features/bounds/hbox-layout */ "../node_modules/sprotty/lib/features/bounds/hbox-layout.js"));
__export(__webpack_require__(/*! ./features/bounds/stack-layout */ "../node_modules/sprotty/lib/features/bounds/stack-layout.js"));
__export(__webpack_require__(/*! ./features/button/button-handler */ "../node_modules/sprotty/lib/features/button/button-handler.js"));
__export(__webpack_require__(/*! ./features/button/model */ "../node_modules/sprotty/lib/features/button/model.js"));
__export(__webpack_require__(/*! ./features/command-palette/action-providers */ "../node_modules/sprotty/lib/features/command-palette/action-providers.js"));
__export(__webpack_require__(/*! ./features/command-palette/command-palette */ "../node_modules/sprotty/lib/features/command-palette/command-palette.js"));
__export(__webpack_require__(/*! ./features/context-menu/context-menu-service */ "../node_modules/sprotty/lib/features/context-menu/context-menu-service.js"));
__export(__webpack_require__(/*! ./features/context-menu/menu-providers */ "../node_modules/sprotty/lib/features/context-menu/menu-providers.js"));
__export(__webpack_require__(/*! ./features/context-menu/mouse-listener */ "../node_modules/sprotty/lib/features/context-menu/mouse-listener.js"));
__export(__webpack_require__(/*! ./features/edge-layout/di.config */ "../node_modules/sprotty/lib/features/edge-layout/di.config.js"));
__export(__webpack_require__(/*! ./features/edge-layout/edge-layout */ "../node_modules/sprotty/lib/features/edge-layout/edge-layout.js"));
__export(__webpack_require__(/*! ./features/edge-layout/model */ "../node_modules/sprotty/lib/features/edge-layout/model.js"));
__export(__webpack_require__(/*! ./features/edit/create */ "../node_modules/sprotty/lib/features/edit/create.js"));
__export(__webpack_require__(/*! ./features/edit/create-on-drag */ "../node_modules/sprotty/lib/features/edit/create-on-drag.js"));
__export(__webpack_require__(/*! ./features/edit/di.config */ "../node_modules/sprotty/lib/features/edit/di.config.js"));
__export(__webpack_require__(/*! ./features/edit/delete */ "../node_modules/sprotty/lib/features/edit/delete.js"));
__export(__webpack_require__(/*! ./features/edit/edit-label */ "../node_modules/sprotty/lib/features/edit/edit-label.js"));
__export(__webpack_require__(/*! ./features/edit/edit-label-ui */ "../node_modules/sprotty/lib/features/edit/edit-label-ui.js"));
__export(__webpack_require__(/*! ./features/edit/edit-routing */ "../node_modules/sprotty/lib/features/edit/edit-routing.js"));
__export(__webpack_require__(/*! ./features/edit/model */ "../node_modules/sprotty/lib/features/edit/model.js"));
__export(__webpack_require__(/*! ./features/edit/reconnect */ "../node_modules/sprotty/lib/features/edit/reconnect.js"));
__export(__webpack_require__(/*! ./features/expand/expand */ "../node_modules/sprotty/lib/features/expand/expand.js"));
__export(__webpack_require__(/*! ./features/expand/model */ "../node_modules/sprotty/lib/features/expand/model.js"));
__export(__webpack_require__(/*! ./features/expand/views */ "../node_modules/sprotty/lib/features/expand/views.js"));
__export(__webpack_require__(/*! ./features/export/export */ "../node_modules/sprotty/lib/features/export/export.js"));
__export(__webpack_require__(/*! ./features/export/model */ "../node_modules/sprotty/lib/features/export/model.js"));
__export(__webpack_require__(/*! ./features/export/svg-exporter */ "../node_modules/sprotty/lib/features/export/svg-exporter.js"));
__export(__webpack_require__(/*! ./features/fade/fade */ "../node_modules/sprotty/lib/features/fade/fade.js"));
__export(__webpack_require__(/*! ./features/fade/model */ "../node_modules/sprotty/lib/features/fade/model.js"));
__export(__webpack_require__(/*! ./features/hover/hover */ "../node_modules/sprotty/lib/features/hover/hover.js"));
__export(__webpack_require__(/*! ./features/hover/model */ "../node_modules/sprotty/lib/features/hover/model.js"));
__export(__webpack_require__(/*! ./features/decoration/model */ "../node_modules/sprotty/lib/features/decoration/model.js"));
__export(__webpack_require__(/*! ./features/decoration/views */ "../node_modules/sprotty/lib/features/decoration/views.js"));
__export(__webpack_require__(/*! ./features/decoration/decoration-placer */ "../node_modules/sprotty/lib/features/decoration/decoration-placer.js"));
__export(__webpack_require__(/*! ./features/move/model */ "../node_modules/sprotty/lib/features/move/model.js"));
__export(__webpack_require__(/*! ./features/move/move */ "../node_modules/sprotty/lib/features/move/move.js"));
__export(__webpack_require__(/*! ./features/move/snap */ "../node_modules/sprotty/lib/features/move/snap.js"));
__export(__webpack_require__(/*! ./features/nameable/model */ "../node_modules/sprotty/lib/features/nameable/model.js"));
__export(__webpack_require__(/*! ./features/open/open */ "../node_modules/sprotty/lib/features/open/open.js"));
__export(__webpack_require__(/*! ./features/open/model */ "../node_modules/sprotty/lib/features/open/model.js"));
__export(__webpack_require__(/*! ./features/routing/anchor */ "../node_modules/sprotty/lib/features/routing/anchor.js"));
__export(__webpack_require__(/*! ./features/routing/linear-edge-router */ "../node_modules/sprotty/lib/features/routing/linear-edge-router.js"));
__export(__webpack_require__(/*! ./features/routing/manhattan-anchors */ "../node_modules/sprotty/lib/features/routing/manhattan-anchors.js"));
__export(__webpack_require__(/*! ./features/routing/manhattan-edge-router */ "../node_modules/sprotty/lib/features/routing/manhattan-edge-router.js"));
__export(__webpack_require__(/*! ./features/routing/model */ "../node_modules/sprotty/lib/features/routing/model.js"));
__export(__webpack_require__(/*! ./features/routing/polyline-anchors */ "../node_modules/sprotty/lib/features/routing/polyline-anchors.js"));
__export(__webpack_require__(/*! ./features/routing/polyline-edge-router */ "../node_modules/sprotty/lib/features/routing/polyline-edge-router.js"));
__export(__webpack_require__(/*! ./features/routing/routing */ "../node_modules/sprotty/lib/features/routing/routing.js"));
__export(__webpack_require__(/*! ./features/select/model */ "../node_modules/sprotty/lib/features/select/model.js"));
__export(__webpack_require__(/*! ./features/select/select */ "../node_modules/sprotty/lib/features/select/select.js"));
__export(__webpack_require__(/*! ./features/undo-redo/undo-redo */ "../node_modules/sprotty/lib/features/undo-redo/undo-redo.js"));
__export(__webpack_require__(/*! ./features/update/model-matching */ "../node_modules/sprotty/lib/features/update/model-matching.js"));
__export(__webpack_require__(/*! ./features/update/update-model */ "../node_modules/sprotty/lib/features/update/update-model.js"));
__export(__webpack_require__(/*! ./features/viewport/center-fit */ "../node_modules/sprotty/lib/features/viewport/center-fit.js"));
__export(__webpack_require__(/*! ./features/viewport/model */ "../node_modules/sprotty/lib/features/viewport/model.js"));
__export(__webpack_require__(/*! ./features/viewport/scroll */ "../node_modules/sprotty/lib/features/viewport/scroll.js"));
__export(__webpack_require__(/*! ./features/viewport/viewport-root */ "../node_modules/sprotty/lib/features/viewport/viewport-root.js"));
__export(__webpack_require__(/*! ./features/viewport/viewport */ "../node_modules/sprotty/lib/features/viewport/viewport.js"));
__export(__webpack_require__(/*! ./features/viewport/zoom */ "../node_modules/sprotty/lib/features/viewport/zoom.js"));
__export(__webpack_require__(/*! ./features/zorder/zorder */ "../node_modules/sprotty/lib/features/zorder/zorder.js"));
var di_config_2 = __webpack_require__(/*! ./graph/di.config */ "../node_modules/sprotty/lib/graph/di.config.js");
exports.graphModule = di_config_2.default;
var di_config_3 = __webpack_require__(/*! ./features/bounds/di.config */ "../node_modules/sprotty/lib/features/bounds/di.config.js");
exports.boundsModule = di_config_3.default;
var di_config_4 = __webpack_require__(/*! ./features/button/di.config */ "../node_modules/sprotty/lib/features/button/di.config.js");
exports.buttonModule = di_config_4.default;
var di_config_5 = __webpack_require__(/*! ./features/command-palette/di.config */ "../node_modules/sprotty/lib/features/command-palette/di.config.js");
exports.commandPaletteModule = di_config_5.default;
var di_config_6 = __webpack_require__(/*! ./features/context-menu/di.config */ "../node_modules/sprotty/lib/features/context-menu/di.config.js");
exports.contextMenuModule = di_config_6.default;
var di_config_7 = __webpack_require__(/*! ./features/decoration/di.config */ "../node_modules/sprotty/lib/features/decoration/di.config.js");
exports.decorationModule = di_config_7.default;
var di_config_8 = __webpack_require__(/*! ./features/edge-layout/di.config */ "../node_modules/sprotty/lib/features/edge-layout/di.config.js");
exports.edgeLayoutModule = di_config_8.default;
var di_config_9 = __webpack_require__(/*! ./features/expand/di.config */ "../node_modules/sprotty/lib/features/expand/di.config.js");
exports.expandModule = di_config_9.default;
var di_config_10 = __webpack_require__(/*! ./features/export/di.config */ "../node_modules/sprotty/lib/features/export/di.config.js");
exports.exportModule = di_config_10.default;
var di_config_11 = __webpack_require__(/*! ./features/fade/di.config */ "../node_modules/sprotty/lib/features/fade/di.config.js");
exports.fadeModule = di_config_11.default;
var di_config_12 = __webpack_require__(/*! ./features/hover/di.config */ "../node_modules/sprotty/lib/features/hover/di.config.js");
exports.hoverModule = di_config_12.default;
var di_config_13 = __webpack_require__(/*! ./features/move/di.config */ "../node_modules/sprotty/lib/features/move/di.config.js");
exports.moveModule = di_config_13.default;
var di_config_14 = __webpack_require__(/*! ./features/open/di.config */ "../node_modules/sprotty/lib/features/open/di.config.js");
exports.openModule = di_config_14.default;
var di_config_15 = __webpack_require__(/*! ./features/routing/di.config */ "../node_modules/sprotty/lib/features/routing/di.config.js");
exports.routingModule = di_config_15.default;
var di_config_16 = __webpack_require__(/*! ./features/select/di.config */ "../node_modules/sprotty/lib/features/select/di.config.js");
exports.selectModule = di_config_16.default;
var di_config_17 = __webpack_require__(/*! ./features/undo-redo/di.config */ "../node_modules/sprotty/lib/features/undo-redo/di.config.js");
exports.undoRedoModule = di_config_17.default;
var di_config_18 = __webpack_require__(/*! ./features/update/di.config */ "../node_modules/sprotty/lib/features/update/di.config.js");
exports.updateModule = di_config_18.default;
var di_config_19 = __webpack_require__(/*! ./features/viewport/di.config */ "../node_modules/sprotty/lib/features/viewport/di.config.js");
exports.viewportModule = di_config_19.default;
var di_config_20 = __webpack_require__(/*! ./features/zorder/di.config */ "../node_modules/sprotty/lib/features/zorder/di.config.js");
exports.zorderModule = di_config_20.default;
// ------------------ Graph ------------------
__export(__webpack_require__(/*! ./graph/sgraph-factory */ "../node_modules/sprotty/lib/graph/sgraph-factory.js"));
__export(__webpack_require__(/*! ./graph/sgraph */ "../node_modules/sprotty/lib/graph/sgraph.js"));
__export(__webpack_require__(/*! ./graph/views */ "../node_modules/sprotty/lib/graph/views.js"));
// ------------------ Library ------------------
__export(__webpack_require__(/*! ./lib/modules */ "../node_modules/sprotty/lib/lib/modules.js"));
__export(__webpack_require__(/*! ./lib/generic-views */ "../node_modules/sprotty/lib/lib/generic-views.js"));
__export(__webpack_require__(/*! ./lib/html-views */ "../node_modules/sprotty/lib/lib/html-views.js"));
__export(__webpack_require__(/*! ./lib/model */ "../node_modules/sprotty/lib/lib/model.js"));
__export(__webpack_require__(/*! ./lib/svg-views */ "../node_modules/sprotty/lib/lib/svg-views.js"));
// ------------------ Model Source ------------------
__export(__webpack_require__(/*! ./model-source/commit-model */ "../node_modules/sprotty/lib/model-source/commit-model.js"));
__export(__webpack_require__(/*! ./model-source/diagram-server */ "../node_modules/sprotty/lib/model-source/diagram-server.js"));
__export(__webpack_require__(/*! ./model-source/local-model-source */ "../node_modules/sprotty/lib/model-source/local-model-source.js"));
__export(__webpack_require__(/*! ./model-source/logging */ "../node_modules/sprotty/lib/model-source/logging.js"));
__export(__webpack_require__(/*! ./model-source/model-source */ "../node_modules/sprotty/lib/model-source/model-source.js"));
__export(__webpack_require__(/*! ./model-source/websocket */ "../node_modules/sprotty/lib/model-source/websocket.js"));
var di_config_21 = __webpack_require__(/*! ./model-source/di.config */ "../node_modules/sprotty/lib/model-source/di.config.js");
exports.modelSourceModule = di_config_21.default;
// ------------------ Utilities ------------------
__export(__webpack_require__(/*! ./utils/browser */ "../node_modules/sprotty/lib/utils/browser.js"));
__export(__webpack_require__(/*! ./utils/color */ "../node_modules/sprotty/lib/utils/color.js"));
__export(__webpack_require__(/*! ./utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js"));
__export(__webpack_require__(/*! ./utils/inversify */ "../node_modules/sprotty/lib/utils/inversify.js"));
__export(__webpack_require__(/*! ./utils/logging */ "../node_modules/sprotty/lib/utils/logging.js"));
__export(__webpack_require__(/*! ./utils/registry */ "../node_modules/sprotty/lib/utils/registry.js"));


/***/ }),

/***/ "../node_modules/sprotty/lib/lib/generic-views.js":
/*!********************************************************!*\
  !*** ../node_modules/sprotty/lib/lib/generic-views.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsx svg */
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var snabbdom_jsx_1 = __webpack_require__(/*! snabbdom-jsx */ "../node_modules/snabbdom-jsx/snabbdom-jsx.js");
var strings_1 = __webpack_require__(/*! snabbdom-virtualize/strings */ "../node_modules/snabbdom-virtualize/strings.js");
var vnode_utils_1 = __webpack_require__(/*! ../base/views/vnode-utils */ "../node_modules/sprotty/lib/base/views/vnode-utils.js");
var PreRenderedView = /** @class */ (function () {
    function PreRenderedView() {
    }
    PreRenderedView.prototype.render = function (model, context) {
        var node = strings_1.default(model.code);
        this.correctNamespace(node);
        return node;
    };
    PreRenderedView.prototype.correctNamespace = function (node) {
        if (node.sel === 'svg' || node.sel === 'g')
            vnode_utils_1.setNamespace(node, 'http://www.w3.org/2000/svg');
    };
    PreRenderedView = __decorate([
        inversify_1.injectable()
    ], PreRenderedView);
    return PreRenderedView;
}());
exports.PreRenderedView = PreRenderedView;
/**
 * An SVG `foreignObject` view with a namespace specified by the provided `ForeignObjectElement`.
 * Note that `foreignObject` may not be supported by all browsers or SVG viewers.
 */
var ForeignObjectView = /** @class */ (function () {
    function ForeignObjectView() {
    }
    ForeignObjectView.prototype.render = function (model, context) {
        var foreignObjectContents = strings_1.default(model.code);
        var node = snabbdom_jsx_1.svg("g", null,
            snabbdom_jsx_1.svg("foreignObject", { requiredFeatures: 'http://www.w3.org/TR/SVG11/feature#Extensibility', height: model.bounds.height, width: model.bounds.width, x: 0, y: 0 }, foreignObjectContents),
            context.renderChildren(model));
        vnode_utils_1.setAttr(node, 'class', model.type);
        vnode_utils_1.setNamespace(foreignObjectContents, model.namespace);
        return node;
    };
    ForeignObjectView = __decorate([
        inversify_1.injectable()
    ], ForeignObjectView);
    return ForeignObjectView;
}());
exports.ForeignObjectView = ForeignObjectView;


/***/ }),

/***/ "../node_modules/sprotty/lib/lib/html-views.js":
/*!*****************************************************!*\
  !*** ../node_modules/sprotty/lib/lib/html-views.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsx html */
var snabbdom_jsx_1 = __webpack_require__(/*! snabbdom-jsx */ "../node_modules/snabbdom-jsx/snabbdom-jsx.js");
var vnode_utils_1 = __webpack_require__(/*! ../base/views/vnode-utils */ "../node_modules/sprotty/lib/base/views/vnode-utils.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var HtmlRootView = /** @class */ (function () {
    function HtmlRootView() {
    }
    HtmlRootView.prototype.render = function (model, context) {
        var root = snabbdom_jsx_1.html("div", null, context.renderChildren(model));
        for (var _i = 0, _a = model.classes; _i < _a.length; _i++) {
            var c = _a[_i];
            vnode_utils_1.setClass(root, c, true);
        }
        return root;
    };
    HtmlRootView = __decorate([
        inversify_1.injectable()
    ], HtmlRootView);
    return HtmlRootView;
}());
exports.HtmlRootView = HtmlRootView;


/***/ }),

/***/ "../node_modules/sprotty/lib/lib/model.js":
/*!************************************************!*\
  !*** ../node_modules/sprotty/lib/lib/model.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var smodel_1 = __webpack_require__(/*! ../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var geometry_1 = __webpack_require__(/*! ../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var model_1 = __webpack_require__(/*! ../features/bounds/model */ "../node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ../features/move/model */ "../node_modules/sprotty/lib/features/move/model.js");
var model_3 = __webpack_require__(/*! ../features/select/model */ "../node_modules/sprotty/lib/features/select/model.js");
var sgraph_1 = __webpack_require__(/*! ../graph/sgraph */ "../node_modules/sprotty/lib/graph/sgraph.js");
var anchor_1 = __webpack_require__(/*! ../features/routing/anchor */ "../node_modules/sprotty/lib/features/routing/anchor.js");
/**
 * A node that is represented by a circle.
 */
var CircularNode = /** @class */ (function (_super) {
    __extends(CircularNode, _super);
    function CircularNode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(CircularNode.prototype, "anchorKind", {
        get: function () {
            return anchor_1.ELLIPTIC_ANCHOR_KIND;
        },
        enumerable: true,
        configurable: true
    });
    return CircularNode;
}(sgraph_1.SNode));
exports.CircularNode = CircularNode;
/**
 * A node that is represented by a rectangle.
 */
var RectangularNode = /** @class */ (function (_super) {
    __extends(RectangularNode, _super);
    function RectangularNode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(RectangularNode.prototype, "anchorKind", {
        get: function () {
            return anchor_1.RECTANGULAR_ANCHOR_KIND;
        },
        enumerable: true,
        configurable: true
    });
    return RectangularNode;
}(sgraph_1.SNode));
exports.RectangularNode = RectangularNode;
/**
 * A node that is represented by a diamond.
 */
var DiamondNode = /** @class */ (function (_super) {
    __extends(DiamondNode, _super);
    function DiamondNode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DiamondNode.prototype, "anchorKind", {
        get: function () {
            return anchor_1.DIAMOND_ANCHOR_KIND;
        },
        enumerable: true,
        configurable: true
    });
    return DiamondNode;
}(sgraph_1.SNode));
exports.DiamondNode = DiamondNode;
/**
 * A port that is represented by a circle.
 */
var CircularPort = /** @class */ (function (_super) {
    __extends(CircularPort, _super);
    function CircularPort() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(CircularPort.prototype, "anchorKind", {
        get: function () {
            return anchor_1.ELLIPTIC_ANCHOR_KIND;
        },
        enumerable: true,
        configurable: true
    });
    return CircularPort;
}(sgraph_1.SPort));
exports.CircularPort = CircularPort;
/**
 * A port that is represented by a rectangle.
 */
var RectangularPort = /** @class */ (function (_super) {
    __extends(RectangularPort, _super);
    function RectangularPort() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(RectangularPort.prototype, "anchorKind", {
        get: function () {
            return anchor_1.RECTANGULAR_ANCHOR_KIND;
        },
        enumerable: true,
        configurable: true
    });
    return RectangularPort;
}(sgraph_1.SPort));
exports.RectangularPort = RectangularPort;
/**
 * Root model element class for HTML content. Usually this is rendered with a `div` DOM element.
 */
var HtmlRoot = /** @class */ (function (_super) {
    __extends(HtmlRoot, _super);
    function HtmlRoot() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.classes = [];
        return _this;
    }
    return HtmlRoot;
}(smodel_1.SModelRoot));
exports.HtmlRoot = HtmlRoot;
/**
 * Pre-rendered elements contain HTML or SVG code to be transferred to the DOM. This can be useful to
 * render complex figures or to compute the view on the server instead of the client code.
 */
var PreRenderedElement = /** @class */ (function (_super) {
    __extends(PreRenderedElement, _super);
    function PreRenderedElement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PreRenderedElement;
}(smodel_1.SChildElement));
exports.PreRenderedElement = PreRenderedElement;
/**
 * Same as PreRenderedElement, but with a position and a size.
 */
var ShapedPreRenderedElement = /** @class */ (function (_super) {
    __extends(ShapedPreRenderedElement, _super);
    function ShapedPreRenderedElement() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.position = geometry_1.ORIGIN_POINT;
        _this.size = geometry_1.EMPTY_DIMENSION;
        _this.selected = false;
        _this.alignment = geometry_1.ORIGIN_POINT;
        return _this;
    }
    Object.defineProperty(ShapedPreRenderedElement.prototype, "bounds", {
        get: function () {
            return {
                x: this.position.x,
                y: this.position.y,
                width: this.size.width,
                height: this.size.height
            };
        },
        set: function (newBounds) {
            this.position = {
                x: newBounds.x,
                y: newBounds.y
            };
            this.size = {
                width: newBounds.width,
                height: newBounds.height
            };
        },
        enumerable: true,
        configurable: true
    });
    ShapedPreRenderedElement.DEFAULT_FEATURES = [model_2.moveFeature, model_1.boundsFeature, model_3.selectFeature, model_1.alignFeature];
    return ShapedPreRenderedElement;
}(PreRenderedElement));
exports.ShapedPreRenderedElement = ShapedPreRenderedElement;
/**
 * A `foreignObject` element to be transferred to the DOM within the SVG.
 *
 * This can be useful to to benefit from e.g. HTML rendering features, such as line wrapping, inside of
 * the SVG diagram.  Note that `foreignObject` is not supported by all browsers and SVG viewers may not
 * support rendering the `foreignObject` content.
 *
 * If no dimensions are specified in the schema element, this element will obtain the dimension of
 * its parent to fill the entire available room. Thus, this element requires specified bounds itself
 * or bounds to be available for its parent.
 */
var ForeignObjectElement = /** @class */ (function (_super) {
    __extends(ForeignObjectElement, _super);
    function ForeignObjectElement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ForeignObjectElement.prototype, "bounds", {
        get: function () {
            if (geometry_1.isValidDimension(this.size)) {
                return {
                    x: this.position.x,
                    y: this.position.y,
                    width: this.size.width,
                    height: this.size.height
                };
            }
            else if (model_1.isBoundsAware(this.parent)) {
                return {
                    x: this.position.x,
                    y: this.position.y,
                    width: this.parent.bounds.width,
                    height: this.parent.bounds.height
                };
            }
            return geometry_1.EMPTY_BOUNDS;
        },
        enumerable: true,
        configurable: true
    });
    return ForeignObjectElement;
}(ShapedPreRenderedElement));
exports.ForeignObjectElement = ForeignObjectElement;


/***/ }),

/***/ "../node_modules/sprotty/lib/lib/modules.js":
/*!**************************************************!*\
  !*** ../node_modules/sprotty/lib/lib/modules.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var di_config_1 = __webpack_require__(/*! ../base/di.config */ "../node_modules/sprotty/lib/base/di.config.js");
var di_config_2 = __webpack_require__(/*! ../model-source/di.config */ "../node_modules/sprotty/lib/model-source/di.config.js");
var di_config_3 = __webpack_require__(/*! ../features/bounds/di.config */ "../node_modules/sprotty/lib/features/bounds/di.config.js");
var di_config_4 = __webpack_require__(/*! ../features/button/di.config */ "../node_modules/sprotty/lib/features/button/di.config.js");
var di_config_5 = __webpack_require__(/*! ../features/command-palette/di.config */ "../node_modules/sprotty/lib/features/command-palette/di.config.js");
var di_config_6 = __webpack_require__(/*! ../features/context-menu/di.config */ "../node_modules/sprotty/lib/features/context-menu/di.config.js");
var di_config_7 = __webpack_require__(/*! ../features/decoration/di.config */ "../node_modules/sprotty/lib/features/decoration/di.config.js");
var di_config_8 = __webpack_require__(/*! ../features/edge-layout/di.config */ "../node_modules/sprotty/lib/features/edge-layout/di.config.js");
var di_config_9 = __webpack_require__(/*! ../features/edit/di.config */ "../node_modules/sprotty/lib/features/edit/di.config.js");
var di_config_10 = __webpack_require__(/*! ../features/expand/di.config */ "../node_modules/sprotty/lib/features/expand/di.config.js");
var di_config_11 = __webpack_require__(/*! ../features/export/di.config */ "../node_modules/sprotty/lib/features/export/di.config.js");
var di_config_12 = __webpack_require__(/*! ../features/fade/di.config */ "../node_modules/sprotty/lib/features/fade/di.config.js");
var di_config_13 = __webpack_require__(/*! ../features/hover/di.config */ "../node_modules/sprotty/lib/features/hover/di.config.js");
var di_config_14 = __webpack_require__(/*! ../features/move/di.config */ "../node_modules/sprotty/lib/features/move/di.config.js");
var di_config_15 = __webpack_require__(/*! ../features/open/di.config */ "../node_modules/sprotty/lib/features/open/di.config.js");
var di_config_16 = __webpack_require__(/*! ../features/routing/di.config */ "../node_modules/sprotty/lib/features/routing/di.config.js");
var di_config_17 = __webpack_require__(/*! ../features/select/di.config */ "../node_modules/sprotty/lib/features/select/di.config.js");
var di_config_18 = __webpack_require__(/*! ../features/undo-redo/di.config */ "../node_modules/sprotty/lib/features/undo-redo/di.config.js");
var di_config_19 = __webpack_require__(/*! ../features/update/di.config */ "../node_modules/sprotty/lib/features/update/di.config.js");
var di_config_20 = __webpack_require__(/*! ../features/viewport/di.config */ "../node_modules/sprotty/lib/features/viewport/di.config.js");
var di_config_21 = __webpack_require__(/*! ../features/zorder/di.config */ "../node_modules/sprotty/lib/features/zorder/di.config.js");
/**
 * Load the default set of container modules provided by Sprotty.
 */
function loadDefaultModules(container, options) {
    var modules = [
        di_config_1.default, di_config_2.default, di_config_3.default, di_config_4.default,
        di_config_5.default, di_config_6.default, di_config_7.default, di_config_9.edgeEditModule,
        di_config_8.default, di_config_10.default, di_config_11.default, di_config_12.default,
        di_config_13.default, di_config_9.labelEditModule, di_config_9.labelEditUiModule, di_config_14.default,
        di_config_15.default, di_config_16.default, di_config_17.default, di_config_18.default,
        di_config_19.default, di_config_20.default, di_config_21.default
    ];
    if (options && options.exclude) {
        for (var _i = 0, _a = options.exclude; _i < _a.length; _i++) {
            var mod = _a[_i];
            var index = modules.indexOf(mod);
            if (index >= 0)
                modules.splice(index, 1);
        }
    }
    container.load.apply(container, modules);
}
exports.loadDefaultModules = loadDefaultModules;


/***/ }),

/***/ "../node_modules/sprotty/lib/lib/svg-views.js":
/*!****************************************************!*\
  !*** ../node_modules/sprotty/lib/lib/svg-views.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsx svg */
var snabbdom_jsx_1 = __webpack_require__(/*! snabbdom-jsx */ "../node_modules/snabbdom-jsx/snabbdom-jsx.js");
var sgraph_1 = __webpack_require__(/*! ../graph/sgraph */ "../node_modules/sprotty/lib/graph/sgraph.js");
var geometry_1 = __webpack_require__(/*! ../utils/geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var SvgViewportView = /** @class */ (function () {
    function SvgViewportView() {
    }
    SvgViewportView.prototype.render = function (model, context) {
        var transform = "scale(" + model.zoom + ") translate(" + -model.scroll.x + "," + -model.scroll.y + ")";
        return snabbdom_jsx_1.svg("svg", null,
            snabbdom_jsx_1.svg("g", { transform: transform }, context.renderChildren(model)));
    };
    SvgViewportView = __decorate([
        inversify_1.injectable()
    ], SvgViewportView);
    return SvgViewportView;
}());
exports.SvgViewportView = SvgViewportView;
var CircularNodeView = /** @class */ (function () {
    function CircularNodeView() {
    }
    CircularNodeView.prototype.render = function (node, context) {
        var radius = this.getRadius(node);
        return snabbdom_jsx_1.svg("g", null,
            snabbdom_jsx_1.svg("circle", { "class-sprotty-node": node instanceof sgraph_1.SNode, "class-sprotty-port": node instanceof sgraph_1.SPort, "class-mouseover": node.hoverFeedback, "class-selected": node.selected, r: radius, cx: radius, cy: radius }),
            context.renderChildren(node));
    };
    CircularNodeView.prototype.getRadius = function (node) {
        var d = Math.min(node.size.width, node.size.height);
        return d > 0 ? d / 2 : 0;
    };
    CircularNodeView = __decorate([
        inversify_1.injectable()
    ], CircularNodeView);
    return CircularNodeView;
}());
exports.CircularNodeView = CircularNodeView;
var RectangularNodeView = /** @class */ (function () {
    function RectangularNodeView() {
    }
    RectangularNodeView.prototype.render = function (node, context) {
        return snabbdom_jsx_1.svg("g", null,
            snabbdom_jsx_1.svg("rect", { "class-sprotty-node": node instanceof sgraph_1.SNode, "class-sprotty-port": node instanceof sgraph_1.SPort, "class-mouseover": node.hoverFeedback, "class-selected": node.selected, x: "0", y: "0", width: Math.max(node.size.width, 0), height: Math.max(node.size.height, 0) }),
            context.renderChildren(node));
    };
    RectangularNodeView = __decorate([
        inversify_1.injectable()
    ], RectangularNodeView);
    return RectangularNodeView;
}());
exports.RectangularNodeView = RectangularNodeView;
var DiamondNodeView = /** @class */ (function () {
    function DiamondNodeView() {
    }
    DiamondNodeView.prototype.render = function (node, context) {
        var diamond = new geometry_1.Diamond({ height: Math.max(node.size.height, 0), width: Math.max(node.size.width, 0), x: 0, y: 0 });
        var points = svgStr(diamond.topPoint) + " " + svgStr(diamond.rightPoint) + " " + svgStr(diamond.bottomPoint) + " " + svgStr(diamond.leftPoint);
        return snabbdom_jsx_1.svg("g", null,
            snabbdom_jsx_1.svg("polygon", { "class-sprotty-node": node instanceof sgraph_1.SNode, "class-sprotty-port": node instanceof sgraph_1.SPort, "class-mouseover": node.hoverFeedback, "class-selected": node.selected, points: points }),
            context.renderChildren(node));
    };
    DiamondNodeView = __decorate([
        inversify_1.injectable()
    ], DiamondNodeView);
    return DiamondNodeView;
}());
exports.DiamondNodeView = DiamondNodeView;
function svgStr(point) {
    return point.x + "," + point.y;
}
var EmptyGroupView = /** @class */ (function () {
    function EmptyGroupView() {
    }
    EmptyGroupView.prototype.render = function (node, context) {
        return snabbdom_jsx_1.svg("g", null);
    };
    EmptyGroupView = __decorate([
        inversify_1.injectable()
    ], EmptyGroupView);
    return EmptyGroupView;
}());
exports.EmptyGroupView = EmptyGroupView;


/***/ }),

/***/ "../node_modules/sprotty/lib/model-source/commit-model.js":
/*!****************************************************************!*\
  !*** ../node_modules/sprotty/lib/model-source/commit-model.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var command_1 = __webpack_require__(/*! ../base/commands/command */ "../node_modules/sprotty/lib/base/commands/command.js");
var types_1 = __webpack_require__(/*! ../base/types */ "../node_modules/sprotty/lib/base/types.js");
var model_source_1 = __webpack_require__(/*! ./model-source */ "../node_modules/sprotty/lib/model-source/model-source.js");
/**
 * Commit the current SModel back to the model source.
 *
 * The SModel (AKA internal model) contains a lot of dirty/transitional state, such
 * as intermediate move postions or handles. When a user interaction that spans multiple
 * commands finishes, it fires a CommitModelAction to write the final changes back to
 * the model source.
 */
var CommitModelAction = /** @class */ (function () {
    function CommitModelAction() {
        this.kind = CommitModelCommand.KIND;
    }
    return CommitModelAction;
}());
exports.CommitModelAction = CommitModelAction;
var CommitModelCommand = /** @class */ (function (_super) {
    __extends(CommitModelCommand, _super);
    function CommitModelCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    CommitModelCommand.prototype.execute = function (context) {
        this.newModel = context.modelFactory.createSchema(context.root);
        return this.doCommit(this.newModel, context.root, true);
    };
    CommitModelCommand.prototype.doCommit = function (model, result, doSetOriginal) {
        var _this = this;
        var commitResult = this.modelSource.commitModel(model);
        if (commitResult instanceof Promise) {
            return commitResult.then(function (originalModel) {
                if (doSetOriginal)
                    _this.originalModel = originalModel;
                return result;
            });
        }
        else {
            if (doSetOriginal)
                this.originalModel = commitResult;
            return result;
        }
    };
    CommitModelCommand.prototype.undo = function (context) {
        return this.doCommit(this.originalModel, context.root, false);
    };
    CommitModelCommand.prototype.redo = function (context) {
        return this.doCommit(this.newModel, context.root, false);
    };
    CommitModelCommand.KIND = 'commitModel';
    __decorate([
        inversify_1.inject(types_1.TYPES.ModelSource),
        __metadata("design:type", model_source_1.ModelSource)
    ], CommitModelCommand.prototype, "modelSource", void 0);
    CommitModelCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [CommitModelAction])
    ], CommitModelCommand);
    return CommitModelCommand;
}(command_1.SystemCommand));
exports.CommitModelCommand = CommitModelCommand;


/***/ }),

/***/ "../node_modules/sprotty/lib/model-source/di.config.js":
/*!*************************************************************!*\
  !*** ../node_modules/sprotty/lib/model-source/di.config.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var command_registration_1 = __webpack_require__(/*! ../base/commands/command-registration */ "../node_modules/sprotty/lib/base/commands/command-registration.js");
var types_1 = __webpack_require__(/*! ../base/types */ "../node_modules/sprotty/lib/base/types.js");
var commit_model_1 = __webpack_require__(/*! ./commit-model */ "../node_modules/sprotty/lib/model-source/commit-model.js");
var model_source_1 = __webpack_require__(/*! ./model-source */ "../node_modules/sprotty/lib/model-source/model-source.js");
/**
 * This container module does NOT provide any binding for TYPES.ModelSource because that needs to be
 * done according to the needs of the application. You can choose between a local (LocalModelSource)
 * and a remote (e.g. WebSocketDiagramServer) implementation.
 */
var modelSourceModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(types_1.TYPES.ModelSourceProvider).toProvider(function (context) {
        return function () {
            return new Promise(function (resolve) {
                resolve(context.container.get(types_1.TYPES.ModelSource));
            });
        };
    });
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, commit_model_1.CommitModelCommand);
    bind(types_1.TYPES.IActionHandlerInitializer).toService(types_1.TYPES.ModelSource);
    bind(model_source_1.ComputedBoundsApplicator).toSelf().inSingletonScope();
});
exports.default = modelSourceModule;


/***/ }),

/***/ "../node_modules/sprotty/lib/model-source/diagram-server.js":
/*!******************************************************************!*\
  !*** ../node_modules/sprotty/lib/model-source/diagram-server.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var file_saver_1 = __webpack_require__(/*! file-saver */ "../node_modules/file-saver/dist/FileSaver.min.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var set_model_1 = __webpack_require__(/*! ../base/features/set-model */ "../node_modules/sprotty/lib/base/features/set-model.js");
var types_1 = __webpack_require__(/*! ../base/types */ "../node_modules/sprotty/lib/base/types.js");
var bounds_manipulation_1 = __webpack_require__(/*! ../features/bounds/bounds-manipulation */ "../node_modules/sprotty/lib/features/bounds/bounds-manipulation.js");
var expand_1 = __webpack_require__(/*! ../features/expand/expand */ "../node_modules/sprotty/lib/features/expand/expand.js");
var svg_exporter_1 = __webpack_require__(/*! ../features/export/svg-exporter */ "../node_modules/sprotty/lib/features/export/svg-exporter.js");
var hover_1 = __webpack_require__(/*! ../features/hover/hover */ "../node_modules/sprotty/lib/features/hover/hover.js");
var open_1 = __webpack_require__(/*! ../features/open/open */ "../node_modules/sprotty/lib/features/open/open.js");
var update_model_1 = __webpack_require__(/*! ../features/update/update-model */ "../node_modules/sprotty/lib/features/update/update-model.js");
var model_source_1 = __webpack_require__(/*! ./model-source */ "../node_modules/sprotty/lib/model-source/model-source.js");
function isActionMessage(object) {
    return object !== undefined && object.hasOwnProperty('action');
}
exports.isActionMessage = isActionMessage;
/**
 * Sent by the external server when to signal a state change.
 */
var ServerStatusAction = /** @class */ (function () {
    function ServerStatusAction() {
        this.kind = ServerStatusAction.KIND;
    }
    ServerStatusAction.KIND = 'serverStatus';
    return ServerStatusAction;
}());
exports.ServerStatusAction = ServerStatusAction;
var receivedFromServerProperty = '__receivedFromServer';
/**
 * A ModelSource that communicates with an external model provider, e.g.
 * a model editor.
 *
 * This class defines which actions are sent to and received from the
 * external model source.
 */
var DiagramServer = /** @class */ (function (_super) {
    __extends(DiagramServer, _super);
    function DiagramServer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.currentRoot = {
            type: 'NONE',
            id: 'ROOT'
        };
        return _this;
    }
    DiagramServer.prototype.initialize = function (registry) {
        _super.prototype.initialize.call(this, registry);
        // Register this model source
        registry.register(bounds_manipulation_1.ComputedBoundsAction.KIND, this);
        registry.register(bounds_manipulation_1.RequestBoundsCommand.KIND, this);
        registry.register(hover_1.RequestPopupModelAction.KIND, this);
        registry.register(expand_1.CollapseExpandAction.KIND, this);
        registry.register(expand_1.CollapseExpandAllAction.KIND, this);
        registry.register(open_1.OpenAction.KIND, this);
        registry.register(ServerStatusAction.KIND, this);
        if (!this.clientId)
            this.clientId = this.viewerOptions.baseDiv;
    };
    DiagramServer.prototype.handle = function (action) {
        var forwardToServer = this.handleLocally(action);
        if (forwardToServer)
            this.forwardToServer(action);
    };
    DiagramServer.prototype.forwardToServer = function (action) {
        var message = {
            clientId: this.clientId,
            action: action
        };
        this.logger.log(this, 'sending', message);
        this.sendMessage(message);
    };
    DiagramServer.prototype.messageReceived = function (data) {
        var _this = this;
        var object = typeof (data) === 'string' ? JSON.parse(data) : data;
        if (isActionMessage(object) && object.action) {
            if (!object.clientId || object.clientId === this.clientId) {
                object.action[receivedFromServerProperty] = true;
                this.logger.log(this, 'receiving', object);
                this.actionDispatcher.dispatch(object.action).then(function () {
                    _this.storeNewModel(object.action);
                });
            }
        }
        else {
            this.logger.error(this, 'received data is not an action message', object);
        }
    };
    /**
     * Check whether the given action should be handled locally. Returns true if the action should
     * still be sent to the server, and false if it's only handled locally.
     */
    DiagramServer.prototype.handleLocally = function (action) {
        this.storeNewModel(action);
        switch (action.kind) {
            case bounds_manipulation_1.ComputedBoundsAction.KIND:
                return this.handleComputedBounds(action);
            case set_model_1.RequestModelAction.KIND:
                return this.handleRequestModel(action);
            case bounds_manipulation_1.RequestBoundsCommand.KIND:
                return false;
            case svg_exporter_1.ExportSvgAction.KIND:
                return this.handleExportSvgAction(action);
            case ServerStatusAction.KIND:
                return this.handleServerStateAction(action);
        }
        return !action[receivedFromServerProperty];
    };
    /**
     * Put the new model contained in the given action into the model storage, if there is any.
     */
    DiagramServer.prototype.storeNewModel = function (action) {
        if (action.kind === set_model_1.SetModelCommand.KIND
            || action.kind === update_model_1.UpdateModelCommand.KIND
            || action.kind === bounds_manipulation_1.RequestBoundsCommand.KIND) {
            var newRoot = action.newRoot;
            if (newRoot) {
                this.currentRoot = newRoot;
                if (action.kind === set_model_1.SetModelCommand.KIND || action.kind === update_model_1.UpdateModelCommand.KIND) {
                    this.lastSubmittedModelType = newRoot.type;
                }
            }
        }
    };
    DiagramServer.prototype.handleRequestModel = function (action) {
        var newOptions = __assign({ needsClientLayout: this.viewerOptions.needsClientLayout, needsServerLayout: this.viewerOptions.needsServerLayout }, action.options);
        var newAction = __assign(__assign({}, action), { options: newOptions });
        this.forwardToServer(newAction);
        return false;
    };
    /**
     * If the server requires to compute a layout, the computed bounds are forwarded. Otherwise they
     * are applied to the current model locally and a model update is triggered.
     */
    DiagramServer.prototype.handleComputedBounds = function (action) {
        if (this.viewerOptions.needsServerLayout) {
            return true;
        }
        else {
            var root = this.currentRoot;
            this.computedBoundsApplicator.apply(root, action);
            if (root.type === this.lastSubmittedModelType) {
                this.actionDispatcher.dispatch(new update_model_1.UpdateModelAction(root));
            }
            else {
                this.actionDispatcher.dispatch(new set_model_1.SetModelAction(root));
            }
            this.lastSubmittedModelType = root.type;
            return false;
        }
    };
    DiagramServer.prototype.handleExportSvgAction = function (action) {
        var blob = new Blob([action.svg], { type: "text/plain;charset=utf-8" });
        file_saver_1.saveAs(blob, "diagram.svg");
        return false;
    };
    DiagramServer.prototype.handleServerStateAction = function (action) {
        return false;
    };
    DiagramServer.prototype.commitModel = function (newRoot) {
        var previousRoot = this.currentRoot;
        this.currentRoot = newRoot;
        return previousRoot;
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], DiagramServer.prototype, "logger", void 0);
    __decorate([
        inversify_1.inject(model_source_1.ComputedBoundsApplicator),
        __metadata("design:type", model_source_1.ComputedBoundsApplicator)
    ], DiagramServer.prototype, "computedBoundsApplicator", void 0);
    DiagramServer = __decorate([
        inversify_1.injectable()
    ], DiagramServer);
    return DiagramServer;
}(model_source_1.ModelSource));
exports.DiagramServer = DiagramServer;


/***/ }),

/***/ "../node_modules/sprotty/lib/model-source/local-model-source.js":
/*!**********************************************************************!*\
  !*** ../node_modules/sprotty/lib/model-source/local-model-source.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var file_saver_1 = __webpack_require__(/*! file-saver */ "../node_modules/file-saver/dist/FileSaver.min.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../base/types */ "../node_modules/sprotty/lib/base/types.js");
var set_model_1 = __webpack_require__(/*! ../base/features/set-model */ "../node_modules/sprotty/lib/base/features/set-model.js");
var smodel_1 = __webpack_require__(/*! ../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
var smodel_utils_1 = __webpack_require__(/*! ../base/model/smodel-utils */ "../node_modules/sprotty/lib/base/model/smodel-utils.js");
var smodel_factory_1 = __webpack_require__(/*! ../base/model/smodel-factory */ "../node_modules/sprotty/lib/base/model/smodel-factory.js");
var bounds_manipulation_1 = __webpack_require__(/*! ../features/bounds/bounds-manipulation */ "../node_modules/sprotty/lib/features/bounds/bounds-manipulation.js");
var viewport_1 = __webpack_require__(/*! ../features/viewport/viewport */ "../node_modules/sprotty/lib/features/viewport/viewport.js");
var svg_exporter_1 = __webpack_require__(/*! ../features/export/svg-exporter */ "../node_modules/sprotty/lib/features/export/svg-exporter.js");
var hover_1 = __webpack_require__(/*! ../features/hover/hover */ "../node_modules/sprotty/lib/features/hover/hover.js");
var model_matching_1 = __webpack_require__(/*! ../features/update/model-matching */ "../node_modules/sprotty/lib/features/update/model-matching.js");
var update_model_1 = __webpack_require__(/*! ../features/update/update-model */ "../node_modules/sprotty/lib/features/update/update-model.js");
var select_1 = __webpack_require__(/*! ../features/select/select */ "../node_modules/sprotty/lib/features/select/select.js");
var model_source_1 = __webpack_require__(/*! ./model-source */ "../node_modules/sprotty/lib/model-source/model-source.js");
/**
 * A model source that allows to set and modify the model through function calls.
 * This class can be used as a facade over the action-based API of sprotty. It handles
 * actions for bounds calculation and model updates.
 */
var LocalModelSource = /** @class */ (function (_super) {
    __extends(LocalModelSource, _super);
    function LocalModelSource() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.currentRoot = smodel_factory_1.EMPTY_ROOT;
        return _this;
    }
    Object.defineProperty(LocalModelSource.prototype, "model", {
        get: function () {
            return this.currentRoot;
        },
        set: function (root) {
            this.setModel(root);
        },
        enumerable: true,
        configurable: true
    });
    LocalModelSource.prototype.initialize = function (registry) {
        _super.prototype.initialize.call(this, registry);
        // Register this model source
        registry.register(bounds_manipulation_1.ComputedBoundsAction.KIND, this);
        registry.register(hover_1.RequestPopupModelAction.KIND, this);
    };
    /**
     * Set the model without incremental update.
     */
    LocalModelSource.prototype.setModel = function (newRoot) {
        this.currentRoot = newRoot;
        return this.submitModel(newRoot, false);
    };
    LocalModelSource.prototype.commitModel = function (newRoot) {
        var previousRoot = this.currentRoot;
        this.currentRoot = newRoot;
        return previousRoot;
    };
    /**
     * Apply an incremental update to the model with an animation showing the transition to
     * the new state. If `newRoot` is undefined, the current root is submitted; in that case
     * it is assumed that it has been modified before.
     */
    LocalModelSource.prototype.updateModel = function (newRoot) {
        if (newRoot === undefined) {
            return this.submitModel(this.currentRoot, true);
        }
        else {
            this.currentRoot = newRoot;
            return this.submitModel(newRoot, true);
        }
    };
    /**
     * Get the current selection from the model.
     */
    LocalModelSource.prototype.getSelection = function () {
        return __awaiter(this, void 0, void 0, function () {
            var res, index;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.actionDispatcher.request(select_1.GetSelectionAction.create())];
                    case 1:
                        res = _a.sent();
                        index = new smodel_1.SModelIndex();
                        index.add(this.currentRoot);
                        return [2 /*return*/, index.all().filter(function (e) { return res.selectedElementsIDs.indexOf(e.id) >= 0; })];
                }
            });
        });
    };
    /**
     * Get the current viewport from the model.
     */
    LocalModelSource.prototype.getViewport = function () {
        return __awaiter(this, void 0, void 0, function () {
            var res;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.actionDispatcher.request(viewport_1.GetViewportAction.create())];
                    case 1:
                        res = _a.sent();
                        return [2 /*return*/, {
                                scroll: res.viewport.scroll,
                                zoom: res.viewport.zoom,
                                canvasBounds: res.canvasBounds
                            }];
                }
            });
        });
    };
    /**
     * If client layout is active, run a `RequestBoundsAction` and wait for the resulting
     * `ComputedBoundsAction`, otherwise call `doSubmitModel(…)` directly.
     */
    LocalModelSource.prototype.submitModel = function (newRoot, update, cause) {
        return __awaiter(this, void 0, void 0, function () {
            var computedBounds, index;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.viewerOptions.needsClientLayout) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.actionDispatcher.request(bounds_manipulation_1.RequestBoundsAction.create(newRoot))];
                    case 1:
                        computedBounds = _a.sent();
                        index = this.computedBoundsApplicator.apply(this.currentRoot, computedBounds);
                        return [4 /*yield*/, this.doSubmitModel(newRoot, true, cause, index)];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 5];
                    case 3: return [4 /*yield*/, this.doSubmitModel(newRoot, update, cause)];
                    case 4:
                        _a.sent();
                        _a.label = 5;
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Submit the given model with an `UpdateModelAction` or a `SetModelAction` depending on the
     * `update` argument. If available, the model layout engine is invoked first.
     */
    LocalModelSource.prototype.doSubmitModel = function (newRoot, update, cause, index) {
        return __awaiter(this, void 0, void 0, function () {
            var layoutResult, error_1, lastSubmittedModelType, request, input;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.layoutEngine !== undefined)) return [3 /*break*/, 6];
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 5, , 6]);
                        layoutResult = this.layoutEngine.layout(newRoot, index);
                        if (!(layoutResult instanceof Promise)) return [3 /*break*/, 3];
                        return [4 /*yield*/, layoutResult];
                    case 2:
                        newRoot = _a.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        if (layoutResult !== undefined)
                            newRoot = layoutResult;
                        _a.label = 4;
                    case 4: return [3 /*break*/, 6];
                    case 5:
                        error_1 = _a.sent();
                        this.logger.error(this, error_1.toString(), error_1.stack);
                        return [3 /*break*/, 6];
                    case 6:
                        lastSubmittedModelType = this.lastSubmittedModelType;
                        this.lastSubmittedModelType = newRoot.type;
                        if (!(cause && cause.kind === set_model_1.RequestModelAction.KIND && cause.requestId)) return [3 /*break*/, 8];
                        request = cause;
                        return [4 /*yield*/, this.actionDispatcher.dispatch(new set_model_1.SetModelAction(newRoot, request.requestId))];
                    case 7:
                        _a.sent();
                        return [3 /*break*/, 12];
                    case 8:
                        if (!(update && newRoot.type === lastSubmittedModelType)) return [3 /*break*/, 10];
                        input = Array.isArray(update) ? update : newRoot;
                        return [4 /*yield*/, this.actionDispatcher.dispatch(new update_model_1.UpdateModelAction(input))];
                    case 9:
                        _a.sent();
                        return [3 /*break*/, 12];
                    case 10: return [4 /*yield*/, this.actionDispatcher.dispatch(new set_model_1.SetModelAction(newRoot))];
                    case 11:
                        _a.sent();
                        _a.label = 12;
                    case 12: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Modify the current model with an array of matches.
     */
    LocalModelSource.prototype.applyMatches = function (matches) {
        var root = this.currentRoot;
        model_matching_1.applyMatches(root, matches);
        return this.submitModel(root, matches);
    };
    /**
     * Modify the current model by adding new elements.
     */
    LocalModelSource.prototype.addElements = function (elements) {
        var matches = [];
        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {
            var e = elements_1[_i];
            var anye = e;
            if (anye.element !== undefined && anye.parentId !== undefined) {
                matches.push({
                    right: anye.element,
                    rightParentId: anye.parentId
                });
            }
            else if (anye.id !== undefined) {
                matches.push({
                    right: anye,
                    rightParentId: this.currentRoot.id
                });
            }
        }
        return this.applyMatches(matches);
    };
    /**
     * Modify the current model by removing elements.
     */
    LocalModelSource.prototype.removeElements = function (elements) {
        var matches = [];
        var index = new smodel_1.SModelIndex();
        index.add(this.currentRoot);
        for (var _i = 0, elements_2 = elements; _i < elements_2.length; _i++) {
            var e = elements_2[_i];
            var anye = e;
            if (anye.elementId !== undefined && anye.parentId !== undefined) {
                var element = index.getById(anye.elementId);
                if (element !== undefined) {
                    matches.push({
                        left: element,
                        leftParentId: anye.parentId
                    });
                }
            }
            else {
                var element = index.getById(anye);
                if (element !== undefined) {
                    matches.push({
                        left: element,
                        leftParentId: this.currentRoot.id
                    });
                }
            }
        }
        return this.applyMatches(matches);
    };
    // ----- Methods for handling incoming actions ----------------------------
    LocalModelSource.prototype.handle = function (action) {
        switch (action.kind) {
            case set_model_1.RequestModelAction.KIND:
                this.handleRequestModel(action);
                break;
            case bounds_manipulation_1.ComputedBoundsAction.KIND:
                this.computedBoundsApplicator.apply(this.currentRoot, action);
                break;
            case hover_1.RequestPopupModelAction.KIND:
                this.handleRequestPopupModel(action);
                break;
            case svg_exporter_1.ExportSvgAction.KIND:
                this.handleExportSvgAction(action);
                break;
        }
    };
    LocalModelSource.prototype.handleRequestModel = function (action) {
        this.submitModel(this.currentRoot, false, action);
    };
    LocalModelSource.prototype.handleRequestPopupModel = function (action) {
        if (this.popupModelProvider !== undefined) {
            var element = smodel_utils_1.findElement(this.currentRoot, action.elementId);
            var popupRoot = this.popupModelProvider.getPopupModel(action, element);
            if (popupRoot !== undefined) {
                popupRoot.canvasBounds = action.bounds;
                this.actionDispatcher.dispatch(new hover_1.SetPopupModelAction(popupRoot, action.requestId));
            }
        }
    };
    LocalModelSource.prototype.handleExportSvgAction = function (action) {
        var blob = new Blob([action.svg], { type: "text/plain;charset=utf-8" });
        file_saver_1.saveAs(blob, "diagram.svg");
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], LocalModelSource.prototype, "logger", void 0);
    __decorate([
        inversify_1.inject(model_source_1.ComputedBoundsApplicator),
        __metadata("design:type", model_source_1.ComputedBoundsApplicator)
    ], LocalModelSource.prototype, "computedBoundsApplicator", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.IPopupModelProvider), inversify_1.optional(),
        __metadata("design:type", Object)
    ], LocalModelSource.prototype, "popupModelProvider", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.IModelLayoutEngine), inversify_1.optional(),
        __metadata("design:type", Object)
    ], LocalModelSource.prototype, "layoutEngine", void 0);
    LocalModelSource = __decorate([
        inversify_1.injectable()
    ], LocalModelSource);
    return LocalModelSource;
}(model_source_1.ModelSource));
exports.LocalModelSource = LocalModelSource;


/***/ }),

/***/ "../node_modules/sprotty/lib/model-source/logging.js":
/*!***********************************************************!*\
  !*** ../node_modules/sprotty/lib/model-source/logging.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var logging_1 = __webpack_require__(/*! ../utils/logging */ "../node_modules/sprotty/lib/utils/logging.js");
var types_1 = __webpack_require__(/*! ../base/types */ "../node_modules/sprotty/lib/base/types.js");
var LoggingAction = /** @class */ (function () {
    function LoggingAction(severity, time, caller, message, params) {
        this.severity = severity;
        this.time = time;
        this.caller = caller;
        this.message = message;
        this.params = params;
        this.kind = LoggingAction.KIND;
    }
    LoggingAction.KIND = 'logging';
    return LoggingAction;
}());
exports.LoggingAction = LoggingAction;
/**
 * A logger that forwards messages of type 'error', 'warn', and 'info' to the model source.
 */
var ForwardingLogger = /** @class */ (function () {
    function ForwardingLogger() {
    }
    ForwardingLogger.prototype.error = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= logging_1.LogLevel.error)
            this.forward(thisArg, message, logging_1.LogLevel.error, params);
    };
    ForwardingLogger.prototype.warn = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= logging_1.LogLevel.warn)
            this.forward(thisArg, message, logging_1.LogLevel.warn, params);
    };
    ForwardingLogger.prototype.info = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= logging_1.LogLevel.info)
            this.forward(thisArg, message, logging_1.LogLevel.info, params);
    };
    ForwardingLogger.prototype.log = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= logging_1.LogLevel.log) {
            // We cannot forward 'log' level messages since that would lead to endless loops
            try {
                var caller = typeof thisArg === 'object' ? thisArg.constructor.name : String(thisArg);
                console.log.apply(thisArg, __spreadArrays([caller + ': ' + message], params));
            }
            catch (error) { }
        }
    };
    ForwardingLogger.prototype.forward = function (thisArg, message, logLevel, params) {
        var date = new Date();
        var action = new LoggingAction(logging_1.LogLevel[logLevel], date.toLocaleTimeString(), typeof thisArg === 'object' ? thisArg.constructor.name : String(thisArg), message, params.map(function (p) { return JSON.stringify(p); }));
        this.modelSourceProvider().then(function (modelSource) {
            try {
                modelSource.handle(action);
            }
            catch (error) {
                try {
                    console.log.apply(thisArg, [message, action, error]);
                }
                catch (error) { }
            }
        });
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ModelSourceProvider),
        __metadata("design:type", Function)
    ], ForwardingLogger.prototype, "modelSourceProvider", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.LogLevel),
        __metadata("design:type", Number)
    ], ForwardingLogger.prototype, "logLevel", void 0);
    ForwardingLogger = __decorate([
        inversify_1.injectable()
    ], ForwardingLogger);
    return ForwardingLogger;
}());
exports.ForwardingLogger = ForwardingLogger;


/***/ }),

/***/ "../node_modules/sprotty/lib/model-source/model-source.js":
/*!****************************************************************!*\
  !*** ../node_modules/sprotty/lib/model-source/model-source.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var set_model_1 = __webpack_require__(/*! ../base/features/set-model */ "../node_modules/sprotty/lib/base/features/set-model.js");
var types_1 = __webpack_require__(/*! ../base/types */ "../node_modules/sprotty/lib/base/types.js");
var svg_exporter_1 = __webpack_require__(/*! ../features/export/svg-exporter */ "../node_modules/sprotty/lib/features/export/svg-exporter.js");
var smodel_1 = __webpack_require__(/*! ../base/model/smodel */ "../node_modules/sprotty/lib/base/model/smodel.js");
/**
 * A model source is serving the model to the event cycle. It represents
 * the entry point to the client for external sources, such as model
 * editors.
 *
 * As an IActionHandler it listens to actions in and reacts to them with
 * commands or actions if necessary. This way, you can implement action
 * protocols between the client and the outside world.
 *
 * There are two default implementations for a ModelSource:
 * <ul>
 * <li>the LocalModelSource handles the actions to calculate bounds and
 * set/update the model</li>
 * <li>the DiagramServer connects via websocket to a remote source. It
 * can be used to connect to a model editor that provides the model,
 * layouts diagrams, transfers selection and answers model queries from
 * the client.</li>
 */
var ModelSource = /** @class */ (function () {
    function ModelSource() {
    }
    ModelSource.prototype.initialize = function (registry) {
        // Register this model source
        registry.register(set_model_1.RequestModelAction.KIND, this);
        registry.register(svg_exporter_1.ExportSvgAction.KIND, this);
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], ModelSource.prototype, "actionDispatcher", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], ModelSource.prototype, "viewerOptions", void 0);
    ModelSource = __decorate([
        inversify_1.injectable()
    ], ModelSource);
    return ModelSource;
}());
exports.ModelSource = ModelSource;
var ComputedBoundsApplicator = /** @class */ (function () {
    function ComputedBoundsApplicator() {
    }
    ComputedBoundsApplicator.prototype.apply = function (root, action) {
        var index = new smodel_1.SModelIndex();
        index.add(root);
        for (var _i = 0, _a = action.bounds; _i < _a.length; _i++) {
            var b = _a[_i];
            var element = index.getById(b.elementId);
            if (element !== undefined)
                this.applyBounds(element, b.newPosition, b.newSize);
        }
        if (action.alignments !== undefined) {
            for (var _b = 0, _c = action.alignments; _b < _c.length; _b++) {
                var a = _c[_b];
                var element = index.getById(a.elementId);
                if (element !== undefined)
                    this.applyAlignment(element, a.newAlignment);
            }
        }
        return index;
    };
    ComputedBoundsApplicator.prototype.applyAlignment = function (element, newAlignment) {
        var e = element;
        e.alignment = { x: newAlignment.x, y: newAlignment.y };
    };
    ComputedBoundsApplicator.prototype.applyBounds = function (element, newPosition, newSize) {
        var e = element;
        if (newPosition)
            e.position = __assign({}, newPosition);
        e.size = __assign({}, newSize);
    };
    ComputedBoundsApplicator = __decorate([
        inversify_1.injectable()
    ], ComputedBoundsApplicator);
    return ComputedBoundsApplicator;
}());
exports.ComputedBoundsApplicator = ComputedBoundsApplicator;


/***/ }),

/***/ "../node_modules/sprotty/lib/model-source/websocket.js":
/*!*************************************************************!*\
  !*** ../node_modules/sprotty/lib/model-source/websocket.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var diagram_server_1 = __webpack_require__(/*! ./diagram-server */ "../node_modules/sprotty/lib/model-source/diagram-server.js");
/**
 * An external ModelSource that connects to the model provider using a
 * websocket.
 */
var WebSocketDiagramServer = /** @class */ (function (_super) {
    __extends(WebSocketDiagramServer, _super);
    function WebSocketDiagramServer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebSocketDiagramServer.prototype.listen = function (webSocket) {
        var _this = this;
        webSocket.addEventListener('message', function (event) {
            _this.messageReceived(event.data);
        });
        webSocket.addEventListener('error', function (event) {
            _this.logger.error(_this, 'error event received', event);
        });
        this.webSocket = webSocket;
    };
    WebSocketDiagramServer.prototype.disconnect = function () {
        if (this.webSocket) {
            this.webSocket.close();
            this.webSocket = undefined;
        }
    };
    WebSocketDiagramServer.prototype.sendMessage = function (message) {
        if (this.webSocket) {
            this.webSocket.send(JSON.stringify(message));
        }
        else {
            throw new Error('WebSocket is not connected');
        }
    };
    WebSocketDiagramServer = __decorate([
        inversify_1.injectable()
    ], WebSocketDiagramServer);
    return WebSocketDiagramServer;
}(diagram_server_1.DiagramServer));
exports.WebSocketDiagramServer = WebSocketDiagramServer;


/***/ }),

/***/ "../node_modules/sprotty/lib/utils/async.js":
/*!**************************************************!*\
  !*** ../node_modules/sprotty/lib/utils/async.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Simple implementation of the deferred pattern.
 * An object that exposes a promise and functions to resolve and reject it.
 */
var Deferred = /** @class */ (function () {
    function Deferred() {
        var _this = this;
        this.promise = new Promise(function (resolve, reject) {
            _this.resolve = resolve;
            _this.reject = reject;
        });
    }
    return Deferred;
}());
exports.Deferred = Deferred;


/***/ }),

/***/ "../node_modules/sprotty/lib/utils/browser.js":
/*!****************************************************!*\
  !*** ../node_modules/sprotty/lib/utils/browser.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var geometry_1 = __webpack_require__(/*! ./geometry */ "../node_modules/sprotty/lib/utils/geometry.js");
/**
 * Returns whether the mouse or keyboard event includes the CMD key
 * on Mac or CTRL key on Linux / others.
 */
function isCtrlOrCmd(event) {
    if (isMac())
        return event.metaKey;
    else
        return event.ctrlKey;
}
exports.isCtrlOrCmd = isCtrlOrCmd;
function isMac() {
    return window.navigator.userAgent.indexOf("Mac") !== -1;
}
exports.isMac = isMac;
function isCrossSite(url) {
    if (url && typeof window !== 'undefined' && window.location) {
        var baseURL = '';
        if (window.location.protocol)
            baseURL += window.location.protocol + '//';
        if (window.location.host)
            baseURL += window.location.host;
        return baseURL.length > 0 && !url.startsWith(baseURL);
    }
    return false;
}
exports.isCrossSite = isCrossSite;
/**
 * Returns the amount of scroll of the browser window as a point.
 */
function getWindowScroll() {
    if (typeof window === 'undefined') {
        return geometry_1.ORIGIN_POINT;
    }
    return {
        x: window.pageXOffset,
        y: window.pageYOffset
    };
}
exports.getWindowScroll = getWindowScroll;


/***/ }),

/***/ "../node_modules/sprotty/lib/utils/color.js":
/*!**************************************************!*\
  !*** ../node_modules/sprotty/lib/utils/color.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
function rgb(red, green, blue) {
    return {
        red: red,
        green: green,
        blue: blue
    };
}
exports.rgb = rgb;
function toSVG(c) {
    return 'rgb(' + c.red + ',' + c.green + ',' + c.blue + ')';
}
exports.toSVG = toSVG;
var ColorMap = /** @class */ (function () {
    function ColorMap(stops) {
        this.stops = stops;
    }
    ColorMap.prototype.getColor = function (t) {
        t = Math.max(0, Math.min(0.99999999, t));
        var i = Math.floor(t * this.stops.length);
        return this.stops[i];
    };
    return ColorMap;
}());
exports.ColorMap = ColorMap;


/***/ }),

/***/ "../node_modules/sprotty/lib/utils/geometry.js":
/*!*****************************************************!*\
  !*** ../node_modules/sprotty/lib/utils/geometry.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * (x,y) coordinates of the origin.
 */
exports.ORIGIN_POINT = Object.freeze({
    x: 0,
    y: 0
});
/**
 * Adds two points.
 * @param {Point} p1 - First point
 * @param {Point} p2 - Second point
 * @returns {Point} The sum of the two points
 */
function add(p1, p2) {
    return {
        x: p1.x + p2.x,
        y: p1.y + p2.y
    };
}
exports.add = add;
/**
 * Subtracts two points.
 * @param {Point} p1 - First point
 * @param {Point} p2 - Second point
 * @returns {Point} The difference of the two points
 */
function subtract(p1, p2) {
    return {
        x: p1.x - p2.x,
        y: p1.y - p2.y
    };
}
exports.subtract = subtract;
/**
 * A dimension with both width and height set to a negative value, which is considered as undefined.
 */
exports.EMPTY_DIMENSION = Object.freeze({
    width: -1,
    height: -1
});
/**
 * Checks whether the given dimention is valid, i.e. the width and height are non-zero.
 * @param {Dimension} b - Dimension object
 * @returns {boolean}
 */
function isValidDimension(d) {
    return d.width >= 0 && d.height >= 0;
}
exports.isValidDimension = isValidDimension;
exports.EMPTY_BOUNDS = Object.freeze({
    x: 0,
    y: 0,
    width: -1,
    height: -1
});
function isBounds(element) {
    return 'x' in element
        && 'y' in element
        && 'width' in element
        && 'height' in element;
}
exports.isBounds = isBounds;
/**
 * Combines the bounds of two objects into one, so that the new bounds
 * are the minimum bounds that covers both of the original bounds.
 * @param {Bounds} b0 - First bounds object
 * @param {Bounds} b1 - Second bounds object
 * @returns {Bounds} The combined bounds
 */
function combine(b0, b1) {
    if (!isValidDimension(b0))
        return isValidDimension(b1) ? b1 : exports.EMPTY_BOUNDS;
    if (!isValidDimension(b1))
        return b0;
    var minX = Math.min(b0.x, b1.x);
    var minY = Math.min(b0.y, b1.y);
    var maxX = Math.max(b0.x + (b0.width >= 0 ? b0.width : 0), b1.x + (b1.width >= 0 ? b1.width : 0));
    var maxY = Math.max(b0.y + (b0.height >= 0 ? b0.height : 0), b1.y + (b1.height >= 0 ? b1.height : 0));
    return {
        x: minX, y: minY, width: maxX - minX, height: maxY - minY
    };
}
exports.combine = combine;
/**
 * Translates the given bounds.
 * @param {Bounds} b - Bounds object
 * @param {Point} p - Vector by which to translate the bounds
 * @returns {Bounds} The translated bounds
 */
function translate(b, p) {
    return {
        x: b.x + p.x,
        y: b.y + p.y,
        width: b.width,
        height: b.height
    };
}
exports.translate = translate;
/**
 * Returns the center point of the bounds of an object
 * @param {Bounds} b - Bounds object
 * @returns {Point} the center point
 */
function center(b) {
    return {
        x: b.x + (b.width >= 0 ? 0.5 * b.width : 0),
        y: b.y + (b.height >= 0 ? 0.5 * b.height : 0)
    };
}
exports.center = center;
function centerOfLine(s, e) {
    var b = {
        x: s.x > e.x ? e.x : s.x,
        y: s.y > e.y ? e.y : s.y,
        width: Math.abs(e.x - s.x),
        height: Math.abs(e.y - s.y)
    };
    return center(b);
}
exports.centerOfLine = centerOfLine;
/**
 * Checks whether the point p is included in the bounds b.
 */
function includes(b, p) {
    return p.x >= b.x && p.x <= b.x + b.width && p.y >= b.y && p.y <= b.y + b.height;
}
exports.includes = includes;
/**
 * Enumeration of possible directions (left, right, up, down)
 * @deprecated do we use this? We should rather use a string type
 */
var Direction;
(function (Direction) {
    Direction[Direction["left"] = 0] = "left";
    Direction[Direction["right"] = 1] = "right";
    Direction[Direction["up"] = 2] = "up";
    Direction[Direction["down"] = 3] = "down";
})(Direction = exports.Direction || (exports.Direction = {}));
/**
 * Returns the "straight line" distance between two points.
 * @param {Point} a - First point
 * @param {Point} b - Second point
 * @returns {number} The Eucledian distance
 */
function euclideanDistance(a, b) {
    var dx = b.x - a.x;
    var dy = b.y - a.y;
    return Math.sqrt(dx * dx + dy * dy);
}
exports.euclideanDistance = euclideanDistance;
/**
 * Returns the distance between two points in a grid, using a
 * strictly vertical and/or horizontal path (versus straight line).
 * @param {Point} a - First point
 * @param {Point} b - Second point
 * @returns {number} The Manhattan distance
 */
function manhattanDistance(a, b) {
    return Math.abs(b.x - a.x) + Math.abs(b.y - a.y);
}
exports.manhattanDistance = manhattanDistance;
/**
 * Returns the maximum of the horizontal and the vertical distance.
 * @param {Point} a - First point
 * @param {Point} b - Second point
 * @returns {number} The maximum distance
 */
function maxDistance(a, b) {
    return Math.max(Math.abs(b.x - a.x), Math.abs(b.y - a.y));
}
exports.maxDistance = maxDistance;
/**
 * Computes the angle in radians of the given point to the x-axis of the coordinate system.
 * The result is in the range [-pi, pi].
 * @param {Point} p - A point in the Eucledian plane
 */
function angleOfPoint(p) {
    return Math.atan2(p.y, p.x);
}
exports.angleOfPoint = angleOfPoint;
/**
 * Computes the angle in radians between the two given points (relative to the origin of the coordinate system).
 * The result is in the range [0, pi]. Returns NaN if the points are equal.
 * @param {Point} a - First point
 * @param {Point} b - Second point
 */
function angleBetweenPoints(a, b) {
    var lengthProduct = Math.sqrt((a.x * a.x + a.y * a.y) * (b.x * b.x + b.y * b.y));
    if (isNaN(lengthProduct) || lengthProduct === 0)
        return NaN;
    var dotProduct = a.x * b.x + a.y * b.y;
    return Math.acos(dotProduct / lengthProduct);
}
exports.angleBetweenPoints = angleBetweenPoints;
/**
 * Computes a point that is the original `point` shifted towards `refPoint` by the given `distance`.
 * @param {Point} point - Point to shift
 * @param {Point} refPoint - Point to shift towards
 * @param {Point} distance - Distance to shift
 */
function shiftTowards(point, refPoint, distance) {
    var diff = subtract(refPoint, point);
    var normalized = normalize(diff);
    var shift = { x: normalized.x * distance, y: normalized.y * distance };
    return add(point, shift);
}
exports.shiftTowards = shiftTowards;
/**
 * Computes the normalized vector from the vector given in `point`; that is, computing its unit vector.
 * @param {Point} point - Point representing the vector to be normalized
 * @returns {Point} The normalized point
 */
function normalize(point) {
    var mag = magnitude(point);
    if (mag === 0 || mag === 1) {
        return exports.ORIGIN_POINT;
    }
    return {
        x: point.x / mag,
        y: point.y / mag
    };
}
exports.normalize = normalize;
/**
 * Computes the magnitude of the vector given in `point`.
 * @param {Point} point - Point representing the vector to compute the magnitude for
 * @returns {number} The magnitude or also known as length of the `point`
 */
function magnitude(point) {
    return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));
}
exports.magnitude = magnitude;
/**
 * Converts from radians to degrees
 * @param {number} a - A value in radians
 * @returns {number} The converted value
 */
function toDegrees(a) {
    return a * 180 / Math.PI;
}
exports.toDegrees = toDegrees;
/**
 * Converts from degrees to radians
 * @param {number} a - A value in degrees
 * @returns {number} The converted value
 */
function toRadians(a) {
    return a * Math.PI / 180;
}
exports.toRadians = toRadians;
/**
 * Returns whether two numbers are almost equal, within a small margin (0.001)
 * @param {number} a - First number
 * @param {number} b - Second number
 * @returns {boolean} True if the two numbers are almost equal
 */
function almostEquals(a, b) {
    return Math.abs(a - b) < 1e-3;
}
exports.almostEquals = almostEquals;
/**
 * Calculates a linear combination of p0 and p1 using lambda, i.e.
 *   (1-lambda) * p0 + lambda * p1
 * @param p0
 * @param p1
 * @param lambda
 */
function linear(p0, p1, lambda) {
    return {
        x: (1 - lambda) * p0.x + lambda * p1.x,
        y: (1 - lambda) * p0.y + lambda * p1.y
    };
}
exports.linear = linear;
/**
 * A diamond or rhombus is a quadrilateral whose four sides all have the same length.
 * It consinsts of four points, a `topPoint`, `rightPoint`, `bottomPoint`, and a `leftPoint`,
 * which are connected by four lines -- the `topRightSideLight`, `topLeftSideLine`, `bottomRightSideLine`,
 * and the `bottomLeftSideLine`.
 */
var Diamond = /** @class */ (function () {
    function Diamond(bounds) {
        this.bounds = bounds;
    }
    Object.defineProperty(Diamond.prototype, "topPoint", {
        get: function () {
            return {
                x: this.bounds.x + this.bounds.width / 2,
                y: this.bounds.y
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Diamond.prototype, "rightPoint", {
        get: function () {
            return {
                x: this.bounds.x + this.bounds.width,
                y: this.bounds.y + this.bounds.height / 2
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Diamond.prototype, "bottomPoint", {
        get: function () {
            return {
                x: this.bounds.x + this.bounds.width / 2,
                y: this.bounds.y + this.bounds.height
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Diamond.prototype, "leftPoint", {
        get: function () {
            return {
                x: this.bounds.x,
                y: this.bounds.y + this.bounds.height / 2
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Diamond.prototype, "topRightSideLine", {
        get: function () {
            return new PointToPointLine(this.topPoint, this.rightPoint);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Diamond.prototype, "topLeftSideLine", {
        get: function () {
            return new PointToPointLine(this.topPoint, this.leftPoint);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Diamond.prototype, "bottomRightSideLine", {
        get: function () {
            return new PointToPointLine(this.bottomPoint, this.rightPoint);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Diamond.prototype, "bottomLeftSideLine", {
        get: function () {
            return new PointToPointLine(this.bottomPoint, this.leftPoint);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Return the closest side of this diamond to the specified `refPoint`.
     * @param {Point} refPoint a reference point
     * @returns {Line} a line representing the closest side
     */
    Diamond.prototype.closestSideLine = function (refPoint) {
        var c = center(this.bounds);
        if (refPoint.x > c.x) {
            if (refPoint.y > c.y) {
                return this.bottomRightSideLine;
            }
            else {
                return this.topRightSideLine;
            }
        }
        else {
            if (refPoint.y > c.y) {
                return this.bottomLeftSideLine;
            }
            else {
                return this.topLeftSideLine;
            }
        }
    };
    return Diamond;
}());
exports.Diamond = Diamond;
/**
 * A line made up from two points.
 */
var PointToPointLine = /** @class */ (function () {
    function PointToPointLine(p1, p2) {
        this.p1 = p1;
        this.p2 = p2;
    }
    Object.defineProperty(PointToPointLine.prototype, "a", {
        get: function () {
            return this.p1.y - this.p2.y;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PointToPointLine.prototype, "b", {
        get: function () {
            return this.p2.x - this.p1.x;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PointToPointLine.prototype, "c", {
        get: function () {
            return this.p2.x * this.p1.y - this.p1.x * this.p2.y;
        },
        enumerable: true,
        configurable: true
    });
    return PointToPointLine;
}());
exports.PointToPointLine = PointToPointLine;
/**
 * Returns the intersection of two lines `l1` and `l2`
 * @param {Line} l1 - A line
 * @param {Line} l2 - Another line
 * @returns {Point} The intersection point of `l1` and `l2`
 */
function intersection(l1, l2) {
    return {
        x: (l1.c * l2.b - l2.c * l1.b) / (l1.a * l2.b - l2.a * l1.b),
        y: (l1.a * l2.c - l2.a * l1.c) / (l1.a * l2.b - l2.a * l1.b)
    };
}
exports.intersection = intersection;


/***/ }),

/***/ "../node_modules/sprotty/lib/utils/inversify.js":
/*!******************************************************!*\
  !*** ../node_modules/sprotty/lib/utils/inversify.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
function isInjectable(constr) {
    return Reflect.getMetadata('inversify:paramtypes', constr) !== undefined;
}
exports.isInjectable = isInjectable;


/***/ }),

/***/ "../node_modules/sprotty/lib/utils/iterable.js":
/*!*****************************************************!*\
  !*** ../node_modules/sprotty/lib/utils/iterable.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * A helper class that allows to easily create fluent iterables.
 */
var FluentIterableImpl = /** @class */ (function () {
    function FluentIterableImpl(startFn, nextFn) {
        this.startFn = startFn;
        this.nextFn = nextFn;
    }
    FluentIterableImpl.prototype[Symbol.iterator] = function () {
        var _a;
        var _this = this;
        var iterator = (_a = {
                state: this.startFn(),
                next: function () { return _this.nextFn(iterator.state); }
            },
            _a[Symbol.iterator] = function () { return iterator; },
            _a);
        return iterator;
    };
    FluentIterableImpl.prototype.filter = function (callback) {
        return filterIterable(this, callback);
    };
    FluentIterableImpl.prototype.map = function (callback) {
        return mapIterable(this, callback);
    };
    FluentIterableImpl.prototype.forEach = function (callback) {
        var iterator = this[Symbol.iterator]();
        var index = 0;
        var result;
        do {
            result = iterator.next();
            if (result.value !== undefined)
                callback(result.value, index);
            index++;
        } while (!result.done);
    };
    FluentIterableImpl.prototype.indexOf = function (element) {
        var iterator = this[Symbol.iterator]();
        var index = 0;
        var result;
        do {
            result = iterator.next();
            if (result.value === element)
                return index;
            index++;
        } while (!result.done);
        return -1;
    };
    return FluentIterableImpl;
}());
exports.FluentIterableImpl = FluentIterableImpl;
/**
 * Converts a FluentIterable into an array. If the input is an array, it is returned unchanged.
 */
function toArray(input) {
    if (input.constructor === Array) {
        return input;
    }
    var result = [];
    input.forEach(function (element) { return result.push(element); });
    return result;
}
exports.toArray = toArray;
exports.DONE_RESULT = Object.freeze({ done: true, value: undefined });
/**
 * Create a fluent iterable that filters the content of the given iterable or array.
 */
function filterIterable(input, callback) {
    return new FluentIterableImpl(function () { return createIterator(input); }, function (iterator) {
        var result;
        do {
            result = iterator.next();
        } while (!result.done && !callback(result.value));
        return result;
    });
}
exports.filterIterable = filterIterable;
/**
 * Create a fluent iterable that maps the content of the given iterable or array.
 */
function mapIterable(input, callback) {
    return new FluentIterableImpl(function () { return createIterator(input); }, function (iterator) {
        var _a = iterator.next(), done = _a.done, value = _a.value;
        if (done)
            return exports.DONE_RESULT;
        else
            return { done: false, value: callback(value) };
    });
}
exports.mapIterable = mapIterable;
/**
 * Create an iterator for the given iterable or array.
 */
function createIterator(collection) {
    var method = collection[Symbol.iterator];
    if (typeof method === 'function') {
        return method.call(collection);
    }
    var length = collection.length;
    if (typeof length === 'number' && length >= 0) {
        return new ArrayIterator(collection);
    }
    return { next: function () { return exports.DONE_RESULT; } };
}
/**
 * Iterator implementation for arrays.
 */
var ArrayIterator = /** @class */ (function () {
    function ArrayIterator(array) {
        this.array = array;
        this.index = 0;
    }
    ArrayIterator.prototype.next = function () {
        if (this.index < this.array.length)
            return { done: false, value: this.array[this.index++] };
        else
            return exports.DONE_RESULT;
    };
    ArrayIterator.prototype[Symbol.iterator] = function () {
        return this;
    };
    return ArrayIterator;
}());


/***/ }),

/***/ "../node_modules/sprotty/lib/utils/keyboard.js":
/*!*****************************************************!*\
  !*** ../node_modules/sprotty/lib/utils/keyboard.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var browser_1 = __webpack_require__(/*! ./browser */ "../node_modules/sprotty/lib/utils/browser.js");
/**
 * Returns whether the keyboard event matches the keystroke described by the given
 * code and modifiers. The code must comply to the format of the `code` property
 * of KeyboardEvent, but in contrast to that property, the actual keyboard layout is
 * considered by this function if possible.
 */
function matchesKeystroke(event, code) {
    var modifiers = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        modifiers[_i - 2] = arguments[_i];
    }
    if (getActualCode(event) !== code)
        return false;
    if (browser_1.isMac()) {
        if (event.ctrlKey !== (modifiers.findIndex(function (m) { return m === 'ctrl'; }) >= 0))
            return false;
        if (event.metaKey !== (modifiers.findIndex(function (m) { return m === 'meta' || m === 'ctrlCmd'; }) >= 0))
            return false;
    }
    else {
        if (event.ctrlKey !== (modifiers.findIndex(function (m) { return m === 'ctrl' || m === 'ctrlCmd'; }) >= 0))
            return false;
        if (event.metaKey !== (modifiers.findIndex(function (m) { return m === 'meta'; }) >= 0))
            return false;
    }
    if (event.altKey !== (modifiers.findIndex(function (m) { return m === 'alt'; }) >= 0))
        return false;
    if (event.shiftKey !== (modifiers.findIndex(function (m) { return m === 'shift'; }) >= 0))
        return false;
    return true;
}
exports.matchesKeystroke = matchesKeystroke;
/**
 * Determines a key code from the given event. This is necessary because the `code` property of
 * a KeyboardEvent does not consider keyboard layouts.
 */
function getActualCode(event) {
    if (event.keyCode) {
        var result = STRING_CODE[event.keyCode];
        if (result !== undefined)
            return result;
    }
    return event.code;
}
exports.getActualCode = getActualCode;
var STRING_CODE = new Array(256);
(function () {
    function addKeyCode(stringCode, numericCode) {
        if (STRING_CODE[numericCode] === undefined)
            STRING_CODE[numericCode] = stringCode;
    }
    addKeyCode('Pause', 3);
    addKeyCode('Backspace', 8);
    addKeyCode('Tab', 9);
    addKeyCode('Enter', 13);
    addKeyCode('ShiftLeft', 16);
    addKeyCode('ShiftRight', 16);
    addKeyCode('ControlLeft', 17);
    addKeyCode('ControlRight', 17);
    addKeyCode('AltLeft', 18);
    addKeyCode('AltRight', 18);
    addKeyCode('CapsLock', 20);
    addKeyCode('Escape', 27);
    addKeyCode('Space', 32);
    addKeyCode('PageUp', 33);
    addKeyCode('PageDown', 34);
    addKeyCode('End', 35);
    addKeyCode('Home', 36);
    addKeyCode('ArrowLeft', 37);
    addKeyCode('ArrowUp', 38);
    addKeyCode('ArrowRight', 39);
    addKeyCode('ArrowDown', 40);
    addKeyCode('Insert', 45);
    addKeyCode('Delete', 46);
    addKeyCode('Digit1', 49);
    addKeyCode('Digit2', 50);
    addKeyCode('Digit3', 51);
    addKeyCode('Digit4', 52);
    addKeyCode('Digit5', 53);
    addKeyCode('Digit6', 54);
    addKeyCode('Digit7', 55);
    addKeyCode('Digit8', 56);
    addKeyCode('Digit9', 57);
    addKeyCode('Digit0', 48);
    addKeyCode('KeyA', 65);
    addKeyCode('KeyB', 66);
    addKeyCode('KeyC', 67);
    addKeyCode('KeyD', 68);
    addKeyCode('KeyE', 69);
    addKeyCode('KeyF', 70);
    addKeyCode('KeyG', 71);
    addKeyCode('KeyH', 72);
    addKeyCode('KeyI', 73);
    addKeyCode('KeyJ', 74);
    addKeyCode('KeyK', 75);
    addKeyCode('KeyL', 76);
    addKeyCode('KeyM', 77);
    addKeyCode('KeyN', 78);
    addKeyCode('KeyO', 79);
    addKeyCode('KeyP', 80);
    addKeyCode('KeyQ', 81);
    addKeyCode('KeyR', 82);
    addKeyCode('KeyS', 83);
    addKeyCode('KeyT', 84);
    addKeyCode('KeyU', 85);
    addKeyCode('KeyV', 86);
    addKeyCode('KeyW', 87);
    addKeyCode('KeyX', 88);
    addKeyCode('KeyY', 89);
    addKeyCode('KeyZ', 90);
    addKeyCode('OSLeft', 91);
    addKeyCode('MetaLeft', 91);
    addKeyCode('OSRight', 92);
    addKeyCode('MetaRight', 92);
    addKeyCode('ContextMenu', 93);
    addKeyCode('Numpad0', 96);
    addKeyCode('Numpad1', 97);
    addKeyCode('Numpad2', 98);
    addKeyCode('Numpad3', 99);
    addKeyCode('Numpad4', 100);
    addKeyCode('Numpad5', 101);
    addKeyCode('Numpad6', 102);
    addKeyCode('Numpad7', 103);
    addKeyCode('Numpad8', 104);
    addKeyCode('Numpad9', 105);
    addKeyCode('NumpadMultiply', 106);
    addKeyCode('NumpadAdd', 107);
    addKeyCode('NumpadSeparator', 108);
    addKeyCode('NumpadSubtract', 109);
    addKeyCode('NumpadDecimal', 110);
    addKeyCode('NumpadDivide', 111);
    addKeyCode('F1', 112);
    addKeyCode('F2', 113);
    addKeyCode('F3', 114);
    addKeyCode('F4', 115);
    addKeyCode('F5', 116);
    addKeyCode('F6', 117);
    addKeyCode('F7', 118);
    addKeyCode('F8', 119);
    addKeyCode('F9', 120);
    addKeyCode('F10', 121);
    addKeyCode('F11', 122);
    addKeyCode('F12', 123);
    addKeyCode('F13', 124);
    addKeyCode('F14', 125);
    addKeyCode('F15', 126);
    addKeyCode('F16', 127);
    addKeyCode('F17', 128);
    addKeyCode('F18', 129);
    addKeyCode('F19', 130);
    addKeyCode('F20', 131);
    addKeyCode('F21', 132);
    addKeyCode('F22', 133);
    addKeyCode('F23', 134);
    addKeyCode('F24', 135);
    addKeyCode('NumLock', 144);
    addKeyCode('ScrollLock', 145);
    addKeyCode('Semicolon', 186);
    addKeyCode('Equal', 187);
    addKeyCode('Comma', 188);
    addKeyCode('Minus', 189);
    addKeyCode('Period', 190);
    addKeyCode('Slash', 191);
    addKeyCode('Backquote', 192);
    addKeyCode('IntlRo', 193);
    addKeyCode('BracketLeft', 219);
    addKeyCode('Backslash', 220);
    addKeyCode('BracketRight', 221);
    addKeyCode('Quote', 222);
    addKeyCode('IntlYen', 255);
})();


/***/ }),

/***/ "../node_modules/sprotty/lib/utils/logging.js":
/*!****************************************************!*\
  !*** ../node_modules/sprotty/lib/utils/logging.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../base/types */ "../node_modules/sprotty/lib/base/types.js");
var LogLevel;
(function (LogLevel) {
    LogLevel[LogLevel["none"] = 0] = "none";
    LogLevel[LogLevel["error"] = 1] = "error";
    LogLevel[LogLevel["warn"] = 2] = "warn";
    LogLevel[LogLevel["info"] = 3] = "info";
    LogLevel[LogLevel["log"] = 4] = "log";
})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));
var NullLogger = /** @class */ (function () {
    function NullLogger() {
        this.logLevel = LogLevel.none;
    }
    NullLogger.prototype.error = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
    };
    NullLogger.prototype.warn = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
    };
    NullLogger.prototype.info = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
    };
    NullLogger.prototype.log = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
    };
    NullLogger = __decorate([
        inversify_1.injectable()
    ], NullLogger);
    return NullLogger;
}());
exports.NullLogger = NullLogger;
var ConsoleLogger = /** @class */ (function () {
    function ConsoleLogger() {
        this.logLevel = LogLevel.log;
        this.viewOptions = { baseDiv: '' };
    }
    ConsoleLogger.prototype.error = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= LogLevel.error)
            try {
                console.error.apply(thisArg, this.consoleArguments(thisArg, message, params));
            }
            catch (error) { }
    };
    ConsoleLogger.prototype.warn = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= LogLevel.warn)
            try {
                console.warn.apply(thisArg, this.consoleArguments(thisArg, message, params));
            }
            catch (error) { }
    };
    ConsoleLogger.prototype.info = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= LogLevel.info)
            try {
                console.info.apply(thisArg, this.consoleArguments(thisArg, message, params));
            }
            catch (error) { }
    };
    ConsoleLogger.prototype.log = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= LogLevel.log)
            try {
                console.log.apply(thisArg, this.consoleArguments(thisArg, message, params));
            }
            catch (error) { }
    };
    ConsoleLogger.prototype.consoleArguments = function (thisArg, message, params) {
        var caller;
        if (typeof thisArg === 'object')
            caller = thisArg.constructor.name;
        else
            caller = thisArg;
        var date = new Date();
        return __spreadArrays([date.toLocaleTimeString() + ' ' + this.viewOptions.baseDiv + ' ' + caller + ': ' + message], params);
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.LogLevel),
        __metadata("design:type", Number)
    ], ConsoleLogger.prototype, "logLevel", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], ConsoleLogger.prototype, "viewOptions", void 0);
    ConsoleLogger = __decorate([
        inversify_1.injectable()
    ], ConsoleLogger);
    return ConsoleLogger;
}());
exports.ConsoleLogger = ConsoleLogger;


/***/ }),

/***/ "../node_modules/sprotty/lib/utils/registry.js":
/*!*****************************************************!*\
  !*** ../node_modules/sprotty/lib/utils/registry.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/lib/inversify.js");
var ProviderRegistry = /** @class */ (function () {
    function ProviderRegistry() {
        this.elements = new Map;
    }
    ProviderRegistry.prototype.register = function (key, cstr) {
        if (key === undefined)
            throw new Error('Key is undefined');
        if (this.hasKey(key))
            throw new Error('Key is already registered: ' + key);
        this.elements.set(key, cstr);
    };
    ProviderRegistry.prototype.deregister = function (key) {
        if (key === undefined)
            throw new Error('Key is undefined');
        this.elements.delete(key);
    };
    ProviderRegistry.prototype.hasKey = function (key) {
        return this.elements.has(key);
    };
    ProviderRegistry.prototype.get = function (key, arg) {
        var existingCstr = this.elements.get(key);
        if (existingCstr)
            return new existingCstr(arg);
        else
            return this.missing(key, arg);
    };
    ProviderRegistry.prototype.missing = function (key, arg) {
        throw new Error('Unknown registry key: ' + key);
    };
    ProviderRegistry = __decorate([
        inversify_1.injectable()
    ], ProviderRegistry);
    return ProviderRegistry;
}());
exports.ProviderRegistry = ProviderRegistry;
var FactoryRegistry = /** @class */ (function () {
    function FactoryRegistry() {
        this.elements = new Map;
    }
    FactoryRegistry.prototype.register = function (key, factory) {
        if (key === undefined)
            throw new Error('Key is undefined');
        if (this.hasKey(key))
            throw new Error('Key is already registered: ' + key);
        this.elements.set(key, factory);
    };
    FactoryRegistry.prototype.deregister = function (key) {
        if (key === undefined)
            throw new Error('Key is undefined');
        this.elements.delete(key);
    };
    FactoryRegistry.prototype.hasKey = function (key) {
        return this.elements.has(key);
    };
    FactoryRegistry.prototype.get = function (key, arg) {
        var existingFactory = this.elements.get(key);
        if (existingFactory)
            return existingFactory(arg);
        else
            return this.missing(key, arg);
    };
    FactoryRegistry.prototype.missing = function (key, arg) {
        throw new Error('Unknown registry key: ' + key);
    };
    FactoryRegistry = __decorate([
        inversify_1.injectable()
    ], FactoryRegistry);
    return FactoryRegistry;
}());
exports.FactoryRegistry = FactoryRegistry;
var InstanceRegistry = /** @class */ (function () {
    function InstanceRegistry() {
        this.elements = new Map;
    }
    InstanceRegistry.prototype.register = function (key, instance) {
        if (key === undefined)
            throw new Error('Key is undefined');
        if (this.hasKey(key))
            throw new Error('Key is already registered: ' + key);
        this.elements.set(key, instance);
    };
    InstanceRegistry.prototype.deregister = function (key) {
        if (key === undefined)
            throw new Error('Key is undefined');
        this.elements.delete(key);
    };
    InstanceRegistry.prototype.hasKey = function (key) {
        return this.elements.has(key);
    };
    InstanceRegistry.prototype.get = function (key) {
        var existingInstance = this.elements.get(key);
        if (existingInstance)
            return existingInstance;
        else
            return this.missing(key);
    };
    InstanceRegistry.prototype.missing = function (key) {
        throw new Error('Unknown registry key: ' + key);
    };
    InstanceRegistry = __decorate([
        inversify_1.injectable()
    ], InstanceRegistry);
    return InstanceRegistry;
}());
exports.InstanceRegistry = InstanceRegistry;
var MultiInstanceRegistry = /** @class */ (function () {
    function MultiInstanceRegistry() {
        this.elements = new Map;
    }
    MultiInstanceRegistry.prototype.register = function (key, instance) {
        if (key === undefined)
            throw new Error('Key is undefined');
        var instances = this.elements.get(key);
        if (instances !== undefined)
            instances.push(instance);
        else
            this.elements.set(key, [instance]);
    };
    MultiInstanceRegistry.prototype.deregisterAll = function (key) {
        if (key === undefined)
            throw new Error('Key is undefined');
        this.elements.delete(key);
    };
    MultiInstanceRegistry.prototype.get = function (key) {
        var existingInstances = this.elements.get(key);
        if (existingInstances !== undefined)
            return existingInstances;
        else
            return [];
    };
    MultiInstanceRegistry = __decorate([
        inversify_1.injectable()
    ], MultiInstanceRegistry);
    return MultiInstanceRegistry;
}());
exports.MultiInstanceRegistry = MultiInstanceRegistry;


/***/ }),

/***/ "../node_modules/void-elements/index.js":
/*!**********************************************!*\
  !*** ../node_modules/void-elements/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * This file automatically generated from `pre-publish.js`.
 * Do not manually edit.
 */

module.exports = {
  "area": true,
  "base": true,
  "br": true,
  "col": true,
  "embed": true,
  "hr": true,
  "img": true,
  "input": true,
  "keygen": true,
  "link": true,
  "menuitem": true,
  "meta": true,
  "param": true,
  "source": true,
  "track": true,
  "wbr": true
};


/***/ })

}]);
//# sourceMappingURL=13.bundle.js.map
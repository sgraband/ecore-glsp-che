{"version":3,"sources":["webpack:///../node_modules/@theia/markers/src/browser/marker-tree-label-provider.ts","webpack:///../node_modules/@theia/markers/src/browser/marker-tree-model.ts","webpack:///../node_modules/@theia/markers/src/browser/marker-tree.ts","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-container.ts","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-contribution.ts","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-decorator.ts","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-frontend-module.ts","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-layout-migrations.ts","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-preferences.ts","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-selection.ts","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-tabbar-decorator.ts","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-tree-model.ts","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-utils.ts","webpack:///../node_modules/@theia/markers/src/browser/problem/problem-widget.tsx","webpack:///../node_modules/@theia/markers/src/browser/style/index.css?ab0a","webpack:///../node_modules/@theia/navigator/src/browser/navigator-decorator-service.ts","webpack:///../node_modules/@theia/workspace/src/browser/index.ts","webpack:///../node_modules/@theia/markers/src/browser/style/index.css"],"names":[],"mappings":"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","file":"28.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { LabelProvider, LabelProviderContribution, DidChangeLabelEvent } from '@theia/core/lib/browser/label-provider';\nimport { MarkerInfoNode } from './marker-tree';\nimport { TreeLabelProvider } from '@theia/core/lib/browser/tree/tree-label-provider';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\n\n@injectable()\nexport class MarkerTreeLabelProvider implements LabelProviderContribution {\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(TreeLabelProvider)\n    protected readonly treeLabelProvider: TreeLabelProvider;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    canHandle(element: object): number {\n        return MarkerInfoNode.is(element) ?\n            this.treeLabelProvider.canHandle(element) + 1 :\n            0;\n    }\n\n    getIcon(node: MarkerInfoNode): string {\n        return this.labelProvider.getIcon(node.uri);\n    }\n\n    getName(node: MarkerInfoNode): string {\n        return this.labelProvider.getName(node.uri);\n    }\n\n    getLongName(node: MarkerInfoNode): string {\n        const description: string[] = [];\n        const rootUri = this.workspaceService.getWorkspaceRootUri(node.uri);\n        // In a multiple-root workspace include the root name to the label before the parent directory.\n        if (this.workspaceService.isMultiRootWorkspaceOpened && rootUri) {\n            description.push(this.labelProvider.getName(rootUri));\n        }\n        // If the given resource is not at the workspace root, include the parent directory to the label.\n        if (rootUri && rootUri.toString() !== node.uri.parent.toString()) {\n            description.push(this.labelProvider.getLongName(node.uri.parent));\n        }\n        // Get the full path of a resource which does not exist in the given workspace.\n        if (!rootUri) {\n            description.push(this.labelProvider.getLongName(node.uri.parent.withScheme('markers')));\n        }\n        return description.join(' ● ');\n    }\n\n    getDescription(node: MarkerInfoNode): string {\n        return this.labelProvider.getLongName(node.uri.parent);\n    }\n\n    affects(node: MarkerInfoNode, event: DidChangeLabelEvent): boolean {\n        return event.affects(node.uri) || event.affects(node.uri.parent);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { MarkerNode } from './marker-tree';\nimport { TreeModelImpl, OpenerService, open, TreeNode, OpenerOptions } from '@theia/core/lib/browser';\n\n@injectable()\nexport class MarkerTreeModel extends TreeModelImpl {\n\n    @inject(OpenerService) protected readonly openerService: OpenerService;\n\n    protected doOpenNode(node: TreeNode): void {\n        if (MarkerNode.is(node)) {\n            open(this.openerService, node.uri, this.getOpenerOptionsByMarker(node));\n        } else {\n            super.doOpenNode(node);\n        }\n    }\n\n    protected getOpenerOptionsByMarker(node: MarkerNode): OpenerOptions | undefined {\n        return undefined;\n    }\n\n    /**\n     * Reveal the corresponding node at the marker.\n     * @param node {TreeNode} the tree node.\n     */\n    revealNode(node: TreeNode): void {\n        if (MarkerNode.is(node)) {\n            open(this.openerService, node.uri, { ...this.getOpenerOptionsByMarker(node), mode: 'reveal' });\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { TreeImpl, CompositeTreeNode, TreeNode, SelectableTreeNode, ExpandableTreeNode } from '@theia/core/lib/browser';\nimport { MarkerManager } from './marker-manager';\nimport { Marker } from '../common/marker';\nimport { UriSelection } from '@theia/core/lib/common/selection';\nimport URI from '@theia/core/lib/common/uri';\nimport { ProblemSelection } from './problem/problem-selection';\n\nexport const MarkerOptions = Symbol('MarkerOptions');\nexport interface MarkerOptions {\n    readonly kind: string;\n}\n\n@injectable()\nexport abstract class MarkerTree<T extends object> extends TreeImpl {\n\n    constructor(\n        protected readonly markerManager: MarkerManager<T>,\n        protected readonly markerOptions: MarkerOptions\n    ) {\n        super();\n\n        this.toDispose.push(markerManager.onDidChangeMarkers(uri => this.refreshMarkerInfo(uri)));\n\n        this.root = <MarkerRootNode>{\n            visible: false,\n            id: 'theia-' + markerOptions.kind + '-marker-widget',\n            name: 'MarkerTree',\n            kind: markerOptions.kind,\n            children: [],\n            parent: undefined\n        };\n    }\n\n    protected async refreshMarkerInfo(uri: URI): Promise<void> {\n        const id = uri.toString();\n        const existing = this.getNode(id);\n        const markers = this.markerManager.findMarkers({ uri });\n        if (markers.length <= 0) {\n            if (MarkerInfoNode.is(existing)) {\n                CompositeTreeNode.removeChild(existing.parent, existing);\n                this.removeNode(existing);\n                this.fireChanged();\n            }\n            return;\n        }\n        const node = MarkerInfoNode.is(existing) ? existing : this.createMarkerInfo(id, uri);\n        CompositeTreeNode.addChild(node.parent, node);\n        const children = this.getMarkerNodes(node, markers);\n        node.numberOfMarkers = markers.length;\n        this.setChildren(node, children);\n    }\n\n    protected async resolveChildren(parent: CompositeTreeNode): Promise<TreeNode[]> {\n        if (MarkerRootNode.is(parent)) {\n            const nodes: MarkerInfoNode[] = [];\n            for (const id of this.markerManager.getUris()) {\n                const uri = new URI(id);\n                const existing = this.getNode(id);\n                const markers = this.markerManager.findMarkers({ uri });\n                const node = MarkerInfoNode.is(existing) ? existing : this.createMarkerInfo(id, uri);\n                node.children = this.getMarkerNodes(node, markers);\n                node.numberOfMarkers = node.children.length;\n                nodes.push(node);\n            }\n            return nodes;\n        }\n        return super.resolveChildren(parent);\n    }\n\n    protected createMarkerInfo(id: string, uri: URI): MarkerInfoNode {\n        return {\n            children: [],\n            expanded: true,\n            uri,\n            id,\n            parent: this.root as MarkerRootNode,\n            selected: false,\n            numberOfMarkers: 0\n        };\n    }\n\n    protected getMarkerNodes(parent: MarkerInfoNode, markers: Marker<T>[]): MarkerNode[] {\n        return markers.map((marker, index) =>\n            this.createMarkerNode(marker, index, parent)\n        );\n    }\n    protected createMarkerNode(marker: Marker<T>, index: number, parent: MarkerInfoNode): MarkerNode {\n        const id = parent.id + '_' + index;\n        const existing = this.getNode(id);\n        if (MarkerNode.is(existing)) {\n            existing.marker = marker;\n            return existing;\n        }\n        return {\n            id,\n            name: 'marker',\n            parent,\n            selected: false,\n            uri: parent.uri,\n            marker\n        };\n    }\n}\n\nexport interface MarkerNode extends UriSelection, SelectableTreeNode, ProblemSelection {\n    marker: Marker<object>;\n}\nexport namespace MarkerNode {\n    export function is(node: TreeNode | undefined): node is MarkerNode {\n        return UriSelection.is(node) && SelectableTreeNode.is(node) && ProblemSelection.is(node);\n    }\n}\n\nexport interface MarkerInfoNode extends UriSelection, SelectableTreeNode, ExpandableTreeNode {\n    parent: MarkerRootNode;\n    numberOfMarkers: number;\n}\nexport namespace MarkerInfoNode {\n    export function is(node: Object | undefined): node is MarkerInfoNode {\n        return ExpandableTreeNode.is(node) && UriSelection.is(node) && 'numberOfMarkers' in node;\n    }\n}\n\nexport interface MarkerRootNode extends CompositeTreeNode {\n    kind: string;\n}\nexport namespace MarkerRootNode {\n    export function is(node: TreeNode | undefined): node is MarkerRootNode {\n        return CompositeTreeNode.is(node) && 'kind' in node;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces, Container } from 'inversify';\nimport { MarkerOptions } from '../marker-tree';\nimport { ProblemWidget } from './problem-widget';\nimport { ProblemTreeModel, ProblemTree } from './problem-tree-model';\nimport { TreeWidget, TreeProps, defaultTreeProps, TreeModel, createTreeContainer, TreeModelImpl, TreeImpl, Tree } from '@theia/core/lib/browser';\nimport { PROBLEM_KIND } from '../../common/problem-marker';\n\nexport const PROBLEM_TREE_PROPS = <TreeProps>{\n    ...defaultTreeProps,\n    contextMenuPath: [PROBLEM_KIND],\n    globalSelection: true\n};\n\nexport const PROBLEM_OPTIONS = <MarkerOptions>{\n    kind: 'problem'\n};\n\nexport function createProblemTreeContainer(parent: interfaces.Container): Container {\n    const child = createTreeContainer(parent);\n\n    child.unbind(TreeImpl);\n    child.bind(ProblemTree).toSelf();\n    child.rebind(Tree).toService(ProblemTree);\n\n    child.unbind(TreeWidget);\n    child.bind(ProblemWidget).toSelf();\n\n    child.unbind(TreeModelImpl);\n    child.bind(ProblemTreeModel).toSelf();\n    child.rebind(TreeModel).toService(ProblemTreeModel);\n\n    child.rebind(TreeProps).toConstantValue(PROBLEM_TREE_PROPS);\n    child.bind(MarkerOptions).toConstantValue(PROBLEM_OPTIONS);\n    return child;\n}\n\nexport function createProblemWidget(parent: interfaces.Container): ProblemWidget {\n    return createProblemTreeContainer(parent).get(ProblemWidget);\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport debounce = require('lodash.debounce');\nimport { injectable, inject } from 'inversify';\nimport { FrontendApplication, FrontendApplicationContribution, CompositeTreeNode, SelectableTreeNode, Widget } from '@theia/core/lib/browser';\nimport { StatusBar, StatusBarAlignment } from '@theia/core/lib/browser/status-bar/status-bar';\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport { PROBLEM_KIND, ProblemMarker } from '../../common/problem-marker';\nimport { ProblemManager, ProblemStat } from './problem-manager';\nimport { ProblemWidget, PROBLEMS_WIDGET_ID } from './problem-widget';\nimport { MenuPath, MenuModelRegistry } from '@theia/core/lib/common/menu';\nimport { Command, CommandRegistry } from '@theia/core/lib/common/command';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { ProblemSelection } from './problem-selection';\n\nexport const PROBLEMS_CONTEXT_MENU: MenuPath = [PROBLEM_KIND];\n\nexport namespace ProblemsMenu {\n    export const CLIPBOARD = [...PROBLEMS_CONTEXT_MENU, '1_clipboard'];\n    export const PROBLEMS = [...PROBLEMS_CONTEXT_MENU, '2_problems'];\n}\n\nexport namespace ProblemsCommands {\n    export const COLLAPSE_ALL: Command = {\n        id: 'problems.collapse.all'\n    };\n    export const COLLAPSE_ALL_TOOLBAR: Command = {\n        id: 'problems.collapse.all.toolbar',\n        iconClass: 'theia-collapse-all-icon'\n    };\n    export const COPY: Command = {\n        id: 'problems.copy'\n    };\n    export const COPY_MESSAGE: Command = {\n        id: 'problems.copy.message',\n    };\n}\n\n@injectable()\nexport class ProblemContribution extends AbstractViewContribution<ProblemWidget> implements FrontendApplicationContribution, TabBarToolbarContribution {\n\n    @inject(ProblemManager) protected readonly problemManager: ProblemManager;\n    @inject(StatusBar) protected readonly statusBar: StatusBar;\n    @inject(SelectionService) protected readonly selectionService: SelectionService;\n\n    constructor() {\n        super({\n            widgetId: PROBLEMS_WIDGET_ID,\n            widgetName: 'Problems',\n            defaultWidgetOptions: {\n                area: 'bottom'\n            },\n            toggleCommandId: 'problemsView:toggle',\n            toggleKeybinding: 'ctrlcmd+shift+m'\n        });\n    }\n\n    onStart(app: FrontendApplication): void {\n        this.updateStatusBarElement();\n        this.problemManager.onDidChangeMarkers(this.updateStatusBarElement);\n    }\n\n    async initializeLayout(app: FrontendApplication): Promise<void> {\n        await this.openView();\n    }\n\n    protected updateStatusBarElement = debounce(() => this.setStatusBarElement(this.problemManager.getProblemStat()), 10);\n    protected setStatusBarElement(problemStat: ProblemStat): void {\n        this.statusBar.setElement('problem-marker-status', {\n            text: problemStat.infos <= 0\n                ? `$(times-circle) ${problemStat.errors} $(exclamation-triangle) ${problemStat.warnings}`\n                : `$(times-circle) ${problemStat.errors} $(exclamation-triangle) ${problemStat.warnings} $(info-circle) ${problemStat.infos}`,\n            alignment: StatusBarAlignment.LEFT,\n            priority: 10,\n            command: this.toggleCommand ? this.toggleCommand.id : undefined,\n            tooltip: this.getStatusBarTooltip(problemStat)\n        });\n    }\n\n    /**\n     * Get the tooltip to be displayed when hovering over the problem statusbar item.\n     * - Displays `No Problems` when no problems are present.\n     * - Displays a human-readable label which describes for each type of problem stat properties,\n     * their overall count and type when any one of these properties has a positive count.\n     * @param stat the problem stat describing the number of `errors`, `warnings` and `infos`.\n     *\n     * @return the tooltip to be displayed in the statusbar.\n     */\n    protected getStatusBarTooltip(stat: ProblemStat): string {\n        if (stat.errors <= 0 && stat.warnings <= 0 && stat.infos <= 0) {\n            return 'No Problems';\n        }\n        const tooltip: string[] = [];\n        if (stat.errors > 0) {\n            tooltip.push(`${stat.errors} Errors`);\n        }\n        if (stat.warnings > 0) {\n            tooltip.push(`${stat.warnings} Warnings`);\n        }\n        if (stat.infos > 0) {\n            tooltip.push(`${stat.infos} Infos`);\n        }\n        return tooltip.join(', ');\n\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        super.registerCommands(commands);\n        commands.registerCommand(ProblemsCommands.COLLAPSE_ALL, {\n            execute: () => this.collapseAllProblems()\n        });\n        commands.registerCommand(ProblemsCommands.COLLAPSE_ALL_TOOLBAR, {\n            isEnabled: widget => this.withWidget(widget, () => true),\n            isVisible: widget => this.withWidget(widget, () => true),\n            execute: widget => this.withWidget(widget, () => this.collapseAllProblems())\n        });\n        commands.registerCommand(ProblemsCommands.COPY,\n            new ProblemSelection.CommandHandler(this.selectionService, {\n                multi: false,\n                isEnabled: () => true,\n                isVisible: () => true,\n                execute: selection => this.copy(selection)\n            })\n        );\n        commands.registerCommand(ProblemsCommands.COPY_MESSAGE,\n            new ProblemSelection.CommandHandler(this.selectionService, {\n                multi: false,\n                isEnabled: () => true,\n                isVisible: () => true,\n                execute: selection => this.copyMessage(selection)\n            })\n        );\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        super.registerMenus(menus);\n        menus.registerMenuAction(ProblemsMenu.CLIPBOARD, {\n            commandId: ProblemsCommands.COPY.id,\n            label: 'Copy',\n            order: '0'\n        });\n        menus.registerMenuAction(ProblemsMenu.CLIPBOARD, {\n            commandId: ProblemsCommands.COPY_MESSAGE.id,\n            label: 'Copy Message',\n            order: '1'\n        });\n        menus.registerMenuAction(ProblemsMenu.PROBLEMS, {\n            commandId: ProblemsCommands.COLLAPSE_ALL.id,\n            label: 'Collapse All',\n            order: '2'\n        });\n    }\n\n    async registerToolbarItems(toolbarRegistry: TabBarToolbarRegistry): Promise<void> {\n        toolbarRegistry.registerItem({\n            id: ProblemsCommands.COLLAPSE_ALL_TOOLBAR.id,\n            command: ProblemsCommands.COLLAPSE_ALL_TOOLBAR.id,\n            tooltip: 'Collapse All',\n            priority: 0,\n        });\n    }\n\n    protected async collapseAllProblems(): Promise<void> {\n        const { model } = await this.widget;\n        const root = model.root as CompositeTreeNode;\n        const firstChild = root.children[0];\n        root.children.forEach(child => CompositeTreeNode.is(child) && model.collapseAll(child));\n        if (SelectableTreeNode.is(firstChild)) {\n            model.selectNode(firstChild);\n        }\n    }\n\n    protected addToClipboard(content: string): void {\n        const handleCopy = (e: ClipboardEvent) => {\n            document.removeEventListener('copy', handleCopy);\n            if (e.clipboardData) {\n                e.clipboardData.setData('text/plain', content);\n                e.preventDefault();\n            }\n        };\n        document.addEventListener('copy', handleCopy);\n        document.execCommand('copy');\n    }\n\n    protected copy(selection: ProblemSelection): void {\n        const marker = selection.marker as ProblemMarker;\n        const serializedProblem = JSON.stringify({\n            resource: marker.uri,\n            owner: marker.uri,\n            code: marker.data.code,\n            severity: marker.data.severity,\n            message: marker.data.message,\n            source: marker.data.source,\n            startLineNumber: marker.data.range.start.line,\n            startColumn: marker.data.range.start.character,\n            endLineNumber: marker.data.range.end.line,\n            endColumn: marker.data.range.end.character\n        }, undefined, '\\t');\n\n        this.addToClipboard(serializedProblem);\n    }\n\n    protected copyMessage(selection: ProblemSelection): void {\n        const marker = selection.marker as ProblemMarker;\n        this.addToClipboard(marker.data.message);\n    }\n\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), cb: (problems: ProblemWidget) => T): T | false {\n        if (widget instanceof ProblemWidget && widget.id === PROBLEMS_WIDGET_ID) {\n            return cb(widget);\n        }\n        return false;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { Diagnostic, DiagnosticSeverity } from 'vscode-languageserver-types';\nimport URI from '@theia/core/lib/common/uri';\nimport { notEmpty } from '@theia/core/lib/common/objects';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { Tree } from '@theia/core/lib/browser/tree/tree';\nimport { DepthFirstTreeIterator } from '@theia/core/lib/browser/tree/tree-iterator';\nimport { TreeDecorator, TreeDecoration } from '@theia/core/lib/browser/tree/tree-decorator';\nimport { FileStatNode } from '@theia/filesystem/lib/browser';\nimport { Marker } from '../../common/marker';\nimport { ProblemManager } from './problem-manager';\nimport { ProblemPreferences, ProblemConfiguration } from './problem-preferences';\nimport { PreferenceChangeEvent } from '@theia/core/lib/browser';\nimport { ProblemUtils } from './problem-utils';\n\n@injectable()\nexport class ProblemDecorator implements TreeDecorator {\n\n    @inject(ProblemPreferences)\n    protected problemPreferences: ProblemPreferences;\n\n    readonly id = 'theia-problem-decorator';\n\n    protected readonly emitter: Emitter<(tree: Tree) => Map<string, TreeDecoration.Data>>;\n\n    constructor(@inject(ProblemManager) protected readonly problemManager: ProblemManager) {\n        this.emitter = new Emitter();\n        this.problemManager.onDidChangeMarkers(() => this.fireDidChangeDecorations((tree: Tree) => this.collectDecorators(tree)));\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.problemPreferences.onPreferenceChanged((event: PreferenceChangeEvent<ProblemConfiguration>) => {\n            const { preferenceName } = event;\n            if (preferenceName === 'problems.decorations.enabled') {\n                this.fireDidChangeDecorations((tree: Tree) => this.collectDecorators(tree));\n            }\n        });\n    }\n\n    async decorations(tree: Tree): Promise<Map<string, TreeDecoration.Data>> {\n        return this.collectDecorators(tree);\n    }\n\n    get onDidChangeDecorations(): Event<(tree: Tree) => Map<string, TreeDecoration.Data>> {\n        return this.emitter.event;\n    }\n\n    protected fireDidChangeDecorations(event: (tree: Tree) => Map<string, TreeDecoration.Data>): void {\n        this.emitter.fire(event);\n    }\n\n    protected collectDecorators(tree: Tree): Map<string, TreeDecoration.Data> {\n\n        const result = new Map();\n\n        // If the tree root is undefined or the preference for the decorations is disabled, return an empty result map.\n        if (tree.root === undefined || !this.problemPreferences['problems.decorations.enabled']) {\n            return result;\n        }\n        const markers = this.appendContainerMarkers(tree, this.collectMarkers(tree));\n        for (const node of new DepthFirstTreeIterator(tree.root)) {\n            const nodeUri = FileStatNode.getUri(node);\n            if (nodeUri) {\n                const marker = markers.get(nodeUri);\n                if (marker) {\n                    result.set(node.id, marker);\n                }\n            }\n        }\n        return new Map(Array.from(result.entries()).map(m => [m[0], this.toDecorator(m[1])] as [string, TreeDecoration.Data]));\n    }\n\n    protected appendContainerMarkers(tree: Tree, markers: Marker<Diagnostic>[]): Map<string, Marker<Diagnostic>> {\n        const result: Map<string, Marker<Diagnostic>> = new Map();\n        // We traverse up and assign the diagnostic to the container directory.\n        // Note, instead of stopping at the WS root, we traverse up the driver root.\n        // We will filter them later based on the expansion state of the tree.\n        for (const [uri, marker] of new Map(markers.map(m => [new URI(m.uri), m] as [URI, Marker<Diagnostic>])).entries()) {\n            const uriString = uri.toString();\n            result.set(uriString, marker);\n            let parentUri: URI | undefined = uri.parent;\n            while (parentUri && !parentUri.path.isRoot) {\n                const parentUriString = parentUri.toString();\n                const existing = result.get(parentUriString);\n                // Make sure the highest diagnostic severity (smaller number) will be propagated to the container directory.\n                if (existing === undefined || this.compare(marker, existing) < 0) {\n                    result.set(parentUriString, {\n                        data: marker.data,\n                        uri: parentUriString,\n                        owner: marker.owner,\n                        kind: marker.kind\n                    });\n                    parentUri = parentUri.parent;\n                } else {\n                    parentUri = undefined;\n                }\n            }\n        }\n        return result;\n    }\n\n    protected collectMarkers(tree: Tree): Marker<Diagnostic>[] {\n        return Array.from(this.problemManager.getUris())\n            .map(uri => new URI(uri))\n            .map(uri => this.problemManager.findMarkers({ uri }))\n            .map(markers => markers.sort(this.compare.bind(this)))\n            .map(markers => markers.shift())\n            .filter(notEmpty)\n            .filter(this.filterMarker.bind(this));\n    }\n\n    protected toDecorator(marker: Marker<Diagnostic>): TreeDecoration.Data {\n        const position = TreeDecoration.IconOverlayPosition.BOTTOM_RIGHT;\n        const icon = this.getOverlayIcon(marker);\n        const color = this.getOverlayIconColor(marker);\n        const priority = this.getPriority(marker);\n        return {\n            priority,\n            fontData: {\n                color,\n            },\n            iconOverlay: {\n                position,\n                icon,\n                color,\n                background: {\n                    shape: 'circle',\n                    color: 'transparent'\n                }\n            },\n        };\n    }\n\n    protected getOverlayIcon(marker: Marker<Diagnostic>): string {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 'times-circle';\n            case 2: return 'exclamation-circle';\n            case 3: return 'info-circle';\n            default: return 'hand-o-up';\n        }\n    }\n\n    protected getOverlayIconColor(marker: Marker<Diagnostic>): TreeDecoration.Color {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 'var(--theia-editorError-foreground)';\n            case 2: return 'var(--theia-editorWarning-foreground)';\n            case 3: return 'var(--theia-editorInfo-foreground)';\n            default: return 'var(--theia-successBackground)';\n        }\n    }\n\n    /**\n     * Get the decoration for a given marker diagnostic.\n     * Markers with higher severity have a higher priority and should be displayed.\n     * @param marker the diagnostic marker.\n     */\n    protected getPriority(marker: Marker<Diagnostic>): number {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 30; // Errors.\n            case 2: return 20; // Warnings.\n            case 3: return 10; // Infos.\n            default: return 0;\n        }\n    }\n\n    /**\n     * Returns `true` if the diagnostic (`data`) of the marker argument has `Error`, `Warning`, or `Information` severity.\n     * Otherwise, returns `false`.\n     */\n    protected filterMarker(marker: Marker<Diagnostic>): boolean {\n        const { severity } = marker.data;\n        return severity === DiagnosticSeverity.Error\n            || severity === DiagnosticSeverity.Warning\n            || severity === DiagnosticSeverity.Information;\n    }\n\n    protected compare(left: Marker<Diagnostic>, right: Marker<Diagnostic>): number {\n        return ProblemDecorator.severityCompare(left, right);\n    }\n\n}\n\nexport namespace ProblemDecorator {\n\n    // Highest severities (errors) come first, then the others. Undefined severities treated as the last ones.\n    export const severityCompare = ProblemUtils.severityCompare;\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport '../../../src/browser/style/index.css';\n\nimport { ContainerModule } from 'inversify';\nimport { ProblemWidget, PROBLEMS_WIDGET_ID } from './problem-widget';\nimport { ProblemContribution } from './problem-contribution';\nimport { createProblemWidget } from './problem-container';\nimport { FrontendApplicationContribution, bindViewContribution, ApplicationShellLayoutMigration, LabelProviderContribution } from '@theia/core/lib/browser';\nimport { ProblemManager } from './problem-manager';\nimport { WidgetFactory } from '@theia/core/lib/browser/widget-manager';\nimport { NavigatorTreeDecorator } from '@theia/navigator/lib/browser/navigator-decorator-service';\nimport { ProblemDecorator } from './problem-decorator';\nimport { ProblemTabBarDecorator } from './problem-tabbar-decorator';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { ProblemLayoutVersion3Migration } from './problem-layout-migrations';\nimport { TabBarDecorator } from '@theia/core/lib/browser/shell/tab-bar-decorator';\nimport { bindProblemPreferences } from './problem-preferences';\nimport { MarkerTreeLabelProvider } from '../marker-tree-label-provider';\n\nexport default new ContainerModule(bind => {\n    bindProblemPreferences(bind);\n\n    bind(ProblemManager).toSelf().inSingletonScope();\n\n    bind(ProblemWidget).toDynamicValue(ctx =>\n        createProblemWidget(ctx.container)\n    );\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: PROBLEMS_WIDGET_ID,\n        createWidget: () => context.container.get<ProblemWidget>(ProblemWidget)\n    }));\n    bind(ApplicationShellLayoutMigration).to(ProblemLayoutVersion3Migration).inSingletonScope();\n\n    bindViewContribution(bind, ProblemContribution);\n    bind(FrontendApplicationContribution).toService(ProblemContribution);\n    bind(TabBarToolbarContribution).toService(ProblemContribution);\n\n    bind(ProblemDecorator).toSelf().inSingletonScope();\n    bind(NavigatorTreeDecorator).toService(ProblemDecorator);\n    bind(ProblemTabBarDecorator).toSelf().inSingletonScope();\n    bind(TabBarDecorator).toService(ProblemTabBarDecorator);\n\n    bind(MarkerTreeLabelProvider).toSelf().inSingletonScope();\n    bind(LabelProviderContribution).toService(MarkerTreeLabelProvider);\n});\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { ApplicationShellLayoutMigration, WidgetDescription } from '@theia/core/lib/browser/shell/shell-layout-restorer';\nimport { PROBLEM_KIND } from '../../common/problem-marker';\nimport { PROBLEMS_WIDGET_ID } from './problem-widget';\n\n@injectable()\nexport class ProblemLayoutVersion3Migration implements ApplicationShellLayoutMigration {\n    readonly layoutVersion = 3.0;\n    onWillInflateWidget(desc: WidgetDescription): WidgetDescription | undefined {\n        if (desc.constructionOptions.factoryId === PROBLEM_KIND) {\n            desc.constructionOptions.factoryId = PROBLEMS_WIDGET_ID;\n            return desc;\n        }\n        return undefined;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport { createPreferenceProxy, PreferenceProxy, PreferenceService, PreferenceContribution, PreferenceSchema } from '@theia/core/lib/browser';\n\nexport const ProblemConfigSchema: PreferenceSchema = {\n    'type': 'object',\n    'properties': {\n        'problems.decorations.enabled': {\n            'type': 'boolean',\n            'description': 'Show problem decorators (diagnostic markers) in tree widgets.',\n            'default': true,\n        },\n        'problems.decorations.tabbar.enabled': {\n            'type': 'boolean',\n            'description': 'Show problem decorators (diagnostic markers) in the tab bars.',\n            'default': true\n        }\n    }\n};\n\nexport interface ProblemConfiguration {\n    'problems.decorations.enabled': boolean,\n    'problems.decorations.tabbar.enabled': boolean\n}\n\nexport const ProblemPreferences = Symbol('ProblemPreferences');\nexport type ProblemPreferences = PreferenceProxy<ProblemConfiguration>;\n\nexport const createProblemPreferences = (preferences: PreferenceService): ProblemPreferences =>\n    createPreferenceProxy(preferences, ProblemConfigSchema);\n\nexport const bindProblemPreferences = (bind: interfaces.Bind): void => {\n    bind(ProblemPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        return createProblemPreferences(preferences);\n    });\n    bind(PreferenceContribution).toConstantValue({ schema: ProblemConfigSchema });\n};\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { SelectionCommandHandler } from '@theia/core/lib/common/selection-command-handler';\nimport { Marker } from '../../common/marker';\nimport { ProblemMarker } from '../../common/problem-marker';\n\nexport interface ProblemSelection {\n    marker: Marker<object>;\n}\nexport namespace ProblemSelection {\n    export function is(arg: Object | undefined): arg is ProblemSelection {\n        return typeof arg === 'object' && ('marker' in arg) && ProblemMarker.is(arg['marker']);\n    }\n\n    export class CommandHandler extends SelectionCommandHandler<ProblemSelection> {\n\n        constructor(\n            protected readonly selectionService: SelectionService,\n            protected readonly options: SelectionCommandHandler.Options<ProblemSelection>\n        ) {\n            super(\n                selectionService,\n                arg => ProblemSelection.is(arg) ? arg : undefined,\n                options\n            );\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { Diagnostic, DiagnosticSeverity } from 'vscode-languageserver-types';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { Title, Widget } from '@phosphor/widgets';\nimport { WidgetDecoration } from '@theia/core/lib/browser/widget-decoration';\nimport { TabBarDecorator } from '@theia/core/lib/browser/shell/tab-bar-decorator';\nimport { Marker } from '../../common/marker';\nimport { ProblemManager } from './problem-manager';\nimport { ProblemPreferences, ProblemConfiguration } from './problem-preferences';\nimport { PreferenceChangeEvent, Navigatable } from '@theia/core/lib/browser';\n\n@injectable()\nexport class ProblemTabBarDecorator implements TabBarDecorator {\n\n    readonly id = 'theia-problem-tabbar-decorator';\n\n    protected readonly emitter = new Emitter<void>();\n\n    @inject(ProblemPreferences)\n    protected readonly preferences: ProblemPreferences;\n\n    @inject(ProblemManager)\n    protected readonly problemManager: ProblemManager;\n\n    @postConstruct()\n    protected init(): void {\n        this.problemManager.onDidChangeMarkers(() => this.fireDidChangeDecorations());\n        this.preferences.onPreferenceChanged(event => this.handlePreferenceChange(event));\n    }\n\n    decorate(title: Title<Widget>): WidgetDecoration.Data[] {\n        const widget = title.owner;\n        if (Navigatable.is(widget)) {\n            const resourceUri = widget.getResourceUri();\n            if (resourceUri) {\n                // Get the list of problem markers for the given resource URI.\n                const markers: Marker<Diagnostic>[] = this.problemManager.findMarkers({ uri: resourceUri });\n                // If no markers are available, return early.\n                if (markers.length === 0) {\n                    return [];\n                }\n                // Store the marker with the highest severity.\n                let maxSeverity: Marker<Diagnostic> | undefined;\n                // Iterate over available markers to determine that which has the highest severity.\n                // Only display a decoration if an error or warning marker is available.\n                for (const marker of markers) {\n                    // Break early if an error marker is present, since it represents the highest severity.\n                    if (marker.data.severity === DiagnosticSeverity.Error) {\n                        maxSeverity = marker;\n                        break;\n                    } else if (marker.data.severity === DiagnosticSeverity.Warning) {\n                        maxSeverity = marker;\n                    }\n                }\n                // Decorate the tabbar with the highest marker severity if available.\n                return maxSeverity ? [this.toDecorator(maxSeverity)] : [];\n            }\n        }\n        return [];\n    }\n\n    get onDidChangeDecorations(): Event<void> {\n        return this.emitter.event;\n    }\n\n    protected fireDidChangeDecorations(): void {\n        this.emitter.fire(undefined);\n    }\n\n    /**\n     * Handle changes in preference.\n     * @param {PreferenceChangeEvent<ProblemConfiguration>} event The event of the changes in preference.\n     */\n    protected async handlePreferenceChange(event: PreferenceChangeEvent<ProblemConfiguration>): Promise<void> {\n        const { preferenceName } = event;\n        if (preferenceName === 'problems.decorations.tabbar.enabled') {\n            this.fireDidChangeDecorations();\n        }\n    }\n\n    /**\n     * Convert a diagnostic marker to a decorator.\n     * @param {Marker<Diagnostic>} marker A diagnostic marker.\n     * @returns {WidgetDecoration.Data} The decoration data.\n     */\n    protected toDecorator(marker: Marker<Diagnostic>): WidgetDecoration.Data {\n        const position = WidgetDecoration.IconOverlayPosition.BOTTOM_RIGHT;\n        const icon = this.getOverlayIcon(marker);\n        const color = this.getOverlayIconColor(marker);\n        return {\n            iconOverlay: {\n                position,\n                icon,\n                color,\n                background: {\n                    shape: 'circle',\n                    color: 'transparent'\n                }\n            }\n        };\n    }\n\n    /**\n     * Get the appropriate overlay icon for decoration.\n     * @param {Marker<Diagnostic>} marker A diagnostic marker.\n     * @returns {string} A string representing the overlay icon class.\n     */\n    protected getOverlayIcon(marker: Marker<Diagnostic>): string {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 'times-circle';\n            case 2: return 'exclamation-circle';\n            case 3: return 'info-circle';\n            default: return 'hand-o-up';\n        }\n    }\n\n    /**\n     * Get the appropriate overlay icon color for decoration.\n     * @param {Marker<Diagnostic>} marker A diagnostic marker.\n     * @returns {WidgetDecoration.Color} The decoration color.\n     */\n    protected getOverlayIconColor(marker: Marker<Diagnostic>): WidgetDecoration.Color {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 'var(--theia-editorError-foreground)';\n            case 2: return 'var(--theia-editorWarning-foreground)';\n            case 3: return 'var(--theia-editorInfo-foreground)';\n            default: return 'var(--theia-successBackground)';\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ProblemMarker } from '../../common/problem-marker';\nimport { ProblemManager } from './problem-manager';\nimport { MarkerNode, MarkerTree, MarkerOptions, MarkerInfoNode } from '../marker-tree';\nimport { MarkerTreeModel } from '../marker-tree-model';\nimport { injectable, inject } from 'inversify';\nimport { OpenerOptions, TreeNode } from '@theia/core/lib/browser';\nimport { Marker } from '../../common/marker';\nimport { Diagnostic } from 'vscode-languageserver-types';\nimport { ProblemUtils } from './problem-utils';\n\n@injectable()\nexport class ProblemTree extends MarkerTree<Diagnostic> {\n\n    constructor(\n        @inject(ProblemManager) protected readonly problemManager: ProblemManager,\n        @inject(MarkerOptions) protected readonly markerOptions: MarkerOptions) {\n        super(problemManager, markerOptions);\n    }\n\n    protected getMarkerNodes(parent: MarkerInfoNode, markers: Marker<Diagnostic>[]): MarkerNode[] {\n        const nodes = super.getMarkerNodes(parent, markers);\n        return nodes.sort((a, b) => this.sortMarkers(a, b));\n    }\n\n    /**\n     * Sort markers based on the following rules:\n     * - Markers are fist sorted by `severity`.\n     * - Markers are sorted by `line number` if applicable.\n     * - Markers are sorted by `column number` if\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    protected sortMarkers(a: MarkerNode, b: MarkerNode): number {\n        const markerA = a.marker as Marker<Diagnostic>;\n        const markerB = b.marker as Marker<Diagnostic>;\n\n        // Determine the marker with the highest severity.\n        const severity = ProblemUtils.severityCompare(markerA, markerB);\n        if (severity !== 0) {\n            return severity;\n        }\n        // Determine the marker with the lower line number.\n        const lineNumber = ProblemUtils.lineNumberCompare(markerA, markerB);\n        if (lineNumber !== 0) {\n            return lineNumber;\n        }\n        // Determine the marker with the lower column number.\n        const columnNumber = ProblemUtils.columnNumberCompare(markerA, markerB);\n        if (columnNumber !== 0) {\n            return columnNumber;\n        }\n        return 0;\n    }\n\n}\n\n@injectable()\nexport class ProblemTreeModel extends MarkerTreeModel {\n\n    @inject(ProblemManager) protected readonly problemManager: ProblemManager;\n\n    protected getOpenerOptionsByMarker(node: MarkerNode): OpenerOptions | undefined {\n        if (ProblemMarker.is(node.marker)) {\n            return {\n                selection: node.marker.data.range\n            };\n        }\n        return undefined;\n    }\n\n    removeNode(node: TreeNode): void {\n        if (MarkerInfoNode.is(node)) {\n            this.problemManager.cleanAllMarkers(node.uri);\n        }\n        if (MarkerNode.is(node)) {\n            const { uri } = node;\n            const { owner } = node.marker;\n            const diagnostics = this.problemManager.findMarkers({ uri, owner, dataFilter: data => node.marker.data !== data }).map(({ data }) => data);\n            this.problemManager.setMarkers(uri, owner, diagnostics);\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Marker } from '../../common/marker';\nimport { Diagnostic } from '@theia/languages/lib/browser';\n\nexport namespace ProblemUtils {\n\n    /**\n     * Comparator for severity.\n     * - The highest severity (`error`) come first followed by others.\n     * - `undefined` severities are treated as the last ones.\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    export const severityCompare = (a: Marker<Diagnostic>, b: Marker<Diagnostic>): number =>\n        (a.data.severity || Number.MAX_SAFE_INTEGER) - (b.data.severity || Number.MAX_SAFE_INTEGER);\n\n    /**\n     * Comparator for line numbers.\n     * - The lowest line number comes first.\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    export const lineNumberCompare = (a: Marker<Diagnostic>, b: Marker<Diagnostic>): number => a.data.range.start.line - b.data.range.start.line;\n\n    /**\n     * Comparator for column numbers.\n     * - The lowest column number comes first.\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    export const columnNumberCompare = (a: Marker<Diagnostic>, b: Marker<Diagnostic>): number => a.data.range.start.character - b.data.range.start.character;\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { ProblemManager } from './problem-manager';\nimport { ProblemMarker } from '../../common/problem-marker';\nimport { ProblemTreeModel } from './problem-tree-model';\nimport { MarkerInfoNode, MarkerNode, MarkerRootNode } from '../marker-tree';\nimport { TreeWidget, TreeProps, ContextMenuRenderer, TreeNode, NodeProps, TreeModel } from '@theia/core/lib/browser';\nimport { DiagnosticSeverity } from 'vscode-languageserver-types';\nimport * as React from 'react';\n\nexport const PROBLEMS_WIDGET_ID = 'problems';\n\n@injectable()\nexport class ProblemWidget extends TreeWidget {\n\n    constructor(\n        @inject(ProblemManager) protected readonly problemManager: ProblemManager,\n        @inject(TreeProps) readonly treeProps: TreeProps,\n        @inject(ProblemTreeModel) readonly model: ProblemTreeModel,\n        @inject(ContextMenuRenderer) readonly contextMenuRenderer: ContextMenuRenderer\n    ) {\n        super(treeProps, model, contextMenuRenderer);\n\n        this.id = PROBLEMS_WIDGET_ID;\n        this.title.label = 'Problems';\n        this.title.caption = 'Problems';\n        this.title.iconClass = 'fa problem-tab-icon';\n        this.title.closable = true;\n        this.addClass('theia-marker-container');\n\n        this.addClipboardListener(this.node, 'copy', e => this.handleCopy(e));\n    }\n\n    storeState(): object {\n        // no-op\n        return {};\n    }\n    protected superStoreState(): object {\n        return super.storeState();\n    }\n    restoreState(state: object): void {\n        // no-op\n    }\n    protected superRestoreState(state: object): void {\n        super.restoreState(state);\n        return;\n    }\n\n    protected handleClickEvent(node: TreeNode | undefined, event: React.MouseEvent<HTMLElement>): void {\n        super.handleClickEvent(node, event);\n        if (MarkerNode.is(node)) {\n            this.model.revealNode(node);\n        }\n    }\n\n    protected handleCopy(event: ClipboardEvent): void {\n        const uris = this.model.selectedNodes.filter(MarkerNode.is).map(node => node.uri.toString());\n        if (uris.length > 0 && event.clipboardData) {\n            event.clipboardData.setData('text/plain', uris.join('\\n'));\n            event.preventDefault();\n        }\n    }\n\n    protected handleDown(event: KeyboardEvent): void {\n        const node = this.model.getNextSelectableNode();\n        super.handleDown(event);\n        if (MarkerNode.is(node)) {\n            this.model.revealNode(node);\n        }\n    }\n\n    protected handleUp(event: KeyboardEvent): void {\n        const node = this.model.getPrevSelectableNode();\n        super.handleUp(event);\n        if (MarkerNode.is(node)) {\n            this.model.revealNode(node);\n        }\n    }\n\n    protected renderTree(model: TreeModel): React.ReactNode {\n        if (MarkerRootNode.is(model.root) && model.root.children.length > 0) {\n            return super.renderTree(model);\n        }\n        return <div className='theia-widget-noInfo noMarkers'>No problems have been detected in the workspace so far.</div>;\n    }\n\n    protected renderCaption(node: TreeNode, props: NodeProps): React.ReactNode {\n        if (MarkerInfoNode.is(node)) {\n            return this.decorateMarkerFileNode(node);\n        } else if (MarkerNode.is(node)) {\n            return this.decorateMarkerNode(node);\n        }\n        return 'caption';\n    }\n\n    protected renderTailDecorations(node: TreeNode, props: NodeProps): JSX.Element {\n        return <div className='row-button-container'>\n            {this.renderRemoveButton(node)}\n        </div>;\n    }\n\n    protected renderRemoveButton(node: TreeNode): React.ReactNode {\n        return <ProblemMarkerRemoveButton model={this.model} node={node} />;\n    }\n\n    protected decorateMarkerNode(node: MarkerNode): React.ReactNode {\n        if (ProblemMarker.is(node.marker)) {\n            let severityClass: string = '';\n            const problemMarker = node.marker;\n            if (problemMarker.data.severity) {\n                severityClass = this.getSeverityClass(problemMarker.data.severity);\n            }\n            return <div\n                className='markerNode'\n                title={`${problemMarker.data.message} (${problemMarker.data.range.start.line + 1}, ${problemMarker.data.range.start.character + 1})`}>\n                <div>\n                    <i className={severityClass}></i>\n                </div>\n                <div className='message'>{problemMarker.data.message}\n                    <span className='owner'>\n                        {(problemMarker.data.source || problemMarker.owner)}\n                        {problemMarker.data.code ? `(${problemMarker.data.code})` : ''}\n                    </span>\n                    <span className='position'>\n                        {'[' + (problemMarker.data.range.start.line + 1) + ', ' + (problemMarker.data.range.start.character + 1) + ']'}\n                    </span>\n                </div>\n            </div>;\n        }\n        return '';\n    }\n\n    protected getSeverityClass(severity: DiagnosticSeverity): string {\n        switch (severity) {\n            case 1: return 'fa fa-times-circle error';\n            case 2: return 'fa fa-exclamation-circle warning';\n            case 3: return 'fa fa-info-circle information';\n            default: return 'fa fa-hand-o-up hint';\n        }\n    }\n\n    protected decorateMarkerFileNode(node: MarkerInfoNode): React.ReactNode {\n        const icon = this.toNodeIcon(node);\n        const name = this.toNodeName(node);\n        const description = this.toNodeDescription(node);\n        // Use a custom scheme so that we fallback to the `DefaultUriLabelProviderContribution`.\n        const path = this.labelProvider.getLongName(node.uri.withScheme('marker'));\n        return <div title={path} className='markerFileNode'>\n            {icon && <div className={icon + ' file-icon'}></div>}\n            <div className='name'>{name}</div>\n            <div className='path'>{description}</div>\n            <div className='notification-count-container'>\n                <span className='notification-count'>{node.numberOfMarkers.toString()}</span>\n            </div>\n        </div>;\n    }\n\n}\n\nexport class ProblemMarkerRemoveButton extends React.Component<{ model: ProblemTreeModel, node: TreeNode }> {\n\n    render(): React.ReactNode {\n        return <span className='remove-node' onClick={this.remove}></span>;\n    }\n\n    protected readonly remove = (e: React.MouseEvent<HTMLElement>) => this.doRemove(e);\n    protected doRemove(e: React.MouseEvent<HTMLElement>): void {\n        this.props.model.removeNode(this.props.node);\n        e.stopPropagation();\n    }\n}\n","\nvar content = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../css-loader/index.js!./index.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, named } from 'inversify';\nimport { ContributionProvider } from '@theia/core/lib/common/contribution-provider';\nimport { TreeDecorator, AbstractTreeDecoratorService } from '@theia/core/lib/browser/tree/tree-decorator';\n\n/**\n * Symbol for all decorators that would like to contribute into the navigator.\n */\nexport const NavigatorTreeDecorator = Symbol('NavigatorTreeDecorator');\n\n/**\n * Decorator service for the navigator.\n */\n@injectable()\nexport class NavigatorDecoratorService extends AbstractTreeDecoratorService {\n\n    constructor(@inject(ContributionProvider) @named(NavigatorTreeDecorator) protected readonly contributions: ContributionProvider<TreeDecorator>) {\n        super(contributions.getContributions());\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './workspace-commands';\nexport * from './workspace-service';\nexport * from './workspace-frontend-contribution';\nexport * from './workspace-frontend-module';\nexport * from './workspace-preferences';\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2017 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-marker-container {\\n    font-size: var(--theia-ui-font-size1);\\n}\\n\\n.theia-side-panel .theia-marker-container .noMarkers {\\n    padding-left: 19px;\\n}\\n\\n.theia-marker-container .markerNode,\\n.theia-marker-container .markerFileNode {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.theia-marker-container .markerNode,\\n.theia-marker-container .markerFileNode {\\n    width: calc(100% - 32px);\\n}\\n\\n.theia-marker-container .markerNode div,\\n.theia-marker-container .markerFileNode div {\\n    margin-right: 5px;\\n}\\n\\n.theia-marker-container .markerFileNode .name,\\n.theia-marker-container .markerFileNode .path {\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n}\\n\\n.theia-marker-container .markerFileNode .path {\\n    font-size: var(--theia-ui-font-size0);\\n    color: var(--theia-descriptionForeground);\\n    align-self: flex-end;\\n    white-space: nowrap;\\n}\\n\\n.theia-marker-container .error {\\n    color: var(--theia-editorError-foreground);\\n}\\n\\n.theia-marker-container .warning {\\n    color: var(--theia-editorWarning-foreground);\\n}\\n\\n.theia-marker-container .information {\\n    color: var(--theia-editorInfo-foreground);\\n}\\n\\n.theia-marker-container .hint {\\n    color: var(--theia-successBackground);\\n}\\n\\n.theia-marker-container .markerNode .position,\\n.theia-marker-container .markerNode .owner {\\n    color: var(--theia-descriptionForeground);\\n    white-space: nowrap;\\n    margin-left: 5px;\\n}\\n\\n.theia-marker-container .markerNode .message {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n}\\n\\n.problem-tab-icon::before {\\n    content: \\\"\\\\F06A\\\"\\n}\\n\\n.theia-marker-container .row-button-container {\\n    display: none;\\n}\\n\\n.theia-marker-container .theia-TreeNodeContent:hover .row-button-container {\\n    display: flex;\\n    justify-content: flex-end;\\n    flex: 1;\\n    align-items: center;\\n    align-self: center;\\n}\\n\\n.theia-marker-container .row-button-container .remove-node {\\n    background-image: var(--theia-icon-close);\\n    width: 15px;\\n    height: 15px;\\n}\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}
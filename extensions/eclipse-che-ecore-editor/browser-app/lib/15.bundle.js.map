{"version":3,"sources":["webpack:///../node_modules/@theia/monaco/lib/browser/monaco-editor-model.js","webpack:///../node_modules/@theia/monaco/lib/browser/monaco-editor.js","webpack:///../node_modules/@theia/monaco/src/browser/monaco-text-model-service.ts"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA,8CAA8C,cAAc;AAC5D,uCAAuC,mBAAO,CAAC,kGAAgC;AAC/E;AACA,mBAAmB,mBAAO,CAAC,+FAAmC;AAC9D,cAAc,mBAAO,CAAC,qFAA8B;AACpD,qBAAqB,mBAAO,CAAC,mGAAqC;AAClE,iBAAiB,mBAAO,CAAC,2FAAiC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,2BAA2B,EAAE;AACrG,wEAAwE,2BAA2B,EAAE;AACrG;AACA,yEAAyE,wCAAwC,EAAE,gBAAgB,0EAA0E,EAAE;AAC/M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,oCAAoC,EAAE;AACjF,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,0CAA0C,EAAE;AAC5H;AACA,mFAAmF,qBAAqaAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sGAAsG;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB,EAAE,EAAE;AACzB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,4BAA4B,EAAE;AAC1F,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,iCAAiC;AAC/F;AACA;AACA,yBAAyB;AACzB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,+BAA+B;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2BAA2B;AAC1D,qCAAqC,uDAAuD,EAAE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,uDAAuD,EAAE;AAC3H,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,wCAAwC,kDAAkD;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,+CAA+C,6EAA6E,EAAE;AACpN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB,EAAE,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,+C;;;;;;;;;;;;ACjpBa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,6DAAW;AACrC,8BAA8B,mBAAO,CAAC,iFAAuB;AAC7D,iBAAiB,mBAAO,CAAC,2EAAoB;AAC7C,4BAA4B,mBAAO,CAAC,mHAA6C;AACjF,eAAe,mBAAO,CAAC,+EAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sDAAsD,EAAE;AAC3F;AACA;AACA;AACA;AACA,mCAAmC,sDAAsD,EAAE;AAC3F;AACA;AACA;AACA,wEAAwE,YAAY,aAAa,gBAAgB;AACjH;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,6EAA6E,wBAAwB,EAAE;AACvG,qEAAqE,wBAAwB,EAAE;AAC/F;AACA;AACA,wDAAwD,mGAAmG;AAC3J,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mCAAmC,aAAa,oQAAoQ;AACpT;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oEAAoE,iCAAiC,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,iCAAiC,YAAY,sBAAsB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAY,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,oBAAoB,eAAe,6CAA6C,GAAG,EAAE;AACrJ;AACA;AACA;AACA,0CAA0C,8BAA8B,2BAA2B,EAAE;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,mEAAmE,UAAU;AAC7E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,6CAA6C,eAAe,EAAE,uBAAuB,YAAY,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,uCAAuC,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC,mEAAmE;AACpE;AACA,yC;;;;;;;;;;;;;ACtnBA;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,qGAA+C;AAC/C,qIAA6F;AAC7F,mHAA6C;AAC7C,uGAA2E;AAC3E,2HAAsF;AACtF,iJAA0D;AAG1D;IADA;QAAA,iBA+FC;QA5FsB,YAAO,GAAG,IAAI,0BAAmB,CAChD,aAAG,IAAI,YAAI,CAAC,SAAS,CAAC,IAAI,aAAG,CAAC,GAAG,CAAC,CAAC,EAA5B,CAA4B,CACtC,CAAC;QAyCiB,iBAAY,GAAkF;YAC7G,gBAAgB,EAAE,SAAS;YAC3B,qBAAqB,EAAE,cAAc;SACxC,CAAC;IA8CN,CAAC;IA5EG,sBAAI,0CAAM;aAAV;YACI,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QACjC,CAAC;;;OAAA;IAED,oCAAG,GAAH,UAAI,GAAW;QACX,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,sBAAI,+CAAW;aAAf;YACI,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QACpC,CAAC;;;OAAA;IAED,qDAAoB,GAApB,UAAqB,GAAqB;QACtC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;IAChD,CAAC;IAEe,0CAAS,GAAzB,UAA0B,GAAQ;;;;;;4BAC9B,qBAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK;;wBAAlC,SAAkC,CAAC;wBAClB,qBAAM,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC;;wBAA3C,QAAQ,GAAG,SAAgC;wBACnC,qBAAM,CAAC,IAAI,uCAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;;wBAAtI,KAAK,GAAG,SAA8H;wBAC5I,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;wBACxB,KAAK,CAAC,eAAe,CAAC,mBAAmB,CAAC,cAAM,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAAC;wBACnE,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,gBAAM,IAAI,YAAI,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,EAA/B,CAA+B,CAAC,CAAC;wBACzG,KAAK,CAAC,SAAS,CAAC,cAAM,iBAAU,CAAC,OAAO,EAAE,EAApB,CAAoB,CAAC,CAAC;wBAC5C,sBAAO,KAAK,EAAC;;;;KAChB;IAOS,4CAAW,GAArB,UAAsB,KAAwB,EAAE,MAA+B;QAC3E,IAAI,MAAM,EAAE;YACR,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,UAAU,CAAC,EAAE;gBAC9C,OAAO;aACV;YACD,IAAI,MAAM,CAAC,cAAc,KAAK,iBAAiB,EAAE;gBAC7C,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,iBAAiB,EAAE,SAAS,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;aACxF;YACD,IAAI,MAAM,CAAC,cAAc,KAAK,sBAAsB,EAAE;gBAClD,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,sBAAsB,EAAE,SAAS,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;aAClG;YACD,IAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YAC7D,IAAI,WAAW,EAAE;gBACb,IAAM,OAAO,GAA0C,EAAE,CAAC;gBAC1D,8DAA8D;gBAC9D,OAAO,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC,QAAe,CAAC;gBAC9C,KAAK,CAAC,eAAe,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;aAChD;SACJ;aAAM;YACH,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,iBAAiB,EAAE,SAAS,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;YACrF,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,sBAAsB,EAAE,SAAS,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;YAC/F,KAAK,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;SACpE;IACL,CAAC;IAKS,gDAAe,GAAzB,UAA0B,GAA+B;QACrD,IAAM,GAAG,GAAG,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;QACpD,IAAM,kBAAkB,GAAG,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC;QAChF,OAAO;YACH,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE,cAAc,EAAE,gBAAgB,EAAE,kBAAkB,sBAAE,EAAE,SAAS,EAAE,GAAG,CAAC;YAC7G,YAAY,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE,cAAc,EAAE,qBAAqB,EAAE,kBAAkB,sBAAE,EAAE,SAAS,EAAE,GAAG,CAAC;SAC1H,CAAC;IACN,CAAC;IAED,iEAAgC,GAAhC,UAAiC,MAAc,EAAE,QAAiD;QAC9F,OAAO;YACH,OAAO,EAAP;gBACI,QAAQ;YACZ,CAAC;SACJ,CAAC;IACN,CAAC;IAtFD;QADC,kBAAM,CAAC,uBAAgB,CAAC;;oEAC6B;IAGtD;QADC,kBAAM,CAAC,2BAAiB,CAAC;;qEAC8B;IAGxD;QADC,kBAAM,CAAC,iDAAyB,CAAC;kCACV,iDAAyB;uDAAC;IAGlD;QADC,kBAAM,CAAC,iDAAyB,CAAC;kCACV,iDAAyB;uDAAC;IAhBzC,sBAAsB;QADlC,sBAAU,EAAE;OACA,sBAAsB,CA8FlC;IAAD,6BAAC;CAAA;AA9FY,wDAAsB","file":"15.bundle.js","sourcesContent":["\"use strict\";\n/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nexports.TextDocumentSaveReason = vscode_languageserver_protocol_1.TextDocumentSaveReason;\nvar disposable_1 = require(\"@theia/core/lib/common/disposable\");\nvar event_1 = require(\"@theia/core/lib/common/event\");\nvar cancellation_1 = require(\"@theia/core/lib/common/cancellation\");\nvar resource_1 = require(\"@theia/core/lib/common/resource\");\nvar MonacoEditorModel = /** @class */ (function () {\n    function MonacoEditorModel(resource, m2p, p2m, options) {\n        var _this = this;\n        this.resource = resource;\n        this.m2p = m2p;\n        this.p2m = p2m;\n        this.autoSave = 'on';\n        this.autoSaveDelay = 500;\n        /* @deprecated there is no general save timeout, each participant should introduce a sensible timeout  */\n        this.onWillSaveLoopTimeOut = 1500;\n        this.toDispose = new disposable_1.DisposableCollection();\n        this.toDisposeOnAutoSave = new disposable_1.DisposableCollection();\n        this.onDidChangeContentEmitter = new event_1.Emitter();\n        this.onDidChangeContent = this.onDidChangeContentEmitter.event;\n        this.onDidSaveModelEmitter = new event_1.Emitter();\n        this.onDidSaveModel = this.onDidSaveModelEmitter.event;\n        this.onWillSaveModelEmitter = new event_1.Emitter();\n        this.onWillSaveModel = this.onWillSaveModelEmitter.event;\n        this.onDidChangeValidEmitter = new event_1.Emitter();\n        this.onDidChangeValid = this.onDidChangeValidEmitter.event;\n        this.preferredEncoding = undefined;\n        /**\n         * Use `valid` to access it.\n         * Use `setValid` to mutate it.\n         */\n        this._valid = false;\n        this._dirty = false;\n        this.onDirtyChangedEmitter = new event_1.Emitter();\n        this.pendingOperation = Promise.resolve();\n        this.syncCancellationTokenSource = new cancellation_1.CancellationTokenSource();\n        this.ignoreDirtyEdits = false;\n        this.saveCancellationTokenSource = new cancellation_1.CancellationTokenSource();\n        this.ignoreContentChanges = false;\n        this.contentChanges = [];\n        this.toDispose.push(resource);\n        this.toDispose.push(this.toDisposeOnAutoSave);\n        this.toDispose.push(this.onDidChangeContentEmitter);\n        this.toDispose.push(this.onDidSaveModelEmitter);\n        this.toDispose.push(this.onWillSaveModelEmitter);\n        this.toDispose.push(this.onDirtyChangedEmitter);\n        this.toDispose.push(this.onDidChangeValidEmitter);\n        this.toDispose.push(disposable_1.Disposable.create(function () { return _this.cancelSave(); }));\n        this.toDispose.push(disposable_1.Disposable.create(function () { return _this.cancelSync(); }));\n        this.defaultEncoding = options && options.encoding ? options.encoding : undefined;\n        this.resolveModel = this.readContents().then(function (content) { return _this.initialize(content || ''); }, function (e) { return console.error(\"Failed to initialize for '\" + _this.uri + \"':\", e); });\n    }\n    MonacoEditorModel.prototype.dispose = function () {\n        this.toDispose.dispose();\n    };\n    MonacoEditorModel.prototype.reopenWithEncoding = function (encoding) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (encoding === this.preferredEncoding || (!this.preferredEncoding && encoding === this.defaultEncoding)) {\n                    return [2 /*return*/];\n                }\n                if (this.dirty) {\n                    return [2 /*return*/];\n                }\n                this.preferredEncoding = encoding;\n                return [2 /*return*/, this.sync()];\n            });\n        });\n    };\n    MonacoEditorModel.prototype.saveWithEncoding = function (encoding) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.scheduleSave(vscode_languageserver_protocol_1.TextDocumentSaveReason.Manual, this.cancelSave(), encoding)\n                        .then(function () { _this.preferredEncoding = encoding; })];\n            });\n        });\n    };\n    MonacoEditorModel.prototype.getEncoding = function () {\n        return this.preferredEncoding || this.defaultEncoding;\n    };\n    /**\n     * #### Important\n     * Only this method can create an instance of `monaco.editor.IModel`,\n     * there should not be other calls to `monaco.editor.createModel`.\n     */\n    MonacoEditorModel.prototype.initialize = function (content) {\n        var _this = this;\n        if (!this.toDispose.disposed) {\n            this.model = monaco.editor.createModel(content, undefined, monaco.Uri.parse(this.resource.uri.toString()));\n            this.resourceVersion = this.resource.version;\n            this.updateSavedVersionId();\n            this.toDispose.push(this.model);\n            this.toDispose.push(this.model.onDidChangeContent(function (event) { return _this.fireDidChangeContent(event); }));\n            if (this.resource.onDidChangeContents) {\n                this.toDispose.push(this.resource.onDidChangeContents(function () { return _this.sync(); }));\n            }\n        }\n    };\n    Object.defineProperty(MonacoEditorModel.prototype, \"valid\", {\n        /**\n         * Whether it is possible to load content from the underlying resource.\n         */\n        get: function () {\n            return this._valid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MonacoEditorModel.prototype.setValid = function (valid) {\n        if (valid === this._valid) {\n            return;\n        }\n        this._valid = valid;\n        this.onDidChangeValidEmitter.fire(undefined);\n    };\n    Object.defineProperty(MonacoEditorModel.prototype, \"dirty\", {\n        get: function () {\n            return this._dirty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MonacoEditorModel.prototype.setDirty = function (dirty) {\n        if (dirty === this._dirty) {\n            return;\n        }\n        this._dirty = dirty;\n        if (dirty === false) {\n            this.updateSavedVersionId();\n        }\n        this.onDirtyChangedEmitter.fire(undefined);\n    };\n    MonacoEditorModel.prototype.updateSavedVersionId = function () {\n        this.bufferSavedVersionId = this.model.getAlternativeVersionId();\n    };\n    Object.defineProperty(MonacoEditorModel.prototype, \"onDirtyChanged\", {\n        get: function () {\n            return this.onDirtyChangedEmitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditorModel.prototype, \"uri\", {\n        get: function () {\n            return this.model.uri.toString();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditorModel.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId !== undefined ? this._languageId : this.model.getModeId();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * It's a hack to dispatch close notification with an old language id, don't use it.\n     */\n    MonacoEditorModel.prototype.setLanguageId = function (languageId) {\n        this._languageId = languageId;\n    };\n    Object.defineProperty(MonacoEditorModel.prototype, \"version\", {\n        get: function () {\n            return this.model.getVersionId();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return selected text by Range or all text by default\n     */\n    MonacoEditorModel.prototype.getText = function (range) {\n        if (!range) {\n            return this.model.getValue();\n        }\n        else {\n            return this.model.getValueInRange(this.p2m.asRange(range));\n        }\n    };\n    MonacoEditorModel.prototype.positionAt = function (offset) {\n        var _a = this.model.getPositionAt(offset), lineNumber = _a.lineNumber, column = _a.column;\n        return this.m2p.asPosition(lineNumber, column);\n    };\n    MonacoEditorModel.prototype.offsetAt = function (position) {\n        return this.model.getOffsetAt(this.p2m.asPosition(position));\n    };\n    Object.defineProperty(MonacoEditorModel.prototype, \"lineCount\", {\n        get: function () {\n            return this.model.getLineCount();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves a line in a text document expressed as a one-based position.\n     */\n    MonacoEditorModel.prototype.getLineContent = function (lineNumber) {\n        return this.model.getLineContent(lineNumber);\n    };\n    MonacoEditorModel.prototype.getLineMaxColumn = function (lineNumber) {\n        return this.model.getLineMaxColumn(lineNumber);\n    };\n    Object.defineProperty(MonacoEditorModel.prototype, \"readOnly\", {\n        get: function () {\n            return this.resource.saveContents === undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditorModel.prototype, \"onDispose\", {\n        get: function () {\n            return this.toDispose.onDispose;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditorModel.prototype, \"textEditorModel\", {\n        get: function () {\n            return this.model;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MonacoEditorModel.prototype.load = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.resolveModel];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    MonacoEditorModel.prototype.save = function () {\n        return this.scheduleSave(vscode_languageserver_protocol_1.TextDocumentSaveReason.Manual);\n    };\n    MonacoEditorModel.prototype.run = function (operation) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (this.toDispose.disposed) {\n                    return [2 /*return*/];\n                }\n                return [2 /*return*/, this.pendingOperation = this.pendingOperation.then(function () { return __awaiter(_this, void 0, void 0, function () {\n                        var e_1;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    _a.trys.push([0, 2, , 3]);\n                                    return [4 /*yield*/, operation()];\n                                case 1:\n                                    _a.sent();\n                                    return [3 /*break*/, 3];\n                                case 2:\n                                    e_1 = _a.sent();\n                                    console.error(e_1);\n                                    return [3 /*break*/, 3];\n                                case 3: return [2 /*return*/];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    MonacoEditorModel.prototype.cancelSync = function () {\n        this.syncCancellationTokenSource.cancel();\n        this.syncCancellationTokenSource = new cancellation_1.CancellationTokenSource();\n        return this.syncCancellationTokenSource.token;\n    };\n    MonacoEditorModel.prototype.sync = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var token;\n            var _this = this;\n            return __generator(this, function (_a) {\n                token = this.cancelSync();\n                return [2 /*return*/, this.run(function () { return _this.doSync(token); })];\n            });\n        });\n    };\n    MonacoEditorModel.prototype.doSync = function (token) {\n        return __awaiter(this, void 0, void 0, function () {\n            var newText, value, range;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (token.isCancellationRequested) {\n                            return [2 /*return*/];\n                        }\n                        return [4 /*yield*/, this.readContents()];\n                    case 1:\n                        newText = _a.sent();\n                        if (newText === undefined || token.isCancellationRequested || this._dirty) {\n                            return [2 /*return*/];\n                        }\n                        this.resourceVersion = this.resource.version;\n                        value = this.model.getValue();\n                        if (value === newText) {\n                            return [2 /*return*/];\n                        }\n                        range = this.m2p.asRange(this.model.getFullModelRange());\n                        this.applyEdits([this.p2m.asTextEdit({ range: range, newText: newText })], {\n                            ignoreDirty: true,\n                            ignoreContentChanges: true\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MonacoEditorModel.prototype.readContents = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var content, e_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.resource.readContents({ encoding: this.getEncoding() })];\n                    case 1:\n                        content = _a.sent();\n                        this.setValid(true);\n                        return [2 /*return*/, content];\n                    case 2:\n                        e_2 = _a.sent();\n                        this.setValid(false);\n                        if (resource_1.ResourceError.NotFound.is(e_2)) {\n                            return [2 /*return*/, undefined];\n                        }\n                        throw e_2;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MonacoEditorModel.prototype.markAsDirty = function () {\n        if (this.ignoreDirtyEdits) {\n            return;\n        }\n        this.cancelSync();\n        this.setDirty(true);\n        this.doAutoSave();\n    };\n    MonacoEditorModel.prototype.doAutoSave = function () {\n        var _this = this;\n        if (this.autoSave === 'on') {\n            var token_1 = this.cancelSave();\n            this.toDisposeOnAutoSave.dispose();\n            var handle_1 = window.setTimeout(function () {\n                _this.scheduleSave(vscode_languageserver_protocol_1.TextDocumentSaveReason.AfterDelay, token_1);\n            }, this.autoSaveDelay);\n            this.toDisposeOnAutoSave.push(disposable_1.Disposable.create(function () {\n                return window.clearTimeout(handle_1);\n            }));\n        }\n    };\n    MonacoEditorModel.prototype.cancelSave = function () {\n        this.saveCancellationTokenSource.cancel();\n        this.saveCancellationTokenSource = new cancellation_1.CancellationTokenSource();\n        return this.saveCancellationTokenSource.token;\n    };\n    MonacoEditorModel.prototype.scheduleSave = function (reason, token, overwriteEncoding) {\n        var _this = this;\n        if (token === void 0) { token = this.cancelSave(); }\n        return this.run(function () { return _this.doSave(reason, token, overwriteEncoding); });\n    };\n    MonacoEditorModel.prototype.pushContentChanges = function (contentChanges) {\n        var _a;\n        if (!this.ignoreContentChanges) {\n            (_a = this.contentChanges).push.apply(_a, __spread(contentChanges));\n        }\n    };\n    MonacoEditorModel.prototype.fireDidChangeContent = function (event) {\n        if (this.model.getAlternativeVersionId() === this.bufferSavedVersionId) {\n            this.setDirty(false);\n        }\n        else {\n            this.markAsDirty();\n        }\n        var changeContentEvent = this.asContentChangedEvent(event);\n        this.onDidChangeContentEmitter.fire(changeContentEvent);\n        this.pushContentChanges(changeContentEvent.contentChanges);\n    };\n    MonacoEditorModel.prototype.asContentChangedEvent = function (event) {\n        var _this = this;\n        var contentChanges = event.changes.map(function (change) { return _this.asTextDocumentContentChangeEvent(change); });\n        return { model: this, contentChanges: contentChanges };\n    };\n    MonacoEditorModel.prototype.asTextDocumentContentChangeEvent = function (change) {\n        var range = this.m2p.asRange(change.range);\n        var rangeLength = change.rangeLength;\n        var text = change.text;\n        return { range: range, rangeLength: rangeLength, text: text };\n    };\n    MonacoEditorModel.prototype.applyEdits = function (operations, options) {\n        var resolvedOptions = __assign({ ignoreDirty: false, ignoreContentChanges: false }, options);\n        var _a = this, ignoreDirtyEdits = _a.ignoreDirtyEdits, ignoreContentChanges = _a.ignoreContentChanges;\n        this.ignoreDirtyEdits = resolvedOptions.ignoreDirty;\n        this.ignoreContentChanges = resolvedOptions.ignoreContentChanges;\n        try {\n            return this.model.applyEdits(operations);\n        }\n        finally {\n            this.ignoreDirtyEdits = ignoreDirtyEdits;\n            this.ignoreContentChanges = ignoreContentChanges;\n        }\n    };\n    MonacoEditorModel.prototype.doSave = function (reason, token, overwriteEncoding) {\n        return __awaiter(this, void 0, void 0, function () {\n            var changes, content, encoding, version, e_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (token.isCancellationRequested || !this.resource.saveContents) {\n                            return [2 /*return*/];\n                        }\n                        return [4 /*yield*/, this.fireWillSaveModel(reason, token)];\n                    case 1:\n                        _a.sent();\n                        if (token.isCancellationRequested) {\n                            return [2 /*return*/];\n                        }\n                        changes = __spread(this.contentChanges);\n                        if (changes.length === 0 && overwriteEncoding === undefined) {\n                            return [2 /*return*/];\n                        }\n                        content = this.model.getValue();\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        encoding = this.getEncoding();\n                        version = this.resourceVersion;\n                        return [4 /*yield*/, resource_1.Resource.save(this.resource, { changes: changes, content: content, options: { encoding: encoding, overwriteEncoding: overwriteEncoding, version: version } }, token)];\n                    case 3:\n                        _a.sent();\n                        this.contentChanges.splice(0, changes.length);\n                        this.resourceVersion = this.resource.version;\n                        this.setValid(true);\n                        if (token.isCancellationRequested) {\n                            return [2 /*return*/];\n                        }\n                        this.setDirty(false);\n                        this.fireDidSaveModel();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        e_3 = _a.sent();\n                        if (!resource_1.ResourceError.OutOfSync.is(e_3)) {\n                            throw e_3;\n                        }\n                        return [3 /*break*/, 5];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MonacoEditorModel.prototype.fireWillSaveModel = function (reason, token) {\n        return __awaiter(this, void 0, void 0, function () {\n            var firing, e_4;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        firing = this.onWillSaveModelEmitter.sequence(function (listener) { return __awaiter(_this, void 0, void 0, function () {\n                            var waitables, version, event, edits;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        if (token.isCancellationRequested) {\n                                            return [2 /*return*/, false];\n                                        }\n                                        waitables = [];\n                                        version = this.version;\n                                        event = {\n                                            model: this, reason: reason,\n                                            waitUntil: function (thenable) {\n                                                if (Object.isFrozen(waitables)) {\n                                                    throw new Error('waitUntil cannot be called asynchronously.');\n                                                }\n                                                waitables.push(thenable);\n                                            }\n                                        };\n                                        // Fire.\n                                        try {\n                                            listener(event);\n                                        }\n                                        catch (err) {\n                                            console.error(err);\n                                            return [2 /*return*/, true];\n                                        }\n                                        // Asynchronous calls to `waitUntil` should fail.\n                                        Object.freeze(waitables);\n                                        return [4 /*yield*/, Promise.all(waitables).then(function (allOperations) {\n                                                var _a;\n                                                return (_a = []).concat.apply(_a, __spread(allOperations));\n                                            })];\n                                    case 1:\n                                        edits = _a.sent();\n                                        if (token.isCancellationRequested) {\n                                            return [2 /*return*/, false];\n                                        }\n                                        // In a perfect world, we should only apply edits if document is clean.\n                                        if (version !== this.version) {\n                                            console.error('onWillSave listeners should provide edits, not directly alter the document.');\n                                        }\n                                        // Finally apply edits provided by this listener before firing the next.\n                                        if (edits && edits.length > 0) {\n                                            this.applyEdits(edits, {\n                                                ignoreDirty: true,\n                                            });\n                                        }\n                                        return [2 /*return*/, true];\n                                }\n                            });\n                        }); });\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, firing];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_4 = _a.sent();\n                        console.error(e_4);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MonacoEditorModel.prototype.fireDidSaveModel = function () {\n        this.onDidSaveModelEmitter.fire(this.model);\n    };\n    MonacoEditorModel.prototype.revert = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var soft, dirty;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.cancelSave();\n                        soft = options && options.soft;\n                        if (!(soft !== true)) return [3 /*break*/, 4];\n                        dirty = this._dirty;\n                        this._dirty = false;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, , 3, 4]);\n                        return [4 /*yield*/, this.sync()];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        this._dirty = dirty;\n                        return [7 /*endfinally*/];\n                    case 4:\n                        this.setDirty(false);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MonacoEditorModel.prototype.createSnapshot = function () {\n        return {\n            value: this.getText()\n        };\n    };\n    MonacoEditorModel.prototype.applySnapshot = function (snapshot) {\n        this.model.setValue(snapshot.value);\n    };\n    return MonacoEditorModel;\n}());\nexports.MonacoEditorModel = MonacoEditorModel;\n//# sourceMappingURL=monaco-editor-model.js.map","\"use strict\";\n/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar inversify_1 = require(\"inversify\");\nvar monaco_languageclient_1 = require(\"monaco-languageclient\");\nvar domutils_1 = require(\"@phosphor/domutils\");\nvar context_key_service_1 = require(\"@theia/core/lib/browser/context-key-service\");\nvar common_1 = require(\"@theia/core/lib/common\");\nvar MonacoEditorServices = /** @class */ (function () {\n    function MonacoEditorServices(services) {\n        Object.assign(this, services);\n    }\n    __decorate([\n        inversify_1.inject(monaco_languageclient_1.MonacoToProtocolConverter),\n        __metadata(\"design:type\", monaco_languageclient_1.MonacoToProtocolConverter)\n    ], MonacoEditorServices.prototype, \"m2p\", void 0);\n    __decorate([\n        inversify_1.inject(monaco_languageclient_1.ProtocolToMonacoConverter),\n        __metadata(\"design:type\", monaco_languageclient_1.ProtocolToMonacoConverter)\n    ], MonacoEditorServices.prototype, \"p2m\", void 0);\n    __decorate([\n        inversify_1.inject(context_key_service_1.ContextKeyService),\n        __metadata(\"design:type\", context_key_service_1.ContextKeyService)\n    ], MonacoEditorServices.prototype, \"contextKeyService\", void 0);\n    MonacoEditorServices = __decorate([\n        inversify_1.injectable(),\n        __param(0, inversify_1.unmanaged()),\n        __metadata(\"design:paramtypes\", [MonacoEditorServices])\n    ], MonacoEditorServices);\n    return MonacoEditorServices;\n}());\nexports.MonacoEditorServices = MonacoEditorServices;\nvar MonacoEditor = /** @class */ (function (_super) {\n    __extends(MonacoEditor, _super);\n    function MonacoEditor(uri, document, node, services, options, override) {\n        var _this = _super.call(this, services) || this;\n        _this.uri = uri;\n        _this.document = document;\n        _this.node = node;\n        _this.toDispose = new common_1.DisposableCollection();\n        _this.onCursorPositionChangedEmitter = new common_1.Emitter();\n        _this.onSelectionChangedEmitter = new common_1.Emitter();\n        _this.onFocusChangedEmitter = new common_1.Emitter();\n        _this.onDocumentContentChangedEmitter = new common_1.Emitter();\n        _this.onMouseDownEmitter = new common_1.Emitter();\n        _this.onLanguageChangedEmitter = new common_1.Emitter();\n        _this.onLanguageChanged = _this.onLanguageChangedEmitter.event;\n        _this.onScrollChangedEmitter = new common_1.Emitter();\n        _this.onEncodingChangedEmitter = new common_1.Emitter();\n        _this.onEncodingChanged = _this.onEncodingChangedEmitter.event;\n        _this.documents = new Set();\n        /* `true` because it is derived from an URI during the instantiation */\n        _this._languageAutoDetected = true;\n        _this.toDispose.pushAll([\n            _this.onCursorPositionChangedEmitter,\n            _this.onSelectionChangedEmitter,\n            _this.onFocusChangedEmitter,\n            _this.onDocumentContentChangedEmitter,\n            _this.onMouseDownEmitter,\n            _this.onLanguageChangedEmitter,\n            _this.onScrollChangedEmitter,\n            _this.onEncodingChangedEmitter\n        ]);\n        _this.documents.add(document);\n        _this.autoSizing = options && options.autoSizing !== undefined ? options.autoSizing : false;\n        _this.minHeight = options && options.minHeight !== undefined ? options.minHeight : -1;\n        _this.maxHeight = options && options.maxHeight !== undefined ? options.maxHeight : -1;\n        _this.toDispose.push(_this.create(options, override));\n        _this.addHandlers(_this.editor);\n        return _this;\n    }\n    MonacoEditor.prototype.getEncoding = function () {\n        return this.document.getEncoding() || 'utf8';\n    };\n    MonacoEditor.prototype.setEncoding = function (encoding, mode) {\n        var _this = this;\n        if (mode === 1 /* Decode */) {\n            // reopen file with encoding\n            this.document.reopenWithEncoding(encoding)\n                .then(function () { return _this.onEncodingChangedEmitter.fire(encoding); });\n        }\n        else {\n            // encode and save file\n            this.document.saveWithEncoding(encoding)\n                .then(function () { return _this.onEncodingChangedEmitter.fire(encoding); });\n        }\n    };\n    MonacoEditor.prototype.create = function (options, override) {\n        return this.editor = monaco.editor.create(this.node, __assign({}, options, { lightbulb: { enabled: true }, fixedOverflowWidgets: true, scrollbar: {\n                useShadows: false,\n                verticalHasArrows: false,\n                horizontalHasArrows: false,\n                verticalScrollbarSize: 10,\n                horizontalScrollbarSize: 10\n            } }), override);\n    };\n    MonacoEditor.prototype.addHandlers = function (codeEditor) {\n        var _this = this;\n        this.toDispose.push(codeEditor.onDidChangeModelLanguage(function (e) {\n            return _this.fireLanguageChanged(e.newLanguage);\n        }));\n        this.toDispose.push(codeEditor.onDidChangeConfiguration(function () { return _this.refresh(); }));\n        this.toDispose.push(codeEditor.onDidChangeModel(function () { return _this.refresh(); }));\n        this.toDispose.push(codeEditor.onDidChangeModelContent(function (e) {\n            _this.refresh();\n            _this.onDocumentContentChangedEmitter.fire({ document: _this.document, contentChanges: e.changes.map(_this.mapModelContentChange.bind(_this)) });\n        }));\n        this.toDispose.push(codeEditor.onDidChangeCursorPosition(function () {\n            return _this.onCursorPositionChangedEmitter.fire(_this.cursor);\n        }));\n        this.toDispose.push(codeEditor.onDidChangeCursorSelection(function () {\n            return _this.onSelectionChangedEmitter.fire(_this.selection);\n        }));\n        this.toDispose.push(codeEditor.onDidFocusEditorText(function () {\n            return _this.onFocusChangedEmitter.fire(_this.isFocused());\n        }));\n        this.toDispose.push(codeEditor.onDidBlurEditorText(function () {\n            return _this.onFocusChangedEmitter.fire(_this.isFocused());\n        }));\n        this.toDispose.push(codeEditor.onMouseDown(function (e) {\n            var _a = e.target, element = _a.element, position = _a.position, range = _a.range;\n            _this.onMouseDownEmitter.fire({\n                target: __assign({}, e.target, { element: element || undefined, mouseColumn: _this.m2p.asPosition(undefined, e.target.mouseColumn).character, range: range && _this.m2p.asRange(range) || undefined, position: position && _this.m2p.asPosition(position.lineNumber, position.column) || undefined }),\n                event: e.event.browserEvent\n            });\n        }));\n        this.toDispose.push(codeEditor.onDidScrollChange(function (e) {\n            _this.onScrollChangedEmitter.fire(undefined);\n        }));\n    };\n    MonacoEditor.prototype.getVisibleRanges = function () {\n        var _this = this;\n        return this.editor.getVisibleRanges().map(function (range) { return _this.m2p.asRange(range); });\n    };\n    MonacoEditor.prototype.mapModelContentChange = function (change) {\n        return {\n            range: this.m2p.asRange(change.range),\n            rangeLength: change.rangeLength,\n            text: change.text\n        };\n    };\n    Object.defineProperty(MonacoEditor.prototype, \"onDispose\", {\n        get: function () {\n            return this.toDispose.onDispose;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditor.prototype, \"onDocumentContentChanged\", {\n        get: function () {\n            return this.onDocumentContentChangedEmitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditor.prototype, \"cursor\", {\n        get: function () {\n            var _a = this.editor.getPosition(), lineNumber = _a.lineNumber, column = _a.column;\n            return this.m2p.asPosition(lineNumber, column);\n        },\n        set: function (cursor) {\n            var position = this.p2m.asPosition(cursor);\n            this.editor.setPosition(position);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditor.prototype, \"onCursorPositionChanged\", {\n        get: function () {\n            return this.onCursorPositionChangedEmitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditor.prototype, \"selection\", {\n        get: function () {\n            return this.m2p.asRange(this.editor.getSelection());\n        },\n        set: function (selection) {\n            var range = this.p2m.asRange(selection);\n            this.editor.setSelection(range);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditor.prototype, \"onSelectionChanged\", {\n        get: function () {\n            return this.onSelectionChangedEmitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditor.prototype, \"onScrollChanged\", {\n        get: function () {\n            return this.onScrollChangedEmitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MonacoEditor.prototype.revealPosition = function (raw, options) {\n        if (options === void 0) { options = { vertical: 'center' }; }\n        var position = this.p2m.asPosition(raw);\n        switch (options.vertical) {\n            case 'auto':\n                this.editor.revealPosition(position);\n                break;\n            case 'center':\n                this.editor.revealPositionInCenter(position);\n                break;\n            case 'centerIfOutsideViewport':\n                this.editor.revealPositionInCenterIfOutsideViewport(position);\n                break;\n        }\n    };\n    MonacoEditor.prototype.revealRange = function (raw, options) {\n        if (options === void 0) { options = { at: 'center' }; }\n        var range = this.p2m.asRange(raw);\n        switch (options.at) {\n            case 'top':\n                this.editor.revealRangeAtTop(range);\n                break;\n            case 'center':\n                this.editor.revealRangeInCenter(range);\n                break;\n            case 'centerIfOutsideViewport':\n                this.editor.revealRangeInCenterIfOutsideViewport(range);\n                break;\n            case 'auto':\n                this.editor.revealRange(range);\n                break;\n        }\n    };\n    MonacoEditor.prototype.focus = function () {\n        this.editor.focus();\n    };\n    MonacoEditor.prototype.blur = function () {\n        var node = this.editor.getDomNode();\n        if (node) {\n            var textarea = node.querySelector('textarea');\n            textarea.blur();\n        }\n    };\n    MonacoEditor.prototype.isFocused = function (_a) {\n        var strict = (_a === void 0 ? { strict: false } : _a).strict;\n        if (!this.editor.hasTextFocus()) {\n            return false;\n        }\n        if (strict) {\n            return !this.isSuggestWidgetVisible() && !this.isFindWidgetVisible() && !this.isRenameInputVisible();\n        }\n        return true;\n    };\n    Object.defineProperty(MonacoEditor.prototype, \"onFocusChanged\", {\n        get: function () {\n            return this.onFocusChangedEmitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditor.prototype, \"onMouseDown\", {\n        get: function () {\n            return this.onMouseDownEmitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `true` if the suggest widget is visible in the editor. Otherwise, `false`.\n     */\n    MonacoEditor.prototype.isSuggestWidgetVisible = function () {\n        return this.contextKeyService.match('suggestWidgetVisible', this.editor.getDomNode() || this.node);\n    };\n    /**\n     * `true` if the find (and replace) widget is visible in the editor. Otherwise, `false`.\n     */\n    MonacoEditor.prototype.isFindWidgetVisible = function () {\n        return this.contextKeyService.match('findWidgetVisible', this.editor.getDomNode() || this.node);\n    };\n    /**\n     * `true` if the name rename refactoring input HTML element is visible. Otherwise, `false`.\n     */\n    MonacoEditor.prototype.isRenameInputVisible = function () {\n        return this.contextKeyService.match('renameInputVisible', this.editor.getDomNode() || this.node);\n    };\n    MonacoEditor.prototype.dispose = function () {\n        this.toDispose.dispose();\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    MonacoEditor.prototype.trigger = function (source, handlerId, payload) {\n        this.editor.trigger(source, handlerId, payload);\n    };\n    MonacoEditor.prototype.getControl = function () {\n        return this.editor;\n    };\n    MonacoEditor.prototype.refresh = function () {\n        this.autoresize();\n    };\n    MonacoEditor.prototype.resizeToFit = function () {\n        this.autoresize();\n    };\n    MonacoEditor.prototype.setSize = function (dimension) {\n        this.resize(dimension);\n    };\n    MonacoEditor.prototype.autoresize = function () {\n        if (this.autoSizing) {\n            // eslint-disable-next-line no-null/no-null\n            this.resize(null);\n        }\n    };\n    MonacoEditor.prototype.resize = function (dimension) {\n        if (this.node) {\n            var layoutSize = this.computeLayoutSize(this.node, dimension);\n            this.editor.layout(layoutSize);\n        }\n    };\n    MonacoEditor.prototype.computeLayoutSize = function (hostNode, dimension) {\n        if (dimension && dimension.width >= 0 && dimension.height >= 0) {\n            return dimension;\n        }\n        var boxSizing = domutils_1.ElementExt.boxSizing(hostNode);\n        var width = (!dimension || dimension.width < 0) ?\n            this.getWidth(hostNode, boxSizing) :\n            dimension.width;\n        var height = (!dimension || dimension.height < 0) ?\n            this.getHeight(hostNode, boxSizing) :\n            dimension.height;\n        return { width: width, height: height };\n    };\n    MonacoEditor.prototype.getWidth = function (hostNode, boxSizing) {\n        return hostNode.offsetWidth - boxSizing.horizontalSum;\n    };\n    MonacoEditor.prototype.getHeight = function (hostNode, boxSizing) {\n        if (!this.autoSizing) {\n            return hostNode.offsetHeight - boxSizing.verticalSum;\n        }\n        var configuration = this.editor.getConfiguration();\n        var lineHeight = configuration.lineHeight;\n        var lineCount = this.editor.getModel().getLineCount();\n        var contentHeight = lineHeight * lineCount;\n        var horizontalScrollbarHeight = configuration.layoutInfo.horizontalScrollbarHeight;\n        var editorHeight = contentHeight + horizontalScrollbarHeight;\n        if (this.minHeight >= 0) {\n            var minHeight = lineHeight * this.minHeight + horizontalScrollbarHeight;\n            if (editorHeight < minHeight) {\n                return minHeight;\n            }\n        }\n        if (this.maxHeight >= 0) {\n            var maxHeight = lineHeight * this.maxHeight + horizontalScrollbarHeight;\n            return Math.min(maxHeight, editorHeight);\n        }\n        return editorHeight;\n    };\n    MonacoEditor.prototype.isActionSupported = function (id) {\n        var action = this.editor.getAction(id);\n        return !!action && action.isSupported();\n    };\n    MonacoEditor.prototype.runAction = function (id) {\n        return __awaiter(this, void 0, void 0, function () {\n            var action;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        action = this.editor.getAction(id);\n                        if (!(action && action.isSupported())) return [3 /*break*/, 2];\n                        return [4 /*yield*/, action.run()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Object.defineProperty(MonacoEditor.prototype, \"commandService\", {\n        get: function () {\n            return this.editor._commandService;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoEditor.prototype, \"instantiationService\", {\n        get: function () {\n            return this.editor._instantiationService;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MonacoEditor.prototype.deltaDecorations = function (params) {\n        var oldDecorations = params.oldDecorations;\n        var newDecorations = this.toDeltaDecorations(params);\n        return this.editor.deltaDecorations(oldDecorations, newDecorations);\n    };\n    MonacoEditor.prototype.toDeltaDecorations = function (params) {\n        var _this = this;\n        return params.newDecorations.map(function (decoration) { return (__assign({}, decoration, { range: _this.p2m.asRange(decoration.range) })); });\n    };\n    MonacoEditor.prototype.getLinesDecorations = function (startLineNumber, endLineNumber) {\n        var _this = this;\n        var toPosition = function (line) { return _this.p2m.asPosition({ line: line, character: 0 }); };\n        var start = toPosition(startLineNumber).lineNumber;\n        var end = toPosition(endLineNumber).lineNumber;\n        return this.editor\n            .getModel()\n            .getLinesDecorations(start, end)\n            .map(this.toEditorDecoration.bind(this));\n    };\n    MonacoEditor.prototype.toEditorDecoration = function (decoration) {\n        var range = this.m2p.asRange(decoration.range);\n        var id = decoration.id, options = decoration.options;\n        return {\n            options: options,\n            range: range,\n            id: id\n        };\n    };\n    MonacoEditor.prototype.getVisibleColumn = function (position) {\n        return this.editor.getVisibleColumnFromPosition(this.p2m.asPosition(position));\n    };\n    MonacoEditor.prototype.replaceText = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var edits;\n            var _this = this;\n            return __generator(this, function (_a) {\n                edits = params.replaceOperations.map(function (param) {\n                    var range = monaco.Range.fromPositions(_this.p2m.asPosition(param.range.start), _this.p2m.asPosition(param.range.end));\n                    return {\n                        forceMoveMarkers: true,\n                        identifier: {\n                            major: range.startLineNumber,\n                            minor: range.startColumn\n                        },\n                        range: range,\n                        text: param.text\n                    };\n                });\n                return [2 /*return*/, this.editor.executeEdits(params.source, edits)];\n            });\n        });\n    };\n    MonacoEditor.prototype.executeEdits = function (edits) {\n        return this.editor.executeEdits('MonacoEditor', this.p2m.asTextEdits(edits));\n    };\n    MonacoEditor.prototype.storeViewState = function () {\n        return this.editor.saveViewState();\n    };\n    MonacoEditor.prototype.restoreViewState = function (state) {\n        this.editor.restoreViewState(state);\n    };\n    Object.defineProperty(MonacoEditor.prototype, \"languageAutoDetected\", {\n        get: function () {\n            return this._languageAutoDetected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MonacoEditor.prototype.detectLanguage = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var modeService, firstLine, model, language;\n            return __generator(this, function (_a) {\n                modeService = monaco.services.StaticServices.modeService.get();\n                firstLine = this.document.textEditorModel.getLineContent(1);\n                model = this.getControl().getModel();\n                language = modeService.createByFilepathOrFirstLine(model && model.uri, firstLine);\n                this.setLanguage(language.languageIdentifier.language);\n                this._languageAutoDetected = true;\n                return [2 /*return*/];\n            });\n        });\n    };\n    MonacoEditor.prototype.setLanguage = function (languageId) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(this.documents), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var document_1 = _c.value;\n                monaco.editor.setModelLanguage(document_1.textEditorModel, languageId);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    MonacoEditor.prototype.fireLanguageChanged = function (languageId) {\n        this._languageAutoDetected = false;\n        this.onLanguageChangedEmitter.fire(languageId);\n    };\n    MonacoEditor.prototype.getResourceUri = function () {\n        return this.uri;\n    };\n    MonacoEditor.prototype.createMoveToUri = function (resourceUri) {\n        return this.uri.withPath(resourceUri.path);\n    };\n    return MonacoEditor;\n}(MonacoEditorServices));\nexports.MonacoEditor = MonacoEditor;\n(function (MonacoEditor) {\n    function getAll(manager) {\n        return manager.all.map(function (e) { return get(e); }).filter(function (e) { return !!e; });\n    }\n    MonacoEditor.getAll = getAll;\n    function getCurrent(manager) {\n        return get(manager.currentEditor);\n    }\n    MonacoEditor.getCurrent = getCurrent;\n    function getActive(manager) {\n        return get(manager.activeEditor);\n    }\n    MonacoEditor.getActive = getActive;\n    function get(editorWidget) {\n        if (editorWidget && editorWidget.editor instanceof MonacoEditor) {\n            return editorWidget.editor;\n        }\n        return undefined;\n    }\n    MonacoEditor.get = get;\n    function findByDocument(manager, document) {\n        return getAll(manager).filter(function (editor) { return editor.documents.has(document); });\n    }\n    MonacoEditor.findByDocument = findByDocument;\n    function getWidgetFor(manager, control) {\n        if (!control) {\n            return undefined;\n        }\n        return manager.all.find(function (widget) {\n            var editor = get(widget);\n            return !!editor && editor.getControl() === control;\n        });\n    }\n    MonacoEditor.getWidgetFor = getWidgetFor;\n})(MonacoEditor = exports.MonacoEditor || (exports.MonacoEditor = {}));\nexports.MonacoEditor = MonacoEditor;\n//# sourceMappingURL=monaco-editor.js.map","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport { MonacoToProtocolConverter, ProtocolToMonacoConverter } from 'monaco-languageclient';\nimport URI from '@theia/core/lib/common/uri';\nimport { ResourceProvider, ReferenceCollection, Event } from '@theia/core';\nimport { EditorPreferences, EditorPreferenceChange } from '@theia/editor/lib/browser';\nimport { MonacoEditorModel } from './monaco-editor-model';\n\n@injectable()\nexport class MonacoTextModelService implements monaco.editor.ITextModelService {\n\n    protected readonly _models = new ReferenceCollection<string, MonacoEditorModel>(\n        uri => this.loadModel(new URI(uri))\n    );\n\n    @inject(ResourceProvider)\n    protected readonly resourceProvider: ResourceProvider;\n\n    @inject(EditorPreferences)\n    protected readonly editorPreferences: EditorPreferences;\n\n    @inject(MonacoToProtocolConverter)\n    protected readonly m2p: MonacoToProtocolConverter;\n\n    @inject(ProtocolToMonacoConverter)\n    protected readonly p2m: ProtocolToMonacoConverter;\n\n    get models(): MonacoEditorModel[] {\n        return this._models.values();\n    }\n\n    get(uri: string): MonacoEditorModel | undefined {\n        return this._models.get(uri);\n    }\n\n    get onDidCreate(): Event<MonacoEditorModel> {\n        return this._models.onDidCreate;\n    }\n\n    createModelReference(raw: monaco.Uri | URI): Promise<monaco.editor.IReference<MonacoEditorModel>> {\n        return this._models.acquire(raw.toString());\n    }\n\n    protected async loadModel(uri: URI): Promise<MonacoEditorModel> {\n        await this.editorPreferences.ready;\n        const resource = await this.resourceProvider(uri);\n        const model = await (new MonacoEditorModel(resource, this.m2p, this.p2m, { encoding: this.editorPreferences.get('files.encoding') }).load());\n        this.updateModel(model);\n        model.textEditorModel.onDidChangeLanguage(() => this.updateModel(model));\n        const disposable = this.editorPreferences.onPreferenceChanged(change => this.updateModel(model, change));\n        model.onDispose(() => disposable.dispose());\n        return model;\n    }\n\n    protected readonly modelOptions: { [name: string]: (keyof monaco.editor.ITextModelUpdateOptions | undefined) } = {\n        'editor.tabSize': 'tabSize',\n        'editor.insertSpaces': 'insertSpaces'\n    };\n\n    protected updateModel(model: MonacoEditorModel, change?: EditorPreferenceChange): void {\n        if (change) {\n            if (!change.affects(model.uri, model.languageId)) {\n                return;\n            }\n            if (change.preferenceName === 'editor.autoSave') {\n                model.autoSave = this.editorPreferences.get('editor.autoSave', undefined, model.uri);\n            }\n            if (change.preferenceName === 'editor.autoSaveDelay') {\n                model.autoSaveDelay = this.editorPreferences.get('editor.autoSaveDelay', undefined, model.uri);\n            }\n            const modelOption = this.modelOptions[change.preferenceName];\n            if (modelOption) {\n                const options: monaco.editor.ITextModelUpdateOptions = {};\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                options[modelOption] = change.newValue as any;\n                model.textEditorModel.updateOptions(options);\n            }\n        } else {\n            model.autoSave = this.editorPreferences.get('editor.autoSave', undefined, model.uri);\n            model.autoSaveDelay = this.editorPreferences.get('editor.autoSaveDelay', undefined, model.uri);\n            model.textEditorModel.updateOptions(this.getModelOptions(model));\n        }\n    }\n\n    /** @deprecated pass MonacoEditorModel instead  */\n    protected getModelOptions(uri: string): monaco.editor.ITextModelUpdateOptions;\n    protected getModelOptions(model: MonacoEditorModel): monaco.editor.ITextModelUpdateOptions;\n    protected getModelOptions(arg: string | MonacoEditorModel): monaco.editor.ITextModelUpdateOptions {\n        const uri = typeof arg === 'string' ? arg : arg.uri;\n        const overrideIdentifier = typeof arg === 'string' ? undefined : arg.languageId;\n        return {\n            tabSize: this.editorPreferences.get({ preferenceName: 'editor.tabSize', overrideIdentifier }, undefined, uri),\n            insertSpaces: this.editorPreferences.get({ preferenceName: 'editor.insertSpaces', overrideIdentifier }, undefined, uri)\n        };\n    }\n\n    registerTextModelContentProvider(scheme: string, provider: monaco.editor.ITextModelContentProvider): monaco.IDisposable {\n        return {\n            dispose(): void {\n                // no-op\n            }\n        };\n    }\n}\n"],"sourceRoot":""}
[{"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/che-task-backend-module.ts":"1","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/che-workspace-client.ts":"2","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/export/export-configs-manager.ts":"3","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/export/launch-configs-exporter.ts":"4","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/export/task-configs-exporter.ts":"5","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/extract/che-task-configs-extractor.ts":"6","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/extract/config-file-launch-configs-extractor.ts":"7","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/extract/config-file-task-configs-extractor.ts":"8","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/extract/vscode-launch-configs-extractor.ts":"9","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/extract/vscode-task-configs-extractor.ts":"10","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/machine/machine-exec-client.ts":"11","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/machine/machine-exec-watcher.ts":"12","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/machine/machines-picker.ts":"13","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/machine/websocket.ts":"14","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/preview/preview-url-open-service.ts":"15","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/preview/previews-widget.ts":"16","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/preview/task-events-handler.ts":"17","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/preview/task-preview-mode.ts":"18","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/preview/tasks-preview-manager.ts":"19","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/schema/che-task-schema.ts":"20","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/task/backward-compatibility.ts":"21","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/task/che-task-provider.ts":"22","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/task/che-task-runner.ts":"23","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/task/converter.ts":"24","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/task/task-protocol.ts":"25","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/task/task-status.ts":"26","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/task-plugin-backend.ts":"27","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/utils.ts":"28","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/variable/preview-url-variable-resolver.ts":"29","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/variable/project-path-variable-resolver.ts":"30","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/variable/server-variable-resolver.ts":"31"},{"size":4441,"mtime":1591263742346,"results":"32","hashOfConfig":"33"},{"size":4661,"mtime":1591263742346,"results":"34","hashOfConfig":"33"},{"size":2769,"mtime":1591263742346,"results":"35","hashOfConfig":"33"},{"size":4439,"mtime":1591263742346,"results":"36","hashOfConfig":"33"},{"size":5759,"mtime":1591263742346,"results":"37","hashOfConfig":"33"},{"size":1372,"mtime":1591263742346,"results":"38","hashOfConfig":"33"},{"size":1144,"mtime":1591263742346,"results":"39","hashOfConfig":"33"},{"size":1114,"mtime":1591263742346,"results":"40","hashOfConfig":"33"},{"size":1873,"mtime":1591263742346,"results":"41","hashOfConfig":"33"},{"size":1820,"mtime":1591263742346,"results":"42","hashOfConfig":"33"},{"size":3083,"mtime":1591263742346,"results":"43","hashOfConfig":"33"},{"size":2132,"mtime":1591263742346,"results":"44","hashOfConfig":"33"},{"size":3789,"mtime":1591263742346,"results":"45","hashOfConfig":"33"},{"size":4247,"mtime":1591263742346,"results":"46","hashOfConfig":"33"},{"size":1548,"mtime":1591263742346,"results":"47","hashOfConfig":"33"},{"size":4886,"mtime":1591263742346,"results":"48","hashOfConfig":"33"},{"size":3814,"mtime":1591263742346,"results":"49","hashOfConfig":"33"},{"size":1355,"mtime":1591263742346,"results":"50","hashOfConfig":"33"},{"size":4598,"mtime":1591263742346,"results":"51","hashOfConfig":"33"},{"size":1687,"mtime":1591263742346,"results":"52","hashOfConfig":"33"},{"size":3109,"mtime":1591263742346,"results":"53","hashOfConfig":"33"},{"size":4041,"mtime":1591263742346,"results":"54","hashOfConfig":"33"},{"size":4002,"mtime":1591263742346,"results":"55","hashOfConfig":"33"},{"size":2300,"mtime":1591263742346,"results":"56","hashOfConfig":"33"},{"size":1002,"mtime":1591263742346,"results":"57","hashOfConfig":"33"},{"size":1847,"mtime":1591263742346,"results":"58","hashOfConfig":"33"},{"size":3251,"mtime":1591263742346,"results":"59","hashOfConfig":"33"},{"size":4606,"mtime":1591263742346,"results":"60","hashOfConfig":"33"},{"size":1979,"mtime":1591263742346,"results":"61","hashOfConfig":"33"},{"size":2983,"mtime":1591263742350,"results":"62","hashOfConfig":"33"},{"size":1969,"mtime":1591263742350,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g2nl34",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/che-task-backend-module.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/che-workspace-client.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/export/export-configs-manager.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/export/launch-configs-exporter.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/export/task-configs-exporter.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/extract/che-task-configs-extractor.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/extract/config-file-launch-configs-extractor.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/extract/config-file-task-configs-extractor.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/extract/vscode-launch-configs-extractor.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/extract/vscode-task-configs-extractor.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/machine/machine-exec-client.ts",["128"],"/*********************************************************************\n * Copyright (c) 2019 Red Hat, Inc.\n *\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n **********************************************************************/\n\nimport * as rpc from 'vscode-ws-jsonrpc';\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { CheWorkspaceClient } from '../che-workspace-client';\nimport { createConnection } from './websocket';\nimport { applySegmentsToUri } from '../utils';\nimport { MachineExecWatcher } from './machine-exec-watcher';\n\nconst CREATE_METHOD_NAME: string = 'create';\nconst CONNECT_TERMINAL_SEGMENT: string = 'connect';\n\nexport interface MachineIdentifier {\n    workspaceId: string,\n    machineName: string\n}\n\nexport interface MachineExec {\n    identifier: MachineIdentifier,\n    cmd: string[],\n    cwd?: string,\n    tty: boolean,\n    id?: number\n}\n\nexport interface TerminalProcessOutputHandler {\n    onMessage(content: string): void;\n}\n\n@injectable()\nexport class MachineExecClient {\n\n    private machineExecServerEndpoint: string | undefined = undefined;\n    private connection: rpc.MessageConnection | undefined = undefined;\n\n    @inject(CheWorkspaceClient)\n    protected readonly cheWorkspaceClient!: CheWorkspaceClient;\n\n    @inject(MachineExecWatcher)\n    protected readonly machineExecWatcher!: MachineExecWatcher;\n\n    @postConstruct()\n    protected init(): void {\n        this.getConnection();\n    }\n\n    async getExecId(machineExec: MachineExec): Promise<number> {\n        const connection = await this.getConnection();\n        const request = new rpc.RequestType<MachineExec, number, void, void>(CREATE_METHOD_NAME);\n        return await connection.sendRequest(request, machineExec);\n    }\n\n    private async getConnection(): Promise<rpc.MessageConnection> {\n        if (this.connection) {\n            return this.connection;\n        }\n\n        const machineExecServerEndpoint = await this.fetchMachineExecServerURL();\n        if (machineExecServerEndpoint === undefined) {\n            throw new Error('URL for machine-exec server is not found in the current workspace.');\n        }\n\n        let execServerUrl = applySegmentsToUri(machineExecServerEndpoint, CONNECT_TERMINAL_SEGMENT);\n\n        const machineToken = process.env['CHE_MACHINE_TOKEN'];\n        if (machineToken) {\n            execServerUrl = `${execServerUrl}?token=${machineToken}`;\n        }\n\n        this.connection = await createConnection(execServerUrl);\n\n        this.machineExecWatcher.init(this.connection);\n\n        return this.connection;\n    }\n\n    private async fetchMachineExecServerURL(): Promise<string> {\n        if (this.machineExecServerEndpoint === undefined) {\n            const url = await this.cheWorkspaceClient.getMachineExecServerURL();\n            this.machineExecServerEndpoint = url;\n            return url;\n        }\n        return this.machineExecServerEndpoint;\n    }\n}\n","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/machine/machine-exec-watcher.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/machine/machines-picker.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/machine/websocket.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/preview/preview-url-open-service.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/preview/previews-widget.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/preview/task-events-handler.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/preview/task-preview-mode.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/preview/tasks-preview-manager.ts",["129"],"/*********************************************************************\n * Copyright (c) 2019 Red Hat, Inc.\n *\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n **********************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport * as theia from '@theia/plugin';\nimport * as startPoint from '../task-plugin-backend';\nimport { PreviewUrlsWidgetFactory } from './previews-widget';\nimport * as path from 'path';\nimport { PreviewUrlOpenService } from './preview-url-open-service';\n\nexport const PREVIEW_URL_TITLE = 'Preview URLs';\nexport const PREVIEW_URL_VIEW_TYPE = 'PreviewUrlView';\nexport const EXTERNALLY_CHOICE = 'externally';\nexport const INTERNALLY_CHOICE = 'internally';\n\nexport const STATUS_BAR_PREVIEW = {\n    id: 'show.preview.urls',\n    label: 'Show Preview URLs',\n    title: 'Previews'\n};\n\n@injectable()\nexport class TasksPreviewManager {\n\n    private currentPanel: theia.WebviewPanel | undefined;\n\n    @inject(PreviewUrlsWidgetFactory)\n    protected readonly previewUrlsWidgetFactory!: PreviewUrlsWidgetFactory;\n\n    @inject(PreviewUrlOpenService)\n    protected readonly previewUrlOpenService!: PreviewUrlOpenService;\n\n    init(): void {\n        this.setStatusBarPreviewUrlItem();\n    }\n\n    async showPreviews(): Promise<void> {\n        const executions = theia.tasks.taskExecutions;\n        const tasks = executions.map(execution => execution.task);\n        const filteredTasks = tasks.filter(task => {\n            if (task.definition.previewUrl) {\n                return true;\n            }\n            return false;\n        });\n\n        const previewsWidget = await this.previewUrlsWidgetFactory.createWidget({ tasks: filteredTasks });\n\n        const panel = this.providePanel();\n        panel.webview.html = await previewsWidget.getHtml();\n        panel.reveal(undefined, undefined, true);\n    }\n\n    async onTaskStarted(task: theia.Task): Promise<void> {\n        await this.showPreviews();\n    }\n\n    async onTaskCompleted(task: theia.Task): Promise<void> {\n        if (this.currentPanel && this.currentPanel.visible) {\n            await this.showPreviews();\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private async onMessageReceived(message: any): Promise<void> {\n        if (message.command !== 'preview') {\n            return;\n        }\n\n        const url = message.url;\n        if (EXTERNALLY_CHOICE === message.choice) {\n            await this.previewUrlOpenService.previewExternally(url);\n            return;\n        }\n\n        if (INTERNALLY_CHOICE === message.choice) {\n            await this.previewUrlOpenService.previewInternally(url);\n        }\n    }\n\n    private providePanel(): theia.WebviewPanel {\n        if (this.currentPanel) {\n            return this.currentPanel;\n        }\n\n        this.currentPanel = theia.window.createWebviewPanel(PREVIEW_URL_VIEW_TYPE, PREVIEW_URL_TITLE, { area: theia.WebviewPanelTargetArea.Bottom, preserveFocus: true }, {\n            enableScripts: true,\n            localResourceRoots: [theia.Uri.file(path.join(startPoint.getContext().extensionPath, 'resources'))]\n        });\n\n        const context = startPoint.getContext();\n        this.currentPanel.webview.onDidReceiveMessage(async message => await this.onMessageReceived(message), undefined, context.subscriptions);\n        this.currentPanel.onDidDispose(() => { this.currentPanel = undefined; }, undefined, context.subscriptions);\n        this.currentPanel.onDidChangeViewState(async event => {\n            if (event.webviewPanel.active) {\n                await this.showPreviews();\n            }\n        }, undefined, context.subscriptions);\n\n        return this.currentPanel;\n    }\n\n    private async setStatusBarPreviewUrlItem(): Promise<void> {\n        const previewCommandSubscription = theia.commands.registerCommand(STATUS_BAR_PREVIEW, async () => {\n            if (this.currentPanel && this.currentPanel.visible) {\n                this.currentPanel.dispose();\n            } else {\n                await this.showPreviews();\n            }\n        });\n        startPoint.getSubscriptions().push(previewCommandSubscription);\n\n        const item = theia.window.createStatusBarItem(theia.StatusBarAlignment.Left);\n\n        item.text = `$(link) ${STATUS_BAR_PREVIEW.title}`;\n        item.tooltip = STATUS_BAR_PREVIEW.label;\n        item.command = STATUS_BAR_PREVIEW.id;\n        item.show();\n    }\n}\n","/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/schema/che-task-schema.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/task/backward-compatibility.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/task/che-task-provider.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/task/che-task-runner.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/task/converter.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/task/task-protocol.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/task/task-status.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/task-plugin-backend.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/utils.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/variable/preview-url-variable-resolver.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/variable/project-path-variable-resolver.ts",[],"/home/simon/Documents/Workspaces/EclipseSource/ecore-glsp-che/client/plugins/task-plugin/src/variable/server-variable-resolver.ts",[],{"ruleId":"130","severity":1,"message":"131","line":58,"column":16,"nodeType":"132","endLine":58,"endColumn":66},{"ruleId":"130","severity":1,"message":"131","line":99,"column":72,"nodeType":"132","endLine":99,"endColumn":109},"no-return-await","Redundant use of `await` on a return value.","Identifier"]